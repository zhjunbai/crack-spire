<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spire.Pdf</name>
    </assembly>
    <members>
        <member name="T:Spire.License.LicenseProvider">
            <summary>
            Class LicenseProvider.
            </summary>  
        </member>
        <member name="M:Spire.License.LicenseProvider.SetLicenseFileFullPath(System.String)">
            <summary>
            Provides a license by a license file path, which will be used for loading license.
            </summary>
            <param name="licenseFileFullPath">License file full path.</param>
        </member>
        <member name="M:Spire.License.LicenseProvider.SetLicenseFileName(System.String)">
            <summary>
            Sets the license file name, which will be used for loading license.
            </summary>
            <param name="licenseFileName">License file name.</param>
        </member>
        <member name="M:Spire.License.LicenseProvider.GetLicenseFileName">
            <summary>
            Gets the current license file name.
            </summary>
            <returns>The license file name, the default license file name is [license.elic.xml].</returns>
        </member>
        <member name="M:Spire.License.LicenseProvider.SetLicenseFile(System.IO.FileInfo)">
            <summary>
            Provides a license by a license file object, which will be used for loading license.
            </summary>
            <param name="licenseFile">License file object.</param>
        </member>
        <member name="M:Spire.License.LicenseProvider.SetLicenseFileStream(System.IO.Stream)">
            <summary>
            Provides a license by a license stream, which will be used for loading license.
            </summary>
            <param name="licenseFileStream">License data stream.</param>
        </member>
        <member name="M:Spire.License.LicenseProvider.SetLicenseKey(System.String)">
            <summary>
            Provides a license by a license key, which will be used for loading license.
            </summary>
            <param name="key">The value of the Key attribute of the element License of you license xml file.</param>
        </member>
        <member name="M:Spire.License.LicenseProvider.ClearLicense">
            <summary>
            Clear all cached license.
            </summary>
        </member>
        <member name="M:Spire.License.LicenseProvider.LoadLicense">
            <summary>
            Load the license provided by current setting to the license cache.
            </summary>
        </member>
        <member name="M:Spire.License.LicenseProvider.LoadLicense(System.Type)">
            <summary>
            Load the license provided by current setting to the license cache.
            </summary>
            <param name="type">Runtime product type</param>
        </member>
        <member name="M:Spire.License.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
             This method is not intended to be used directly from your code.
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <param name="instance"></param>
            <param name="allowExceptions"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.License.Blacklist">
            <summary> 
            Authorization Blacklist
            </summary>
        </member>
        <member name="F:Spire.License.Blacklist.BlacklistData">
            <summary> 
            The serial number or the MD5 code of the key that is entered into the authorization blacklist. 
            </summary> 
        </member>
        <member name="T:Spire.TraceInfo">
            <summary>
            Class TraceInfo.
            </summary>
        </member>
        <member name="M:Spire.TraceInfo.ShowTraceInfo(System.String,System.String,System.String)">
            <summary>
            Show trace info.
            </summary>
            <param name="className">The class name.</param>
            <param name="methodName">The method name.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:Spire.Pdf.Security.IPdfSignatureFormatter">
            <summary>
            Signature formatter interface.
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Pdf.Security.IPdfSignatureFormatter.Parameters”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Security.IPdfSignatureFormatter.Sign(System.Byte[])">
            <summary>
            Sign.
            </summary>
            <param name="content">The data to be signed.</param>
            <returns>The signature.</returns>
        </member>
        <member name="M:Spire.Pdf.Security.OCSPProvider.#ctor(System.String)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="url">The ocsp server url.</param>
        </member>
        <member name="M:Spire.Pdf.Security.OCSPProvider.#ctor(Spire.Pdf.Security.PdfSignature.OCSPResponseGenerateHandler)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="handler">OCSP response generator.</param>
        </member>
        <member name="M:Spire.Pdf.Security.OCSPProvider.Generate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Generate OCSP response.
            </summary>
            <param name="checkedCertificate">certificate to checked</param>
            <param name="issuerCertificate">certificate of the issuer</param>
            <returns>OCSP response which must conform to RFC 2560</returns>
        </member>
        <member name="M:Spire.Pdf.Security.TimestampProvider.#ctor(System.String,System.String,System.String)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="url">The Timestamp server url.</param>
        </member>
        <member name="M:Spire.Pdf.Security.TimestampProvider.#ctor(Spire.Pdf.Security.PdfSignature.TimestampGenerateHandler)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="handler">Timestamp generator.</param>
        </member>
        <member name="M:Spire.Pdf.Security.TimestampProvider.Generate(System.Byte[])">
            <summary>
            Generate timestamp token.
            </summary>
            <param name="signature">
            The value of signature field within SignerInfo.
            The value of messageImprint field within TimeStampToken shall be the hash of signature.
            Refrence RFC 3161 APPENDIX A.
            </param>
            <returns>timestamp which must conform to RFC 3161</returns>
        </member>
        <member name="T:Spire.Pdf.Security.PdfCertificate">
            <summary>
            Represents the Certificate object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Creates new PdfCertificate from an certificate.
            </summary>
            <param name="certificate">The X509Certificate object.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.#ctor(System.String,System.String)">
            <summary>
            Creates new PdfCertificate from PFX file.
            </summary>
            <param name="pfxPath">The path to pfx file.</param>
            <param name="password">The password for pfx file.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>
            Creates new PdfCertificate from PFX file.
            </summary>
            <param name="pfxPath">The path to pfx file.</param>
            <param name="password">The password for pfx file.</param>
            <param name="storageFlags">X509KeyStorageFlags storageFlags</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.#ctor(System.Byte[])">
            <summary>
            Signature data
            </summary>
            <param name="signData">The data to pfx file.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.#ctor(System.Byte[],System.String)">
            <summary>
            Signature data
            </summary>
            <param name="signData">The data to pfx file.</param>
            <param name="password">The password for pfx file.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>
            Signature data
            </summary>
            <param name="signData">The data to pfx file.</param>
            <param name="password">The password for pfx file.</param>
            <param name="storageFlags">X509KeyStorageFlags storageFlags</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.GetCertificates">
            <summary>
            Gets the certificates in all storages.
            </summary>
            <returns>
            PdfCertificate array.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.FindBySubject(Spire.Pdf.Security.StoreType,System.String)">
            <summary>
            Finds the certificate by subject.
            </summary>
            <param name="storeName">The store name.</param>
            <param name="subject">The certificate subject.</param>
            <returns>The certificate.</returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.FindByIssuer(Spire.Pdf.Security.StoreType,System.String)">
            <summary>
            Finds the certificate by issuer.
            </summary>
            <param name="storeName">The store name.</param>
            <param name="issuer">The certificate issuer.</param>
            <returns>The certificate.</returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.FindBySerialId(Spire.Pdf.Security.StoreType,System.Byte[])">
            <summary>
            Finds the certificate by serial number.
            </summary>
            <param name="type">The certification system store type.</param>
            <param name="certId">The certificate id.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Security.PdfSignature">
            <summary>
            Represents a digital signature used for signing a PDF document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Certificates">
            <summary>
            Get all certificates.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Appearence">
            <summary>
            Gets the signature Appearance.
            </summary>
            <value>An object defines signature`s appearance.</value>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Location">
            <summary>
            Gets or sets signature location on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Bounds">
            <summary>
            Gets or sets bounds of signature.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ContactInfo">
            <summary>
            Gets or sets information provided by the signer to enable a recipient to contact
            the signer to verify the signature; for example, a phone number.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Reason">
            <summary>
            Gets or sets reason of signing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.LocationInfo">
            <summary>
            Gets or sets the physical location of the signing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Certificated">
            <summary>
            Gets or sets a value indicating certificate document or not.
            NOTE: Works only with Adobe Reader 7.0.8 or higher.
            </summary>
            <value>certificate document if true.</value>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DocumentPermissions">
            <summary>
            Gets or sets the permission for certificated document.
            </summary>
            <value>The document permission.</value>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Certificate">
            <summary>
            Gets signing certificate.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.SignTextAlignment">
            <summary>
            Sets the alignment of signature text 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Visible">
            <summary>
            Gets a value indicating whether signature visible or not.
            </summary>
            <remarks>Signature can be set as invisible when its  size is set to empty.</remarks>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Date">
            <summary>
            Get Signature Datetime
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.SignNameFont">
            <summary>
            Set the sign name font.
            Note: This font applys to sign name when the GraphicMode is SignNameOnly or SignNameAndSignDetail.
            if not set, the default font will be applied.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.SignFontColor">
            <summary>
            Set font color for the signature info
            if not set, the default is black
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.SignDetailsFont">
            <summary>
            Set the SignDetails font.
            Note: if not set, the default font will be applied.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.SignInfoFont">
            <summary>
            Set signature info font
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DigitalSigner">
             <summary>
            The name of the person or authority signing the document, usually called signer. 
             </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DigitalSignerLable">
            <summary>
            Digital Signature Common name label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Name">
             <summary>
            The name of the person or authority signing the document.
             </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.NameLabel">
            <summary>
            Name label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DistinguishedNameLabel">
            <summary>
            Signature Distinguished Name label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DistinguishedName">
            <summary>
            Digital Signature Distinguished name.
            Notes: Assigning a stirng value to it directly is not recommended unless you know what is the Distinguish Name exactly.
            One way suggested of value Assignment is using pdfSignature.Certificate.IssuerName.Name,in which, pdfSignature is an instance of PDFSignature class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.IsTag">
            <summary>
            Flag determine whether to display the labels
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ShowConfiguerText">
            <summary>
            Show Digital Signature,Configuer Text 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.GraphicsMode">
            <summary>
            The Grapphic render/display mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ConfigGraphicType">
            <summary>
            Digital Signature Graphic Type
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ConfiguerGraphicPath">
            <summary>
            Digital Signature Configuer Graphic file Path
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.SignImageSource">
            <summary>
            Signature Image Source 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.IsConfiguerGraphicFilledBounds">
            <summary>
            Digital Signature Configuer Graphic is filled bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.SignImageLayout">
            <summary>
            Set or get the sign image layout. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ReasonLabel">
            <summary>
            Digital Signature Reason  Label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DateLabel">
            <summary>
            Digital Signature Date Label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ContactInfoLabel">
            <summary>
            Digital Signature ContactInfo Label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.LocationInfoLabel">
            <summary>
            Digital Signature LocationInfo Label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Lock">
            <summary>
            A signature field lock dictionary that specifies a set of form fields to be locked when this signature field is signed. 
            Table 8.82lists the entries in this dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfNewPage,Spire.Pdf.Security.PdfCertificate,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The current pdf page where signature will be replaced.</param>
            <param name="cert">The pdf certificate.</param>
            <param name="signatureName">Name of the signature.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfNewPage,Spire.Pdf.Security.IPdfSignatureFormatter,System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="page">The current pdf page where signature will be replaced.</param>
            <param name="signatureFormatter">The Signature formatter.</param>
            <param name="signatureName">Name of the signature.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfNewPage,Spire.Pdf.Security.PdfCertificate,Spire.Pdf.Security.IPdfSignatureFormatter,System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="page">The current pdf page where signature will be replaced.</param>
            <param name="cert">The pdf certificate.</param>
            <param name="signatureFormatter">The Signature formatter.</param>
            <param name="signatureName">Name of the signature.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocumentBase,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.PdfCertificate,System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="document">The document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="certificate">The certificate.</param>
            <param name="signatureName">The name of the signature.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocumentBase,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.IPdfSignatureFormatter,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="document">The document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="signatureFormatter">The Signature formatter.</param>
            <param name="signatureName">The name of the signature.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocumentBase,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.PdfCertificate,Spire.Pdf.Security.IPdfSignatureFormatter,System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="document">The document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="certificate">The certificate.</param>
            <param name="signatureFormatter">The signature formatter.</param>
            <param name="signatureName">The name of the signature.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocumentBase,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.PdfCertificate,System.String,Spire.Pdf.Widget.PdfSignatureFieldWidget)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="document">The loaded document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="certificate">The certificate.</param>
            <param name="signatureName">The name of the signature.</param>
            <param name="fieldWidget">The name of the loaded signature field</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocumentBase,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.IPdfSignatureFormatter,System.String,Spire.Pdf.Widget.PdfSignatureFieldWidget)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="document">The loaded document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="signatureFormatter">The Signature formatter.</param>
            <param name="signatureName">The name of the signature.</param>
            <param name="fieldWidget">The name of the loaded signature field</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocumentBase,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.PdfCertificate,Spire.Pdf.Security.IPdfSignatureFormatter,System.String,Spire.Pdf.Widget.PdfSignatureFieldWidget)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="document">The loaded document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="certificate">The certificate.</param>
            <param name="signatureFormatter">The signature formatter.</param>
            <param name="signatureName">The name of the signature.</param>
            <param name="fieldWidget">The name of the loaded signature field</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocument,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.PdfCertificate,System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="document">The document or loaded document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="certificate">The certificate.</param>
            <param name="signatureName">The name of the signature.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocument,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.IPdfSignatureFormatter,System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="document">The document or loaded document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="signatureFormatter">The Signature formatter.</param>
            <param name="signatureName">The name of the signature.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocument,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.PdfCertificate,System.String,Spire.Pdf.Widget.PdfSignatureFieldWidget)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="document">The loaded document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="certificate">The certificate.</param>
            <param name="signatureName">The name of the signature.</param>
            <param name="fieldWidget">The name of the loaded signature field</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.#ctor(Spire.Pdf.PdfDocument,Spire.Pdf.PdfPageBase,Spire.Pdf.Security.IPdfSignatureFormatter,System.String,Spire.Pdf.Widget.PdfSignatureFieldWidget)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="document">The loaded document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="signatureFormatter">The Signature formatter.</param>
            <param name="signatureName">The name of the signature.</param>
            <param name="fieldWidget">The name of the loaded signature field</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.HandleContentStreamResources(Spire.Pdf.Graphics.PdfTemplate)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.VerifySignature">
            <summary>
            check thie validity of the signature
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.VerifyDocModified">
            <summary>
            Check if the document was altered after signed. True if modified; otherwise false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.SetSignNameWidth(System.Single)">
            <summary>
            Set the Sign Name Width
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Security.PdfSignature.GraphicsGenerateHandler">
            <summary>
            The handler which generate graphics.
            </summary>
            <param name="graphics">
            The graphics context.
            The visible region is (0,0,signature bounds width,signature bounds height).
            </param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.ConfigureCustomGraphics(Spire.Pdf.Security.PdfSignature.GraphicsGenerateHandler)">
            <summary>
            Configure custom graphics.
            </summary>
            <param name="handler">the handler which generate graphics.</param>
        </member>
        <member name="T:Spire.Pdf.Security.PdfSignature.TimestampGenerateHandler">
            <summary>
            The handler which generate timestamp token.
            </summary>
            <param name="signature">
            The value of signature field within SignerInfo.
            The value of messageImprint field within TimeStampToken shall be the hash of signature.
            Refrence RFC 3161 APPENDIX A.
            </param>
            <returns>timestamp which must conform to RFC 3161</returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.ConfigureTimestamp(System.String)">
            <summary>
            Configure timestamp which must conform to RFC 3161.
            </summary>
            <param name="tsaUrl">TSA url</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.ConfigureTimestamp(System.String,System.String,System.String)">
            <summary>
            Configure timestamp which must conform to RFC 3161.
            </summary>
            <param name="tsaUrl">The tsa url.</param>
            <param name="user">The user(account) name.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.ConfigureTimestamp(Spire.Pdf.Security.PdfSignature.TimestampGenerateHandler)">
            <summary>
            Configure timestamp which must conform to RFC 3161.
            </summary>
            <param name="handler">the handler which generate timestamp token</param>
        </member>
        <member name="T:Spire.Pdf.Security.PdfSignature.OCSPResponseGenerateHandler">
            <summary>
            The handler which generate OCSP response.
            </summary>
            <param name="checkedCertificate">certificate to checked</param>
            <param name="issuerCertificate">certificate of the issuer</param>
            <returns>OCSP response which must conform to RFC 2560</returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.ConfigureHttpOCSP(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
            <summary>
            Configure OCSP which must conform to RFC 2560.
            </summary>
            <param name="ocspUrl">
            OCSP url. It it's null it will be taken from the checked cert.
            </param>
            <param name="extraCertificates">
            Represents an additional collection of certificates that can be searched.
            if null,only use windows cert store.
            </param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.ConfigureCustomOCSP(Spire.Pdf.Security.PdfSignature.OCSPResponseGenerateHandler,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
            <summary>
            Configure OCSP which must conform to RFC 2560.
            </summary>
            <param name="extraCertificates">
            Represents an additional collection of certificates that can be searched
            if null,only use windows cert store.
            </param>
            <param name="handler">the handler which generate OCSP response.</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignatureDictionary.AddPropBuild">
            <summary>
            A dictionary that can be used by a signature handler to record information that captures the state of the computer environment used for signing
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfEncryptionKeySize">
            <summary>
            Specifies length of the encryption key for encryption.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionKeySize.Key40Bit">
            <summary>
            The key is 40 bit long.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionKeySize.Key128Bit">
            <summary>
            The key is 128 bit long.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionKeySize.Key256Bit">
            <summary>
            The key is 256 bit long.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfEncryptionAlgorithm">
            <summary>
            Specifies the type of encryption algorithm used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionAlgorithm.RC4">
            <summary>
            The encryption algorithm is RC4.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionAlgorithm.AES">
            <summary>
            The encryption algorithm is AES.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfPermissionsFlags">
            <summary>
            Specifies the available permissions set for the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.None">
            <summary>
            Not all permissions
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.Default">
            <summary>
            Default value is 2876. A common document contains all privileges
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.Print">
            <summary>
            Print the document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.EditContent">
            <summary>
            Edit content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.CopyContent">
            <summary>
            Copy content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.EditAnnotations">
            <summary>
            Add or modify text annotations, fill in interactive form fields.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.FillFields">
            <summary>
            Fill form fields. (Only for 128 bits key).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.AccessibilityCopyContent">
            <summary>
            Copy accessibility content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.AssembleDocument">
            <summary>
            Assemble document permission. (Only for 128 bits key).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.FullQualityPrint">
            <summary>
            Full quality print.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.StoreType">
            <summary>
            Specifies the naming a system store.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.StoreType.MY">
            <summary>
            A certificate store that holds certificates with associated private keys.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.StoreType.ROOT">
            <summary>
            Root certificates.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.StoreType.CA">
            <summary>
            Certification authority certificates.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.StoreType.SPC">
            <summary>
            Software Publisher Certificate.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.SignTextAlignment">
            <summary>
            Specifies the alignment type of signature text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SignTextAlignment.Left">
            <summary>
            Specifies the signature text is aligned to Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SignTextAlignment.Center">
            <summary>
            Specifies the signature text is aligned to Center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SignTextAlignment.Right">
            <summary>
            Specifies the signature text is aligned to Right.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfCertificationFlags">
            <summary>
            Specifies the available permissions on certificated document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfCertificationFlags.ForbidChanges">
            <summary>
            Disallow any changes to the document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfCertificationFlags.AllowFormFill">
            <summary>
            Only allow form fill-in actions on this document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfCertificationFlags.AllowComments">
            <summary>
            Only allow commenting and form fill-in actions on this document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.SignInfoType">
            <summary>
            Signature type
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.SignImageLayout">
             <summary>
            The layout determine how to display the sign image. 
             </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SignImageLayout.None">
            <summary>
            Default.
            Sign image status without any modification. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SignImageLayout.Stretch">
            <summary>
            Stretch the sign image. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.GraphicMode">
            <summary>
            Modes to determine what and how to dispay the signature infomation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.GraphicMode.SignDetail">
            <summary>
            Default dispaly model. 
            Display signature details including signer,location,date,contact infomation and reason. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.GraphicMode.SignImageOnly">
            <summary>
            Only display the signature image. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.GraphicMode.SignNameOnly">
            <summary>
            Only display the sign name. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.GraphicMode.SignNameAndSignDetail">
            <summary>
            Diaply sign name and signature details.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.GraphicMode.SignImageAndSignDetail">
            <summary>
            Diaply signature image and signature details.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.ConfiguerGraphicType">
            <summary>
            Signture Configuer Graphic type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.No">
            <summary>
            No Show Picture Signature and Text Signature
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.Picture">
            <summary>
            draw Picture Signature
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.Text">
            <summary>
            draw Text Signature
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.PictureSignInformation">
            <summary>
            draw Picture Signature and Information
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.TextSignInformation">
            <summary>
            draw Text Signature and Information
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.SignInformationPicture">
            <summary>
            draw  Information and Picture Signature
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.SignatureConfiguerText">
            <summary>
            Configuer Text,Show Sign content
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptor.m_md5">
            <summary>
            The object that allows to compute the MD5 hash for the input data.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfEncryptor.IsToUnencrypted">
            <summary>
            Whether or not to encrypt.
            </summary>
            <returns>If true ,do not encrypt or encrypt</returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfEncryptor.GetISOBytes(System.String)">
            <summary>
            Convert string to byte array.
            according to the iso 8859-1 codepage.
            </summary>
            <param name="sources">The string</param>
            <returns>The result byte array</returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfEncryptor.CreateOwnerPasswordByteArray(System.String,System.String)">
            <summary>
            Create owner password byte array.
            </summary>
            <param name="userPassword">The userPassword</param>
            <param name="ownerPassword">The ownerPassword</param>
            <returns>The owner password array</returns>
        </member>
        <member name="T:Spire.Pdf.Security.PdfSecurity">
            <summary>
            Represents the security settings of the PDF document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.OwnerPassword">
            <summary>
            Gets the owner password.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.UserPassword">
            <summary>
            Gets the user password.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.OriginalEncrypt">
            <summary>
            Indicate whether this pdf document was encrypted originally or not. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.DecryptUserPassWord">
            <summary>
            Decrypt user password
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.DecryptUserPassWord(System.String)">
            <summary>
            Decrypt user password.
            </summary>
            <param name="ownerPassword">The ownerPassword</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.DecryptOwnerPassWord(System.String)">
            <summary>
            Decrypt all password.
            </summary>
            <param name="ownerPassword">The ownerPassword</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.IsNeedOwnerPassword">
            <summary>
            Whether is encrypted.
            </summary>
            <returns>If has owner password return true or false</returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.Encrypt(System.String)">
            <summary>
            To Encrypt the PDF document with open password.
            Note:If set empty string value to open password, it indicates that the PDF document can be operated without providing corresponding password. 
            Note: the document owner password should not be exist.
            </summary>
            <param name="openPassword">The open password</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.Encrypt(System.String,Spire.Pdf.Security.PdfPermissionsFlags)">
            <summary>
            To Encrypt the PDF document with permission password and permissions.
            Note:The Permission password can't be empty string.
            </summary>
            <param name="permissionPassword">The permission password</param>
            <param name="permissions">A set of flags specifying which operations are permitted when the document is opened with user access</param>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.Encrypt(System.String,System.String,Spire.Pdf.Security.PdfPermissionsFlags,Spire.Pdf.Security.PdfEncryptionKeySize)">
            <summary>
            To Encrypt the PDF document and set the encryption key size and permissions.
            Note:If set empty string value to open password or permission password, it indicates that the PDF document can be operated without providing corresponding password. 
            </summary>
            <param name="openPassword">The open password</param>
            <param name="permissionPassword">The permission password</param>
            <param name="permissions">A set of flags specifying which operations are permitted when the document is opened with user access</param>
            <param name="keySize">The bit length of the encryption key</param>
            <returns></returns>       
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.Encrypt(System.String,System.String,Spire.Pdf.Security.PdfPermissionsFlags,Spire.Pdf.Security.PdfEncryptionKeySize,System.String)">
            <summary>
            To Encrypt the PDF document with open password and permission password,and set the encryption key size and permissions.
            Note:If set empty string value to open password or permission password, it indicates that the PDF document can be operated without providing corresponding password. 
            </summary>
            <param name="openPassword">The open password</param>
            <param name="permissionPassword">The permission password</param>
            <param name="permissions">A set of flags specifying which operations are permitted when the document is opened with user access</param>
            <param name="keySize">The bit length of the encryption key</param>
            <param name="originalPermissionPassword">The original permissionPassword of the document</param>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.Permissions">
            <summary>
            Gets the document's permission flags
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.KeySize">
            <summary>
            Gets the size of the key.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfCalGrayColor">
            <summary>
            Represents a calibrated gray color, based on a CalGray colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfCalGrayColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The color space.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalGrayColor.Gray">
            <summary>
            Gets or sets the gray level for this color. 
            </summary>
            <value>The gray level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 
            0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace">
            <summary>
            Represents a CalGray colorspace.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace.BlackPoint">
            <summary>
            Gets or sets the black point. 
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point. Default value: [ 0.0 0.0 0.0 ].</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace.Gamma">
            <summary>
            Gets or sets the gamma.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point.
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point. The numbers XW and ZW must be positive, and YW must be equal to 1.0.</value>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfCalRGBColor">
            <summary>
            Represents a calibrated RGB color, based on a CalRGB colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfCalRGBColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColor.Blue">
            <summary>
            Gets or sets the Blue value.
            </summary>
            <value>The blue level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest. </remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColor.Green">
            <summary>
            Gets or sets the green level for this color. 
            </summary>
            <value>The green level of this color. </value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColor.Red">
            <summary>
            Gets or sets the red level for this color.
            </summary>
            <value>The red level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace">
            <summary>
            Representing a CalRGB colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.BlackPoint">
            <summary>
            Gets or sets the black point. 
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point. </value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.Gamma">
            <summary>
            Gets or sets the gamma. 
            </summary>
            <value>An array of three numbers [GR GG GB] specifying the gamma for the red, green, and blue components of the color space. </value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.Matrix">
            <summary>
            Gets or sets the colorspace transformation matrix. 
            </summary>
            <value>An array of nine numbers [XA YA ZA XB YB ZB XC YC ZC] specifying the linear interpretation of the decoded A, B, and C components of the color space with respect to the final XYZ representation.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point.
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.</value>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfColorSpaces">
            <summary>
            Represents the base class for all colorspaces. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfColorSpaces.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets Pdf primitive representing the font.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfColorSpaces.Spire#Pdf#Interfaces#IPdfCache#EqualsTo(Spire.Pdf.Interfaces.IPdfCache)">
            <summary>
            Checks whether the object is similar to another object.
            </summary>
            <param name="obj">The object to compare witht ehcurrent object.</param>
            <returns>True - if the objects have equal internals and can share them, False otherwise.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfDeviceColorSpace">
            <summary>
            Represents a device colorspace.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfDeviceColorSpace.#ctor(Spire.Pdf.Graphics.PdfColorSpace)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfDeviceColorSpace.DeviceColorSpaceType">
            <summary>
            Gets or sets the DeviceColorSpaceType
            </summary>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfComplexColor">
            <summary>
            Represents the extended color, based on a complex colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfComplexColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfComplexColor.ColorSpace">
            <summary>
            Gets the Colorspace
            </summary>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfICCColor">
            <summary>
            Represents an ICC color, based on an ICC colorspace.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfICCColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColor.ColorComponents">
            <summary>
            Gets or sets the color components. 
            </summary>
            <value>An array of values that describe the color in the ICC colorspace. </value>
            <remarks>The length of this array must match the value of ColorComponents property on the underlying ICC colorspace. </remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfICCColorSpace">
            <summary>
            Represents an ICC based colorspace..
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfICCColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColorSpace.AlternateColorSpace">
            <summary>
            Gets or sets the alternate color space.
            </summary>
            <value>The alternate color space to be used in case the one specified in the stream data is not supported.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColorSpace.ColorComponents">
            <summary>
            Gets or sets the color components.
            </summary>
            <value>The number of color components in the color space described by the ICC profile data.</value>
            <remarks>This number must match the number of components actually in the ICC profile. As of PDF 1.4, this value must be 1, 3 or 4.</remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColorSpace.ProfileData">
            <summary>
            Gets or sets the profile data.
            </summary>
            <value>The ICC profile data.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColorSpace.Range">
            <summary>
            Gets or sets the range for color components. 
            </summary>
            <value>An array of 2  ColorComponents numbers [ min0 max0 min1 max1 ... ] specifying the minimum and maximum valid values of the corresponding color components. These values must match the information in the ICC profile.</value>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfICCColorSpace.GetProfileData">
            <summary>
            Set the Color Profile.
            </summary>
            <returns>ICC profile data.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfKnownColor">
            <summary>
            Represents an indexed color, based on an indexed colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfKnownColor.#ctor(Spire.Pdf.ColorSpace.PdfKnownColorSpace)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfKnownColor.SelectColorIndex">
            <summary>
            Gets or sets the color index
            </summary>
            <value>The index of the select color.</value>
            <remarks>The acceptable range for this value is 0 - MaxColorIndex.</remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfKnownColorSpace">
            <summary>
            Represents an indexed colorspace.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfKnownColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfKnownColorSpace.BaseColorSpace">
            <summary>
            Gets or sets the base colorspace. 
            </summary>
            <value>The color space in which the values in the color table are to be interpreted.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfKnownColorSpace.MaxColorIndex">
            <summary>
            Gets or sets the index of the max color.
            </summary>
            <value>The maximum index that can be used to access the values in the color table.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfKnownColorSpace.IndexedColorTable">
            <summary>
            Gets or sets the color table. 
            </summary>
            <value>The table of color components.</value>
            <remarks>The color table data must be m * (maxIndex + 1) bytes long, where m is the number of color components in the base color space. Each byte is an unsigned integer in the range 0 to 255 that is scaled to the range of the corresponding color component in the base color space; that is, 0 corresponds to the minimum value in the range for that component, and 255 corresponds to the maximum.</remarks>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfKnownColorSpace.GetProfileData">
            <summary>
            Gets the profile data.
            </summary>
            <returns>The profile data.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfLabColor">
            <summary>
            Represents a calibrated Lab color, based on a Lab colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfLabColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The ColorSpace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColor.A">
            <summary>
            Gets or sets the a* component for this color. 
            </summary>
            <value>The a* component of this color.</value>
            <remarks>The range for this value is defined by the Range property of the underlying Lab colorspace. </remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColor.B">
            <summary>
            Gets or sets the b* component for this color. 
            </summary>
            <value>The b* component of this color.</value>
            <remarks>The range for this value is defined by the Range property of the underlying Lab colorspace. </remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColor.L">
            <summary>
            Gets or sets the l component for this color. 
            </summary>
            <value>The l component of this color. </value>
            <remarks>The acceptable range for this value is [0.0 100.0]. 0.0 means the darkest color that can be achieved, and 100.0 means the lightest color. </remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfLabColorSpace">
            <summary>
            Represents a Lab colorspace
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfLabColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColorSpace.BlackPoint">
            <summary>
            Gets or sets BlackPoint
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColorSpace.Range">
            <summary>
            Gets or sets the Range
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point. </value>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfSeparationColor">
            <summary>
            Represents a separation color, based on a separation colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfSeparationColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
            <param name="tint">The acceptable range for this value is [0.0 1.0]. 0.0 means the lightest color that can be achieved, and 1.0 means the darkest color.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColor.Tint">
            <summary>
            The acceptable range for this value is [0.0 1.0]. 0.0 means the lightest color that can be achieved, and 1.0 means the darkest color.
            </summary>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfSeparationColorSpace">
            <summary>
            Represents a separation colorspace
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.#ctor(System.String,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the PdfSeparationColorSpace class.
            </summary>
            <param name="colorant">The name of the colorant</param>
            <param name="baseColor">The base color to be used</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.BaseColor">
            <summary>
            The base color to be used.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.AlternateColorSpaces">
            <summary>
            Gets or sets the alternate color spaces.
            </summary>
            <value>The alternate color space to be used when the destination device does not support separation colorspace.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.Colorant">
            <summary>
            The name of the colorant.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.TintTransform">
            <summary>
            Gets or sets the tint transform function for the this colorspace. 
            </summary>
            <value>Tint transform function for the colorspace.</value>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.GetProfileData">
            <summary>
            Get the profile data.
            </summary>
            <returns>The profile data</returns>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.Bounds">
            <summary>
            original glyph bounds
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph._onlyLayoutEssMode">
            <summary>
            glyph info has only essential layout detail (this is our extension)
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph.TtfOffsetXY(Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph,System.Int16,System.Int16)">
            <summary>
            TrueType outline, offset glyph points
            </summary>
            <param name="glyph"></param>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph.TtfTransformWith2x2Matrix(Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph,System.Single,System.Single,System.Single,System.Single)">
             <summary>
            TrueType outline, transform normal
             </summary>
             <param name="glyph"></param>
             <param name="m00"></param>
             <param name="m01"></param>
             <param name="m10"></param>
             <param name="m11"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph.TtfOutlineGlyphClone(Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph,System.UInt16)">
            <summary>
            TrueType outline glyph clone
            </summary>
            <param name="original"></param>
            <param name="newGlyphIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph.TtfAppendGlyph(Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph,Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph)">
            <summary>
            append data from src to dest, dest data will changed***
            </summary>
            <param name="src"></param>
            <param name="dest"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.InvalidTrueTypeFontException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Pdf.General.Render.Font.TrueTypeFont.InvalidTrueTypeFontException"/> class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.Identity">
            <summary>
            Gets the identity matrix.
            </summary>
            <value>The identity matrix.</value>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.M11">
            <summary>
            Element (1,1)
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.M12">
            <summary>
            Element (1,2)
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.M21">
            <summary>
            Element (2,1)
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.M22">
            <summary>
            Element (2,2)
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.M31">
            <summary>
            Element (3,1)
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.M32">
            <summary>
            Element (3,2)
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2"/> struct.
            </summary>
            <param name="value">The value that will be assigned to all components.</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Pdf.General.Render.Font.TrueTypeFont.Matrix3x2"/> struct.
            </summary>
            <param name="M11">The value to assign at row 1 column 1 of the matrix.</param>
            <param name="M12">The value to assign at row 1 column 2 of the matrix.</param>
            <param name="M21">The value to assign at row 2 column 1 of the matrix.</param>
            <param name="M22">The value to assign at row 2 column 2 of the matrix.</param>
            <param name="M31">The value to assign at row 3 column 1 of the matrix.</param>
            <param name="M32">The value to assign at row 3 column 2 of the matrix.</param>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.SharpFontInterpreter">
            <summary>
            SharpFont's TrueType Interpreter
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.Utils.ReadF2Dot14(System.IO.BinaryReader)">
            <summary>
            read float, 2.14 format
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.Utils.ReadFixed(System.IO.BinaryReader)">
            <summary>
            16.16 float format
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.GlyphOutline">
            <summary>
            Description of Glyph.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.GlyphMatrix">
            <summary>
            Description of GlyphMatrix.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.Font.TrueTypeFont.GlyphMatrix.HAdvance">
            <summary>
            Max width value.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.IFont">
            <summary>
            Description of IFont.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.OutlineGlyph">
            <summary>
            Description of Glyph.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont">
            <summary>
            Description of TrueTypeFont.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetGlyph(System.Int32,System.Single)">
            <summary>
            Get the outline glyph for glyph of a given character code and name.
            </summary>
            <param name="glyphId"></param>        
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetArrayPoint(Spire.Pdf.General.Render.Font.OpenTypeFile.Table_glyf.SimpleGlyph.Coordinate[],System.Int32,System.Int32)">
            <summary>
            Gets the path to determine wherther you need to move the point ,return results
            </summary>
            <param name="coordinates">character path</param>
            <param name="startIndex"> int startIndex</param>
            <param name="endIndex"> int endIndex</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.ReCalculateLineValues">
            <summary>
            Recalculate line values
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetLongHorMetric(System.Int32)">
             <summary>
            Get metric data  from Table_hmtx.longHorMetric table
             </summary>
             <param name="glyphId"></param>
             <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.ConvertToOutlineGlyph(Spire.Pdf.General.Render.Font.TrueTypeFont.CharacterOriginalData,Spire.Pdf.General.Render.Font.OpenTypeFile.Table_hmtx.longHorMetric,System.Boolean)">
            <summary>
            Convert character original data to glyph
            </summary>
            <param name="charOriginalData"></param>
            <param name="longHorMetric"></param>
            <param name="analysisInstructions"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.ToOutlineGlyph(Spire.Pdf.General.Render.Font.TrueTypeFont.CharacterOriginalData,Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph,System.Int32)">
            <summary>
            Converter GlyphData to path
            </summary>
            <param name="charOriginalData"></param>
            <param name="glyph"></param>
            <param name="originalGlyphLength"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetArrayPoint(Spire.Pdf.General.Render.Font.TrueTypeFont.GlyphPointF[],System.Int32,System.Int32)">
            <summary>
            modify glyphPointF
            </summary>
            <param name="coordinates"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.ConvertToGlyphData(Spire.Pdf.General.Render.Font.TrueTypeFont.OriginalData)">
            <summary>
            Convert to original data to glyphData
            </summary>
            <param name="originalData"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.ApplyMatrix(Spire.Pdf.General.Render.Font.TrueTypeFont.Glyph,System.Drawing.Drawing2D.Matrix)">
            <summary>
            matrix apply to glyph
            </summary>
            <param name="glyph"></param>
            <param name="matrix"></param>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetCharacterOriginalData(System.UInt16,Spire.Pdf.General.Render.Font.OpenTypeFile.Table_glyf.header)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetSimpleOriginalData(System.UInt16,Spire.Pdf.General.Render.Font.OpenTypeFile.Table_glyf.header)">
            <summary>
            Render a simple glyf
            </summary>
            <param name="glyphId">int glyphId</param>
            <param name="header">Table_glyf.header header</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetEmpty">
            <summary>
            Get a empty outlineGlyph
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.CheckIsEastAsianChar(System.Char)">
            <summary>
            It is east asian char? 
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.CMap.GetConsumedBytesCount(System.Collections.Generic.List{Spire.Pdf.General.Render.Font.CodeSpaceRange})">
            <summary>
            Get the bytes count consume form char codes string.
            </summary>
            <param name="codeSpaceRangeList">The code space range list</param>
            <returns>The bytes count.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.CodeSpaceRanges.MatchedCodeSpaceRanges(System.String)">
            <summary>
            Get the part matched code space ranges.
            </summary>
            <param name="hexCode"></param>
            <returns>The code sapce ranges</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Render.Font.FontSupport.#cctor”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Render.Font.FontSupport.GetCharFromAdobeGlyphListByName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.FontSupport.GetNameEncoding(System.Int32)">
            <summary>
            get the name of a glyph from its encoding value (NOT the character
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.OpenTypeFile.CMap.WriteShort(System.Int16)">
            <summary>
            Writes short value into the font stream
            </summary>
            <param name="value">Short value to be written</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.OpenTypeFile.CMap.WriteInt(System.Int32)">
            <summary>
            Writes integer value into the font stream
            </summary>
            <param name="value">Integer value to be written</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.OpenTypeFile.CMap.WriteString(System.String)">
            <summary>
            Writes string value into the font stream
            </summary>
            <param name="value">String value to be written</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.OpenTypeFile.CMap.WriteBytes(System.Byte[])">
            <summary>
            Write the bytes into the font stream
            </summary>
            <param name="buffer">byte array to be written</param>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.PLATFORMID_UNICODE">
             <summary>
             Values for platformID
             </summary>
            
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.ENCODINGID_MAC_ROMAN">
             <summary>
             Values for platformSpecificID if platform is Mac
             </summary>
            
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.ENCODINGID_UNICODE_DEFAULT">
             <summary>
             Values for platformSpecificID if platform is Unicode
             </summary>
            
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.LANGUAGEID_MAC_ENGLISH">
             <summary>
             Values for language ID if platform is Mac
             </summary>
            
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.NAMEID_COPYRIGHT">
             <summary>
             Values for nameID
             </summary>
            
        </member>
        <member name="P:Spire.Pdf.General.Render.Font.PDFFontViewer.FontDictionary">
            <summary>
            Font dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.PDFFontViewer.GetOriginSubtype">
            <summary>
            Get the origin subtyep.
            </summary>
            <returns>The origin subtyep.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.PDFFontViewer.ReCreateUnicodeChar(System.Int32)">
            <summary>
            Recreate an new unicode char
            </summary>
            <param name="utf32Char">The old char</param>
            <returns>A new unicode char</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.PDFFontEncoding.GetCMapObj(System.String)">
            <summary>
            Get Cmap  by MapName
            </summary>
            <param name="cMapName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TTFFont.GetCharacterMapTable(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            This outputs individual glyph index to character code mapping for each char.
            If you are doing any work on CMap, you need to open the resulting file in Adobe Reader, 
            select and copy text, paste it to notepad and see if it was correctly mapped to characters. 
            It is especially important to do so for TestUnicode.doc.
            </summary>
            <param name="m_fontDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TTFFont.GetGlyphID(System.Int32)">
            <summary>
            Get the glyph id.
            </summary>
            <param name="cid">The character id</param>
            <returns>The glyph id</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TTFFont.GetOutline(System.Char,System.String,System.Single,Spire.Pdf.General.TypeEncodingCmap)">
            <summary>
            Get the outline of a character given the character name or src char
            </summary>
            <param name="srcChar"></param>
            <param name="name"></param>
            <param name="width"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TTFFont.IsCmap">
            <summary>
            It is TYPE_CMAP or TYPE_ENCODING?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.Type1CFont.GetGlyphById(System.Int32)">
            <summary>
             Get a glyph outline by glyphId
            </summary>
            <param name="glyphId"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.Type1CFont.GetGlyphById(System.Int32,System.String,System.Single)">
            <summary>
            Get a glyph outline by glyphId or name
            </summary>
            <param name="glyphId"></param>
            <param name="name"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.Type1CFont.FindIndexFormEncodeByCharName(Spire.Pdf.General.TypeEncodingCmap,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="charName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.Type1CFont.FindOffsetFromEncode(System.Char,Spire.Pdf.General.TypeEncodingCmap)">
            <summary>
            
            </summary>
            <param name="src"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.CoordinatePoint">
            <summary>
            custom coordinate point
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.Type3Font.charCache">
            <summary>
            a cache of glyphs indexed by character 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.Type3Font.m_CharacterSpacing">
            <summary>
            Character Spacing width
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.Font.Type3Font.CharacterSpacing">
            <summary>
            Set Character Spacing width
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.Type3Font.GetGlyph(System.Char,System.String,Spire.Pdf.General.TypeEncodingCmap)">
            <summary>
            Get the glyph for a given character code and name
            </summary>
             <param name="src">the character code of this glyph</param>
            <param name="name">the name of this glyph or null if unknown</param>
            <param name="name">the name of this glyph or null if unknown</param>
            <param name="type">TypeEncodingCmap type</param>
            <returns>a glyph for this character</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.PortableImageSource.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.image.ImgDataAdapter.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.image.ImgDataConverter.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.image.ImgDataJoiner.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.image.input.ImgReader.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.image.invcomptransf.InvCompTransf.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.wavelet.synthesis.InverseWT.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.wavelet.synthesis.InvWTAdapter.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.j2k.wavelet.synthesis.InvWTFull.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.Color.ChannelDefinitionMapper.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.Color.ColorSpaceMapper.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.Color.EnumeratedColorSpaceMapper.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.Color.PalettizedColorSpaceMapper.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.Jpeg2000.Color.Resampler.Dispose">
            <summary>
            Releases or clear memory
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.Decode.TIFFLZWDecoder">
            <summary>A class for performing LZW decoding.</summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.TIFFLZWDecoder.Decode(System.Byte[],System.Byte[],System.Int32)">
            <summary>Method to decode LZW compressed data.</summary>
            <param name="data">The compressed data</param>
            <param name="uncompData">Array to return the uncompressed data in</param>
            <param name="h">The number of rows the compressed data contains</param>
            <returns>The decoded data</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.TIFFLZWDecoder.InitializeStringTable">
            <summary>Initialize the string table.</summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.TIFFLZWDecoder.WriteString(System.Byte[])">
            <summary>Write out the string just uncompressed.</summary>
            <param name="str">the byte string for uncompressed write out</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.TIFFLZWDecoder.AddStringToTable(System.Byte[],System.Byte)">
            <summary>Add a new string to the string table.</summary>
            <param name="oldString">
            the byte string at the end of which the new string
            will be written and which will be added to the string table
            </param>
            <param name="newString">the byte to be written to the end of the old string</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.TIFFLZWDecoder.AddStringToTable(System.Byte[])">
            <summary>Add a new string to the string table.</summary>
            <param name="str">the byte string which will be added to the string table</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.TIFFLZWDecoder.ComposeString(System.Byte[],System.Byte)">
            <summary>Append <c>newString</c> to the end of <c>oldString</c>.</summary>
            <param name="oldString">the byte string at the end of which the new string will be written</param>
            <param name="newString">the byte to be written to the end of the old string</param>
            <returns>the byte string which is the sum of the new string and the old string</returns>
        </member>
        <member name="F:Spire.Pdf.General.Render.Decode.CCITTFaxDecoder.m_bitsPerComponent">
            <summary>
            The number of bits used to represent each color component
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Decode.FlateStream.ErrorBehaviorEnum.Fail">
            <summary>
            fail (by default)
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Decode.FlateStream.ErrorBehaviorEnum.ReturnSuccessBytes">
            <summary>
            return something successfully read
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.TIFFFaxDecoder.#ctor(System.Int64,System.Int32,System.Int32)">
            @param fillOrder   The fill order of the compressed data bytes.
            @param w
            @param h
        </member>
        <member name="T:Spire.Pdf.General.Render.Decode.Tiff.zLib.ZInflaterInputStream">
            <summary>
            Summary description for DeflaterOutputStream.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.ColorSpace.ColorCache">
            <summary>
            Provides color caching
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.ColorSpace.LastColorCache">
            <summary>
            Provides color caching of last color
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.ImageQualityMode">
            <summary>
            specify image quality level
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.ImageQualityMode.Default">
            <summary>
            default quality
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.ImageQualityMode.HighQuality">
            <summary>
            high quality
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.Page.IgnoreCase">
            <summary>
            find text ignorecase
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.Page.FindText">
            <summary>
            Set find text
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.Page.FindTextHighLightColor">
            <summary>
            find text color
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.Page.BorderPen">
            <summary>
            draw border pen
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Page.Initialize(Spire.Pdf.PdfPageBase,System.Boolean)">
            <summary>
            Initialize the page.
            </summary>
            <param name="page">The page </param>
            <param name="needParsing">The needparsing</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Page.IsBlank">
            <summary>
            Whether this page is blank.
            </summary>
            <returns>if blank ,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Page.CheckContent(Spire.Pdf.Core.Contents.PdfRecordCollection)">
            <summary>
            Whether this page content is blank.
            </summary>
            <param name="recordCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Page.Dispose">
            <summary>
            Dispose the resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Page.Dispose(System.Boolean)">
            <summary>
            Dispose resource.
            </summary>
            <param name="Diposing">The disposing</param>
        </member>
        <member name="T:Spire.Pdf.General.Render.ImageRenderEventHandler">
            <summary>
            Provides image render events
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.DegreesToRadians(System.Double)">
            <summary>
            Converts an angle in degrees to radians.
            </summary>
            <param name="angleInDegrees">Double value of angle in degrees to convert.</param>
            <returns>The value of the angle in radians.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.RadiansToDegrees(System.Double)">
            <summary>
            Converts an angle in radians to degrees.
            </summary>
            <param name="angleInRadians">Double value of angle in radians to convert.</param>
            <returns>The value of the angle in degrees.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.ImageMultiply(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Bug3009,baseimage color and annot image color multiply,for annot
            </summary>
            <param name="baseImage"></param>
            <param name="image"></param>
            <param name="outBitmap"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.BitmapRgbToCmyk(System.Byte[])">
            <summary>
            bitmap ,rgb model to cmyk model
            </summary>
            <param name="imageBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.TransparentImage(System.Drawing.Image,System.Single)">
            <summary>
            Transparent image
            </summary>
            <param name="srcImage">The source image.</param>
            <param name="opacity">The opacity.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.CheckLineFromPath(System.String)">
            <summary>
            According to Path to determine whether it is a straight line. If All points of X or Y are equal, then is is a straight line
            </summary>
            <param name="pathData"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.ParseToRGBComponents(Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Parse pdf array to rgb components.
            </summary>
            <param name="array">The pdf array</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.GetFf(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get Ff value from annotation dictionary
            </summary>
            <param name="annotDictionary">The annotation dictionary</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.GetFT(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get FT value from annotation dictionary
            </summary>
            <param name="annotDictionary">The annotation dictionary</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.ParseAnnotationOptToDictionary(Spire.Pdf.Primitives.PdfDictionary)">
             <summary>
            Parse annotation opt item to dictionary.
             </summary>
             <param name="annotDictionary">The annotation dictionary</param>
             <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.GetV(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get V value from annotation dictionary
            </summary>
            <param name="annotDictionary">The annotation dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.GetOffset(System.String)">
            <summary>
            More than two offsets
            </summary>
            <param name="strOffset">string strOffset)</param>
            <returns>one offset</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.AdobeGlyphList.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.AdobeGlyphList.Dispose">
            <summary>
            Clean up Memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.BuildIFontFromSystemFont(System.String)">
            <summary>
            Creates the I font.
            </summary>
            <param name="fontName">Name of the font.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.GetMatchFontName(System.Collections.ArrayList,System.String)">
            <summary>
            Match Font by fontName
            </summary>
            <param name="list"></param>
            <param name="fontName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.AddFontToPrivateList(System.Byte[])">
            <summary>
            Add fake font to private list.
            </summary>
            <param name="fontData"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.MeasureStringWidthWithoutWidthEntry(System.String,System.Single,System.Single)">
            <summary>
            Measure string width which the font dictionary has no width entry.
            </summary>
            <param name="text">The text string</param>
            <param name="fontSize">The font size</param>
            <param name="textScale">The text sacle</param>
            <returns>The string width</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.GetGlyphByID(Spire.Pdf.General.Paper.Font.Common.GlyphID)">
            <summary>
            Get glyph by cid.
            </summary>
            <param name="cid">The cid</param>
            <returns>The glyph</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.GetGlyphID(System.Int32)">
            <summary>
            Get the glyph id.
            </summary>
            <param name="charID">The character ID</param>
            <returns>The glyph id</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.GetDescendantFont">
            <summary>
            Get descendant font.
            </summary>
            <returns>The descendant font</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.DrawType3FontFromGraphicsData(Spire.Pdf.General.Render.PdfToImageRenderer,Spire.Pdf.General.Render.TextElement,System.Drawing.Graphics)">
            <summary>
            Draw text of embed font to page
            </summary>
            <param name="render">Render object</param>
            <param name="element"></param>
            <param name="g"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.CharaCodeMappingGlyphData">
            <summary>
            When the font has no encoding entry ,or the font descriptor`s symbolic flag
            is set , which case should use the character code mapping glyph description
            from the subtable
            </summary>
            <returns>if has no encoding entry or set symbolic flag return true</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PageResourceLoader.GetPatternGraphicResources(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
             Collects all the Pattern elements in the pdf document
            </summary>
            <param name="resourceDictionary">containing all the resources of the document</param>
            <returns>dictionary of Pattern elements</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PageResourceLoader.HandleTXMultiline(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Graphics.PdfTrueTypeFont,System.Drawing.RectangleF)">
            <summary>
            Handle the text annotation widget multiline
            </summary>
            <param name="annotElements">the anntation</param>
            <param name="typefont">the true type font</param>
            <param name="subRect">the rectangle</param>
            <returns>a text rectangle</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PageResourceLoader.GetOptValueFromOpt(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Get opttion value from PdfArray
            </summary>
            <param name="ipri"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.ReplaceResources(Spire.Pdf.Primitives.PdfDictionary,System.String,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            
            </summary>
            <param name="xObjDictionary"></param>
            <param name="CmdParameters"></param>
            <param name="newObj"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.GetPdfPageResources">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.RenderXobject(System.Drawing.Graphics,Spire.Pdf.General.Render.PdfElement.PdfPageResources,Spire.Pdf.General.Render.Page)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="resources"></param>
            <param name="page"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.RenderXobjectTilingPatternBrush(System.Drawing.Graphics,Spire.Pdf.General.Render.PdfElement.PdfPageResources,Spire.Pdf.General.Render.Page)">
            <summary>
            Bug654
            </summary>
            <param name="g"></param>
            <param name="resources"></param>
            <param name="page"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.Render(Spire.Pdf.General.Render.PdfElement.PdfPageResources)">
            <summary>
            get PdfRecordCollection from resources
            </summary>
            <param name="resources"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.AdjustImageResolution(System.Drawing.Image,System.Single,System.Single)">
            <summary>
            根据dpi缩放后的图片
            </summary>
            <param name="image"></param>
            <param name="dpiX"></param>
            <param name="dpiY"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.ReBuildPrintImage(System.Drawing.Image,System.Single,System.Single)">
            <summary>
            打印时根据dpi缩放后的图片
            </summary>
            <param name="image"></param>
            <param name="dpiX"></param>
            <param name="dpiY"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.RenderImage(Spire.Pdf.General.Render.PdfToImageRenderer,System.Drawing.Graphics,Spire.Pdf.Core.PdfStream)">
            <summary>
            Render inline image.
            </summary>
            <param name="g"></param>
            <param name="imageStream"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.RenderForAnnotationsAp(Spire.Pdf.General.Render.PdfElement.PdfPageResources)">
            <summary>
            for Ap Resources
            </summary>
            <param name="resources"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.StringToEnum``1(System.String)">
            <summary>
            String to enum.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="enumType">The enum type</param>
            <returns>The enum type</returns>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfElement.XObjectElement.m_OnlyDrawSingleAnnot">
            <summary>
            draw only a single comment
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.PdfImageDecoder">
            <summary>
            Decode pdf image
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfImageDecoder.m_ImageQualityMode">
            <summary>
            specify the quality level of decode image
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.Width">
            <summary>
            Image width.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.Height">
            <summary>
            Image Height.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.ColorSpace">
            <summary>
            The color space in the image dictionary.
            Note: It may not represent the actually color space of the image When the color space
            of the image data is not equal to the color space item in the dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.Filters">
            <summary>
            Get filters of the image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.DecodeParms">
            <summary>
            Get filters of the image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.SMask">
            <summary>
            Get softmask image from image dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.Mask">
            <summary>
            Get mask image from image dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.ImageMask">
            <summary>
            Get ImageMask.
            </summary>        
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.Decode">
            <summary>
            The decode in the image dictionary.
            Note: It may not represent the actually decode of the image When the color space
            of the image data is not equal to the color space item in the dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.ColorPalette">
            <summary>
            Get gray image color palette.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.#ctor(Spire.Pdf.General.Render.IPdfRender,Spire.Pdf.Core.PdfStream)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="render">The pdf render.</param>
            <param name="imageStream">The image stream.</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecompressStream(Spire.Pdf.Core.PdfStream,System.String[],Spire.Pdf.Primitives.PdfDictionary[])">
            <summary>
            Decompress stream.
            </summary>
            <param name="stream">The stream</param>
            <param name="filters">The filters of the stream</param>
            <param name="decodeParmsArray">The decode parms array.</param>
            <returns>Decode data.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeImage">
            <summary>
            Decode image.
            </summary>
            <returns>The image.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeJpeg(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Decode jpeg image which last filter is DCTDecode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeJPEG2000">
            <summary>
            Decode jpeg2000 image which last filter is JPXDecode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeImage(System.Byte[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Decode image data.
            </summary>
            <param name="imageData">The image data.</param>
            <param name="colorSpace">The image color space.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeGrayImage">
            <summary>
            Decode gray color space image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeRGBImage(System.Byte[],Spire.Pdf.ColorSpaces.PdfColorSpace,System.Int32[])">
            <summary>
            Decode rgb image.
            </summary>
            <param name="imageData">The image data.</param>
            <param name="colorSpace">The image color space.</param>
            <param name="maskArray">The array mask item.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeGrayImage(System.Byte[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Decode gray image.
            </summary>
            <param name="imageData">The image data.</param>
            <param name="colorSpace">The image color space.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeMonochromeImage(System.Byte[])">
            <summary>
            Decode monochrome image.
            </summary>
            <param name="imageData">The image data.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.DecodeComponents(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Decode color components.
            </summary>
            <param name="imageData"></param>
            <param name="width"></param>
            <param name="componentsNum"></param>
            <param name="bitsPerComponent"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.MapColorSpaceComponents(System.Byte[],System.Single[0:,0:],System.Int32[],System.Int32)">
            <summary>
            Mapping per pixel data to color space components.
            </summary>
            <param name="data">Per pixel data.</param>
            <param name="decodeMapping">Decode mapping data.</param>
            <param name="simpleMapping">Simple data mapping</param>
            <param name="componentsNum">The components number.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.Map(System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Map value form source to target range.
            </summary>
            <param name="sourceValue">The source value.</param>
            <param name="sourceMinValue">The source min value.</param>
            <param name="sourceMaxValue">The source max value.</param>
            <param name="targetMinValue">The target min value.</param>
            <param name="targetMaxValue">The target max value.</param>
            <returns>The target value.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.MapColor(System.Single[])">
            <summary>
            Map rgb components to color.
            </summary>
            <param name="rgb">The rgb color components.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.CheckColorSpace(Spire.Pdf.ColorSpaces.PdfColorSpace,Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Check that the color space in the dictionary is real color space of the image.
            </summary>
            <param name="innerColorSpace">The inner color space.</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetDefaultDecode(Spire.Pdf.ColorSpaces.PdfColorSpace,System.Int32)">
            <summary>
            Get the default Decode arrays for use with the various color spaces.
            The image's Decode array specifies a linear mapping of each integer component value 
            to a number that would be appropriate as a component value in the image’s color space.
            </summary>
            <param name="colorSpace">The color space.</param>
            <param name="bitsPerComponent">The number of bits used to represent each color component.</param>
            <returns>The default decode arrays.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.IsMonochromeImage(System.String[],Spire.Pdf.ColorSpaces.PdfColorSpace,System.Int32)">
            <summary>
            Is monochrome image or not. 
            </summary>
            <param name="filters">The image filters</param>
            <param name="colorSpace">The color space of the image</param>
            <param name="bitsPerComponent">The bitsPerComponent.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.IsMaskedOut(System.Byte[],System.Int32[])">
            <summary>
            Is masked out components data.
            </summary>
            <param name="componentsData"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetMaskedColor">
            <summary>
            Get masked color of the render. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetImageMaskColor(System.Byte,System.Single[0:,0:],System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="decodeMapping"></param>
            <param name="nonstrokingColor"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetDecodeMapping(System.Single[],System.Int32)">
            <summary>
            Get docode mapping of the color space.
            </summary>
            <param name="decode">The decode array.</param>
            <param name="componentsNum">The number of components.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetMaskArray(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Get mask array.
            </summary>
            <param name="maskObj">The mask object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.IsDeviceColorSpace(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether the color space is the device color space.
            </summary>
            <param name="colorSpace">The pdf color space.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.IsDefaultDecode(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace,System.Int32)">
            <summary>
            whether is default decode.
            </summary>
            <param name="decode"></param>
            <param name="colorSpace"></param>
            <param name="bitsPerComponent"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.ProcessImageMask(System.Drawing.Bitmap)">
            <summary>
            Process image mask when ImageMask value is true.
            </summary>
            <param name="input">The source image.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.ProcessMask(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Process mask.
            </summary>
            <param name="input">The source image.</param>
            <param name="mask">The mask image.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.ProcessSMask(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Int32[])">
            <summary>
            Process smask.
            </summary>
            <param name="input">The source image.</param>
            <param name="smask">The soft mask image.</param>
            <param name="matte">The matte array.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.UndoPreblend(System.Drawing.Color,System.Int32[])">
            <summary>
            
            </summary>
            <param name="sourceColor"></param>
            <param name="matte"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Resize image.
            </summary>
            <param name="input">The source image.</param>
            <param name="width">The width of the result image.</param>
            <param name="height">The height of the result image.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetColorSpace(Spire.Pdf.General.Render.IPdfRender,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Get color space resource.
            </summary>
            <param name="render">The render.</param>
            <param name="colorSpace">The color space object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.ParseColorSpace(System.String)">
            <summary>
            Parse color space.
            </summary>
            <param name="csString">The color space string</param>
            <returns>A pdf array of the color space.</returns>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.loPath">
            <summary>
            Clip path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_TjAfterIsTranslate">
            <summary>
            Determine whether there is Tj in front of Td,TD,cm,T* ,TL,Tw,Tc,Tz. if not ,you need to calculate the translation
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_UserDefinedTextMatrix">
            <summary>
            Save the translation data
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_SaveCurrentTmMatrix">
            <summary>
            From BT,save the current Tm matrix
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_UserToDeviceSpaceTransform">
            <summary>
            mapping Transform from user space to device space 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_DefaultToUserSpaceTransform">
            <summary>
            mapping Transform from default user space to user space 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_textLeading">
            <summary>
            Text leading
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_textScaling">
            <summary>
            horizontal scaling 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_wordSpacing">
            <summary>
            word spacing 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_currentTextElement">
            <summary>
            Current text element
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_characterSpacing">
            <summary>
            Character spacing.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_colorspaceTable">
            <summary>
            Colorspace table of page resource
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_patternTable">
            <summary>
            Pattern table of page resource
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_GraphicObjectData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToImageRenderer.IsPrint">
            <summary>
            Gets or sets the isprint.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToImageRenderer.BoxRectangle">
             <summary>
            set Box Rectangle,when dictionary FT=Tx
             </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToImageRenderer.FormFieldFT">
             <summary>
            set FT type from form field
             </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToImageRenderer.UserToDeviceSpaceTransform">
            <summary>
            mapping Transform from user space to device space 
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToImageRenderer.DefaultToUserSpaceTransform">
            <summary>
            Mapping transform from default user space to user space 
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToImageRenderer.Image">
            <summary>
            pdf to image,reference bitmap
            Bug3009,draw annot,annot is image and BM is Multiply,need backgroundimage and annot image is Multiply
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.#ctor(System.Drawing.Graphics,Spire.Pdf.General.Render.PdfElement.PdfPageResources,System.Boolean)">
            <summary>
            Extract Signature As Images
            </summary>
            <param name="g"></param>
            <param name="resources"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.CheckingAndProcessingNumberString(System.String[])">
            <summary>
            Checking and processing number string.
            </summary>
            <param name="curve">The curve</param>
            <returns>The points</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.SetBoxRectangle(System.String[])">
            <summary>
            Set Rectangle from pdf command.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.CheckingAndProcessingNumber(System.String@)">
            <summary>
            Checking whether the string number is valid ,if true , processing the number.
            </summary>
            <param name="number">The number of string format</param>
            <returns>if vailded,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.CheckingAndProcessNumberArr(System.String[])">
            <summary>
            Checking whether the string number array is valid ,if true , processing the number.
            </summary>
            <param name="numbers">The array number of string format</param>
            <returns>if vailded,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.SetRectanglePath(System.String[])">
            <summary>
            Set Rectangle path from pdf command.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.SetBBoxForForm(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            set BBox for Form object.
            </summary>
            <param name="x,y,x1,y1,y,x1,y1"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.ApplyStrokingColor(System.String,System.Single[])">
            <summary>
            Apply Color
            </summary>
            <param name="type"></param>
            <param name="colorRed"></param>
            <param name="colorGreen"></param>
            <param name="colorBlue"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.CheckingAndProcessingPoints(System.String[])">
            <summary>
            Checking and processing points.
            </summary>
            <param name="points">The points</param>
            <returns>The points</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.LoadHeader(Spire.Pdf.General.Render.Page)">
            <summary>
             Set page RotateAngle
            </summary>
            <param name="page">Current Pdf Page</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.CreateImage(System.Drawing.Image,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Pen,System.Single)">
            <summary>
            scale
            </summary>
            <param name="pageImage"></param>
            <param name="path"></param>
            <param name="pen"></param>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.ApplyLineDashPattern(System.Drawing.Pen)">
            <summary>
            apply the line dash pattern
            </summary>
            <param name="pen">the pen</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.ZeroInFirstPos(System.Single[])">
            <summary>
            when the only one element in dash pattern is 0 the line should be unvisible .
            </summary>
            <param name="dashPattern">the dash pattern</param>
            <returns>first element is zero return true or false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.GetDashPattern">
            <summary>
            Get the dash pattern
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.HandleZeroOfGapsForDashPattern(System.Single[]@,System.Single@)">
            <summary>
            Fixed zero of gaps for dash pattern,if the gap is zero,it will not be diaplayed in dash lines.
            </summary>
            <param name="dashPattern">the dash pattern</param>
            <param name="dashOffset">the dash offset</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.HandleZeroCapInDashPattern(System.Single[]@,System.Single@)">
            <summary>
            Remove zero value of blank cap in dash pattern.
            </summary>
            <param name="dashPattern">the dash pattern</param>
            <param name="dashOffset">the dashOffset</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.SetDashModeOfPen(System.Drawing.Pen,System.Single[],System.Single)">
            <summary>
            Set the property of pen
            </summary>
            <param name="pen">the pen</param>
            <param name="dashPattern">the dash pattern</param>
            <param name="dashOffset">the dash offset</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.FixedZeroOfDashesForDashPattern(System.Single[],System.Single,System.Drawing.Pen)">
            <summary>
            Fixed zero of dashes for dash pattern.if the dash is zero,defalut value is one device pixel.
            </summary>
            <param name="dashPattern">the dash pattern</param>
            <param name="dashOffset">the dash offset</param>
            <param name="pen">the pen</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.CovertPdfDashPatternToNetDashPattern(System.Single,System.Single[]@,System.Single)">
            <summary>
            Convert pdf dash pattern to .net dash pattern
            </summary>
            <param name="scaledPenWidth">the scaled pen width</param>
            <param name="dashPattern">the dash pattern</param>
            <param name="penWidth">the pen width</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.PdfToXpsExecuteDoCommand(System.String[],Spire.Pdf.General.Paper.Drawing.Fonts.FontCache)">
            <summary>
            execute do command
            </summary>
            <param name="xobjectElement"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawAndFillPathType3Font(System.Drawing.Drawing2D.FillMode,System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
            <summary>
            Draw Type3Font
            </summary>
            <param name="mode"></param>
            <param name="Type3FontPath"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.GetXObjectFromAnnotationsAp(System.String[])">
             <summary>
            Get Resources obj from Xobject
             </summary>
             <param name="xobjectElement"></param>
             <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawPageContent">
            <summary>
            draw page content
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawPageAnnot">
            <summary>
            draw page annot
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToImageRenderer.IsDisposeFont">
            <summary>
            Modify Bug1801,pdf to xps(false),font whether need dispose
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.GetAnnot(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get the pdf annotation.
            </summary>
            <param name="annotationDic">The annotation dictionary</param>
            <returns>The pdf annotation</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.ProcessPageAnnotation(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Parse signle annotation
            </summary>
            <param name="obj">IPdfPrimitive obj</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.GetAnnotationsDisplay(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            
            </summary>
            <param name="annotObj"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.GetFormWidget">
            <summary>
            get form field object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.AddInsetForParentAP(Spire.Pdf.Primitives.PdfDictionary,System.Drawing.RectangleF,System.String,System.Boolean)">
            <summary>
            read ap content from Parent
            </summary>
            <param name="annotElements"></param>
            <param name="rect"></param>
            <param name="annotType"></param>
            <param name="llffDisplay"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.ExecuteCommand(Spire.Pdf.Core.Contents.PdfRecord)">
            <summary>
            Execute pdf command.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.GetImageBounds">
            <summary>
            Get image bounds.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.RestoreAnnotsGraphicObjectData">
            <summary>
            initialize annot state
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.RenderTextElement(System.String[],System.String)">
            <summary>
            Render text element
            </summary>
            <param name="textElements">text elements</param>
            <param name="tokenType">token type</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.RenderText(System.String,Spire.Pdf.General.Render.PdfElement.PdfFontStructure,System.String,System.Boolean)">
            <summary>
            Render text to pdf drawing context.
            </summary>
            <param name="tokenType"></param>
            <param name="structure"></param>
            <param name="decodedText"></param>
            <param name="increaseWidth"></param>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_enabledHighLightFormField">
            <summary>
            whether enable highLight for formField
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToImageRenderer.EnabledHighLightFormField">
            <summary>
            Incorrect entry written to dictionary(写入字典的条目不正确,少了一些项,导致绘制AP内容不正确)，Bug335,107
            </summary>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_highLightFormFieldColor">
            <summary>
            highLight color for form field
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_OnlyDrawSingleAnnot">
            <summary>
            draw only a single comment
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawPageAnnot(System.Boolean,System.Drawing.Color)">
            <summary>
            Draw all annotations for the current page,and highlight
            </summary>
            <param name="highlightFormField"></param>
            /// <param name="color"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawSignleAnnotAndHighLight(Spire.Pdf.Primitives.PdfDictionary,System.Boolean,System.Drawing.Color)">
            <summary>
            Draw one annotation for the current page,and highlight
            </summary>
            <param name="annotDictionary"></param>
            <param name="highlightFormField"></param>
            <param name="color"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawComboButton(Spire.Pdf.Primitives.PdfDictionary)">
             <summary>
            draw button for combox 
             </summary>
             <param name="annotDictionary"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawComboButton(System.Drawing.Graphics,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.SizeF)">
            <summary>
            draw ComboButton for combobox annot
            </summary>
            <param name="g"></param>
            <param name="start"></param>
            <param name="buttonSize"></param>
            <param name="blackTriangleSize"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawAnnotationBorder(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Draw border for must input box
            </summary>
            <param name="annotDictionary"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawHighLight(Spire.Pdf.Primitives.PdfDictionary,System.Drawing.Color)">
            <summary>
            Draw highlight for form field
            </summary>
            <param name="annotDictionary"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.IsCheckDrawHighLight(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Need to draw highlight?
            </summary>
            <param name="annotDictionary"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.IsReadOnly(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Is it read-only?
            </summary>
            <param name="annotDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.IsRequired(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Is it required, must have a value.
            </summary>
            <param name="annotDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.GetAnnotRect(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get annotation location 
            </summary>
            <param name="annotDictionary"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_ImageQualityMode">
            <summary>
            specify the quality level of render image
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_TjAfterIsTranslate">
            <summary>
            Determine whether there is Tj in front of Td,TD,cm,T* ,TL,Tw,Tc,Tz. if not ,you need to calculate the translation
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_UserDefinedTextMatrix">
            <summary>
            Save the translation data
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_textScaling">
            <summary>
            horizontal scaling 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_GraphicObjectData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfToPsRenderer.ImageQualityMode">
            <summary>
            specify the quality level of render image
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.SetRectanglePath(System.String[])">
            <summary>
            Set rectangle path from pdf command.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.ApplyStrokingColor(System.Boolean,System.Single[])">
            <summary>
            Apply Color Space,Bug-654
            </summary>
            <param name="isNonStroking"></param>
            <param name="colorRGB"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.RenderOptionContent(Spire.Pdf.General.Render.PdfElement.XObjectElement)">
            <summary>
            Render the option content
            </summary>
            <param name="element">The xobject element</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.RenderOCGsContent(Spire.Pdf.General.Render.PdfElement.XObjectElement,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Render OCGs contents
            </summary>
            <param name="ocgsDic">The ocgs dictionary</param>
            <param name="element">The xobject element</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.Process">
            
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.GetFieldName(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get form Field Name
            </summary>
            <param name="annotDic"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.ParseElementInMK(Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Parse the element in MK entry of annotation
            </summary>
            <param name="colorSpaceArr">The element in MK entry</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.DrawAp(Spire.Pdf.Primitives.PdfDictionary,System.String,System.Drawing.RectangleF)">
            <summary>
            Draw ap dictioanry.
            </summary>
            <param name="annotElements">The annotation element</param>
            <param name="annotType">The annotation type</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.GetAnnot(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get the pdf annotation.
            </summary>
            <param name="annotationDic">The annotation dictionary</param>
            <returns>The pdf annotation</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.IsValidAnnotType(System.String,System.Boolean,System.Boolean)">
            <summary>
            Is valid annotation type.
            </summary>
            <param name="annotType">The annotation type</param>
            <param name="isHighLight">The is high light</param>
            <param name="isDisplay">Whether is display the annotation</param>
            <returns>If valid,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.AddInsetForAP(Spire.Pdf.Primitives.PdfDictionary,System.Drawing.RectangleF,System.String)">
            <summary>
            
            </summary>
            <param name="annotElements"></param>
            <param name="rect"></param>
            <param name="annotType"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.AddInsetForParentAP(Spire.Pdf.Primitives.PdfDictionary,System.Drawing.RectangleF,System.String,System.Boolean)">
            <summary>
            read ap content from Parent
            </summary>
            <param name="annotElements"></param>
            <param name="rect"></param>
            <param name="annotType"></param>
            <param name="llffDisplay"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.AddInsetForDA(Spire.Pdf.Primitives.PdfDictionary,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="annotElements"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.AddHyperlinks(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Add hyperlinks.
            </summary>
            <param name="annotElements">The annotation elements</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.ExecuteCommand(Spire.Pdf.Core.Contents.PdfRecord)">
            <summary>
            Execute pdf command.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.RenderText(System.String,Spire.Pdf.General.Render.PdfElement.PdfFontStructure,System.String,System.Boolean)">
            <summary>
            Render text
            </summary>
            <param name="tokenType">The token type</param>
            <param name="structure">The structure</param>
            <param name="decodedText">The decode text</param>
            <param name="increaseWidth">The increase width</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.RenderTextElement(System.String[],System.String)">
            <summary>
            Render text element
            </summary>
            <param name="textElements">text elements</param>
            <param name="tokenType">token type</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.MappingSingleGlyphBytesCount(Spire.Pdf.General.Render.PdfElement.PdfFontStructure)">
            <summary>
            Calculate the bytes count that mapping single glyph
            </summary>
            <param name="structure">The pdf font sturucture</param>
            <returns>The bytes count</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.RenderTextToSingleCharacter(Spire.Pdf.General.Render.PdfElement.PdfFontStructure,System.String,System.Boolean)">
            <summary>
            Render text to a single character
            </summary>
            <param name="structure">The font structure</param>
            <param name="decodedText">The decoded text</param>
            <param name="increaseWidth">The increase width</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.RenderTextToString(Spire.Pdf.General.Render.PdfElement.PdfFontStructure,System.String,System.Boolean)">
            <summary>
            Render text to a string
            </summary>
            <param name="structure">The pdf font structure</param>
            <param name="decodedText">The decode text</param>
            <param name="increaseWidth">The increase width</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.SplitUndecodeByteString(System.String,Spire.Pdf.General.Render.PdfElement.PdfFontStructure)">
            <summary>
            Spilt undecode bytes string
            </summary>
            <param name="decodedText">The decode string</param>
            <param name="structure">The structure</param>
            <returns>An array of undecode byte</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.IsRenderTextToSingleCharacter(Spire.Pdf.General.Render.PdfElement.PdfFontStructure)">
            <summary>
            whether to render text as a single character
            </summary>
            <param name="structure">The font structure</param>
            <returns>if the text is written vertically,return true,or fales</returns>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfRenderContext.Presenter">
            <summary>
            Gets the presenter.
            </summary>
            <value>The presenter.</value>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfRenderContext.GraphicsState">
            <summary>
            Graphic stats
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfRenderContext.NonstrokingColorSpace">
            <summary>
            Gets or sets current colorsapce.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfRenderContext.StrokingColorSpace">
            <summary>
            Gets or sets Stroking colorsapce.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfRenderContext.AppendHyperLink(System.Drawing.RectangleF,System.String)">
            <summary>
            Append hyperlink.
            </summary>
            <param name="rect">The rectanglef</param>
            <param name="targetUri">The url</param>
        </member>
        <member name="F:Spire.Pdf.General.Render.TextElement.m_wordSpacing">
            <summary>
            word spacing 
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.TextElement.WordSpacing">
            <summary>
            word spacing 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.TextElement.RenderText(System.Drawing.Graphics,Spire.Pdf.General.Render.PdfToImageRenderer,System.Boolean,System.Boolean)">
            <summary>
            Render text embed font or installed system font
            </summary>
            <param name="g"></param>
            <param name="render"></param>
            <param name="IncreaseWidth"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.TextElement.GetCharFromStdNameEncoding(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.General.Render.ViewLayer.IndependentLayer.TextBase.IsMultipleByte">
            <summary>
            The charCode whether is multipleByte
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.IPresenter.DisposeBrush">
            <summary>
            Dispose ImageBrush
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.ViewLayer.IPresenter.Brush">
            <summary>
            used in pdf2xps when it has pattern
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PresentationFactory.CreateTextureBrush(System.Byte[],Spire.Pdf.General.Paper.Drawing.PsMatrix,Spire.Pdf.General.Render.ViewLayer.LayerType)">
            <summary>
            Create the brush
            </summary>
            <param name="imageBytes">The byte array of image for PsTextureBrush</param>
            <param name="matrix">Image transform</param>
            <param name="layerType">The presenter type</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Render.ViewLayer.PresentationFactory.CreateLinearGradientBrush(Spire.Pdf.General.Render.ViewLayer.LayerType,System.Drawing.Drawing2D.LinearGradientBrush)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PresentationFactory.CreateHatchBrush(System.Drawing.Drawing2D.HatchStyle,Spire.Pdf.General.Paper.Drawing.PsColor,Spire.Pdf.General.Paper.Drawing.PsColor,Spire.Pdf.General.Render.ViewLayer.LayerType)">
            <summary>
            Create the brush.
            </summary>
            <param name="hatchStyle">The hatch style.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The back color.</param>
            <param name="layerType">The presenter type.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.Presenter.DisposeBrush">
            <summary>
            Dispose ImageBrush
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PsLayer.BrushLayer.#ctor(System.Byte[],Spire.Pdf.General.Paper.Drawing.PsMatrix)">
            <summary>
            Initializes a new instance of the BrushLayer
            </summary>
            <param name="imageBytes">The byte array of image for PsTextureBrush</param>
            <param name="matrix">Image Transform</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PsLayer.BrushLayer.#ctor(System.Drawing.RectangleF,Spire.Pdf.General.Paper.Drawing.PsColor,Spire.Pdf.General.Paper.Drawing.PsColor)">
            <summary>
            Initializes a new instance of the BrushLayer.
            </summary>
            <param name="rect">A rectangular region that defines the starting and ending points of the gradient.</param>
            <param name="startColor">Start Color.</param>
            <param name="endColor">End Color.</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PsLayer.BrushLayer.#ctor(System.Drawing.Drawing2D.HatchStyle,Spire.Pdf.General.Paper.Drawing.PsColor,Spire.Pdf.General.Paper.Drawing.PsColor)">
            <summary>
            Initializes a new instance of the BrushLayer
            </summary>
            <param name="hatchStyle">The hatch style.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The back color.</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PsLayer.PsPresenter.AppendHyperLink(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsHyperlink)">
            <summary>
            Append hyper link.
            </summary>
            <param name="hyper">The hyper link</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PsLayer.PsPresenter.GetBlendMode(Spire.Pdf.General.Render.ViewLayer.Entities.BlendModes)">
            <summary>
            the BlendModes to BlendMode value
            </summary>
            <param name="BlendMode"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.ExternalFontCache.Finalize">
            <summary>
            Destructor 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.ExternalFontCache.Dispose">
            <summary>
            Clean up Memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.ExternalFontCache.LoadFontsSearchInfo(Spire.Pdf.General.Paper.Drawing.Fonts.FontSourceBaseCore[])">
            <summary>
            Loads fonts.
            </summary>
            <param name="fontSouce"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache">
            <summary>
            Font cache.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.m_globalFontCache">
            <summary>
            Global font cache.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.m_fontFamilies">
            <summary>
            Current instance font cache.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.m_tagedObjects">
            <summary>
            Taged objects(String,ArrayList).
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.#ctor">
            <summary>
            Construct instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.Finalize">
            <summary>
            Destruct instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.Dispose">
            <summary>
            Dispose instance resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.Clear">
            <summary>
            Clear cache(except global cache).
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.StoreTagedObject(System.Object,System.String,System.String)">
            <summary>
            Store object with tag.
            A tag can corresponds to multiple objects.
            </summary>
            <param name="tagedObject">The taged object.</param>
            <param name="id">The taged object identity.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.GetTagedObjects(System.String)">
            <summary>
            Get the objects by a tag.
            </summary>
            <param name="tag">The tag.</param>
            <returns>
            The dictionary(id,tagedObject) corresponding to the tag.
            If not matched,return null.
            </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.GetTagedObjects(System.String,System.String)">
            <summary>
            Get the objects by a tag.
            </summary>
            <param name="id">The taged object identity.</param>
            <param name="tag">The tag.</param>
            <returns>The object corresponding to the id and tag.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.AddTTFont(Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFont,System.Byte[],System.String,Spire.Pdf.General.Paper.Drawing.Fonts.FontCacheDuration)">
            <summary>
            Add a ttfont to cache.
            </summary>
            <param name="font">The ttfont.</param>
            <param name="fontFamilyName">The font family name.</param>
            <param name="duration">The cache duration.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.AddTTFont(System.Byte[],System.String,Spire.Pdf.General.Paper.Drawing.Fonts.FontCacheDuration)">
            <summary>
            Add a ttfont to cache.
            </summary>
            <param name="font">The ttfont data.</param>
            <param name="fontName">The font name.</param>
            <param name="duration">The cache duration.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.AddTTFont(System.Byte[],System.String,Spire.Pdf.General.Paper.Drawing.Fonts.FontCacheDuration,System.Boolean)">
            <summary>
            Add a ttfont to cache.
            </summary>
            <param name="font">The ttfont data.</param>
            <param name="fontName">The font name.</param>
            <param name="duration">The cache duration.</param>
            <param name="isEmbed">whether fonts are embedded or not</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.FontCache.FetchTTFont(System.String,System.Drawing.FontStyle,System.String)">
            <summary>
            Fetch the ttfont.
            </summary>
            <param name="fontFamilyName">The font family name.</param>
            <param name="fontStyle">The font style.</param>
            <param name="substituteFontFamilyName">The substitute font family name.</param>
            <returns>
            if not exist matched(substituted) font,return any font.
            </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Fonts.FontCacheDuration">
            <summary>
            Font cache duration.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Fonts.FontCacheDuration.Global">
            <summary>
            Living in the runtime of the program.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Fonts.FontCacheDuration.Instance">
            <summary>
            Only living in instance. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.Cmap.CharCodes">
            <summary>
            Gets the char code
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFont.Panose">
            <summary>
            Represents 10 byte series of numbers is used to describe the visual characteristics of a given typeface. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFont.BoundingBoxOfFont">
            <summary>
            Gets the bounding box in design units of the font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFont.PostscriptTtFontKey">
            <summary>
            Get mPostscriptTtFontKey
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFontFamily.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFontFamily.Dispose">
            <summary>
            Clean up Memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFontFiler.ReadVerticalHeader">
            <summary>
            See http://www.microsoft.com/typography/otspec/vhea.htm for more info.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.BlendMode">
            <summary>
            Represents standard separable blend mode, used in PDF.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.BlendMode.InnerEnum.Hue">
            <summary>
            Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.BlendMode.InnerEnum.Saturation">
            <summary>
            Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color. Painting
            with this mode in an area of the backdrop that is a pure gray (no saturation) produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.BlendMode.InnerEnum.Color">
            <summary>
            Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color. 
            This preserves the gray levels of the backdrop and is useful for coloring monochrome images or tinting color images.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.BlendMode.InnerEnum.Luminosity">
            <summary>
            Creates a color with the luminosity of the source color and the hue and saturation of the backdrop color. This
            produces an inverse effect to that of the Color mode.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.BlendMode.GetInstance(System.String)">
            <summary>
            根据类型字符串获取类型枚举
            <para>
            默认值：Normal
            
            </para>
            </summary>
            <param name="blendMode"> 类型字符串 </param>
            <returns> 枚举实例 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsLogicalStructureContainer">
            <summary>
            Container for part of APS tree which is related to the logical structure element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsLogicalStructureContainer.Language">
            <summary>
            Language of the container content.
            </summary>
            <remarks>
            Probably it is not the best place to store the content language.
            But for now it is the easiest way to output the text language the same way as MW does.
            </remarks>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsLogicalStructureContainer.Id">
            <summary>
            APS container id.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas.BlendMode">
            <summary>
            Gets or sets the blend mode of the cavas.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs.fontDoubleStrikeout">
            <summary>
            The font strikeout.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs.OutlineWidth">
            <summary>
            Gets the width of the outline.
            </summary>
            <value>
            The width of the outline.
            </value>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGroupCategory.TextBoxContent">
            <summary>
            Content of text box.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.BasicLayout.BasicLayoutLine.CompareFloat(System.Single,System.Single,System.Single)">
            <summary>
            Compares the floating number.
            </summary>
            <param name="val1">The value1.</param>
            <param name="val2">The value2.</param>
            <param name="accuracy">The accuracy.</param>
            <returns><c>return 0,val1 equal val2;return 1,val1 greater than val2;return -1,val1 less than val2;</c></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.BasicLayout.BasicLayoutLine.CompareDouble(System.Double,System.Double,System.Double)">
            <summary>
            Compares the double number.
            </summary>
            <param name="val1">The value1.</param>
            <param name="val2">The value2.</param>
            <param name="accuracy">The accuracy.</param>
            <returns><c>return 0,val1 equal val2;return 1,val1 greater than val2;return -1,val1 less than val2;</c></returns>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.BasicLayout.BasicLayoutRunPartBase.CharacterCategory.Ascii">
            <summary>
            Font used for the 0..127 characters.
            </summary>
            <remarks>This value is not used as <see cref="!:RunPr.CharacterCategoryHint"/>,
            may be it's better to create separate enum for character hints.</remarks>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.BasicLayout.BasicLayoutRunPartBase.CharacterCategory.FarEast">
            <summary>
            Font used for the East Asian characters.
            Also known as East Asian.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.BasicLayout.BasicLayoutRunPartBase.CharacterCategory.ComplexScript">
            <summary>
            Font used for the Complex Script characters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.Rendering.BasicLayout.BasicLayoutRunPartBase.CharacterCategory.Other">
            <summary>
            Font used for characters that do not fall into any of the above ranges.
            Also known as High ASCII.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Rendering.Common.XpsPathBuilder">
            <summary>
            Converts an APS path or a clipping region into XPS Abbreviated Syntax.
            The technique is the same as in PdfPathBuilder, but Syntax of path is different
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Dml.Builders.DmlNodePropertiesReader.ReadNonVisualProperties(Spire.Pdf.General.Paper.Drawing.Rendering.Dml.NonVisual.DmlNvPrBase,Spire.Pdf.General.Paper.Base.XmlDocumentReader,Spire.Pdf.General.Paper.Drawing.Rendering.Dml.ServiceLocator.IDmlServiceLocator)">
            <summary>
            20.1.2.2.25 nvCxnSpPr (Non-Visual Properties for a Connection Shape)
            20.1.2.2.26 nvGraphicFramePr (Non-Visual Properties for a Graphic Frame)
            20.1.2.2.27 nvGrpSpPr (Non-Visual Properties for a Group Shape)
            20.1.2.2.28 nvPicPr (Non-Visual Properties for a Picture)
            20.1.2.2.29 nvSpPr (Non-Visual Properties for a Shape)
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Dml.Builders.DmlNodePropertiesReader.ReadNonVisualDrawingProperties(Spire.Pdf.General.Paper.Base.XmlDocumentReader,Spire.Pdf.General.Paper.Drawing.Rendering.Dml.ServiceLocator.IDmlServiceLocator)">
            <summary>
            Reads 'cNvPr' Non-Visual Drawing Properties.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Dml.DmlShape.GetOffset(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Calculates position offset of the textbox content.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Dml.TextEffects.DmlTransparentEffectHelper.BlurImage(Spire.Pdf.General.Paper.Drawing.Ps.PsBitmap,System.Int32)">
            <summary>
            Applies simplified blur to the image.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfGraphicStateWriter.WriteBlendMode(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.BlendMode,Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfStream)">
            <summary>
            Writes blend mode.
            </summary>
            <param name="blendMode">The blend mode.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfGraphicWriter.WriteImage(Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfImageData,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Writes an image to the PDF stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfGraphicWriter.WriteImage(Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfImageData,System.Drawing.PointF,System.Drawing.SizeF,System.Int64)">
            <summary>
            Writes an image to the PDF stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfImage.GetPdfImageData">
            <summary>
            Get the pdf image data.
            </summary>
            <returns>The pdf image data.</returns>
        </member>
        <member name="E:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfRenderer.PdfRendererEndPage">
            <summary>
            Occurs when end page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfRendererEndPageHandler">
            <summary>
            Represents the method that will handle an event that with event data.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="args">args that contains event data</param>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfRendererEndPageEventArgs">
            <summary>
            PdfRendererEndPageEventArgs is the class containg event data.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfRendererEndPageEventArgs.CurrentDocument">
            <summary>
            Represents the current Pdf documnet.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfRendererEndPageEventArgs.CurrentPage">
            <summary>
            Represents the current Pdf page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfResources.IsPdfHatchData(Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfImage)">
            <summary>
            Whether the image data is pdf hatch data.
            </summary>
            <param name="image">The pdf image</param>
            <returns>If the image data is pdf hatch data,return true ,or false.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfTextWriter.AdjustText(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs)">
            <summary>
            如果是泰文字符串，调整Glyphs中的Text。用于组合字符被拆分在三个或者两个Glyphs对象中的情况
            </summary>
            <param name="glyphs"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfTextWriter.GetNextPsGlyPhs(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs)">
            <summary>
            获取当前Glyphs的下一个Glyphs，两个Glyphs不一定在同一个Parent中
            </summary>
            <param name="currentGlyphs"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfTextWriter.IsMainCharacter(System.Char)">
            <summary>
            是否是主体字符，主体字符上下可以叠加符合要求的字符
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfTextWriter.IsAboveCharacter(System.Char)">
            <summary>
            是否是可以叠加于主体字符之上的字符[帽子字符]
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfTextWriter.IsTonalCharacter(System.Char)">
            <summary>
            是否是声调字符，这种字符可以叠加在主体上，当主体字符上叠加了[帽子字符]时，叠加在帽子字符上
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Internal.Rendering.PdfTextWriter.AdjustText(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs)">
            <summary>
            实现两个Glyphs的组合字符拼接
            </summary>
            <param name="glyphs">当前glyphs，提供其Text结尾的字符</param>
            <param name="nextGlyphs">下一个可用的glyphs，提供其Text的开始字符</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Rendering.Xps.ApsGlyphsIndicesToXpsReader.IsValidXmlChar(System.Int32)">
            <summary>
            Reference Spire.Pdf.General.Paper.Drawing.Rendering.Ps.XmlDocumentBuilder,IsValidXmlChar(char c)
            </summary>
            <param name="utf32Char"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Rendering.Xps.XpsRenderer.IsNegative">
            <summary>
            Reverse y position.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.PsFont.Replace(Spire.Pdf.General.Paper.Drawing.PsFont)">
            <summary>
            
            </summary>
            <param name="font"></param>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.Left">
            <summary>
            Gets a value indicating whether The blank distance to the left 
            of the glyph relative to the origin[0,0].
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.Top">
            <summary>
            Gets a value indicating whether The blank distance to the top 
            of the glyph relative to the origin[0,0].
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.Right">
            <summary>
            Gets a value indicating whether The blank distance to the right 
            of the glyph relative to the origin[0,0].
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.Bottom">
            <summary>
            Gets a value indicating whether The blank distance to the bottom 
            of the glyph relative to the origin[0,0].
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.DesignWidth">
            <summary>
            Gets the design width of the glygh.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.ActualWidth">
            <summary>
            Gets the actual width of the glygh.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.LeftSideBearing">
            <summary>
            Gets the left side bearing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.RightSideBearing">
            <summary>
            Gets the right side bearing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.BoundingBoxPoints.IsEmpty">
            <summary>
             Gets a value indicating whether this is empty.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeIdentity">
            An identity transform is one in which the output coordinates are
            always the same as the input coordinates.
            If this transform is anything other than the identity transform,
            the type will either be the constant GENERAL_TRANSFORM or a
            combination of the appropriate flag bits for the various coordinate
            conversions that this transform performs.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeTranslation">
            A translation moves the coordinates by a constant amount in x
            and y without changing the length or angle of vectors.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeUniformScale">
            A uniform scale multiplies the length of vectors by the same amount
            in both the x and y directions without changing the angle between
            vectors.
            This flag bit is mutually exclusive with the TypeGeneralScale flag.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeGeneralScale">
            A general scale multiplies the length of vectors by different
            amounts in the x and y directions without changing the angle
            between perpendicular vectors.
            This flag bit is mutually exclusive with the TypeUniformScale flag.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeMaskScale">
            This constant is a bit mask for any of the scale flag bits.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeFlip">
            This flag bit indicates that the transform defined by this object
            performs a mirror image flip about some axis which changes the
            normally right handed coordinate system into a left handed
            system in addition to the conversions indicated by other flag bits.
            A right handed coordinate system is one where the positive X
            axis rotates counterclockwise to overlay the positive Y axis
            similar to the direction that the fingers on your right hand
            curl when you stare end on at your thumb.
            A left handed coordinate system is one where the positive X
            axis rotates clockwise to overlay the positive Y axis similar
            to the direction that the fingers on your left hand curl.
            There is no mathematical way to determine the angle of the
            original flipping or mirroring transformation since all angles
            of flip are identical given an appropriate adjusting rotation.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeQuadrantRotation">
            This flag bit indicates that the transform defined by this object
            performs a quadrant rotation by some multiple of 90 degrees in
            addition to the conversions indicated by other flag bits.
            A rotation changes the angles of vectors by the same amount
            regardless of the original direction of the vector and without
            changing the length of the vector.
            This flag bit is mutually exclusive with the TypeGeneralRotation flag.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeGeneralRotation">
            This flag bit indicates that the transform defined by this object
            performs a rotation by an arbitrary angle in addition to the
            conversions indicated by other flag bits.
            A rotation changes the angles of vectors by the same amount
            regardless of the original direction of the vector and without
            changing the length of the vector.
            This flag bit is mutually exclusive with the
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeMaskRotation">
            This constant is a bit mask for any of the rotation flag bits.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeGeneralTransform">
            This constant indicates that the transform defined by this object
            performs an arbitrary conversion of the input coordinates.
            If this transform can be classified by any of the above constants,
            the type will either be the constant TypeIdentity or a
            combination of the appropriate flag bits for the various coordinate
            conversions that this transform performs.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.ApplyIdentity">
            This constant is used for the internal state variable to indicate
            that no calculations need to be performed and that the source
            coordinates only need to be copied to their destinations to
            complete the transformation equation of this transform.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.ApplyTranslate">
            This constant is used for the internal state variable to indicate
            that the translation components of the matrix (m02 and m12) need
            to be added to complete the transformation equation of this transform.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.ApplyScale">
            This constant is used for the internal state variable to indicate
            that the scaling components of the matrix (m00 and m11) need
            to be factored in to complete the transformation equation of
            this transform.  If the ApplyShear bit is also set then it
            indicates that the scaling components are not both 0.0.  If the
            ApplyShear bit is not also set then it indicates that the
            scaling components are not both 1.0.  If neither the ApplyShear
            nor the ApplyScale bits are set then the scaling components
            are both 1.0, which means that the x and y components contribute
            to the transformed coordinate, but they are not multiplied by
            any scaling factor.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.ApplyShear">
            This constant is used for the internal state variable to indicate
            that the shearing components of the matrix (m01 and m10) need
            to be factored in to complete the transformation equation of this
            transform.  The presence of this bit in the state variable changes
            the interpretation of the ApplyScale bit as indicated in its
            documentation.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m00">
            The X coordinate scaling element of the 3x3
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m01">
            The X coordinate shearing element of the 3x3
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m02">
            The X coordinate of the translation element of the
            3x3 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m10">
            The Y coordinate shearing element of the 3x3
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m11">
            The Y coordinate scaling element of the 3x3
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m12">
            The Y coordinate of the translation element of the
            3x3 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.mState">
            This field keeps track of which components of the matrix need to
            be applied when performing a transformation.
            @see #ApplyIdentity
            @see #ApplyTranslate
            @see #ApplyScale
            @see #ApplyShear
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.mType">
            This field caches the current transformation type of the matrix.
            @see #TypeIdentity
            @see #TypeTranslation
            @see #TypeUniformScale
            @see #TypeGeneralScale
            @see #TypeFlip
            @see #TypeQuadrantRotation
            @see #TypeGeneralRotation
            @see #TypeGeneralTransform
            @see #TypeUnknown
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.PsMatrix.UpdateState">
             Manually recalculates the state of the transform when the matrix
             changes too much to predict the effects on the state.
             The following table specifies what the various settings of the
             state field say about the values of the corresponding matrix
             element fields.
             Note that the rules governing the SCALE fields are slightly
             different depending on whether the SHEAR flag is also set.
             <pre>
                                 SCALE            SHEAR          TRANSLATE
                                m00/m11          m01/m10          m02/m12
            
             IDENTITY             1.0              0.0              0.0
             TRANSLATE (TR)       1.0              0.0          not both 0.0
             SCALE (SC)       not both 1.0         0.0              0.0
             TR | SC          not both 1.0         0.0          not both 0.0
             SHEAR (SH)           0.0          not both 0.0         0.0
             TR | SH              0.0          not both 0.0     not both 0.0
             SC | SH          not both 0.0     not both 0.0         0.0
             TR | SC | SH     not both 0.0     not both 0.0     not both 0.0
             </pre>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyTranslate">
            This constant is used for the internal state variable to indicate
            that the translation components of the matrix (m03, m13, m23) need
            to be added to complete the transformation equation of this transform.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyScale">
            This constant is used for the internal state variable to indicate
            that the scaling components of the matrix (m00, m11, m22) need
            to be factored in to complete the transformation equation of
            this transform.  If the ApplyShear bit is also set then it
            indicates that the scaling components are not all 0.0.  If the
            ApplyShear bit is not also set then it indicates that the
            scaling components are not all 1.0.  If neither the ApplyShear
            nor the ApplyScale bits are set then the scaling components
            are both 1.0, which means that the x, y and z components contribute
            to the transformed coordinate, but they are not multiplied by
            any scaling factor.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyShear">
            This constant is used for the internal state variable to indicate
            that the shearing components of the matrix (m01, m02, m10, m12, m20, m21) 
            need to be factored in to complete the transformation equation of this
            transform. The presence of this bit in the state variable changes the 
            interpretation of the ApplyScale bit as indicated in its documentation.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyProjection">
            This constant is used for the internal state variable to indicate
            that the projection components of the matrix (m30, m31, m32) need
            to be factored in to complete the transformation equation of this
            transform.  
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyOverallScale">
            This constant is used for the internal state variable to indicate
            that the overall scaling component of the matrix (m33) need to be 
            factored in to complete the transformation equation of this transform.  
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m00">
            The X coordinate scaling element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m01">
            The YX coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m02">
            The XZ coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m03">
            The X coordinate of the translation element of the
            4x4 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m10">
            The YX coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m11">
            The Y coordinate scaling element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m12">
            The YZ coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m13">
            The Y coordinate of the translation element of the
            4x4 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m20">
            The ZX coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m21">
            The ZY coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m22">
            The Z coordinate scaling element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m23">
            The Z coordinate of the translation element of the
            4x4 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m30">
            The X projection element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m31">
            The Y projection element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m32">
            The Z projection element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m33">
            The overall scaling element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.mState">
            This field keeps track of which components of the matrix need to
            be applied when performing a transformation.
            @see #ApplyIdentity
            @see #ApplyTranslate
            @see #ApplyScale
            @see #ApplyShear
            @see #ApplyProjection
            @see #ApplyOverallScale
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.UpdateState">
            Manually recalculates the state of the transform when the matrix
            changes too much to predict the effects on the state.
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Ps.PsBitmap.BlendTransparencyWithBackground(Spire.Pdf.General.Paper.Drawing.PsColor)">
            <summary>
            Blend transparency whith background color.
            </summary>
            <param name="backgroundColor">background color</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Ps.PsSystem.GetMacOSFontFolders">
            <summary>
            Get MacOS font folders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.BlendMode.GetInstance(System.String)">
            <summary>
            根据类型字符串获取类型枚举
            <para>
            默认值：Normal
            
            </para>
            </summary>
            <param name="blendMode"> 类型字符串 </param>
            <returns> 枚举实例 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam">
            <summary>
            绘制参数
            <para>
            绘制参数是一组用于控制绘制渲染效果的修饰参数的集合。
            绘制参数可以被不同的图元对象所共享。
            </para>
            <para>
            绘制参数可以继承已有的绘制参数，被继承的绘制参数称为
            该参数的"基础绘制参数"。
            </para>
            <para>
            图元对象通过绘制参数的标识符引用绘制参数。图元对象在引用
            绘制参数的同时，还可以定义自己的绘制属性，图元自有的绘制属性
            将覆盖引用的绘制参数中的同名属性。
            </para>
            <para>
            绘制参数可通过引用基础绘制参数的方式形成嵌套，对单个绘制参数而言，
            它继承了其基础绘制参数中的所有属性，并且可以重定义其基础绘制参数中的属性。
            </para>
            <para>
            绘制参数的作用顺序采用就近原则，即当多个绘制参数作用于同一个对象并且这些绘制参数
            中具有相同的要素时，采用与被作用对象关系最为密切的绘制参数的要素对其进行渲染。
            例如，当图元已经定义绘制参数时，则按定义属性进行渲染；当图元未定义绘制参数时，
            应首先按照图元定义的绘制参数进行渲染；图元未定义绘制参数时应采用所在图层的默认绘制参数
            渲染；当图元和所在图层都没有定义绘制参数时，按照各绘制属性的默认值进行渲染。
            </para>
            <para>
            8.2 绘制参数结构 图 22
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetRelative(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 基础绘制参数，引用资源文件中的绘制参数的标识符
            </summary>
            <param name="relative"> 引用资源文件中的绘制参数的标识符 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.Relative">
            <summary>
            【可选 属性】
            获取 基础绘制参数，引用资源文件中的绘制参数的标识符
            </summary>
            <returns> 引用资源文件中的绘制参数的标识符 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetLineWidth(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 线宽
            <para>
            非负浮点数，指定了绘制路径绘制时线的宽度。由于
            某些设备不能输出一个像素宽度的线，因此强制规定
            当线宽大于 0 时，无论多小都至少要绘制两个像素的宽度；
            当线宽为 0 时，绘制一个像素的宽度。由于线宽为 0 定义与
            设备相关，所以不推荐使用线宽为 0。
            </para>
            <para>
            默认值为 0.353 mm
            
            </para>
            </summary>
            <param name="lineWidth"> 线宽 </param>
            <returns> this </returns>
            <exception cref="!:NumberFormatException"> 线宽必须是非负浮点数 </exception>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.LineWidth">
            <summary>
            【可选 属性】
            获取 线宽
            <para>
            非负浮点数，指定了绘制路径绘制时线的宽度。由于
            某些设备不能输出一个像素宽度的线，因此强制规定
            当线宽大于 0 时，无论多小都至少要绘制两个像素的宽度；
            当线宽为 0 时，绘制一个像素的宽度。由于线宽为 0 定义与
            设备相关，所以不推荐使用线宽为 0。
            </para>
            <para>
            默认值为 0.353 mm
            
            </para>
            </summary>
            <returns> 线宽 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetJoin(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineJoinType)">
            <summary>
            【可选 属性】
            设置 线条连接样式
            <para>
            可选样式参照<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineJoinType"/>，线条连接样式的取值和显示效果之间的关系见表
            
            </para>
            </summary>
            <param name="join"> 线条连接样式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.Join">
            <summary>
            【可选 属性】
            获取 线条连接样式
            <para>
            可选样式参照<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineJoinType"/>，线条连接样式的取值和显示效果之间的关系见表
            
            </para>
            </summary>
            <returns> 线条连接样式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetCap(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineCapType)">
            <summary>
            【可选 属性】
            设置  线端点样式
            <para>
            可选样式参照<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineCapType"/>，线条端点样式取值与效果之间关系见表 24
            
            </para>
            </summary>
            <param name="cap"> 线端点样式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.Cap">
            <summary>
            【可选 属性】
            设置  线端点样式
            <para>
            可选样式参照<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineCapType"/>，线条端点样式取值与效果之间关系见表 24
            </para>
            <para>
            默认值为 Butt
            
            </para>
            </summary>
            <returns> 线端点样式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetDashOffSet(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 线条虚线开始位置
            <para>
            默认值为 0
            </para>
            <para>
            当 DashPattern 不出现时，该参数无效
            
            </para>
            </summary>
            <param name="dashOffSet"> 线条虚线开始位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.DashOffSet">
            <summary>
            【可选 属性】
            获取 线条虚线开始位置
            <para>
            默认值为 0
            </para>
            <para>
            当 DashPattern 不出现时，该参数无效
            
            </para>
            </summary>
            <returns> 线条虚线开始位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetDashPattern(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选 属性】
            设置 线条虚线的重复样式
            <para>
            数组中共含两个值，第一个值代表虚线的线段的长度，
            第二个值代表虚线间隔的长度。
            </para>
            <para>
            默认值为空。
            </para>
            <para>
            线条样式的控制效果见表 23
            
            </para>
            </summary>
            <param name="dashPattern"> 线条虚线的重复样式的数组中共含两个值，第一个值代表虚线的线段的长度，第二个值代表虚线间隔的长度。 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.DashPattern">
            <summary>
            【可选 属性】
            获取 线条虚线的重复样式
            <para>
            数组中共含两个值，第一个值代表虚线的线段的长度，
            第二个值代表虚线间隔的长度。
            </para>
            <para>
            默认值为空。
            </para>
            <para>
            线条样式的控制效果见表 23
            
            </para>
            </summary>
            <returns> 线条虚线的重复样式的数组中共含两个值，第一个值代表虚线的线段的长度，第二个值代表虚线间隔的长度。 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetMiterLimit(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 Join的截断值
            <para>
            Join为 Miter 时小角度结合点长度的截断值，默认值为 3.528。
            当 Join  不等于 Miter 时该参数无效。
            
            </para>
            </summary>
            <param name="miterLimit"> Join的截断值长度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.MiterLimit">
            <summary>
            【可选 属性】
            获取 Join的截断值
            <para>
            Join为 Miter 时小角度结合点长度的截断值，默认值为 3.528。
            当 Join  不等于 Miter 时该参数无效。
            
            </para>
            </summary>
            <returns> Join的截断值长度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetFillColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【可选】
            设置 填充颜色
            <para>
            用以填充路径形成的区域以及文字轮廓内的区域，
            默认值为透明色。关于颜色的描述见 8.3
            
            </para>
            </summary>
            <param name="fillColor"> 填充颜色 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.getFillColor">
            <summary>
            【可选】
            获取 填充颜色
            <para>
            用以填充路径形成的区域以及文字轮廓内的区域，
            默认值为透明色。关于颜色的描述见 8.3
            
            </para>
            </summary>
            <returns> 填充颜色 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.SetStrokeColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【可选】
            设置 勾边颜色
            <para>
            用以填充路径形成的区域以及文字轮廓内的区域，
            默认值为黑色。关于颜色的描述见 8.3
            
            </para>
            </summary>
            <param name="strokeColor"> 勾边颜色 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam.StrokeColor">
            <summary>
            【可选】
            获取 勾边颜色
            <para>
            用以填充路径形成的区域以及文字轮廓内的区域，
            默认值为黑色。关于颜色的描述见 8.3
            
            </para>
            </summary>
            <returns> 勾边颜色 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineCapType">
            <summary>
            线端点样式
            <para>
            指定一条线的端点样式。
            </para>
            <para>
            线条端点样式取值与效果之间关系见表 24
            
            默认值为 Butt
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineCapType.GetInstance(System.String)">
            <summary>
            根据类型字符串获取类型枚举
            <para>
            默认值：Miter
            
            </para>
            </summary>
            <param name="type"> 类型字符串 </param>
            <returns> 枚举实例 </returns>
            <exception cref="!:IllegalArgumentException"> 未知的线端点样式 </exception>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineJoinType">
            <summary>
            线条连接样式
            <para>
            指定了两个线的端点结合时采用的样式
            </para>
            <para>
            线条连接样式的取值和显示效果之间的关系见表 22
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineJoinType.GetInstance(System.String)">
            <summary>
            根据类型字符串获取类型枚举
            <para>
            默认值：Miter
            
            </para>
            </summary>
            <param name="type"> 类型字符串 </param>
            <returns> 枚举实例 </returns>
            <exception cref="!:IllegalArgumentException"> 未知线条连接样式 </exception>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Area">
            <summary>
            裁剪区域
            <para>
            用一个图形或文字对象来描述裁剪区的一个组成部分，
            最终裁剪区是这些区域的并集。
            </para>
            <para>
            8.4 裁剪区 表 33
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Area.setDrawParam(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 引用资源文件中的绘制参数的标识
            <para>
            线宽、结合点和端点样式等绘制特性对裁剪效果会产生影响，
            有关绘制参数的描述见 8.2
            
            </para>
            </summary>
            <param name="drawParam"> 引用资源文件中的绘制参数的标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Area.DrawParam">
            <summary>
            【可选 属性】
            获取 引用资源文件中的绘制参数的标识
            <para>
            线宽、结合点和端点样式等绘制特性对裁剪效果会产生影响，
            有关绘制参数的描述见 8.2
            
            </para>
            </summary>
            <returns> 引用资源文件中的绘制参数的标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Area.SetCTM(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选 属性】
            设置 变换矩阵
            <para>
            针对对象坐标系，对Area下包含的 Path 和 Text 进行进一步的变换
            
            </para>
            </summary>
            <param name="ctm"> 变换矩阵 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Area.CTM">
            <summary>
            【可选 属性】
            获取 变换矩阵
            <para>
            针对对象坐标系，对Area下包含的 Path 和 Text 进行进一步的变换
            
            </para>
            </summary>
            <returns> 变换矩阵 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Area.SetClipObj(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.ClipAble)">
            <summary>
            【必选】
            设置 裁剪对象
            <para>
            裁剪对象可以是 CT_Text、CT_Path
            
            </para>
            </summary>
            <param name="clipObj"> 裁剪对象 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Area.ClipObj">
            <summary>
            【必选】
            获取 裁剪对象
            <para>
            裁剪对象可以是 CT_Text、CT_Path
            
            </para>
            </summary>
            <returns> 裁剪对象 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.ClipAble">
            <summary>
            可裁剪对象
            <para>
            实现该接口代表能够作为裁剪区域进行裁剪操作
            </para>
            <para>
            可裁剪对象为： CT_Path、CT_Text
            </para>
            <para>
            8.5 图 44 表 33
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Clips">
            <summary>
            图元对象的裁剪区域序列
            <para>
            采用对象空间坐标系
            </para>
            <para>
            当存在多个 Clip对象时，最终裁剪区为所有 Clip区域交集。
            </para>
            <para>
            8.5 图元对象 图 45 表 34
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Clips.#ctor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.CT_Clip)">
            <summary>
            使用一个裁剪对象初始化裁剪序列
            </summary>
            <param name="clip"> 裁剪对象 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Clips.AddClip(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.CT_Clip)">
            <summary>
            【必选】
            增加 图元对象的裁剪区域
            <para>
            采用对象空间坐标系
            
            </para>
            </summary>
            <param name="clip"> 图元对象的裁剪区域 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Clips.GetClips">
            <summary>
            【必选】
            获取 图元对象的裁剪区域序列
            <para>
            采用对象空间坐标系
            </para>
            <para>
            当存在多个 Clip 对象时，最终裁剪区为所有 Clip 区域的交集
            
            </para>
            </summary>
            <returns> 图元对象的裁剪区域序列 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.CT_Clip">
            <summary>
            裁剪区
            <para>
            裁剪区由一组路径或文字构成，用以指定页面上的一个有效绘制区域，落在裁剪区
            意外的部分不受绘制指令的影响。
            </para>
            <para>
            一个裁剪区可由多个分路径（Area）组成，最终的裁剪范围是各个部分路径的并集。
            裁剪区中的数据均相对于所修饰图元对象的外界矩形。
            </para>
            <para>
            8.4 裁剪区 图 44 表 33
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.CT_Clip.AddArea(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Area)">
            <summary>
            【必选】
            增加 裁剪区域
            <para>
            用一个图形对象或文字对象来描述裁剪区的一个组成部分，
            最终裁剪区是这些区域的并集。
            
            </para>
            </summary>
            <param name="area"> 裁剪区域 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.CT_Clip.Areas">
            <summary>
            【必选】
            设置 裁剪区域
            <para>
            用一个图形对象或文字对象来描述裁剪区的一个组成部分，
            最终裁剪区是这些区域的并集。
            
            </para>
            </summary>
            <returns> 裁剪区域 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.BitsPerComponent">
            <summary>
            每个颜色通道使用的位数
            <para>
            有效取值为：1，2，4，8，16
            </para>
            <para>
            默认值取值为 8
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.BitsPerComponent.bit">
            <summary>
            每个颜色通道使用的位数
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.BitsPerComponent.Value">
            <summary>
            获取  每个颜色通道使用的位数
            </summary>
            <returns> 每个颜色通道使用的位数 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.BitsPerComponent.GetInstance(System.String)">
            <summary>
            获取实例
            </summary>
            <param name="bitStr"> 比特数字符串 </param>
            <returns> 实例 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.BitsPerComponent.GetInstance(System.Int32)">
            <summary>
            获取实例
            </summary>
            <param name="bit"> 比特数 </param>
            <returns> 实例 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace">
            <summary>
            颜色空间
            <para>
            本标准支持 GRAY、RGB、CMYK 颜色空间。除通过
            设置各通道使用颜色空间内的任意颜色之外，还可
            在颜色空间内定义调色板或指定相应颜色配置文件，
            通过设置索引值进行引用。
            </para>
            <para>
            8.3 颜色 图 24
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.#ctor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType)">
            <param name="type"> 颜色类型 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.#ctor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType,System.Int64)">
            <param name="type"> 颜色类型 </param>
            <param name="id">   对象ID </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.SetType(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType)">
            <summary>
            【必选 属性】
            设置 颜色空间的类型
            <para>
            可选类型<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType"/>
            
            </para>
            </summary>
            <param name="type"> 颜色空间的类型 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.GetType">
            <summary>
            【必选 属性】
            获取 颜色空间的类型
            <para>
            可选类型<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType"/>
            
            </para>
            </summary>
            <returns> 颜色空间的类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.SetBitsPerComponent(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.BitsPerComponent)">
            <summary>
            【可选 属性】
            设置 每个颜色通道使用的位数
            <para>
            有效取值为：1，2，4，8，16 参考<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.BitsPerComponent"/>
            
            </para>
            </summary>
            <param name="bitsPerComponent"> 每个颜色通道使用的位数 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.GetBitsPerComponent">
            <summary>
            【可选 属性】
            获取 每个颜色通道使用的位数
            <para>
            有效取值为：1，2，4，8，16 参考<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.BitsPerComponent"/>
            
            </para>
            </summary>
            <returns> 每个颜色通道使用的位数 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.SetProfile(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选 属性】
            设置 指向包内颜色配置文件
            </summary>
            <param name="profile"> 指向包内颜色配置文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.GetProfile">
            <summary>
            【可选 属性】
            获取 指向包内颜色配置文件
            </summary>
            <returns> 指向包内颜色配置文件路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.SetPalette(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.Palette)">
            <summary>
            【可选】
            设置 调色板
            <para>
            调色板中颜色的索引编号从 0 开始
            
            </para>
            </summary>
            <param name="palette"> 调色板 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace.GetPalette">
            <summary>
            【可选】
            获取 调色板
            <para>
            调色板中颜色的索引编号从 0 开始
            
            </para>
            </summary>
            <returns> 调色板 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CV">
            <summary>
            调色板中预定义的颜色
            <para>
            调色板中颜色的索引编号从 0 开始
            </para>
            <para>
            8.3 颜色 表 25
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CV.#ctor(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            颜色表示：
            <para>
            Gray - 通过一个通道来表明灰度值；例如 "#FF 255"
            </para>
            <para>
            RGB - 包含3个通道，一次是红、绿、蓝；例如 "#11 #22 #33"、"17 34 51"
            </para>
            <para>
            CMYK - 包含4个通道，依次是青、黄、品红、黑；例如 "#11 #22 #33 # 44"、"17 34 51 68"
            
            </para>
            </summary>
            <param name="color"> 设置预定义的颜色 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CV.setColor(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            设置 预定义的颜色
            <para>
            颜色表示：
            </para>
            <para>
            Gray - 通过一个通道来表明灰度值；例如 "#FF 255"
            </para>
            <para>
            RGB - 包含3个通道，一次是红、绿、蓝；例如 "#11 #22 #33"、"17 34 51"
            </para>
            <para>
            CMYK - 包含4个通道，依次是青、黄、品红、黑；例如 "#11 #22 #33 # 44"、"17 34 51 68"
            
            </para>
            </summary>
            <param name="value"> 设置预定义的颜色 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CV.Color">
            <summary>
            获取 预定义的颜色
            <para>
            颜色表示：
            </para>
            <para>
            Gray - 通过一个通道来表明灰度值；例如 "#FF 255"
            </para>
            <para>
            RGB - 包含3个通道，一次是红、绿、蓝；例如 "#11 #22 #33"、"17 34 51"
            </para>
            <para>
            CMYK - 包含4个通道，依次是青、黄、品红、黑；例如 "#11 #22 #33 # 44"、"17 34 51 68"
            
            </para>
            </summary>
            <returns> 设置预定义的颜色 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType">
            <summary>
            颜色空间的类型
            <para>
            8.3.1 表 25 颜色空间属性
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType.GRAY">
            <summary>
            灰度
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType.RGB">
            <summary>
            红绿蓝
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType.CMYK">
            <summary>
            印刷颜色
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.OFDColorSpaceType.GetInstance(System.String)">
            <summary>
            获取实例 </summary>
            <param name="type"> 类型字符串 </param>
            <returns> 实例 </returns>
            <exception cref="!:IllegalArgumentException"> 未知的颜色空间类型 </exception>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.Palette">
            <summary>
            调色板
            <para>
            8.3 颜色 表 25
            </para>
            <para>
            调色板中颜色的索引编号从 0 开始
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.Palette.AddCV(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CV)">
            <summary>
            【必选】
            <para>
            设置 调色板中的预定义颜色
            
            </para>
            </summary>
            <param name="cv"> 调色板中的预定义颜色 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.Palette.GetCVByIndex(System.Nullable{System.Int32})">
            <summary>
            获取 预定义位置颜色
            </summary>
            <param name="index"> 预定义位置颜色位置序号，0 开始 </param>
            <returns> 预定义位置颜色 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.Palette.GetColorByIndex(System.Nullable{System.Int32})">
            <summary>
            获取 预定义位置颜色
            </summary>
            <param name="index"> 预定义位置颜色位置序号，0 开始 </param>
            <returns> 预定义位置颜色 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.Palette.CVs">
            <summary>
            【必选】
            <para>
            获取 调色板中的预定义颜色
            </para>
            <para>
            调色板中颜色的索引编号从 0 开始
            
            </para>
            <para>
            tip：只读
            
            </para>
            </summary>
            <returns> 调色板中的预定义颜色列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.ColorClusterType">
            <summary>
            颜色族
            <para>
            用于标识属于颜色的一种，颜色可以是基本颜色、底纹和渐变
            </para>
            <para>
            8.3.2 图 25 颜色结构
            
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd">
            <summary>
            轴向渐变
            <para>
            在轴向渐变中，颜色渐变沿着一条指定的轴线方向，轴线由起始点和结束点决定，
            与这条轴线垂直的直线上的点颜色相同。
            </para>
            <para>
            当轴向渐变某个方向设定为延伸时（Extend 不等于 0），渐变应沿轴在该方向的延长线
            延伸到超出裁剪区在该轴线的投影区域为止。当 MapType 为 Direct 时，延伸区域的
            渲染颜色使用该方向轴点所在的段的颜色；否则，按照在轴线区域内的渲染规则进行渲染。
            </para>
            <para>
            8.3.4.2 轴向渐变 图 29、30 表 29
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.SetMapType(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.MapType)">
            <summary>
            【可选 属性】
            设置 渐变绘制的方式
            <para>
            可选值参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.MapType"/>
            
            </para>
            </summary>
            <param name="mapType"> 绘制方向 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.MapType">
            <summary>
            【可选 属性】
            获取 渐变绘制的方式
            <para>
            可选值参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.MapType"/>
            
            </para>
            </summary>
            <returns> 绘制方向 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.SetMapUnit(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 轴线一个渐变区间的长度
            <para>
            当 MapType 的值不等于 Direct 时出现
            </para>
            <para>
            默认值为轴线长度
            
            </para>
            </summary>
            <param name="mapUnit"> 轴线一个渐变区间的长度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.MapUnit">
            <summary>
            【可选 属性】
            获取 轴线一个渐变区间的长度
            <para>
            当 MapType 的值不等于 Direct 时出现
            </para>
            <para>
            默认值为轴线长度
            
            </para>
            </summary>
            <returns> 轴线一个渐变区间的长度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.SetExtend(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend)">
            <summary>
            【可选 属性】
            设置 轴线延长线方向是否继续绘制
            <para>
            可选值参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.Extend"/>
            </para>
            <para>
            默认值为 <seealso cref="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend._0"/>  不向两侧继续绘制渐变
            
            </para>
            </summary>
            <param name="extend"> 轴线延长线方向是否继续绘制 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.Extend">
            <summary>
            【可选 属性】
            获取 轴线延长线方向是否继续绘制
            <para>
            默认值为 <seealso cref="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend._0"/>  不向两侧继续绘制渐变
            
            </para>
            </summary>
            <returns> 轴线延长线方向是否继续绘制，选值参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.Extend"/> </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.SetStartPoint(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 轴线起始点
            </summary>
            <param name="startPoint"> 轴线起始点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.StartPoint">
            <summary>
            【必选 属性】
            获取 轴线起始点
            </summary>
            <returns> 轴线起始点 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.SetEndPoint(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 轴线结束点
            </summary>
            <param name="endPoint"> 轴线结束点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.EndPoint">
            <summary>
            【必选 属性】
            设置 轴线结束点
            </summary>
            <returns> 轴线结束点 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.AddSegment(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment)">
            <summary>
            【必选】
            增加 段
            </summary>
            <param name="segment"> 段 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd.Segments">
            <summary>
            【必选】
            获取 段列表
            </summary>
            <returns> 段列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color">
            <summary>
            基本颜色
            <para>
            本标准中定义的颜色是一个广义的概念，包括基本颜色、底纹和渐变
            </para>
            <para>
            基本颜色支持两种指定方式：一种是通过设定颜色个通道值指定颜色空间的某个颜色，
            另一种是通过索引值取得颜色空间中的一个预定义颜色。
            </para>
            <para>
            由于不同颜色空间下，颜色通道的含义、数目各不相同，因此对颜色空间的类型、颜色值的
            描述格式等作出了详细的说明，见表 27。BitsPerComponent（简称 BPC）由效时，
            颜色通道值的取值下限是 0，上限由 BitsPerComponent 决定，取值区间 [0, 2^BPC - 1]
            内的整数，采用 10 进制或 16 进制的形式表示，采用 16 进制表示时，应以"#"加以标识。
            当颜色通道的值超出了相应区间，则按照默认颜色来处理。
            </para>
            <para>
            8.3.2 基本颜色 图 25 表 26
            
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.#ctor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.ColorClusterType)">
            <param name="color"> 颜色族中的颜色 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.Rgb(System.Int32,System.Int32,System.Int32)">
            <summary>
            RGB颜色值
            <para>
            其中颜色空间（CT_ColorSpace）的通道使用位数（BitsPerComponent）为 8
            </para>
            <para>
            采用10进制表示方式
            
            </para>
            </summary>
            <param name="r"> 红色 0~255 </param>
            <param name="g"> 绿色 0~255 </param>
            <param name="b"> 蓝色 0~255 </param>
            <returns> RGB 颜色 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.SetValue(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选 属性】
            设置 颜色值
            <para>
            指定了当前颜色空间下各通道的取值。Value 的取值应
            符合"通道 1 通道 2 通道 3 ..."格式。此属性不出现时，
            应采用 Index 属性从颜色空间的调色板中的取值。二者都不
            出现时，改颜色各通道的值全部为 0
            </para>
            <para>
            颜色表示：
            </para>
            <para>
            Gray - 通过一个通道来表明灰度值；例如 "#FF 255"
            </para>
            <para>
            RGB - 包含3个通道，一次是红、绿、蓝；例如 "#11 #22 #33"、"17 34 51"
            </para>
            <para>
            CMYK - 包含4个通道，依次是青、黄、品红、黑；例如 "#11 #22 #33 # 44"、"17 34 51 68"
            
            </para>
            </summary>
            <param name="value"> 颜色值 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.Value">
            <summary>
            【可选 属性】
            获取 颜色值
            <para>
            指定了当前颜色空间下各通道的取值。Value 的取值应
            符合"通道 1 通道 2 通道 3 ..."格式。此属性不出现时，
            应采用 Index 属性从颜色空间的调色板中的取值。二者都不
            出现时，改颜色各通道的值全部为 0
            </para>
            <para>
            颜色表示：
            </para>
            <para>
            Gray - 通过一个通道来表明灰度值；例如 "#FF 255"
            </para>
            <para>
            RGB - 包含3个通道，一次是红、绿、蓝；例如 "#11 #22 #33"、"17 34 51"
            </para>
            <para>
            CMYK - 包含4个通道，依次是青、黄、品红、黑；例如 "#11 #22 #33 # 44"、"17 34 51 68"
            
            </para>
            </summary>
            <returns> 颜色值 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.SetIndex(System.Int32)">
            <summary>
            【可选 属性】
            设置 调色板中颜色的编号，非负整数
            <para>
            将从当前颜色空间的调色板中取出相应索引的预定义颜色用来描绘。
            索引从 0 开始
            
            </para>
            </summary>
            <param name="index"> 调色板中颜色的编号 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.Index">
            <summary>
            【可选 属性】
            获取 调色板中颜色的编号，非负整数
            <para>
            将从当前颜色空间的调色板中取出相应索引的预定义颜色用来描绘。
            索引从 0 开始
            
            </para>
            </summary>
            <returns> 调色板中颜色的编号，null表示不存在 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.SetColorSpace(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 引用资源文件中颜色空间的标识
            <para>
            默认值为文档设定的颜色空间
            
            </para>
            </summary>
            <param name="colorSpace"> 颜色空间的标识 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.GetColorSpace">
            <summary>
            【可选 属性】
            获取 引用资源文件中颜色空间的标识
            <para>
            默认值为文档设定的颜色空间
            
            </para>
            </summary>
            <returns> 颜色空间的标识，为null是请从文档中获取设定的颜色空间，参照表 6 DefaultCS </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.SetAlpha(System.Nullable{System.Int32})">
            <summary>
            【可选 属性】
            设置 颜色透明度
            <para>
            范围在 0~255 之间取值。
            </para>
            <para>
            默认为 255，完全不透明。
            
            </para>
            </summary>
            <param name="alpha"> 颜色透明度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.Alpha">
            <summary>
            【可选 属性】
            获取 颜色透明度
            <para>
            范围在 0~255 之间取值。
            </para>
            <para>
            默认为 255，完全不透明。
            
            </para>
            </summary>
            <returns> 颜色透明度 0~255 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.SetColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.ColorClusterType)">
            <summary>
            【可选】
            设置 颜色
            </summary>
            <param name="color"> 颜色族 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.SetPattern(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern)">
            <summary>
            设置 Pattern
            </summary>
            <param name="pattern">样式</param>
            <returns>this</returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.Color">
            <summary>
            【可选】
            获取 颜色
            </summary>
            <returns> 颜色族, null表示不存在 </returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color.GetColorByType``1”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_GouraudShd">
            <summary>
            高洛德渐变
            <para>
            高洛德渐变的基本原理是指定三个带有可选颜色的顶点，在其构成的三角形区域内
            采用高洛德算法绘制渐变图形。
            </para>
            <para>
            8.3.4.4 高洛德渐变  图 41 表 31
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_GouraudShd.SetExtend(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 在渐变控制点所确定的部分是否填充
            <para>
            默认值为 false(0)
            
            </para>
            </summary>
            <param name="extend"> false - 不填充； true - 填充 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_GouraudShd.Extend">
            <summary>
            【可选 属性】
            获取 在渐变控制点所确定的部分是否填充
            <para>
            默认值为 false (0)
            
            </para>
            </summary>
            <returns> false - 不填充； true - 填充 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_GouraudShd.AddPoint(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point)">
            <summary>
            【必选】
            增加  渐变控制点
            <para>
            至少出现三个
            
            </para>
            </summary>
            <param name="point"> 渐变控制点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_GouraudShd.Points">
            <summary>
            【必选】
            获取  渐变控制点列表
            <para>
            至少出现三个
            
            </para>
            </summary>
            <returns> 渐变控制点列表 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_GouraudShd.SetBackColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【可选】
            设置 渐变范围外的填充颜色
            <para>
            应使用基本颜色
            
            </para>
            </summary>
            <param name="backColor"> 渐变范围外的填充颜色，应使用基本颜色 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_GouraudShd.BackColor">
            <summary>
            【可选】
            获取 渐变范围外的填充颜色
            <para>
            应使用基本颜色
            
            </para>
            </summary>
            <returns> 渐变范围外的填充颜色，应使用基本颜色 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_LaGouraudShd">
            <summary>
            网格高洛德渐变
            <para>
            网格高洛德渐变是高洛德渐变的一种特殊形式，
            允许定义 4 个以上的控制点，按照每行固定的网格数（VerticesPerRow）
            形成若干行列，相邻的 4 个控制点定义一个网格单元，在
            一个网格单元内 EdgeFlag 固定为 1，网格单元及多个单元组成的网格区域的规则如图42所示。
            </para>
            <para>
            8.3.4.5 图 43 表 32
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_LaGouraudShd.SetVerticesPerRow(System.Nullable{System.Int32})">
            <summary>
            【必选 属性】
            设置 渐变区域内每行的网格数
            </summary>
            <param name="verticesPerRow"> 渐变区域内每行的网格数 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_LaGouraudShd.VerticesPerRow">
            <summary>
            【必选 属性】
            获取 渐变区域内每行的网格数
            </summary>
            <returns> 渐变区域内每行的网格数 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_LaGouraudShd.AddPoint(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point)">
            <summary>
            【必选】
            增加  渐变控制点
            <para>
            至少出现四个
            
            </para>
            </summary>
            <param name="point"> 渐变控制点，至少出现四个 </param>
            <returns> this </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd">
            <summary>
            径向渐变
            <para>
            8.3.4.3 径向渐变 图 35 表 30
            </para>
            <para>
            径向渐变定义了两个离心率和倾斜角度均相同的椭圆，并在椭圆边缘连线
            区域内进行渐变绘制的方法。具体算法是，先由起始点椭圆中心点开始绘制
            一个起始点颜色的空心矩形，随后沿着中心点连线不断绘制离心率与倾角角度
            相同的空心椭圆，颜色由起始点颜色逐渐渐变为结束点颜色，椭圆大小由起始点
            椭圆主键变为结束点椭圆。
            </para>
            <para>
            当轴向渐变某个方向设定为延伸时（Extend 不等于 0），渐变应沿轴在该方向的延长线
            延伸到超出裁剪区在该轴线的投影区域为止。当 MapType 为 Direct 时，延伸区域的
            渲染颜色使用该方向轴点所在的段的颜色；否则，按照在轴线区域内的渲染规则进行渲染。
            
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetMapType(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.MapType)">
            <summary>
            【可选 属性】
            设置 渐变绘制的方式
            <para>
            可选值参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.MapType"/>
            
            </para>
            </summary>
            <param name="mapType"> 绘制方向 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.MapType">
            <summary>
            【可选 属性】
            获取 渐变绘制的方式
            <para>
            可选值参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.MapType"/>
            
            </para>
            </summary>
            <returns> 绘制方向 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetMapUnit(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 轴线一个渐变区间的长度
            <para>
            当 MapType 的值不等于 Direct 时出现
            </para>
            <para>
            默认值为轴线长度
            
            </para>
            </summary>
            <param name="mapUnit"> 轴线一个渐变区间的长度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.MapUnit">
            <summary>
            【可选 属性】
            获取 轴线一个渐变区间的长度
            <para>
            当 MapType 的值不等于 Direct 时出现
            </para>
            <para>
            默认值为轴线长度
            
            </para>
            </summary>
            <returns> 轴线一个渐变区间的长度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetEccentricity(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 两个椭圆的离心率
            <para>
            椭圆焦距与长轴的比值，取值范围是 [0, 1.0)
            </para>
            <para>
            默认值为 0，在这种情况下退化为圆
            
            </para>
            </summary>
            <param name="eccentricity"> 两个椭圆的离心率，取值范围是 [0, 1.0) </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.Eccentricity">
            <summary>
            【可选 属性】
            获取 两个椭圆的离心率
            <para>
            椭圆焦距与长轴的比值，取值范围是 [0, 1.0)
            </para>
            <para>
            默认值为 0，在这种情况下退化为圆
            
            </para>
            </summary>
            <returns> 两个椭圆的离心率，取值范围是 [0, 1.0)，默认值为 0 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetAngle(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 两个椭圆的倾斜角度
            <para>
            椭圆长轴与 x 轴正向的夹角，单位为度
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="angle"> 两个椭圆的倾斜角度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.Angle">
            <summary>
            【可选 属性】
            获取 两个椭圆的倾斜角度
            <para>
            椭圆长轴与 x 轴正向的夹角，单位为度
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 两个椭圆的倾斜角度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetStartPoint(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 起始椭圆的的中心点
            </summary>
            <param name="startPoint"> 起始椭圆的的中心点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.StartPoint">
            <summary>
            【必选 属性】
            获取 起始椭圆的的中心点
            </summary>
            <returns> 起始椭圆的的中心点 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetEndPoint(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 结束椭圆的的中心点
            </summary>
            <param name="endPoint"> 结束椭圆的的中心点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.EndPoint">
            <summary>
            【必选 属性】
            获取 结束椭圆的的中心点
            </summary>
            <returns> 结束椭圆的的中心点 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetStartRadius(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 起始椭圆的长半轴
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="startRadius"> 起始椭圆的长半轴长度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.StartRadius">
            <summary>
            【可选 属性】
            获取 起始椭圆的长半轴
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 起始椭圆的长半轴长度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetEndRadius(System.Nullable{System.Double})">
            <summary>
            【必选 属性】
            设置 结束椭圆的长半轴
            </summary>
            <param name="endRadius"> 结束椭圆的长半轴长度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.EndRadius">
            <summary>
            【必选 属性】
            设置 结束椭圆的长半轴
            </summary>
            <returns> 结束椭圆的长半轴长度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.SetExtend(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend)">
            <summary>
            【可选 属性】
            设置 轴线延长线方向是否继续绘制
            <para>
            可选值参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.Extend"/>
            </para>
            <para>
            默认值为 <seealso cref="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend._0"/>  不向两侧继续绘制渐变
            
            </para>
            </summary>
            <param name="extend"> 轴线延长线方向是否继续绘制 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.Extend">
            <summary>
            【可选 属性】
            获取 轴线延长线方向是否继续绘制
            <para>
            默认值为 <seealso cref="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend._0"/>  不向两侧继续绘制渐变
            
            </para>
            </summary>
            <returns> 轴线延长线方向是否继续绘制，选值参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.Extend"/> </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.AddSegment(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment)">
            <summary>
            【必选】
            增加 段
            </summary>
            <param name="segment"> 段 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd.Segments">
            <summary>
            【必选】
            获取 段列表
            </summary>
            <returns> 段列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.EdgeFlag">
            <summary>
            三角单元切换的方向标志
            <para>
            8.1.4.4 表 31 附录A.13
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend">
            <summary>
            轴线延长线方向是否继续绘制
            <para>
            可选值为 0、1、2、3
            </para>
            <para>
            0：不向两侧继续绘制渐变
            </para>
            <para>
            1: 在结束点至起始点延长线方向绘制渐变
            </para>
            <para>
            2：在起始点至结束点延长线方向绘制渐变
            </para>
            <para>
            3：向两侧延长线方向绘制渐变
            </para>
            <para>
            默认值为 0
            
            8.3.4.2 轴向渐变 图 29、30 表 29
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend._0">
            <summary>
            不向两侧继续绘制渐变
            
            默认值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend._1">
            <summary>
            在结束点至起始点延长线方向绘制渐变
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend._2">
            <summary>
            在起始点至结束点延长线方向绘制渐变
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend._3">
            <summary>
            向两侧延长线方向绘制渐变
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Extend.value">
            <summary>
            类型值
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.MapType">
            <summary>
            渐变绘制的方式
            <para>
            8.3.4.2 轴向渐变 图 29、30 表 29
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.MapType.Direct">
            <summary>
            默认值 Direct
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point">
            <summary>
            渐变控制点，至少出现三个
            <para>
            8.6.4.4 表 31 附录 A.13 P125
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point.setX(System.Nullable{System.Double})">
            <summary>
            【必选 属性】
            设置  控制点水平位置
            </summary>
            <param name="x"> 控制点水平位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point.X">
            <summary>
            【必选 属性】
            获取  控制点水平位置
            </summary>
            <returns> 控制点水平位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point.setY(System.Nullable{System.Double})">
            <summary>
            【必选 属性】
            设置  控制点垂直位置
            </summary>
            <param name="y"> 控制点垂直位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point.Y">
            <summary>
            【必选 属性】
            获取  控制点垂直位置
            </summary>
            <returns> 控制点垂直位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point.setEdgeFlag(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.EdgeFlag)">
            <summary>
            【可选 属性】
            设置 三角单元切换的方向标志
            </summary>
            <param name="edgeFlag"> 三角单元切换的方向标志 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point.EdgeFlag">
            <summary>
            【可选 属性】
            获取 三角单元切换的方向标志
            </summary>
            <returns> 三角单元切换的方向标志 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point.SetColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【必选】
            设置 控制点对应的颜色
            <para>
            应使用基本颜色
            
            </para>
            </summary>
            <param name="color"> 控制点对应的颜色，应使用基本颜色 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Point.Color">
            <summary>
            【必选】
            获取 控制点对应的颜色
            <para>
            应使用基本颜色
            
            </para>
            </summary>
            <returns> 控制点对应的颜色，应使用基本颜色 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment">
            <summary>
            颜色段
            <para>
            至少出现两个
            </para>
            <para>
            8.3.4.2 轴向渐变 图 29、30 表 29
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment.#ctor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <param name="color"> 段颜色 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment.#ctor(System.Nullable{System.Double},Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <param name="position"> 段坐标 </param>
            <param name="color">    段颜色 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment.SetPosition(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 渐变段颜色位置参数
            <para>
            用于确定 StartPoint 和 EndPoint 中的各颜色的位置值，
            取值范围是 [0, 1.0]，各颜色的 Position 值应根据颜色出现
            的顺序递增第一个 Segment 的 Position 属性默认值为 0，最后
            一个 Segment 的 Position 属性默认值为 1.0，当不存在时，
            在空缺的区间内平局分配。
            </para>
            <para>
            举例： Segment 个数等于 2 且不出现 Position 属性时，
            按照"0 1.0"处理；Segment 个数等于 3 且不出现 Position 属性时，
            按照"0 0.5 1.0"处理；Segment 个数等于 5 且不出现 Position 属性时，
            按照"0 0.25 0.5 0.75 1.0" 处理。
            
            </para>
            </summary>
            <param name="position"> 渐变位置参数 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment.Position">
            <summary>
            【可选 属性】
            获取 渐变段颜色位置参数
            <para>
            用于确定 StartPoint 和 EndPoint 中的各颜色的位置值，
            取值范围是 [0, 1.0]，各颜色的 Position 值应根据颜色出现
            的顺序递增第一个 Segment 的 Position 属性默认值为 0，最后
            一个 Segment 的 Position 属性默认值为 1.0，当不存在时，
            在空缺的区间内平局分配。
            </para>
            <para>
            举例： Segment 个数等于 2 且不出现 Position 属性时，
            按照"0 1.0"处理；Segment 个数等于 3 且不出现 Position 属性时，
            按照"0 0.5 1.0"处理；Segment 个数等于 5 且不出现 Position 属性时，
            按照"0 0.25 0.5 0.75 1.0" 处理。
            
            </para>
            </summary>
            <returns> 渐变位置参数 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment.SetColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【必选】
            设置 该段的颜色
            <para>
            应是基本颜色
            
            </para>
            </summary>
            <param name="color"> 该段的颜色，应是基本颜色 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.Segment.Color">
            <summary>
            【必选】
            获取 该段的颜色
            <para>
            应是基本颜色
            
            </para>
            </summary>
            <returns> 该段的颜色，应是基本颜色 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CellContent">
            <summary>
            底纹单元
            <para>
            用底纹填充目标区域时，所使用的单元对象
            </para>
            <para>
            CellContent 作为底纹对象的绘制单元，使用一种和外界没有
            任何关联的独立的坐标空间：坐上角（0,0）为原点，X 轴向右增长，
            Y 轴向下增长，单位为毫米。
            
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CellContent.SetThumbnail(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 引用资源文件中缩略图图像的标识符
            </summary>
            <param name="thumbnail"> 引用资源文件中缩略图图像的标识符 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CellContent.AddPageBlock(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType)">
            <summary>
            【可选】
            增加 页块
            <para>
            一个页块中可以嵌套其他页块，可含有0到多个页块
            
            </para>
            </summary>
            <param name="pageBlock"> 页块实例 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CellContent.Thumbnail">
            <summary>
            【可选 属性】
            获取 引用资源文件中缩略图图像的标识符
            </summary>
            <returns> 引用资源文件中缩略图图像的标识符 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern">
            <summary>
            底纹
            <para>
            底纹是复杂颜色的一种，用于图形和文字的填充以及沟边处理。
            </para>
            <para>
            8.3.3 底纹 图 26  表 28
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.SetWidth(System.Double)">
            <summary>
            【必选 属性】
            设置 底纹单元宽度
            </summary>
            <param name="width"> 底纹单元宽度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.Width">
            <summary>
            【必选 属性】
            获取 底纹单元宽度
            </summary>
            <returns> 底纹单元宽度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.SetHeight(System.Double)">
            <summary>
            【必选 属性】
            获取 底纹单元高度
            </summary>
            <param name="height"> 底纹单元高度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.Height">
            <summary>
            【必选 属性】
            获取 底纹单元高度
            </summary>
            <returns> 底纹单元高度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.SetXStep(System.Double)">
            <summary>
            【可选 属性】
            设置 X 方向底纹单元间距
            <para>
            默认值为底纹单元的宽度。
            </para>
            <para>
            若设定值小于底纹单元的宽度时，应按默认值处理
            
            </para>
            </summary>
            <param name="xStep"> X 方向底纹单元间距 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.XStep">
            <summary>
            【可选 属性】
            设置 X 方向底纹单元间距
            <para>
            默认值为底纹单元的宽度。
            </para>
            <para>
            若设定值小于底纹单元的宽度时，应按默认值处理
            
            </para>
            </summary>
            <returns> X 方向底纹单元间距 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.SetYStep(System.Double)">
            <summary>
            【可选 属性】
            设置 Y 方向底纹单元间距
            <para>
            默认值为底纹单元的高度。
            </para>
            <para>
            若设定值小于底纹单元的高度时，应按默认值处理
            
            </para>
            </summary>
            <param name="yStep"> Y 方向底纹单元间距 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.YStep">
            <summary>
            【可选 属性】
            获取 Y 方向底纹单元间距
            <para>
            默认值为底纹单元的高度。
            </para>
            <para>
            若设定值小于底纹单元的高度时，应按默认值处理
            
            </para>
            </summary>
            <returns> Y 方向底纹单元间距 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.SetReflectMethod(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.ReflectMethod)">
            <summary>
            【可选 属性】
            设置 底纹单元的翻转方式
            <para>
            默认值为 Normal
            </para>
            <para>
            参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.ReflectMethod"/>
            
            </para>
            </summary>
            <param name="reflectMethod"> 底纹单元的翻转方式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.ReflectMethod">
            <summary>
            【可选 属性】
            获取 底纹单元的翻转方式
            <para>
            默认值为 Normal
            </para>
            <para>
            参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.ReflectMethod"/>
            
            </para>
            </summary>
            <returns> 底纹单元的翻转方式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.SetRelativeTo(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.RelativeTo)">
            <summary>
            【可选 属性】
            设置 底纹单元起始位置
            <para>
            默认值为 Object：相对于对象坐标原点
            
            </para>
            </summary>
            <param name="relativeTo"> 底纹单元起始位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.RelativeTo">
            <summary>
            【可选 属性】
            设置 底纹单元起始位置
            <para>
            默认值为 Object：相对于对象坐标原点
            
            </para>
            </summary>
            <returns> 底纹单元起始位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.SetCTM(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选 属性】
            设置 底纹单元的变换矩阵
            <para>
            用于某些需要对底纹单元进行平移旋转变换的场合，
            默认为单位矩阵；底纹呈现时先做 XStep、YStep 排列，
            然后一起做 CTM 处理
            
            </para>
            </summary>
            <param name="ctm"> 底纹单元的变换矩阵 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.CTM">
            <summary>
            【可选 属性】
            获取 底纹单元的变换矩阵
            <para>
            用于某些需要对底纹单元进行平移旋转变换的场合，
            默认为单位矩阵；底纹呈现时先做 XStep、YStep 排列，
            然后一起做 CTM 处理
            
            </para>
            </summary>
            <returns> 底纹单元的变换矩阵 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.SetCellContent(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CellContent)">
            <summary>
            【必选】
            设置 底纹单元
            <para>
            用底纹填充目标区域时，所使用的单元对象
            
            </para>
            </summary>
            <param name="cellContent"> 底纹单元 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern.CellContent">
            <summary>
            【必选】
            获取 底纹单元
            <para>
            用底纹填充目标区域时，所使用的单元对象
            
            </para>
            </summary>
            <returns> 底纹单元 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.ReflectMethod">
            <summary>
            翻转绘制效果
            <para>
            8.3.4 渐变 图 28
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.ReflectMethod.Normal">
            <summary>
            普通重复
            <para>
            具体效果见 图 28  Normal
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.ReflectMethod.Column">
            <summary>
            竖轴对称翻转
            <para>
            具体效果见 图 28  Column
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.ReflectMethod.Row">
            <summary>
            横轴对称翻转
            <para>
            具体效果见 图 28  Row
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.ReflectMethod.RowAndColumn">
            <summary>
            十字轴对称翻转
            <para>
            具体效果见 图 28  Row And Column
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.ReflectMethod.GetInstance(System.String)">
            <summary>
            获取 翻转绘制效果 实例
            </summary>
            <param name="method"> 效果名称 </param>
            <returns> 翻转绘制效果 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.RelativeTo">
            <summary>
            底纹单元起始绘制位置
            <para>
            8.3.4 表 28 RelativeTo 
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.RelativeTo.Page">
            <summary>
            相对于页面坐标的原点
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.RelativeTo.Object">
            <summary>
            相对于对象坐标系的原点
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.RelativeTo.GetInstance(System.String)">
            <summary>
            获取 底纹单元起始绘制位置
            </summary>
            <param name="to"> 绘制位置字符串 </param>
            <returns> 底纹单元起始绘制位置 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1">
            <summary>
            图元对象
            <para>
            图元对象是版式文档中页面上呈现内容的最基本单元，
            所有页面显示内容。包括文字、图形、图像等，都属于
            图元对象，或是图元对象的组合。
            </para>
            <para>
            8.5 图元对象 图 45 表 34
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetBoundary(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box)">
            <summary>
            【必选 属性】
            设置 外接矩形
            <para>
            采用当前空间坐标系（页面坐标或其他容器坐标），当图
            元绘制超出此矩形区域时进行裁剪。
            
            </para>
            </summary>
            <param name="boundary"> 外接矩形 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetBoundary(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            【必选 属性】
            设置 外接矩形
            <para>
            采用当前空间坐标系（页面坐标或其他容器坐标），当图
            元绘制超出此矩形区域时进行裁剪。
            
            </para>
            </summary>
            <param name="topLeftX"> 外接矩形X坐标 </param>
            <param name="topLeftY"> 外接矩形Y坐标 </param>
            <param name="width">    外接矩形宽度 </param>
            <param name="height">   外接矩形高度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.Boundary">
            <summary>
            【必选 属性】
            获取 外接矩形
            <para>
            采用当前空间坐标系（页面坐标或其他容器坐标），当图
            元绘制超出此矩形区域时进行裁剪。
            
            </para>
            </summary>
            <returns> 外接矩形 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetGraphicName(System.String)">
            <summary>
            【可选 属性】
            设置 图元对象的名字
            </summary>
            <param name="name"> 图元对象的名字 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.GraphicName">
            <summary>
            【可选 属性】
            获取
            </summary>
            <returns> 图元对象的名字，可能为null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetVisible(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 图元是否可见
            </summary>
            <param name="visible"> true - 可见；false - 不见 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.Visible">
            <summary>
            【可选 属性】
            获取 图元是否可见
            </summary>
            <returns> true - 可见；false - 不见 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetCTM(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选 属性】
            设置 对空间内的图元变换矩阵
            </summary>
            <param name="ctm"> 变换矩阵 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.CTM">
            <summary>
            【可选 属性】
            获取 对空间内的图元变换矩阵
            </summary>
            <returns> 变换矩阵 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetDrawParam(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 引用资源文件中的绘制参数标识
            </summary>
            <param name="id"> 绘制参数标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.DrawParam">
            <summary>
            【可选 属性】
            获取 引用资源文件中的绘制参数标识
            </summary>
            <returns> 绘制参数标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetLineWidth(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 绘制路径时使用的线宽
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <param name="lineWidth"> 绘制路径时使用的线宽 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.LineWidth">
            <summary>
            【可选 属性】
            获取 绘制路径时使用的线宽
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <returns> 绘制路径时使用的线宽，可能为null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetCap(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineCapType)">
            <summary>
            【可选 属性】
            设置 线端点样式
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <param name="cap"> 线端点样式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.Cap">
            <summary>
            【可选 属性】
            获取 线端点样式
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <returns> 线端点样式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetJoin(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.LineJoinType)">
            <summary>
            【可选 属性】
            设置 线条连接样式
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <param name="join"> 线条连接样式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.Join">
            <summary>
            【可选 属性】
            获取 线条连接样式
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <returns> 线条连接样式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetMiterLimit(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 Join的截断值
            <para>
            Join为 Miter 时小角度结合点长度的截断值，默认值为 3.528。
            当 Join  不等于 Miter 时该参数无效。
            </para>
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <param name="miterLimit"> Join的截断值长度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.MiterLimit">
            <summary>
            【可选 属性】
            获取 Join的截断值
            <para>
            Join为 Miter 时小角度结合点长度的截断值，默认值为 3.528。
            当 Join  不等于 Miter 时该参数无效。
            </para>
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <returns> Join的截断值长度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetDashOffset(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 线条虚线开始位置
            <para>
            默认值为 0
            </para>
            <para>
            当 DashPattern 不出现时，该参数无效
            </para>
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <param name="dashOffset"> 线条虚线开始位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.DashOffset">
            <summary>
            【可选 属性】
            获取 线条虚线开始位置
            <para>
            默认值为 0
            </para>
            <para>
            当 DashPattern 不出现时，该参数无效
            </para>
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <returns> 线条虚线开始位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetDashPattern(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选 属性】
            设置 线条虚线的重复样式
            <para>
            数组中共含两个值，第一个值代表虚线的线段的长度，
            第二个值代表虚线间隔的长度。
            </para>
            <para>
            默认值为空。
            </para>
            <para>
            线条样式的控制效果见表 23
            </para>
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <param name="dashPattern"> 线条虚线的重复样式的数组中共含两个值，第一个值代表虚线的线段的长度，第二个值代表虚线间隔的长度。 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.DashPattern">
            <summary>
            【可选 属性】
            获取 线条虚线的重复样式
            <para>
            数组中共含两个值，第一个值代表虚线的线段的长度，
            第二个值代表虚线间隔的长度。
            </para>
            <para>
            默认值为空。
            </para>
            <para>
            线条样式的控制效果见表 23
            </para>
            <para>
            见 8.2 绘制参数
            </para>
            <para>
            如果图元对象有 DrawParam 属性时，则用此值覆盖 DrawParam 中对应的值
            
            </para>
            </summary>
            <returns> 线条虚线的重复样式的数组中共含两个值，第一个值代表虚线的线段的长度，第二个值代表虚线间隔的长度。 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetAlpha(System.Nullable{System.Int32})">
            <summary>
            【可选 属性】
            设置 图元对象透明度
            <para>
            取值区间为 [0,255]
            </para>
            <para>
            默认为 0
            
            </para>
            </summary>
            <param name="alpha"> 图元对象透明度，取值区间为 [0,255] </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.GetAlpha">
            <summary>
            【可选 属性】
            获取 图元对象透明度
            <para>
            取值区间为 [0,255]
            </para>
            <para>
            默认为 255
            
            </para>
            </summary>
            <returns> 图元对象透明度，取值区间为 [0,255] </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetActions(Spire.Pdf.General.Paper.Ofd.Core.Action.Actions)">
            <summary>
            【可选】
            设置 图元对象的动作序列
            <para>
            当存在多个 Action 对象时，所有动作依次执行
            
            </para>
            </summary>
            <param name="actions"> 图元对象的动作序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.Actions">
            <summary>
            【可选】
            设置 图元对象的动作序列
            <para>
            当存在多个 Action 对象时，所有动作依次执行
            
            </para>
            </summary>
            <returns> 图元对象的动作序列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.SetClips(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Clip.Clips)">
            <summary>
            【可选】
            设置 图元对象的裁剪区域序列
            <para>
            采用对象空间坐标系
            </para>
            <para>
            当存在多个 Clip 对象时，最终裁剪区域为所有 Clip 区域的交集。
            
            </para>
            </summary>
            <param name="clips"> 图元对象的裁剪区域序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.PageDescription.CT_GraphicUnit`1.Clips">
            <summary>
            【可选】
            设置 图元对象的裁剪区域序列
            <para>
            采用对象空间坐标系
            </para>
            <para>
            当存在多个 Clip 对象时，最终裁剪区域为所有 Clip 区域的交集。
            
            </para>
            </summary>
            <returns> 图元对象的裁剪区域序列 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.Actions">
            <summary>
            动作序列
            <para>
            图 19 大纲节点结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.Actions.addAction(Spire.Pdf.General.Paper.Ofd.Core.Action.CT_Action)">
            <summary>
            【必选】
            增加 到动作列表
            <para>
            当此大纲节点被激活时将执行的动作，关于动作的描述详见第 14 章
            
            </para>
            </summary>
            <param name="action"> 动作 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.Actions.GetActions">
            <summary>
            【必选】
            获取 动作列表
            <para>
            当此大纲节点被激活时将依次执行的动作，关于动作的描述详见第 14 章
            
            </para>
            </summary>
            <returns> 动作 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.Bookmark">
            <summary>
            跳转的目的书签
            <para>
            表 53 跳转动作属性
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.Bookmark.SetBookmarkName(System.String)">
            <summary>
            【必选 属性】
            设置 目标书签的名称，引用文档书签中的名称
            </summary>
            <param name="name"> 目标书签的名称 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.Bookmark.BookmarkName">
            <summary>
            【必选 属性】
            获取 目标书签的名称，引用文档书签中的名称
            </summary>
            <returns> 目标书签的名称 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest">
            <summary>
            目标区域
            <para>
            图 75 目标区域结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.setType(Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.DestType)">
            <summary>
            【必选 属性】
            设置 目标区域的描述方法
            </summary>
            <param name="type"> 目标区域的描述方法 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.Type">
            <summary>
            【必选 属性】
            获取 目标区域的描述方法
            </summary>
            <returns> 目标区域的描述方法 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.SetPageID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选】
            设置 引用跳转目标页面的标识
            </summary>
            <param name="pageId"> 引用跳转目标页面的标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.PageID">
            <summary>
            【必选】
            获取 引用跳转目标页面的标识
            </summary>
            <returns> 引用跳转目标页面的标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.SetLeft(System.Double)">
            <summary>
            【可选】
            设置 目标区域左上角 x坐标
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="left"> 目标区域左上角 x坐标 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.getLeft">
            <summary>
            【可选】
            获取 目标区域左上角 x坐标
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 目标区域左上角 x坐标 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.SetRight(System.Double)">
            <summary>
            【可选】
            设置 目标区域右上角 x坐标
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="right"> 目标区域右上角 x坐标 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.GetRight">
            <summary>
            【可选】
            获取 目标区域右上角 x坐标
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 目标区域右上角 x坐标 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.SetTop(System.Double)">
            <summary>
            【可选】
            设置 目标区域左上角 y坐标
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="top"> 目标区域左上角 y坐标 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.GetTop">
            <summary>
            【可选】
            获取 目标区域左上角 x坐标
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 目标区域左上角 x坐标 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.SetBottom(System.Double)">
            <summary>
            【可选】
            设置 目标区域右下角 y坐标
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="bottom"> 目标区域右下角 y坐标 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.GetBottom">
            <summary>
            【可选】
            获取 目标区域右下角 y坐标
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 目标区域右下角 y坐标 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.setZoom(System.Double)">
            <summary>
            【可选】
            设置 目标区域页面缩放比例
            <para>
            为 0 或不出现则按照但前缩放比例跳转，可取值范围[0.1 64.0]
            
            </para>
            </summary>
            <param name="zoom"> 目标区域页面缩放比例 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest.GetZoom">
            <summary>
            【可选】
            获取 目标区域页面缩放比例
            <para>
            为 0 或不出现则按照但前缩放比例跳转，可取值范围[0.1 64.0]
            
            </para>
            </summary>
            <returns> 目标区域页面缩放比例 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.DestType">
            <summary>
            申明目标区域的描述方法
            <para>
            表 54 目标区域属性
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.DestType.XYZ">
            <summary>
            目标区域由左上角位置（Left，Top）
            以及页面缩放比例（Zoom）确定
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.DestType.Fit">
            <summary>
            适合整个窗口区域
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.DestType.FitH">
            <summary>
            适合窗口宽度，目标区域由Top确定
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.DestType.FitV">
            <summary>
            适合窗口高度，目标区域由Left确定
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.DestType.FitR">
            <summary>
            适合窗口内的目标区域，目标区域为
            （Left，Top，Right，Bottom）所确定的矩形区域
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.DestType.GetInstance(System.String)">
            <summary>
            获取目标区域实例
            </summary>
            <param name="type"> 类型字符串 </param>
            <returns> 实例 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.Goto">
            <summary>
            跳转动作表明同一个文档内的跳转，包括一个目的区域
            或书签位置
            <para>
            图 74 跳转动作结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.Goto.setDest(Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest)">
            <summary>
            【必选】
            设置 跳转的目的区域
            </summary>
            <param name="dest"> 跳转的目的区域 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.Goto.SetBookmark(System.String)">
            <summary>
            【必选】
            设置 跳转的目标书签
            </summary>
            <param name="name"> 跳转的目标书签 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.Goto.Target">
            <summary>
            【必选】
            获取 跳转动作的目标
            <para>
            可能是 CT_Dest 或 Bookmark，可以使用<code>instanceof</code>判断类型并转换
            
            </para>
            </summary>
            <returns> 跳转动作的目标 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.OFDGotoTarget">
            <summary>
            用于描述Goto的目的地
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.Movie">
            <summary>
            Movie 动作用于播放视频。
            <para>
            图 79 播放视频动作属性
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.Movie.setResourceID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用资源文件中定义的视频资源标识
            </summary>
            <param name="resourceId"> 引用资源文件中定义的视频资源标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.Movie.ResourceID">
            <summary>
            【必选 属性】
            获取 引用资源文件中定义的视频资源标识
            </summary>
            <returns> 引用资源文件中定义的视频资源标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.Movie.setOperator(Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType)">
            <summary>
            【可选 属性】
            设置 放映参数
            <para>
            默认值为 Play
            
            </para>
            </summary>
            <param name="operator"> 放映参数，参见<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType"/> </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.Movie.Operator">
            <summary>
            【可选 属性】
            获取 放映参数
            <para>
            默认值为 Play
            
            </para>
            </summary>
            <returns> 放映参数，参见<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType"/> </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType">
            <summary>
            放映参数属性
            <para>
            表 59 放映参数属性
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType.Play">
            <summary>
            播放
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType.Pause">
            <summary>
            暂停
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType.Resume">
            <summary>
            继续
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionMovie.PlayType.GetInstance(System.String)">
            <summary>
            根据字符串类型获取 实例
            </summary>
            <param name="type"> 放映参数字符串 </param>
            <returns> 实例 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.GotoA">
            <summary>
            附件动作
            <para>
            附件动作表明打开当前文档内的一个附件
            </para>
            <para>
            图 76 附件动作结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.GotoA.SetAttachID(System.String)">
            <summary>
            【必选 属性】
            设置 附件的标识（xs:IDREF）
            </summary>
            <param name="attachId"> 附件的标识（xs:IDREF） </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.GotoA.AttachID">
            <summary>
            【必选 属性】
            获取 附件的标识（xs:IDREF）
            </summary>
            <returns> 附件的标识（xs:IDREF） </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.GotoA.SetNewWindow(System.Boolean)">
            <summary>
            【可选 属性】
            设置 是否在新窗口中打开
            </summary>
            <param name="newWindow"> true - 新窗口中打开 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.GotoA.GetNewWindow">
            <summary>
            【可选 属性】
            获取 是否在新窗口中打开
            </summary>
            <returns> true - 新窗口中打开 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.OFDAction">
            <summary>
            动作类型
            <para>
            表 51 动作类型属性
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound">
            <summary>
            播放音频动作
            <para>
            Sound 动作表明播放一段音频
            </para>
            <para>
            图 78 播放音频动作结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound.setResourceID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用资源文件中的音频资源标识符
            </summary>
            <param name="resourceId"> 引用资源文件中的音频资源标识符 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound.ResourceID">
            <summary>
            【必选 属性】
            获取 引用资源文件中的音频资源标识符
            </summary>
            <returns> 引用资源文件中的音频资源标识符 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound.setVolume(System.Int32)">
            <summary>
            【可选 属性】
            设置 播放音量，取值范围[0,100]
            </summary>
            <param name="volume"> 播放音量，取值范围[0,100] </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound.getVolume">
            <summary>
            【可选 属性】
            获取 播放音量，取值范围[0,100]
            </summary>
            <returns> 播放音量，取值范围[0,100] </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound.setRepeat(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置  此音频是否需要同步播放
            <para>
            如果此属性为 true，则 Synchronous 值无效
            </para>
            <para>
            默认值为 false
            
            </para>
            </summary>
            <param name="repeat"> true - 同步； false - 异步 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound.Repeat">
            <summary>
            【可选 属性】
            获取  此音频是否需要同步播放
            <para>
            如果此属性为 true，则 Synchronous 值无效
            </para>
            <para>
            默认值为 false
            
            </para>
            </summary>
            <returns> true - 同步； false - 异步 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound.SetSynchronous(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 是否同步播放
            <para>
            true 表示后续动作应等待此音频播放结束后才能开始，
            false 表示立刻返回并开始下一个动作
            
            </para>
            </summary>
            <param name="synchronous"> true - 同步顺序播放；false - 立刻返回开始下一个动作 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.Sound.Synchronous">
            <summary>
            【可选 属性】
            获取 是否同步播放
            <para>
            true 表示后续动作应等待此音频播放结束后才能开始，
            false 表示立刻返回并开始下一个动作
            
            </para>
            </summary>
            <returns> true - 同步顺序播放；false - 立刻返回开始下一个动作 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.URI">
            <summary>
            URI 动作
            <para>
            图 77 URI动作属性
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.URI.setURI(System.String)">
            <summary>
            【必选 属性】
            设置 目标URI的位置
            </summary>
            <param name="uri"> 目标URI的位置 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.URI.getURI">
            <summary>
            【必选 属性】
            设置 目标URI的位置
            </summary>
            <returns> 目标URI的位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.URI.SetBase(System.String)">
            <summary>
            【可选 属性】
            设置 Base URI，用于相对地址
            </summary>
            <param name="base"> Base URI，用于相对地址 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.URI.Base">
            <summary>
            【可选 属性】
            设置 Base URI，用于相对地址
            </summary>
            <returns> Base URI，用于相对地址 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.CT_Action">
            <summary>
            动作类型结构
            <para>
            图 73 动作类型结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.CT_Action.setEvent(Spire.Pdf.General.Paper.Ofd.Core.Action.EventType)">
            <summary>
            【必选 属性】
            设置 事件类型
            <para>
            触发动作的条件，事件的具体类型见表 52 <seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Action.EventType"/>
            
            </para>
            </summary>
            <param name="event"> 事件类型 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.CT_Action.Event">
            <summary>
            【必选 属性】
            获取 事件类型
            <para>
            触发动作的条件，事件的具体类型见表 52  <seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Action.EventType"/>
            
            </para>
            </summary>
            <returns> 事件类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.CT_Action.setRegion(Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Region)">
            <summary>
            【可选】
            设置 多个复杂区域为该链接对象的启动区域
            <para>
            该参数不出现时以所在图元或页面的外接矩形作为启动区域，见 9.3
            
            </para>
            </summary>
            <param name="region"> 多个复杂区域为该链接对象的启动区域 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.CT_Action.Region">
            <summary>
            【可选】
            获取 多个复杂区域为该链接对象的启动区域
            <para>
            该参数不出现时以所在图元或页面的外接矩形作为启动区域，见 9.3
            
            </para>
            </summary>
            <returns> 多个复杂区域为该链接对象的启动区域 或 null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.CT_Action.setAction(Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.OFDAction)">
            <summary>
            【必选】
            设置 动作
            </summary>
            <param name="action"> 动作 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Action.CT_Action.Action">
            <summary>
            【必选】
            获取 动作
            <para>
            可通过 instanceof 判断动作的具体类型
            
            </para>
            </summary>
            <returns> 动作实体 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Action.EventType">
            <summary>
            事件类型
            <para>
            参照 52 事件类型
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.EventType.DO">
            <summary>
            文档打开
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.EventType.PO">
            <summary>
            页面打开
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Action.EventType.CLICK">
            <summary>
            单击区域
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Action.EventType.GetInstance(System.String)">
            <summary>
            根据字符串获取匹配类型实例
            </summary>
            <param name="event"> 事件名称，只能是 DO，PO，CLICK </param>
            <returns> 实例 </returns>
            <exception cref="!:IllegalArgumentException"> 未知类型事件 </exception>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Annotation.Annotations">
            <summary>
            注释入口文件
            <para>
            注释是板式文档形成后附加的图文信息，用户可通过鼠标和键盘
            与进行交互。本标准中，页面内容与注释内容是份文件描述的。
            文件的注释在注释列表文件中按照页面进行组织索引，注释的内容
            在分页注释文件中描述。
            </para>
            <para>
            15.1 注释入口文件 图 80 表 60
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.Annotations.AddPage(Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnPage)">
            <summary>
            【可选】
            增加 注释所在页
            </summary>
            <param name="page"> 注释所在页 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.Annotations.GetByPageId(System.String)">
            <summary>
            根据ID获取页面注解
            </summary>
            <param name="id"> 页面ID </param>
            <returns> null或注释所在页 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.Annotations.Pages">
            <summary>
            @Date 2021 04 20 19 20
            @return
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot">
            <summary>
            注释
            <para>
            15.2 图 81 表 61
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【必选 属性】
            设置 注释的标识
            </summary>
            <param name="id"> 注释的标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.ID">
            <summary>
            【必选 属性】
            获取 注释的标识
            </summary>
            <returns> 注释的标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetType(Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType)">
            <summary>
            【必选 属性】
            设置 注释类型
            <para>
            具体取值见<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType"/>
            
            </para>
            </summary>
            <param name="type"> 注释类型 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.Type">
            <summary>
            【必选 属性】
            获取 注释类型
            <para>
            具体取值见<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType"/>
            
            </para>
            </summary>
            <returns> 注释类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetCreator(System.String)">
            <summary>
            【必选 属性】
            设置 注释创建者
            </summary>
            <param name="creator"> 注释创建者 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.Creator">
            <summary>
            【必选 属性】
            获取 注释创建者
            </summary>
            <returns> 注释创建者 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetLastModDate(System.DateTime)">
            <summary>
            【必选 属性】
            设置 最近一次修改的时间
            </summary>
            <param name="lastModDate"> 最近一次修改的时间 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.LastModDate">
            <summary>
            【必选 属性】
            获取 最近一次修改的时间
            </summary>
            <returns> 最近一次修改的时间 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetSubtype(System.String)">
            <summary>
            【可选 属性】
            设置 注释子类型
            </summary>
            <param name="subtype"> 注释子类型 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.Subtype">
            <summary>
            【可选 属性】
            获取 注释子类型
            </summary>
            <returns> 注释子类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetVisible(System.Boolean)">
            <summary>
            【可选 属性】
            设置 表示该注释对象是否显示
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="visible"> 表示该注释对象是否显示，默认值为 true </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.Visible">
            <summary>
            【可选 属性】
            获取 表示该注释对象是否显示
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> 表示该注释对象是否显示，默认值为 true </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetPrint(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 对象的Remark 信息是否随页面一起打印
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="print"> 对象的Remark 信息是否随页面一起打印 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.Print">
            <summary>
            【可选 属性】
            设置 对象的Remark 信息是否随页面一起打印
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> 对象的Remark 信息是否随页面一起打印 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetNoZoom(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 对象的 Remark 信息是否不随页面缩放而同步缩放
            <para>
            默认值为 false
            
            </para>
            </summary>
            <param name="noZoom"> 对象的 Remark 信息是否不随页面缩放而同步缩放 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.NoZoom">
            <summary>
            【可选 属性】
            获取 对象的 Remark 信息是否不随页面缩放而同步缩放
            <para>
            默认值为 false
            
            </para>
            </summary>
            <returns> 对象的 Remark 信息是否不随页面缩放而同步缩放 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetNoRotate(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 对象的 Remark 信息是否不随页面旋转而旋转
            <para>
            默认值为 false
            
            </para>
            </summary>
            <param name="noRotate"> 对象的 Remark 信息是否不随页面旋转而旋转 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.NoRotate">
            <summary>
            【可选 属性】
            获取 对象的 Remark 信息是否不随页面旋转而旋转
            <para>
            默认值为 false
            
            </para>
            </summary>
            <returns> 对象的 Remark 信息是否不随页面旋转而旋转 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetReadOnly(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 对象的 Remark 信息是否不能被用户更改
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="readOnly"> 对象的 Remark 信息是否不能被用户更改 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.ReadOnly">
            <summary>
            【可选 属性】
            获取 对象的 Remark 信息是否不能被用户更改
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> 对象的 Remark 信息是否不能被用户更改 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetRemark(System.String)">
            <summary>
            【可选】
            设置 注释说明内容
            </summary>
            <param name="remark"> 注释说明内容 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.Remark">
            <summary>
            【可选】
            获取 注释说明内容
            </summary>
            <returns> 注释说明内容 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.AddParameter(System.String,System.String)">
            <summary>
            【可选】
            增加 注释参数
            </summary>
            <param name="name">      键名 </param>
            <param name="parameter"> 值 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.Parameters">
            <summary>
            【可选】
            获取 一组注释参数
            </summary>
            <returns> 注解参数映射表 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.SetAppearance(Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Appearance)">
            <summary>
            【必选】
            设置 注释的静态显示效果
            <para>
            使用页面块定义来描述
            
            </para>
            </summary>
            <param name="appearance"> 注释的静态显示效果 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot.Appearance">
            <summary>
            【必选】
            获取 注释的静态显示效果
            <para>
            使用页面块定义来描述
            
            </para>
            </summary>
            <returns> 注释的静态显示效果 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType">
            <summary>
            注释类型取值
            
            15.2 表 62
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType.Link">
            <summary>
            连接注释
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType.Path">
            <summary>
            路径注释，一般为图形对象，比如矩形、多边形、贝塞尔曲线等
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType.Highlight">
            <summary>
            高亮注释
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType.Stamp">
            <summary>
            签章注释
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnotType.Watermark">
            <summary>
            水印注释
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnPage">
            <summary>
            注释所在页
            <para>
            15.1 注释入口文件 图 80 表 60
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnPage.SetPageID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用注释所在页面的标识
            </summary>
            <param name="pageId"> 引用注释所在页面的标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnPage.PageID">
            <summary>
            【必选 属性】
            获取 引用注释所在页面的标识
            </summary>
            <returns> 引用注释所在页面的标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnPage.SetFileLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            设置 指向包内的分页注释文件
            </summary>
            <param name="fileLoc"> 指向包内的分页注释文件 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.AnnPage.FileLoc">
            <summary>
            【必选】
            获取 指向包内的分页注释文件
            </summary>
            <returns> 指向包内的分页注释文件 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Appearance">
            <summary>
            注释的静态呈现效果
            <para>
            使用页面块定义来描述
            </para>
            <para>
            15.2 图 81 表 61
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Appearance.SetBoundary(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box)">
            <summary>
            【必选】
            设置 边界
            <para>
            附录 A.4
            
            </para>
            </summary>
            <param name="boundary"> 边界 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Appearance.Boundary">
            <summary>
            【必选】
            </summary>
            <returns> 边界 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Appearance.AddPageBlock(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType)">
            <summary>
            【可选】
            增加 页块
            <para>
            一个页块中可以嵌套其他页块，可含有0到多个页块
            
            </para>
            </summary>
            <param name="pageBlock"> 页块实例 </param>
            <returns> this </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.PageAnnot">
            <summary>
            分页注释文件
            <para>
            15.2 图 81 表 61
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.PageAnnot.AddAnnot(Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot)">
            <summary>
            【必选】
            增加 注释对象
            </summary>
            <param name="annot"> 注释对象 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.PageAnnot.Annots">
            <summary>
            【必选】
            获取 注释对象列表
            </summary>
            <returns> 注释对象列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Attachment.Attachments">
            <summary>
            附件列表
            <para>
            附件列表文件的入口点在 7.5 文档根节点中定义。
            一个OFD文件可以定义多个附件，附件列表结构如图 91 所示。
            </para>
            <para>
            20.1 附件列表 图 91 表 72
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.Attachments.AddAttachment(Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment)">
            <summary>
            【可选】
            增加 附件
            </summary>
            <param name="attachment"> 附件 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.Attachments.GetAttachments">
            <summary>
            【可选】
            增加 附件列表
            </summary>
            <returns> 附件列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment">
            <summary>
            附件
            <para>
            20.2 附件 图 92 表 73
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetID(System.String)">
            <summary>
            【必选 属性】
            设置 附件标识
            </summary>
            <param name="id"> 附件标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.ID">
            <summary>
            【必选 属性】
            获取 附件标识
            </summary>
            <returns> 附件标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetAttachmentName(System.String)">
            <summary>
            【必选 属性】
            设置 附件名称
            </summary>
            <param name="attachmentName"> 附件名称 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.AttachmentName">
            <summary>
            【必选 属性】
            获取 附件名称
            </summary>
            <returns> 附件名称 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetFormat(System.String)">
            <summary>
            【可选 属性】
            设置 附件格式
            </summary>
            <param name="format"> 附件格式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.Format">
            <summary>
            【可选 属性】
            获取 附件格式
            </summary>
            <returns> 附件格式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetCreationDate(System.DateTime)">
            <summary>
            【可选 属性】
            设置 创建时间
            </summary>
            <param name="creationDate"> 创建时间 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.CreationDate">
            <summary>
            【可选 属性】
            获取 创建时间
            </summary>
            <returns> 创建时间 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetModDate(System.DateTime)">
            <summary>
            【可选 属性】
            设置 修改时间
            </summary>
            <param name="modDate"> 修改时间 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.ModDate">
            <summary>
            【可选 属性】
            获取 修改时间
            </summary>
            <returns> 修改时间 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetSize(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 附件大小
            <para>
            以KB为单位
            
            </para>
            </summary>
            <param name="size"> 附件大小，以KB为单位 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.Size">
            <summary>
            【可选 属性】
            获取 附件大小
            <para>
            以KB为单位
            
            </para>
            </summary>
            <returns> 附件大小，以KB为单位 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetVisible(System.Nullable{System.Boolean})">
            <summary>
            【可选 属相】
            设置 附件是否可见
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="visible"> 附件是否可见 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.Visible">
            <summary>
            【可选 属相】
            获取 附件是否可见
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> 附件是否可见 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetUsage(System.String)">
            <summary>
            【可选 属性】
            设置 附件用途
            <para>
            默认值为 none
            
            </para>
            </summary>
            <param name="usage"> 附件用途 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.Usage">
            <summary>
            【可选 属性】
            获取 附件用途
            <para>
            默认值为 none
            
            </para>
            </summary>
            <returns> 附件用途 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.SetFileLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 附件内容在包内的路径
            </summary>
            <param name="fileLoc"> 附件内容在包内的路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Attachment.CT_Attachment.FileLoc">
            <summary>
            【可选】
            获取 附件内容在包内的路径
            </summary>
            <returns> 附件内容在包内的路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmark">
            <summary>
            本标准支持书签，可以将常用位置定义为书签，
            文档可以包含一组书签。
            <para>
            7.5 图 11 书签结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmark.#ctor(System.String,Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest)">
            <param name="name"> 书签名称 </param>
            <param name="dest"> 书签对应的文档版位置 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmark.SetBookmarkName(System.String)">
            <summary>
            【必选 属性】
            设置 书签名称
            </summary>
            <param name="name"> 书签名称 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmark.BookmarkName">
            <summary>
            【必选 属性】
            获取 书签名称
            </summary>
            <returns> 书签名称 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmark.SetDest(Spire.Pdf.General.Paper.Ofd.Core.Action.ActionType.ActionGoto.CT_Dest)">
            <summary>
            【必选】
            设置 书签对应的文档版位置
            <para>
            见表 54
            
            </para>
            </summary>
            <param name="dest"> 书签对应的文档版位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmark.Dest">
            <summary>
            【必选】
            获取 书签对应的文档版位置
            <para>
            见表 54
            
            </para>
            </summary>
            <returns> 书签对应的文档版位置 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmarks">
            <summary>
            文档的书签集，包含一组书签
            <para>
            7.5 文档根节点 表 5 文档根节点属性
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmarks.AKDddBookmark(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmark)">
            <summary>
            【必选】
            增加 书签
            </summary>
            <param name="bookmark"> 书签 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmarks.GetBookmarks">
            <summary>
            【必选】
            获取 书签列表
            </summary>
            <returns> 书签列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData">
            <summary>
            文档公共数据结构
            <para>
            ————《GB/T 33190-2016》 图 6
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.SetMaxUnitID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【必选】
            设置 当前文档中所有对象使用标识的最大值。
            初始值为 0。MaxUnitID主要用于文档编辑，
            在向文档增加一个新对象时，需要分配一个
            新的标识符，新标识符取值宜为 MaxUnitID + 1，
            同时需要修改此 MaxUnitID值。
            </summary>
            <param name="maxUnitID"> 对象标识符最大值 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.MaxUnitID">
            <summary>
            【必选】
            获取 当前文档中所有对象使用标识的最大值
            </summary>
            <returns> 当前文档中所有对象使用标识的最大值0 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.SetPageArea(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea)">
            <summary>
            【必选】
            设置 该文档页面区域的默认大小和位置
            </summary>
            <param name="pageArea"> 文档页面区域的默认大小和位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.PageArea">
            <summary>
            【必选】
            获取 该文档页面区域的默认大小和位置
            </summary>
            <returns> 该文档页面区域的默认大小和位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.SetPublicRes(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 公共资源序列 路径
            <para>
            公共资源序列，每个节点指向OFD包内的一个资源描述文件，
            源部分的描述键见 7.9，字形和颜色空间等宜在公共资源文件中描述
            
            </para>
            </summary>
            <param name="internalRes"> 公共资源序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.PublicRes">
            <summary>
            【可选】
            获取 公共资源序列
            <para>
            公共资源序列，每个节点指向OFD包内的一个资源描述文件，
            源部分的描述键见 7.9，字形和颜色空间等宜在公共资源文件中描述
            
            </para>
            </summary>
            <returns> 公共资源序列路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.SetDocumentRes(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 文件资源序列 路径
            <para>
            公共资源序列，每个节点指向OFD包内的一个资源描述文件，
            源部分的描述键见 7.9，
            绘制参数、多媒体和矢量图像等宜在文件资源文件中描述
            
            </para>
            </summary>
            <param name="documentRes"> 公共资源序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.DocumentRes">
            <summary>
            【可选】
            获取 文件资源序列 路径
            <para>
            公共资源序列，每个节点指向OFD包内的一个资源描述文件，
            源部分的描述键见 7.9，
            绘制参数、多媒体和矢量图像等宜在文件资源文件中描述
            
            </para>
            </summary>
            <returns> 文件资源序列 路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.AddTemplatePage(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage)">
            <summary>
            【可选】
            增加 模板页序列
            <para>
            为一些列的模板页的集合，模板页内容机构和普通页相同，描述将7.7
            
            </para>
            </summary>
            <param name="templatePage"> 模板页序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.TemplatePages">
            <summary>
            【可选】
            获取 模板页序列
            <para>
            为一些列的模板页的集合，模板页内容机构和普通页相同，描述将7.7
            
            </para>
            </summary>
            <returns> 模板页序列 (可能为空容器) </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.SetDefaultCS(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选】
            设置 引用在资源文件中定义的颜色标识符
            <para>
            有关颜色空间的描述见 8.3.1。如果不存在此项，采用RGB作为默认颜色空间
            
            </para>
            </summary>
            <param name="defaultCS"> 颜色空间引用 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData.DefaultCS">
            <summary>
            【可选】
            获取 引用在资源文件中定义的颜色标识符
            <para>
            有关颜色空间的描述见 8.3.1。如果不存在此项，采用RGB作为默认颜色空间
            
            </para>
            </summary>
            <returns> 颜色空间引用 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea">
            <summary>
            页面区域结构
            <para>
            ————《GB/T 33190-2016》 图 7
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            页面物理区域 创建区域
            </summary>
            <param name="topLeftX"> 页面物理区域 左上角X坐标 </param>
            <param name="topLeftY"> 页面物理区域 左上角Y坐标 </param>
            <param name="width">    页面物理区域 宽度 </param>
            <param name="height">   页面物理区域 高度 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.SetPhysicalBox(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box)">
            <summary>
            【必选】
            设置 页面物理区域
            <para>
            左上角为页面坐标系的原点
            
            </para>
            </summary>
            <param name="physicalBox"> 页面物理区域 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.SetPhysicalBox(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            【必选】
            设置 页面物理区域
            <para>
            左上角为页面坐标系的原点
            
            </para>
            </summary>
            <param name="topLeftX"> 左上角X坐标 </param>
            <param name="topLeftY"> 左上角Y坐标 </param>
            <param name="width">    宽度 </param>
            <param name="height">   高度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.PhysicalBox">
            <summary>
            【必选】
            获取 页面物理区域 左上角为页面坐标系的原点
            </summary>
            <returns> 页面物理区域 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.SetApplicationBox(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box)">
            <summary>
            【可选】
            设置 显示区域
            <para>
            页面内容实际显示或打印输出的区域，位于页面物理区域内，
            包含页眉、页脚、页心等内容
            </para>
            <para>
            [例外处理] 如果显示区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果显示区域完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <param name="applicationBox"> 显示区域 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.SetApplicationBox(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            【可选】
            设置 显示区域
            <para>
            页面内容实际显示或打印输出的区域，位于页面物理区域内，
            包含页眉、页脚、页心等内容
            </para>
            <para>
            [例外处理] 如果显示区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果显示区域完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <param name="topLeftX"> 左上角X坐标 </param>
            <param name="topLeftY"> 左上角Y坐标 </param>
            <param name="width">    宽度 </param>
            <param name="height">   高度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.ApplicationBox">
            <summary>
            【可选】
            获取 显示区域
            <para>
            页面内容实际显示或打印输出的区域，位于页面物理区域内，
            包含页眉、页脚、页心等内容
            </para>
            <para>
            [例外处理] 如果显示区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果显示区域完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <returns> 显示区域 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.setContentBox(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box)">
            <summary>
            【可选】
            设置 版心区域
            <para>
            文件的正文区域，位于显示区域内。
            左上角坐标决定了其在显示区域内的位置
            </para>
            <para>
            [例外处理] 如果版心区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果版心区域完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <param name="contentBox"> 版心区域 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.setContentBox(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            【可选】
            设置 版心区域
            <para>
            文件的正文区域，位于显示区域内。
            左上角坐标决定了其在显示区域内的位置
            </para>
            <para>
            [例外处理] 如果版心区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果版心区域完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <param name="topLeftX"> 左上角X坐标 </param>
            <param name="topLeftY"> 左上角Y坐标 </param>
            <param name="width">    宽度 </param>
            <param name="height">   高度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.ContentBox">
            <summary>
            【可选】
            获取 版心区域
            <para>
            文件的正文区域，位于显示区域内。
            左上角坐标决定了其在显示区域内的位置
            </para>
            <para>
            [例外处理] 如果版心区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果版心区域完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <returns> 版心区域 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.SetBleedBox(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box)">
            <summary>
            【可选】
            设置 出血区域
            <para>
            超出设备性能限制的额外出血区域，位于页面物理区域外。
            不出现时，默认值为页面物理区域
            </para>
            <para>
            [例外处理] 如果出血区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果显示出血完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <param name="bleedBox"> 出血区域 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.SetBleedBox(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            【可选】
            设置 出血区域
            <para>
            超出设备性能限制的额外出血区域，位于页面物理区域外。
            不出现时，默认值为页面物理区域
            </para>
            <para>
            [例外处理] 如果出血区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果显示出血完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <param name="topLeftX"> 左上角X坐标 </param>
            <param name="topLeftY"> 左上角Y坐标 </param>
            <param name="width">    宽度 </param>
            <param name="height">   高度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea.BleedBox">
            <summary>
            【可选】
            获取 出血区域
            <para>
            超出设备性能限制的额外出血区域，位于页面物理区域外。
            不出现时，默认值为页面物理区域
            </para>
            <para>
            [例外处理] 如果出血区域不完全位于页面物理区域内，
            页面物理区域外的部分则被忽略。如果显示出血完全位于页面物理区域外，
            则设置该页为空白页。
            
            </para>
            </summary>
            <returns> 出血区域 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document">
            <summary>
            文档根节点
            Document.xml
            <para>
            ————《GB/T 33190-2016》 图 5
            
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetCommonData(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_CommonData)">
            <summary>
            【必选】
            设置 文档公共数据
            <para>
            定义了页面区域、公共资源
            
            </para>
            </summary>
            <param name="commonData"> 文档公共数据 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.CommonData">
            <summary>
            【必选】
            获取 文档公共数据
            <para>
            定义了页面区域、公共资源
            
            </para>
            </summary>
            <returns> 文档公共数据 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetPages(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Pages)">
            <summary>
            【必选】
            设置 页树
            <para>
            有关页树的描述键 7.6
            
            </para>
            </summary>
            <param name="pages"> 页树 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.Pages">
            <summary>
            【必选】
            获取 页树
            <para>
            有关页树的描述键 7.6
            
            </para>
            </summary>
            <returns> 页树 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetOutlines(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.Outlines)">
            <summary>
            【可选】
            设置 大纲
            </summary>
            <param name="outlines"> 大纲 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.Outlines">
            <summary>
            【可选】
            获取 大纲
            </summary>
            <returns> 大纲 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetPermissions(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission)">
            <summary>
            【可选】
            设置 文档的权限声明
            </summary>
            <param name="permission"> 文档的权限声明 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.Permission">
            <summary>
            【可选】
            获取 文档的权限声明
            </summary>
            <returns> 文档的权限声明 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetActions(Spire.Pdf.General.Paper.Ofd.Core.Action.Actions)">
            <summary>
            【可选】
            设置 文档关联的动作序列
            <para>
            当存在多个 Action 对象时，所有动作依次执行
            
            </para>
            </summary>
            <param name="actions"> 文档关联的动作序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.Actions">
            <summary>
            【可选】
            获取 文档关联的动作序列
            <para>
            当存在多个 Action 对象时，所有动作依次执行
            
            </para>
            </summary>
            <returns> 文档关联的动作序列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetVPreferences(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences)">
            <summary>
            【可选】
            设置 文档的视图首选项
            </summary>
            <param name="vPreferences"> 文档的视图首选项 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.VPreferences">
            <summary>
            【可选】
            获取 文档的视图首选项
            </summary>
            <returns> 文档的视图首选项 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetBookmarks(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Bookmark.Bookmarks)">
            <summary>
            【可选】
            设置 文档的书签集，包含一组书签
            <para>
            7.5 文档根节点 表 5 文档根节点属性
            
            </para>
            </summary>
            <param name="bookmarks"> 文档的书签集 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.Bookmarks">
            <summary>
            【可选】
            获取 文档的书签集，包含一组书签
            <para>
            7.5 文档根节点 表 5 文档根节点属性
            
            </para>
            </summary>
            <returns> 文档的书签集 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetAnnotations(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 指向注释列表的文件
            <para>
            有关注释描述见第 15 章
            
            </para>
            </summary>
            <param name="annotations"> 指向注释列表的文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.Annotations">
            <summary>
            【可选】
            获取 指向注释列表的文件
            <para>
            有关注释描述见第 15 章
            
            </para>
            </summary>
            <returns> 指向注释列表的文件路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetCustomTags(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 指向自定义标引列表文件
            <para>
            有关自定义标引描述见第 16 章
            
            </para>
            </summary>
            <param name="customTags"> 指向自定义标引列表文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.CustomTags">
            <summary>
            【可选】
            获取 指向自定义标引列表文件
            <para>
            有关自定义标引描述见第 16 章
            
            </para>
            </summary>
            <returns> 指向自定义标引列表文件路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetAttachments(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 指向附件列表文件
            <para>
            有关附件描述见第 20 章
            
            </para>
            </summary>
            <param name="attachments"> 指向附件列表文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.Attachments">
            <summary>
            【可选】
            获取 指向附件列表文件
            <para>
            有关附件描述见第 20 章
            
            </para>
            </summary>
            <returns> 指向附件列表文件路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.SetExtensions(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 指向扩展列表文件
            <para>
            有关扩展列表文件见第 17 章
            
            </para>
            </summary>
            <param name="extensions"> 指向扩展列表文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document.Extensions">
            <summary>
            【可选】
            设置 指向扩展列表文件
            <para>
            有关扩展列表文件见第 17 章
            
            </para>
            </summary>
            <returns> 指向扩展列表文件路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission">
            <summary>
            本标准支持设置文档权限声明（Permission）节点，以达到文档防扩散等应用目的。
            文档权限声明结构如 图 9 所示。
            <para>
            7.5 小节 CT_Permission
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.SetEdit(System.Boolean)">
            <summary>
            【可选】
            设置 是否允许编辑
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="edit"> true - 允许编辑； false - 不允许编辑 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.GetEdit">
            <summary>
            【可选】
            获取 是否允许编辑
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> true - 允许编辑； false - 不允许编辑 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.SetAnnot(System.Boolean)">
            <summary>
            【可选】
            设置 是否允许添加或修改标注
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="annot"> true - 允许添加或修改标注； false - 不允许添加或修改标注 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.GetAnnot">
            <summary>
            【可选】
            获取 是否允许添加或修改标注
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> true - 允许添加或修改标注； false - 不允许添加或修改标注 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.SetExport(System.Boolean)">
            <summary>
            【可选】
            设置 是否允许导出
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="export"> true - 允许导出； false - 不允许导出 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.GetExport">
            <summary>
            【可选】
            获取 是否允许导出
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> true - 允许导出； false - 不允许导出 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.SetSignature(System.Boolean)">
            <summary>
            【可选】
            设置 是否允许进行数字签名
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="signature"> true - 允许进行数字签名； false - 不允许进行数字签名 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.GetSignature">
            <summary>
            【可选】
            获取 是否允许进行数字签名
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> true - 允许进行数字签名； false - 不允许进行数字签名 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.SetWatermark(System.Boolean)">
            <summary>
            【可选】
            设置 是否允许添加水印
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="watermark"> true - 允许添加水印； false - 不允许添加水印 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.GetWatermark">
            <summary>
            【可选】
            获取 是否允许添加水印
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> true - 允许添加水印； false - 不允许添加水印 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.SetPrintScreen(System.Boolean)">
            <summary>
            【可选】
            设置 是否允许截屏
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="printScreen"> true - 允许截屏； false - 不允许截屏 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.GetPrintScreen">
            <summary>
            【可选】
            获取 是否允许截屏
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> true - 允许截屏； false - 不允许截屏 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.SetPrint(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.Print)">
            <summary>
            【可选】
            设置 打印权限
            <para>
            具体的权限和份数设置由其属性 Printable 及 Copics 控制。若不设置 Print节点，
            则默认可以打印，并且打印份数不受限制
            
            </para>
            </summary>
            <param name="print"> 打印权限 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.Print">
            <summary>
            【可选】
            获取 打印权限
            <para>
            具体的权限和份数设置由其属性 Printable 及 Copics 控制。若不设置 Print节点，
            则默认可以打印，并且打印份数不受限制
            
            </para>
            </summary>
            <returns> 打印权限 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.SetValidPeriod(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.ValidPeriod)">
            <summary>
            【可选】
            设置 有效期
            <para>
            该文档允许访问的期限，其具体期限取决于开始日期和
            结束日期，其中开始日期不能晚于结束日期，并且开始日期和结束
            日期至少出现一个。当不设置开始日期时，代表不限定开始日期，
            当不设置结束日期时代表不限定结束日期；当此不设置此节点时，
            表示开始和结束日期均不受限
            
            </para>
            </summary>
            <param name="validPeriod"> 有效期 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.CT_Permission.ValidPeriod">
            <summary>
            【可选】
            获取 有效期
            <para>
            该文档允许访问的期限，其具体期限取决于开始日期和
            结束日期，其中开始日期不能晚于结束日期，并且开始日期和结束
            日期至少出现一个。当不设置开始日期时，代表不限定开始日期，
            当不设置结束日期时代表不限定结束日期；当此不设置此节点时，
            表示开始和结束日期均不受限
            
            </para>
            </summary>
            <returns> 有效期 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.Print">
            <summary>
            打印权限
            <para>
            具体的权限和份数设置由其属性 Printable 及 Copics 控制。若不设置 Print节点，
            则默认可以打印，并且打印份数不受限制
            </para>
            <para>
            7.5 图 9 文档权限声明结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.Print.setPrintable(System.Boolean)">
            <summary>
            【可选 必选】
            设置 是否允许被打印
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="printable"> true - 允许被打印； false - 不允许被打印 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.Print.getPrintable">
            <summary>
            【可选 必选】
            获取 是否允许被打印
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> true - 允许被打印； false - 不允许被打印 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.Print.setCopies(System.Int32)">
            <summary>
            【可选 属性】
            设置 打印份数
            <para>
            在 Printable 为 true 时有效，若 Printable 为 true
            并且不设置 Copies 则打印份数不受限，若 Copies 的值为负值时，
            打印份数不受限，当 Copies 的值为 0 时，不允许打印，当 Copies的值
            大于 0 时，则代表实际可打印的份数值。
            </para>
            <para>
            默认值为 -1
            
            </para>
            </summary>
            <param name="copies"> 可打印的份数 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.Print.GetCopies">
            <summary>
            【可选 属性】
            获取 打印份数
            <para>
            在 Printable 为 true 时有效，若 Printable 为 true
            并且不设置 Copies 则打印份数不受限，若 Copies 的值为负值时，
            打印份数不受限，当 Copies 的值为 0 时，不允许打印，当 Copies的值
            大于 0 时，则代表实际可打印的份数值。
            </para>
            <para>
            默认值为 -1
            
            </para>
            </summary>
            <returns> 可打印的份数 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.ValidPeriod">
            <summary>
            有效期
            <para>
            该文档允许访问的期限，其具体期限取决于开始日期和
            结束日期，其中开始日期不能晚于结束日期，并且开始日期和结束
            日期至少出现一个。当不设置开始日期时，代表不限定开始日期，
            当不设置结束日期时代表不限定结束日期；当此不设置此节点时，
            表示开始和结束日期均不受限
            </para>
            <para>
            7.5 图 9 文档权限声明结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.ValidPeriod.setStartDate(System.DateTime)">
            <summary>
            【可选 属性】
            设置 有效期开始日期
            </summary>
            <param name="startDate"> 有效期开始日期 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.ValidPeriod.StartDate">
            <summary>
            【可选 属性】
            获取 有效期开始日期
            </summary>
            <returns> 有效期开始日期 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.ValidPeriod.SetEndDate(System.DateTime)">
            <summary>
            【可选 属性】
            设置 有效期结束日期
            </summary>
            <param name="endDate"> 有效期结束日期 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Permission.ValidPeriod.EndDate">
            <summary>
            【可选 属性】
            获取 有效期结束日期
            </summary>
            <returns> 有效期结束日期 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences">
            <summary>
            视图首选项
            <para>
            本标准支持设置文档视图首选项（VPreferences）节点，以达到限定文档初始化视图
            便于阅读的目的。
            </para>
            <para>
            7.5 图 10 视图首选项结构s
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.SetPageMode(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode)">
            <summary>
            【可选】
            设置 窗口模式
            <para>
            可选的模式列表，请参考 <seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.PageMode"/>
            </para>
            <para>
            默认值为 None
            
            </para>
            </summary>
            <param name="pageMode"> 窗口模式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.PageMode">
            <summary>
            【可选】
            获取 窗口模式
            <para>
            可选的模式列表，请参考 <seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.PageMode"/>
            </para>
            <para>
            默认值为 None
            
            </para>
            </summary>
            <returns> 窗口模式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.SetPageLayout(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageLayout)">
            <summary>
            【可选】
            设置 页面布局模式
            <para>
            可选的模式请参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.PageLayout"/>
            </para>
            <para>
            默认值为 OneColumn
            
            </para>
            </summary>
            <param name="pageLayout"> 页面布局模式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.PageLayout">
            <summary>
            【可选】
            获取 页面布局模式
            <para>
            可选的模式请参考<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.PageLayout"/>
            </para>
            <para>
            默认值为 OneColumn
            
            </para>
            </summary>
            <returns> 页面布局模式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.SetTabDisplay(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.TabDisplay)">
            <summary>
            【可选】
            设置 标题栏显示模式
            <para>
            默认值为 FileName，当设置为 DocTitle但不存在 Title属性时，
            按照 FileName 处理
            
            </para>
            </summary>
            <param name="tabDisplay"> 标题栏显示模式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.TabDisplay">
            <summary>
            【可选】
            获取 标题栏显示模式
            <para>
            默认值为 FileName，当设置为 DocTitle但不存在 Title属性时，
            按照 FileName 处理
            
            </para>
            </summary>
            <returns> 标题栏显示模式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.SetHideToolbar(System.Boolean)">
            <summary>
            【可选】
            设置 是否隐藏工具栏
            <para>
            默认值：false
            
            </para>
            </summary>
            <param name="hideToolbar"> true - 隐藏； false - 不隐藏 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.GetHideToolbar">
            <summary>
            【可选】
            获取 是否隐藏工具栏
            <para>
            默认值：false
            
            </para>
            </summary>
            <returns> true - 隐藏； false - 不隐藏 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.SetHideMenubar(System.Boolean)">
            <summary>
            【可选】
            设置 是否隐藏菜单栏
            <para>
            默认值：false
            
            </para>
            </summary>
            <param name="hideMenubar"> true - 隐藏； false - 不隐藏 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.GetHideMenubar">
            <summary>
            【可选】
            获取 是否隐藏菜单栏
            <para>
            默认值：false
            
            </para>
            </summary>
            <returns> true - 隐藏； false - 不隐藏 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.SetHideWindowUI(System.Boolean)">
            <summary>
            【可选】
            设置 是否隐藏主窗口之外的其他窗口组件
            <para>
            默认值：false
            
            </para>
            </summary>
            <param name="hideMenubar"> true - 隐藏； false - 不隐藏 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.GetHideWindowUI">
            <summary>
            【可选】
            获取 是否隐藏主窗口之外的其他窗口组件
            <para>
            默认值：false
            
            </para>
            </summary>
            <returns> true - 隐藏； false - 不隐藏 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.SetZoomMode(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode)">
            <summary>
            【可选】
            设置 文档自动缩放模式
            <para>
            参考值<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.Type"/>
            
            </para>
            </summary>
            <param name="zoomMode"> 文档自动缩放模式 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.SetZoom(System.Double)">
            <summary>
            【可选】
            设置 文档的缩放率
            </summary>
            <param name="zoom"> 文档的缩放率 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.CT_VPreferences.ZoomScale">
            <summary>
            【可选】
            获取 具体的缩放处理方式和值
            </summary>
            <returns> 具体的缩放处理方式和值 <seealso cref="N:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom"/> 或 <seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode"/> </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageLayout">
            <summary>
            页面布局
            <para>
            7.5 表 9 视图首选项
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageLayout.OnePage">
            <summary>
            单页模式
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageLayout.OneColumn">
            <summary>
            单列模式
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageLayout.TwoPageL">
            <summary>
            对开模式
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageLayout.TwoColumnL">
            <summary>
            对开连续模式
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageLayout.TwoPageR">
            <summary>
            对开靠右模式
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageLayout.TwoColumnR">
            <summary>
            对开连续靠右模式
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode">
            <summary>
            窗口模式
            <para>
            7.5 表 9 视图首选项属性
            </para>
            <para>
            默认值为 None
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.None">
            <summary>
            常规模式
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.FullScreen">
            <summary>
            开开后全文显示
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.UseOutlines">
            <summary>
            同时呈现文档大纲
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.UseThumbs">
            <summary>
            同时呈现缩略图
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.UseCustomTags">
            <summary>
            同时呈现语义结构
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.UseLayers">
            <summary>
            同时呈现图层
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.UseAttatchs">
            <summary>
            同时呈现附件
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.UseBookmarks">
            <summary>
            同时呈现书签
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.PageMode.GetInstance(System.String)">
            <summary>
            获取窗口模式实例
            </summary>
            <param name="mode"> 模式名称 </param>
            <returns> 实例 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.TabDisplay">
            <summary>
            标题栏显示模式
            <para>
            默认值为 FileName，当设置为 DocTitle但不存在 Title属性时，
            按照 FileName 处理
            </para>
            <para>
            7.5 表 9 视图首选项
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.TabDisplay.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.TabDisplay.DocTitle">
            <summary>
            呈现元数据中的 Title 属性
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.Zoom">
            <summary>
            文档的缩放率
            <para>
            7.5 表 9 视图首选项
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.Zoom.SetValue(System.Double)">
            <summary>
            设置  文档的缩放率
            </summary>
            <param name="value"> 文档的缩放率 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.Zoom.GetValue">
            <summary>
            获取 文档的缩放率
            </summary>
            <returns> 文档的缩放率 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode">
            <summary>
            自动缩放模式
            <para>
            默认值为 Default
            </para>
            <para>
            7.5 表 9 视图首选项
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.Type.Default">
            <summary>
            默认缩放
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.Type.FitHeight">
            <summary>
            合适高度
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.Type.FitWidth">
            <summary>
            合适宽度
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.Type.FitRect">
            <summary>
            合适区域
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.GetType">
            <summary>
            获取 自动缩放模式类型
            
            类型参考<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.Type"/>
            </summary>
            <returns> 自动缩放模式类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.GetInstance(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomMode.Type)">
            <summary>
            获取工厂方式枚举的实例
            </summary>
            <param name="type"> 自动缩放模式类型 </param>
            <returns> 自动缩放模式 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Vpreferences.Zoom.ZoomScale">
            <summary>
            缩放比例选择对象基类
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody">
            <summary>
            文件对象入口，可以存在多个，以便在一个文档中包含多个版式文档
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.DOC_ROOT">
            <summary>
            文档根节点文档名称
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.SetDocInfo(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo)">
            <summary>
            【必选】
            设置文档元数据信息描述
            </summary>
            <param name="CTDocInfo"> 文档元数据信息描述 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.DocInfo">
            <summary>
            【必选】
            获取文档元数据信息描述
            </summary>
            <returns> 文档元数据信息描述 或null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.SetDocRoot(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置指向文档根节点文档
            </summary>
            <param name="docRoot"> 指向根节点文档路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.DocRoot">
            <summary>
            【可选】
            获取指向文档根节点文档路径
            </summary>
            <returns> 指向文档根节点文档路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.SetVersions(Spire.Pdf.General.Paper.Ofd.Core.versions.Versions)">
            <summary>
            【可选】
            获取 包含多个版本描述节点，用于定义文件因注释和其他改动产生的版本信息，见第19章
            </summary>
            <param name="versions"> 版本序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.Versions">
            <summary>
            【可选】
            获取 包含多个版本描述序列
            </summary>
            <returns> 包含多个版本描述序列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.SetSignatures(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 指向该文档中签名和签章结构的路径 （见18章）
            </summary>
            <param name="signatures"> 指向该文档中签名和签章结构的路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody.Signatures">
            <summary>
            【可选】
            获取 指向该文档中签名和签章结构的路径
            </summary>
            <returns> 指向该文档中签名和签章结构的路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo">
            <summary>
            文档元数据信息描述
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetDocID(System.Guid)">
            <summary>
            【必选】
            设置文件标识符，标识符应该是一个UUID
            </summary>
            <param name="docID"> UUID文件标识 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.RandomDocID">
            <summary>
            随机产生一个UUID作为文件标识符
            </summary>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.GetDocID">
            <summary>
            【必选】
            采用UUID算法生成的由32个字符组成的文件标识。每个DocID在
            文件创建或生成的时候进行分配。
            </summary>
            <returns> 文件标识符 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetTile(System.String)">
            <summary>
            【可选】
            设置文档标题。标题可以与文件名不同
            </summary>
            <param name="title"> 标题 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.Title">
            <summary>
            【可选】
            获取文档标题。标题可以与文件名不同
            </summary>
            <returns> 档标题 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetAuthor(System.String)">
            <summary>
            【可选】
            设置文档作者
            </summary>
            <param name="author"> 文档作者 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.Author">
            <summary>
            【可选】
            获取文档作者
            </summary>
            <returns> 文档作者 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetSubject(System.String)">
            <summary>
            【可选】
            设置文档主题
            </summary>
            <param name="subject"> 文档主题 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.Subject">
            <summary>
            【可选】
            获取文档主题
            </summary>
            <returns> 文档主题 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetAbstract(System.String)">
            <summary>
            【可选】
            设置文档摘要与注释
            </summary>
            <param name="abstractTxt"> 文档摘要与注释 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.Abstract">
            <summary>
            【可选】
            获取文档摘要与注释
            </summary>
            <returns> 文档摘要与注释 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetCreationDate(System.DateTime)">
            <summary>
            【可选】
            设置文件创建日期
            </summary>
            <param name="creationDate"> 文件创建日期 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.GetCreationDate">
            <summary>
            【可选】
            获取文件创建日期
            </summary>
            <returns> 创建日期 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetModDate(System.DateTime)">
            <summary>
            【可选】
            设置文档最近修改日期
            </summary>
            <param name="modDate"> 文档最近修改日期 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.GetModDate">
            <summary>
            【可选】
            获取文档最近修改日期
            </summary>
            <returns> 文档最近修改日期 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetDocUsage(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.DocUsage)">
            <summary>
            【可选】
            文档分类，可取值如下：
            <para>
            Normal——普通文档
            </para>
            <para>
            EBook——电子书
            </para>
            <para>
            ENewsPaper——电子报纸
            </para>
            <para>
            EMagzine——电子期刊
            </para>
            <para>
            默认值为 Normal
            
            </para>
            </summary>
            <param name="docUsage"> 文档分类 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.DocUsages">
            <summary>
            【可选】
            获取文档分类
            <para>
            默认值为 Normal
            
            </para>
            </summary>
            <returns> 文档分类 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetCover(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置文档封面，此路径指向一个图片文件
            </summary>
            <param name="cover"> 文档封面路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.Cover">
            <summary>
            【可选】
            获取文档封面，此路径指向一个图片文件
            </summary>
            <returns> 文档封面路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetKeywords(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.Keywords)">
            <summary>
            【可选】
            设置关键词集合
            每一个关键词用一个"Keyword"子节点来表达
            </summary>
            <param name="keywords"> 关键词集合 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.AddKeyword(System.String)">
            <summary>
            添加关键词
            </summary>
            <param name="keyword"> 关键词 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.Keywords">
            <summary>
            【可选】
            获取关键词集合
            </summary>
            <returns> 关键词集合或null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetCreator(System.String)">
            <summary>
            【可选】
            设置创建文档的应用程序
            </summary>
            <param name="creator"> 创建文档的应用程序 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.Creator">
            <summary>
            【可选】
            获取创建文档的应用程序
            </summary>
            <returns> 创建文档的应用程序或null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetCreatorVersion(System.String)">
            <summary>
            【可选】
            设置创建文档的应用程序版本信息
            </summary>
            <param name="creatorVersion"> 创建文档的应用程序版本信息 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.CreatorVersion">
            <summary>
            【可选】
            获取创建文档的应用程序版本信息
            </summary>
            <returns> 创建文档的应用程序版本信息或null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.SetCustomDatas(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomDatas)">
            <summary>
            【可选】
            设置用户自定义元数据集合。其子节点为 CustomData
            </summary>
            <param name="customDatas"> 用户自定义元数据集合 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CT_DocInfo.CustomDatas">
            <summary>
            【可选】
            获取用户自定义元数据集合。其子节点为 CustomData
            </summary>
            <returns> 用户自定义元数据集合 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomData">
            <summary>
            用户自定义元数据，可以指定一个名称及其对应的值
            
            @author 权观宇
            @since 2019-10-01 07:38:27
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomData.#ctor(System.String,System.String)">
            <summary>
            自定元数据
            </summary>
            <param name="name">  元数据名称 </param>
            <param name="value"> 元数据值 </param>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomData.DataName">
            <summary>
            【必选】
            获取元数据名称
            <para>
            默认获取第一个属性作为元数据名称
            
            </para>
            </summary>
            <returns> 元数据名称(Name) </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomData.setDataName(System.String)">
            <summary>
            【必选 属性】
            设置元数据名称 </summary>
            <param name="name"> 元数据名称(Name) </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomData.Value">
            <summary>
            获取元数据值
            </summary>
            <returns> 元数据值 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomData.SetValue(System.String)">
            <summary>
            设置元数据的值
            </summary>
            <param name="value"> 元数据值 </param>
            <returns> this </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomDatas">
            <summary>
            用户自定义元数据集合。其子节点为 CustomData
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomDatas.AddCustomData(System.String,System.String)">
            <summary>
            【必选】
            增加用户自定义元数据
            </summary>
            <param name="name">  用户自定义元数据名称 </param>
            <param name="value"> 用户自定义元数据值 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomDatas.AddCustomData(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomData)">
            <summary>
            【必选】
            增加用户自定义元数据
            </summary>
            <param name="customData"> 用户自定义元数据 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomDatas.GetCustomDatas">
            <summary>
            【必选】
            获取自定义元数据集合
            </summary>
            <returns> 自定义元数据集合 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.CustomDatas.GetCustomDataValue(System.String)">
            <summary>
            获取用户自定义元数据值
            </summary>
            <param name="name"> 元数据名称 </param>
            <returns> 元数据值 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.DocUsage">
            <summary>
            文档分类
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.DocUsage.Normal">
            <summary>
            普通文档
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.DocUsage.EBook">
            <summary>
            电子书
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.DocUsage.ENewsPaper">
            <summary>
            电子报纸
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.DocUsage.EMagzine">
            <summary>
            电子期刊
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.DocUsage.GetInstance(System.String)">
             <summary>
            *
             获取文档分类示例
             
             默认值： Normal </summary>
             <param name="usage"> 文档分类值 </param>
             <returns> 实例 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.Keywords">
            <summary>
            关键词集合，每一个关键词用一个"Keyword"子节点来表达
            <para>
            表 4 文档元数据属性
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.Keywords.AddKeyword(System.String)">
            <summary>
            【必选】
            增加关键字
            </summary>
            <param name="keyword"> 关键字 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocInfo.Keywords.GetKeywords">
            <summary>
            @Date 2021 04 20 19 15
            @return
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD">
            <summary>
            主入口
            <para>
            OFD.xml
            ————《GB/T 33190-2016》 图 3
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.VERSION">
            <summary>
            【必选】
            文件格式的版本号
            <para>
            固定值： 1.0kd
            </para>
            <para>
            参照表 3
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.DOC_TYPE">
            <summary>
            【必选】
            文件格式子集类型，取值为"OFD"，表明此文件符合本标准。
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.#ctor(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody})">
            <summary>
            文件对象入口列表创建文档对象
            </summary>
            <param name="docBodies"> 文件对象入口序列 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.#ctor(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody)">
            <summary>
            文件对象入口创建文档对象
            </summary>
            <param name="docBody"> 文件对象入口 </param>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.Version">
            <summary>
            【必选 属性】文件格式版本号，取值为"1.0"
            </summary>
            <returns> 文件格式版本号 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.DocType">
            <summary>
            【必选 属性】文件格式子集类型，取值为"OFD"，表明此文件符合本标准。
            </summary>
            <returns> OFD </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.AddDocBody(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody)">
            <summary>
            【必选】增加文件对象入口。
            文件对象入口，可以存在多个，以便在一个文档中包含多个版式文档
            </summary>
            <param name="docBody"> 文件对象入口 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.DocBody">
            <summary>
            【必选】 获取第一个文档入口
            </summary>
            <returns> 文件对象入口（如果有多个则获取第一个） </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.GetDocBody(System.Int32)">
            <summary>
            获取指定序号的文档
            </summary>
            <param name="num"> 文档序号，从0起 </param>
            <returns> 文件对象入口（如果有多个则获取第一个） </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD.DocBodies">
            <summary>
            获取所有文档入口
            </summary>
            <returns> 所有文档入口 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem">
            <summary>
            大纲节点
            <para>
            图 19 大纲节点结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.SetTitle(System.String)">
            <summary>
            【必选 属性】
            设置 大纲节点标题
            </summary>
            <param name="title"> 大纲节点标题 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.Title">
            <summary>
            【必选 属性】
            获取 大纲节点标题
            </summary>
            <returns> 大纲节点标题 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.SetCount(System.Int32)">
            <summary>
            【可选 属性】
            设置 该节点下所有叶节点的数目参考值
            <para>
            应该根据该节点下实际出现的子节点数为准
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="count"> 该节点下所有叶节点的数目参考值 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.GetCount">
            <summary>
            【可选 属性】
            获取 该节点下所有叶节点的数目参考值
            <para>
            应该根据该节点下实际出现的子节点数为准
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 该节点下所有叶节点的数目参考值 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.SetExpanded(System.Boolean)">
            <summary>
            【可选 属性】
            在有子节点存在时有效，如果为 true，
            表示该大纲在初始状态下展开子节点；
            如果为 false，则表示不展开
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="expanded"> true - 展开； false - 不展开 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.GetExpanded">
            <summary>
            【可选 属性】
            在有子节点存在时有效，如果为 true，
            表示该大纲在初始状态下展开子节点；
            如果为 false，则表示不展开
            <para>
            默认值为 true
            
            </para>
            </summary>
            <returns> true - 展开； false - 不展开 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.SetActions(Spire.Pdf.General.Paper.Ofd.Core.Action.Actions)">
            <summary>
            【可选】
            设置 当此大纲节点被激活时执行的动作序列
            </summary>
            <param name="actions"> 动作序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.Actions">
            <summary>
            【可选】
            获取 当此大纲节点被激活时执行的动作序列
            </summary>
            <returns> 动作序列，可能为null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.AddOutlineElem(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem)">
            <summary>
            【可选】
            增加 大纲子节点
            <para>
            该节点的子大纲节点。层层嵌套，形成树状结构
            
            </para>
            </summary>
            <param name="outlineElem"> 大纲子节点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem.OutlineElems">
            <summary>
            【可选】
            获取 该大纲下所有子节点
            <para>
            该节点的子大纲节点。层层嵌套，形成树状结构
            
            </para>
            </summary>
            <returns> 该大纲下所有子节点 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.Outlines">
            <summary>
            大纲按照树形结构进行组织
            <para>
            图 18 大纲节点结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.Outlines.AddOutlineElem(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.CT_OutlineElem)">
            <summary>
            【必选】
            增加 大纲节点
            </summary>
            <param name="outlineElem"> 大纲节点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Outlines.Outlines.OutlineElems">
            <summary>
            @Date 2021 04 20 19 13
            @return
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Content">
            <summary>
            页面内容描述，该节点不存在是，表示空白页面
            <para>
            7.7 页面对象 表 12
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Content.AddLayer(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.CT_Layer)">
            <summary>
            【必选】
            增加 层节点
            <para>
            一页可以包含一个或多个层
            </para>
            <para>
            注意：每个加入的层节点必须设置 ID属性。
            
            </para>
            </summary>
            <param name="layer"> 层节点 </param>
            <returns> this </returns>
            <exception cref="!:IllegalArgumentException"> 加入的图层对象（CT_Layer）没有设置ID属性 </exception>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Content.Layers">
            <summary>
            【必选】
            获取 层节点列表
            <para>
            一页可以包含一个或多个层
            </para>
            <para>
            注意：每个加入的层节点必须设置 ID属性。
            
            </para>
            </summary>
            <returns> 层节点 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage">
            <summary>
            模板页
            <para>
            ————《GB/T 33190-2016》 图 14
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage.SetID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【必选 属性】
            设置 模板页的标识符，不能与已有标识符重复
            </summary>
            <param name="id"> 模板页的标识符 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage.ID">
            <summary>
            【必选 属性】
            获取 模板页的标识符，不能与已有标识符重复
            </summary>
            <returns> 模板页的标识符 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage.SetTemplatePageName(System.String)">
            <summary>
            【可选 属性】
            设置 模板页名称
            </summary>
            <param name="name"> 模板页名称 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage.GetTemplatePageName">
            <summary>
            【可选 属性】
            获取 模板页名称
            </summary>
            <returns> 模板页名称 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage.SetZOrder(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type)">
            <summary>
            【可选 属性】
            设置 模板页的默认视图类型
            <para>
            其类型描述和呈现顺序与 Layer中 Type的描述和处理一致，见表 15
            如果页面引用的多个模板的次属性相同，则应根据引用的顺序来显示
            先引用者先绘制
            </para>
            <para>
            默认值为 Background
            
            </para>
            </summary>
            <param name="zOrder"> 模板页的默认视图类型 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage.ZOrder">
            <summary>
            【可选 属性】
            获取 模板页的默认视图类型
            <para>
            其类型描述和呈现顺序与 Layer中 Type的描述和处理一致，见表 15
            如果页面引用的多个模板的次属性相同，则应根据引用的顺序来显示
            先引用者先绘制
            </para>
            <para>
            默认值为 Background
            
            </para>
            </summary>
            <returns> 模板页的默认视图类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage.SetBaseLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选 属性】
            设置 指向模板页内容描述文件 路径
            </summary>
            <param name="baseLoc"> 指向模板页内容描述文件 路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.CT_TemplatePage.BaseLoc">
            <summary>
            【可选 属性】
            获取 指向模板页内容描述文件 路径
            </summary>
            <returns> 指向模板页内容描述文件 路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.CompositeObject">
            <summary>
            复合对象
            <para>
            见 第 13 章
            </para>
            <para>
            7.7 表 16
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.CompositeObject.SetID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【必选 属性】
            设置 对象ID
            </summary>
            <param name="id"> 对象ID </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.CompositeObject.ID">
            <summary>
            【必选 属性】
            获取 对象ID
            </summary>
            <returns> 对象ID </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.CompositeObject.SetResourceID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用资源文件中定义的矢量图像标识
            </summary>
            <param name="resourceId"> 引用资源文件中定义的矢量图像标识 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.CompositeObject.GetResourceID">
            <summary>
            【必选 属性】
            设置 引用资源文件中定义的矢量图像标识
            </summary>
            <returns> 引用资源文件中定义的矢量图像标识 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.CT_PageBlock">
            <summary>
            页块结构
            <para>
            可以嵌套
            </para>
            <para>
            7.7 页对象 图 17 表 16
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.CT_PageBlock.AddPageBlock(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType)">
            <summary>
            【可选】
            增加 页块
            <para>
            一个页块中可以嵌套其他页块，可含有0到多个页块
            
            </para>
            </summary>
            <param name="pageBlock"> 页块实例 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.CT_PageBlock.PageBlocks">
            <summary>
            【可选】
            获取 当前页块内的所有页块
            <para>
            一个页块中可以嵌套其他页块，可含有0到多个页块
            </para>
            <para>
            Tip： 从列表取出的元素可以使用<code>instanceof</code> 判断元素的类型
            
            </para>
            </summary>
            <returns> 当前页块内的所有页块 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.ImageObject">
            <summary>
            图像对象
            <para>
            见 10
            </para>
            <para>
            带有播放视频动作时，见第 12 章
            </para>
            <para>
            7.7 表 16
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.ImageObject.SetID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【必选 属性】
            设置 对象ID
            </summary>
            <param name="id"> 对象ID </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.ImageObject.ID">
            <summary>
            【必选 属性】
            获取 对象ID
            </summary>
            <returns> 对象ID </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.PathObject">
            <summary>
            图形对象
            <para>
            见 9.1
            </para>
            <para>
            7.7 表 16
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.PathObject.SetID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【必选 属性】
            设置 对象ID
            </summary>
            <param name="id"> 对象ID </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.PathObject.ID">
            <summary>
            【必选 属性】
            获取 对象ID
            </summary>
            <returns> 对象ID </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.TextObject">
            <summary>
            文字对象
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.TextObject.#ctor(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <param name="id"> 对象ID </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.TextObject.#ctor(System.Int64)">
            <param name="id"> 对象ID </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.TextObject.SetID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【必选 属性】
            设置 对象ID
            </summary>
            <param name="id"> 对象ID </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.TextObject.ID">
            <summary>
            【必选 属性】
            获取 对象ID
            </summary>
            <returns> 对象ID </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.CT_Layer.SetType(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type)">
            <summary>
            【可选 属性】
            设置 层类型描述
            <para>
            默认值为 Body
            
            </para>
            </summary>
            <param name="type"> 层类型 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.CT_Layer.Type">
            <summary>
            【可选 属性】
            获取 层类型描述
            <para>
            默认值为 Body
            
            </para>
            </summary>
            <returns> 层类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.CT_Layer.SetDrawParam(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 图层的绘制参数，引用资源文件总定义的绘制参数标识
            </summary>
            <param name="drawParam"> 资源文件总定义的绘制参数标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.CT_Layer.DrawParam">
            <summary>
            【可选 属性】
            获取 图层的绘制参数，引用资源文件总定义的绘制参数标识
            </summary>
            <returns> 资源文件总定义的绘制参数标识，null表示不存在 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType">
            <summary>
            用于表示页块类型的接口
            <para>
            逻辑层面表示
            </para>
            </summary>
        </member>
        <!-- 对于成员“T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type”忽略有格式错误的 XML 注释 -->
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type.Foreground">
            <summary>
            前景层
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type.Body">
            <summary>
            正文层
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type.Background">
            <summary>
            背景层
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type.GetInstance(System.String)">
            <summary>
            获取图层类型实例
            </summary>
            <param name="type"> 图层类型字符串 </param>
            <returns> 图层类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type.Order">
            <summary>
            获取图层次序
            </summary>
            <returns> 图层次序 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page">
            <summary>
            页对象
            <para>
            页对象支持模板页描述，每一页经常要重复显示的内容可统一在模板页中描述，
            文档可以包含多个模板页。通过使用模板页可以使重复显示的内容不必出现在
            描述每一页的页面描述内容中，而只需通过 Template 节点进行应用。
            </para>
            <para>
            7.7 图 13 页对象结构；表 12 页对象属性
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.SetArea(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.CT_PageArea)">
            <summary>
            【可选】
            设置 页面区域的大小和位置，仅对该页面有效。
            <para>
            该节点不出现时则使用模板页中的定义，如果模板页不存在或模板页中
            没有定义页面区域，则使用文件 CommonData 中的定义。
            
            </para>
            </summary>
            <param name="area"> 页面区域的大小和位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.Area">
            <summary>
            【可选】
            获取 页面区域的大小和位置，仅对该页面有效。
            <para>
            该节点不出现时则使用模板页中的定义，如果模板页不存在或模板页中
            没有定义页面区域，则使用文件 CommonData 中的定义。
            
            </para>
            </summary>
            <returns> 页面区域的大小和位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.AddTemplate(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Template)">
            <summary>
            【可选】
            设置 页面使用的模板页
            <para>
            模板页的内容和结构与普通页相同，定义在 CommonData
            指定的 XML 文件中。一个页可以使用多个模板页。该节点
            使用是通过 TemplateID 来引用具体模板，并通过 ZOrder
            属性来控制模板在页面中的显示顺序。
            </para>
            <para>
            注：在模板页的内容描述中该属性无效。
            
            </para>
            </summary>
            <param name="template"> 页面使用的模板页 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.SetTemplate(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Template)">
            <param name="template"> 模板 </param>
            <returns> this </returns>
            @deprecated <seealso cref="!:addTemplate(Template)"/> 
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.Templates">
            <summary>
            【可选】
            获取 页面使用的模板页
            <para>
            模板页的内容和结构与普通页相同，定义在 CommonData
            指定的 XML 文件中。一个页可以使用多个模板页。该节点
            使用是通过 TemplateID 来引用具体模板，并通过 ZOrder
            属性来控制模板在页面中的显示顺序。
            </para>
            <para>
            注：在模板页的内容描述中该属性无效。
            
            </para>
            </summary>
            <returns> 页面使用的模板页 </returns>
            <summary>
            @Date 2021 04 20 19 11
            @return
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.Template">
            <returns> 页面使用的模板页(第一个) </returns>
            @deprecated <seealso cref="!:getTemplates()"/> 
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.AddPageRes(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 页资源
            <para>
            指向该页使用的资源文件
            
            </para>
            </summary>
            <param name="pageRes"> 页资源路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.PageResList">
            <summary>
            【可选】
            获取 页资源
            <para>
            指向该页使用的资源文件
            
            </para>
            </summary>
            <returns> 页资源路径列表
            @Date 2021 04 20 19 04 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.SetContent(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Content)">
            <summary>
            【可选】
            设置 页面内容描述，该节点不存在时，标识空白页
            </summary>
            <param name="content"> 页面内容 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.Content">
            <summary>
            【可选】
            获取 页面内容描述，该节点不存在时，标识空白页
            </summary>
            <returns> 页面内容 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.SetActions(Spire.Pdf.General.Paper.Ofd.Core.Action.Actions)">
            <summary>
            【可选】
            设置 与页面关联的动作序列。
            <para>
            当存在多个 Action对象时，所有动作依次执行。
            </para>
            <para>
            动作列表的动作与页面关联，事件类型为 PO（页面打开，见表 52 事件类型）
            
            </para>
            </summary>
            <param name="actions"> 动作序列 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page.Actions">
            <summary>
            【可选】
            设置 与页面关联的动作序列。
            <para>
            当存在多个 Action对象时，所有动作依次执行。
            </para>
            <para>
            动作列表的动作与页面关联，事件类型为 PO（页面打开，见表 52 事件类型）
            
            </para>
            </summary>
            <returns> 动作序列 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Template">
            <summary>
            页面使用的模板页
            <para>
            模板页的内容和结构与普通页相同，定义在 CommonData
            指定的 XML 文件中。一个页可以使用多个模板页。该节点
            使用是通过 TemplateID 来引用具体模板，并通过 ZOrder
            属性来控制模板在页面中的显示顺序。
            </para>
            <para>
            注：在模板页的内容描述中该属性无效。
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Template.SetTemplateID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用在文档共用数据（CommonData）中定义的模板标识符
            </summary>
            <param name="templateId"> 引用在文档共用数据（CommonData）中定义的模板标识符 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Template.TemplateID">
            <summary>
            【必选 属性】
            获取 引用在文档共用数据（CommonData）中定义的模板标识符
            </summary>
            <returns> 引用在文档共用数据（CommonData）中定义的模板标识符 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Template.SetZOrder(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Type)">
            <summary>
            【可选 属性】
            设置 模板在页面中的呈现顺序
            <para>
            控制模板在页面中的呈现顺序，其类型描述和呈现顺序与Layer中Type的描述和处理一直。
            </para>
            <para>
            如果多个图层的此属性相同，则应根据其出现的顺序来显示，先出现者先绘制
            </para>
            <para>
            默认值为 Background
            
            </para>
            </summary>
            <param name="zOrder"> 模板在页面中的呈现顺序 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Template.ZOrder">
            <summary>
            【可选 属性】
            获取 模板在页面中的呈现顺序
            <para>
            控制模板在页面中的呈现顺序，其类型描述和呈现顺序与Layer中Type的描述和处理一直。
            </para>
            <para>
            如果多个图层的此属性相同，则应根据其出现的顺序来显示，先出现者先绘制
            </para>
            <para>
            默认值为 Background
            
            </para>
            </summary>
            <returns> 模板在页面中的呈现顺序 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Page">
            <summary>
            页节点
            <para>
            7.6 页树 表 11 页树属性
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Page.#ctor(System.Int64,System.String)">
            <param name="id"> 对象ID </param>
            <param name="baseLoc"> 页面内容位置 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Page.SetID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【必选 属性】
            设置 页的标识符，不能与已有标识重复
            </summary>
            <param name="id"> 页的标识符 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Page.ID">
            <summary>
            【必选 属性】
            获取 页的标识符，不能与已有标识重复
            </summary>
            <returns> 页的标识符 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Page.SetBaseLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选 属性】
            设置 页对象描述文件
            </summary>
            <param name="baseLoc"> 页对象描述文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Page.BaseLoc">
            <summary>
            【必选 属性】
            获取 页对象描述文件
            </summary>
            <returns> 页对象描述文件路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Pages">
            <summary>
            页树
            <para>
            图 12 页树结构
            
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Pages.AddPage(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Page)">
            <summary>
            【必选】
            增加 叶节点
            <para>
            一个页树中可以包含一个或多个叶节点，页顺序是
            根据页树进行前序遍历时叶节点的顺序。
            
            </para>
            </summary>
            <param name="page"> 叶节点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Pages.Size">
            <summary>
            获取页面数量
            </summary>
            <returns> 页面数量 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Pages.GetPages">
            <summary>
            【必选】
            获取 叶节点序列
            <para>
            一个页树中可以包含一个或多个叶节点，页顺序是
            根据页树进行前序遍历时叶节点的顺序。
            
            </para>
            </summary>
            <returns> 叶节点序列 （大于等于 1） </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageTree.Pages.GetPageByIndex(System.Int32)">
            <summary>
            获取指定页面 </summary>
            <param name="index"> 页面索引（页码 - 1） </param>
            <returns> 页节点 </returns>
        </member>
        <!-- 对于成员“T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.CT_MultiMedia”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.CT_MultiMedia.SetType(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.MediaType)">
            <summary>
            【必选 属性】
            设置 多媒体类型
            <para>
            支持位图图像、视频、音频
            
            </para>
            </summary>
            <param name="type"> 多媒体类型 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.CT_MultiMedia.Type">
            <summary>
            【必选 属性】
            获取 多媒体类型
            <para>
            支持位图图像、视频、音频
            
            </para>
            </summary>
            <returns> 多媒体类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.CT_MultiMedia.SetFormat(System.String)">
            <summary>
            【可选 属性】
            设置 资源的格式
            <para>
            支持 BMP、JPEG、PNG、TIFF及AVS等格式，其中TIFF格式不支持多页
            
            </para>
            </summary>
            <param name="format"> 资源的格式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.CT_MultiMedia.Format">
            <summary>
            【可选 属性】
            获取 资源的格式
            <para>
            支持 BMP、JPEG、PNG、TIFF及AVS等格式，其中TIFF格式不支持多页
            
            </para>
            </summary>
            <returns> 资源的格式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.CT_MultiMedia.SetMediaFile(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            设置 指向 OFD包内的多媒体文件位置
            </summary>
            <param name="mediaFile"> 指向 OFD包内的多媒体文件位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.CT_MultiMedia.MediaFile">
            <summary>
            【必选】
            获取 指向 OFD包内的多媒体文件位置
            </summary>
            <returns> 指向 OFD包内的多媒体文件位置 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.MediaType">
            <summary>
            多媒体格式。
            <para>
            7.9 资源 图 21 表 19
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.MediaType.Image">
            <summary>
            位图图像
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.MediaType.Audio">
            <summary>
            音频
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.MediaType.Video">
            <summary>
            视频
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.OFDResource">
            <summary>
            资源文件抽象类型
            <para>
            用于代指：绘制参数、颜色空间、字形、图像、音视频等资源的都为资源类型。
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res">
            <summary>
            资源
            <para>
            资源是绘制图元时所需数据（如绘制参数、颜色空间、字形、图像、音视频等）的集合。
            在页面中出现的资源数据内容都保存在容器的特定文件夹内，但其索引信息保存在资源文件中。
            一个文档可能包含一个或多个资源文件。资源根据作用范围分为公共资源和页资源，公共资源文件
            在文档根节点中进行制定，页资源文件在页对象中进行制定。
            </para>
            <para>
            7.9 资源 图 20
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res.SetBaseLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选 属性】
            设置 此资源文件的通用数据存储路径。
            <para>
            BaseLoc属性的意义在于明确资源文件存储位置，
            比如 R1.xml 中可以指定 BaseLoc为"./Res"，
            表明该资源文件中所有数据文件的默认存储位置在
            当前路径的 Res 目录下。
            
            </para>
            </summary>
            <param name="baseLoc"> 此资源文件的通用数据存储路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res.BaseLoc">
            <summary>
            【必选 属性】
            获取 此资源文件的通用数据存储路径。
            <para>
            BaseLoc属性的意义在于明确资源文件存储位置，
            比如 R1.xml 中可以指定 BaseLoc为"./Res"，
            表明该资源文件中所有数据文件的默认存储位置在
            当前路径的 Res 目录下。
            
            </para>
            </summary>
            <returns> 此资源文件的通用数据存储路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res.AddResource(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.OFDResource)">
            <summary>
            【可选】
            添加 资源
            <para>
            一个资源文件可描述0到多个资源
            
            </para>
            </summary>
            <param name="resource"> 资源 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res.Fonts">
            <summary>
            获取字体资源文件
            </summary>
            <returns> 字体资源列表 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res.Resources">
            <summary>
            【可选】
            获取 资源列表
            <para>
            一个资源文件可描述0到多个资源
            </para>
            <para>
            tip：可以使用<code>instanceof</code>判断是哪一种资源
            
            </para>
            </summary>
            <returns> 资源列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.ColorSpaces">
            <summary>
            包含了一组颜色空间的描述
            <para>
            7.9 图 20 表 18
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.ColorSpaces.AddColorSpace(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.ColorSpace.CT_ColorSpace)">
            <summary>
            【必选】
            增加  颜色空间描述
            <para>
            必须要有ID属性
            
            </para>
            </summary>
            <param name="colorSpace"> 颜色空间描述，必须要有ID属性 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.ColorSpaces.GetColorSpaces">
            <summary>
            【必选】
            获取  颜色空间描述列表
            </summary>
            <returns> 颜色空间描述列表 </returns>
        </member>
        <!-- 对于成员“T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.CompositeGraphicUnits”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.CompositeGraphicUnits.AddCompositeGraphicUnit(Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG)">
            <summary>
            【必选】
            增加 矢量图像资源描述
            <para>
            必须要有ID属性
            
            </para>
            </summary>
            <param name="compositeGraphicUnit"> 矢量图像资源描述 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.CompositeGraphicUnits.GetCompositeGraphicUnits">
            <summary>
            【必选】
            获取 矢量图像资源描述序列
            <para>
            必须要有ID属性
            
            </para>
            </summary>
            <returns> 矢量图像资源描述 </returns>
        </member>
        <!-- 对于成员“T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.DrawParams”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.DrawParams.addDrawParam(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.DrawParam.CT_DrawParam)">
            <summary>
            【必选】
            增加 绘制参数描述
            <para>
            必须要有ID属性
            
            </para>
            </summary>
            <param name="drawParam"> 绘制参数描述 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.DrawParams.GetDrawParams">
            <summary>
            【必选】
            获取 绘制参数描述序列
            </summary>
            <returns> 绘制参数描述 </returns>
        </member>
        <!-- 对于成员“T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.Fonts”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.Fonts.AddFont(Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font)">
            <summary>
            【必选】
            添加 字形描述
            <para>
            必须要有ID属性
            
            </para>
            </summary>
            <param name="font"> 字形描述 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.Fonts.GetFonts">
            <summary>
            【必选】
            获取 字形描述序列
            <para>
            必须要有ID属性
            
            </para>
            </summary>
            <returns> 字形描述 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.MultiMedias">
            <summary>
            包含了一组文档所有多媒体的描述
            <para>
            7.9 图 20 表 18
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.MultiMedias.AddMultiMedia(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.CT_MultiMedia)">
            <summary>
            【必选】
            增加 多媒体资源描述
            <para>
            必须含有ID属性
            
            </para>
            </summary>
            <param name="multiMedia"> 多媒体资源描述 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Resources.MultiMedias.GetMultiMedias">
            <summary>
            【必选】
            获取 多媒体资源描述列表
            <para>
            必须含有ID属性
            
            </para>
            </summary>
            <returns> 多媒体资源描述 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicType.STBase">
            <summary>
            简单类型基类，用于提供便捷的方法实例化元素
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.STBase.GetElement(System.String)">
            <summary>
            使用简单类型创建一个指定名称的元素
            </summary>
            <param name="name"> 指定名称 </param>
            <returns> 简单类型元素 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.STBase.Fmt(System.Double)">
            <summary>
            如果浮点数为整数，则省略小数 </summary>
            <param name="d"> 浮点数 </param>
            <returns> 没有小数点的整数字符串 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array">
            <summary>
            数组，以空格来分割元素。元素可以是除ST_Loc、
            ST_Array外的数据类型，不可嵌套
            <para>
            示例：
            <code>1 2.0 5.0</code>
            </para>
            <para>
            ————《GB/T 33190-2016》 表 2 基本数据类型
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array.array">
            <summary>
            元素收容
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array.UnitCTM">
            <summary>
            获取一个单位矩阵变换参数
            </summary>
            <returns> 单位CTM举证 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array.MtxMul(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            矩阵相乘
            </summary>
            <param name="array"> 矩阵数组 </param>
            <returns> 相乘后的结果矩阵 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array.GetInstance(System.String)">
            <summary>
            获取 ST_Array 实例如果参数非法则返还null
            </summary>
            <param name="arrStr"> 数字字符串 </param>
            <returns> 实例 或 null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array.Size">
            <summary>
            数组长度
            </summary>
            <returns> 数组长度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array.ToMtx">
            <summary>
            反序列化为矩阵数组
            </summary>
            <returns> 矩阵 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box">
            <summary>
            矩形区域，以空格分割，前两个值代表了该矩形的
            左上角的坐标，后两个值依次表示该矩形的宽和高，
            可以是整数或者浮点数，后两个值应大于0
            <para>
            示例：
            <code>10 10 50 50</code>
            </para>
            <para>
            ————《GB/T 33190-2016》 表 2 基本数据类型
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box.topLeftX">
            <summary>
            左上角 x坐标
            <para>
            从左 到 右
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box.topLeftY">
            <summary>
            左上角 y坐标
            <para>
            从上 到 下
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box.width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box.height">
            <summary>
            高度
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box.#ctor(System.Object[])">
            <summary>
            通用构造
            </summary>
            <param name="arr"> 任意类型可序列化参数 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box.GetInstance(System.String)">
            <summary>
            获取 ST_Box 实例如果参数非法则返还null
            </summary>
            <param name="arrStr"> 数字字符串 </param>
            <returns> 实例 或 null </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box.TopLeftPos">
            <summary>
            获取左上角坐标定点
            </summary>
            <returns> 左上角坐标 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID">
            <summary>
            标识，无符号整数，应在文档内唯一。0标识无效标识符
            <para>
            示例：
            <code>1000</code>
            </para>
            <para>
            ————《GB/T 33190-2016》 表 2 基本数据类型
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID.id">
            <summary>
            标识符，默认为无符号标识符
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID.GetInstance(System.String)">
            <summary>
            获取 ST_ID 实例如果参数非法则返还null
            </summary>
            <param name="idStr"> ID字符串 </param>
            <returns> 实例 或 null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID.Ref">
            <summary>
            获取引用ID </summary>
            <returns> 引用ID </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc">
            <summary>
            包结构内文件的路径，"."表示当前路径，".."表示符路径
            <para>
            约定：
            1. "、"代表根节点；
            2. 未显示指定代表当前路径；
            3. 路径区分大小写
            </para>
            <para>
            示例：
            <code>
            /Pages/P1/Content.xml
            ./Res/Book1.jpg
            ../Pages/P1/Res.xml
            Pages/P1/Rcs.xml
            </code>
            ————《GB/T 33190-2016》 表 2 基本数据类型
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.loc">
            <summary>
            路径
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.GetInstance(System.String)">
            <summary>
            获取路径实例
            </summary>
            <param name="loc"> 路径字符串 </param>
            <returns> 实例或null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.GetInstance(Spire.Pdf.General.Paper.Ofd.Core.OfdXmlElement)">
            <summary>
            从实例中获取 路径
            </summary>
            <param name="e"> 元素 </param>
            <returns> 路径对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.Split">
            <summary>
            路径分割
            </summary>
            <returns> 各个子路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.Parent">
            <summary>
            获取父母路径
            </summary>
            <returns> 父母路径字符串 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.FileName">
            <summary>
            获取路径的文件名称
            </summary>
            <returns> 文件名称 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.Cat(System.String)">
            <summary>
            路径拼接
            </summary>
            <param name="p2"> 路径对象 </param>
            <returns> 拼接后路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.Cat(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            路径拼接
            </summary>
            <param name="loc"> 路径对象 </param>
            <returns> 拼接后路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc.EndWith(System.String)">
            <summary>
            是否以指定字符结尾
            </summary>
            <param name="suffix"> 指定字符 </param>
            <returns> true 指定字符结尾；false 不以指定字符结尾 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos">
            <summary>
            点坐标，以格分割，前者为 x值，后者为 y值，可以是整数或浮点数
            <para>
            示例：
            <code>0 0</code>
            </para>
            <para>
            ————《GB/T 33190-2016》 表 2 基本数据类型
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos.x">
            <summary>
            X坐标
            <para>
            从左 到 右
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos.y">
            <summary>
            y坐标
            <para>
            从上 到 下
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos.GetInstance(System.String)">
            <summary>
            获取 ST_Pos 实例如果参数非法则返还null
            </summary>
            <param name="arrStr"> 数字字符串 </param>
            <returns> 实例 或 null </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID">
            <summary>
            标识符引用，无符号整数，此标识符应为文档内已定义的标识符
            <para>
            示例：
            <code>1000</code>
            </para>
            <para>
            ————《GB/T 33190-2016》 表 2 基本数据类型
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID.GetInstance(System.String)">
            <summary>
            获取 ST_RefID 实例如果参数非法则返还null
            </summary>
            <param name="idStr"> 被引用的ID字符串 </param>
            <returns> 实例 或 null </returns>
        </member>
        <!-- 对于成员“T:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.Content”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“T:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_Composite”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_Composite.toObj(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            构造复合对象
            </summary>
            <param name="id"> 对象ID </param>
            <returns> 对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_Composite.SetResourceID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用资源文件中定义的矢量图像的标识
            <para>
            复合对象引用的资源时 Res 中的矢量图像（CompositeGraphUnit）
            ，其类型为 CT_VectorG，其结构如 72 所示
            
            </para>
            </summary>
            <param name="resourceId"> 引用资源文件中定义的矢量图像的标识ID </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_Composite.ResourceID">
            <summary>
            【必选 属性】
            获取 引用资源文件中定义的矢量图像的标识
            <para>
            复合对象引用的资源时 Res 中的矢量图像（CompositeGraphUnit）
            ，其类型为 CT_VectorG，其结构如 72 所示
            
            </para>
            </summary>
            <returns> 引用资源文件中定义的矢量图像的标识ID </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG">
            <summary>
            矢量图像
            <para>
            复合对象引用的资源时 Res 中的矢量图像（CompositeGraphUnit）
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.SetWidth(System.Nullable{System.Double})">
            <summary>
            【必选 属性】
            设置 矢量图像的宽度
            <para>
            超出部分做裁剪处理
            
            </para>
            </summary>
            <param name="width"> 矢量图像的宽度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.Width">
            <summary>
            【必选 属性】
            获取 矢量图像的宽度
            <para>
            超出部分做裁剪处理
            
            </para>
            </summary>
            <returns> 矢量图像的宽度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.SetHeight(System.Nullable{System.Double})">
            <summary>
            【必选 属性】
            设置 矢量图像的高度
            <para>
            超出部分做裁剪处理
            
            </para>
            </summary>
            <param name="height"> 矢量图像的高度 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.Height">
            <summary>
            【必选 属性】
            获取 矢量图像的高度
            <para>
            超出部分做裁剪处理
            
            </para>
            </summary>
            <returns> 矢量图像的高度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.SetThumbnail(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选】
            设置 缩略图
            <para>
            指向包内的图像文件
            
            </para>
            </summary>
            <param name="thumbnail"> 缩略图路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.Thumbnail">
            <summary>
            【可选】
            获取 缩略图
            <para>
            指向包内的图像文件
            
            </para>
            </summary>
            <returns> 缩略图路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.SetSubstitution(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选】
            设置 替换图像
            <para>
            用于高分辨率输出时将缩略图替换为此高分辨率的图像
            指向包内的图像文件
            
            </para>
            </summary>
            <param name="substitution"> 替换图像 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.Substitution">
            <summary>
            【可选】
            获取 替换图像
            <para>
            用于高分辨率输出时将缩略图替换为此高分辨率的图像
            指向包内的图像文件
            
            </para>
            </summary>
            <returns> 替换图像 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.SetContent(Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.Content)">
            <summary>
            【必选】
            设置 内容的矢量描述
            </summary>
            <param name="content"> 内容的矢量描述 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.AddContent(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType)">
            <summary>
            【必选】
            增加 内容的矢量描述
            </summary>
            <param name="blockType"> 内容的矢量描述 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.CompositeObj.CT_VectorG.Content">
            <summary>
            【必选】
            获取 内容的矢量描述
            </summary>
            <returns> 内容的矢量描述 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag">
            <summary>
            自定义标引入口
            <para>
            16 图 82 表 63
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag.setTypeID(System.String)">
            <summary>
            【必选】
            设置 自定义标引内容节点使用的类型标识
            </summary>
            <param name="typeId"> 自定义标引内容节点使用的类型标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag.TypeID">
            <summary>
            【必选】
            获取 自定义标引内容节点使用的类型标识
            </summary>
            <returns> 自定义标引内容节点使用的类型标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag.setNameSpace(System.String)">
            <summary>
            设置 命名空间
            <para>
            附录 A.9 CustomTags.xsd
            
            </para>
            </summary>
            <param name="nameSpace"> 命名空间 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag.NameSpace">
            <summary>
            获取 命名空间
            <para>
            附录 A.9 CustomTags.xsd
            
            </para>
            </summary>
            <returns> 命名空间 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag.setSchemaLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 指向自定义标引内容节点适用的Schema文件
            </summary>
            <param name="schemaLoc"> 指向自定义标引内容节点适用的Schema文件 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag.SchemaLoc">
            <summary>
            【可选】
            获取 指向自定义标引内容节点适用的Schema文件
            </summary>
            <returns> 指向自定义标引内容节点适用的Schema文件 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag.SetFileLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            设置 指向自定义标引文件
            
            这类文件中通过"非接触方式"引用版式内容流中的图元和相关信息
            </summary>
            <param name="fileLoc"> 指向自定义标引文件 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag.FileLoc">
            <summary>
            【必选】
            设置 指向自定义标引文件
            
            这类文件中通过"非接触方式"引用版式内容流中的图元和相关信息
            </summary>
            <returns>  指向自定义标引文件 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTags">
            <summary>
            自定义标引
            <para>
            外部系统或用户可以添加自定义标记和信息，从而达到与其他系统、数据
            进行交互的目的并扩展应用。一个文档可以带有多个自定义标引。
            </para>
            <para>
            自定义标引列表的入口点在 7.5 文档根节点中定义。
            </para>
            <para>
            标引索引文件，标引文件中通过ID引用于被引用标引对象
            发生"非接触式（分离式）"关联。标引内容可任意扩展，
            但建议给出扩展内容的规范约束文件（schema）或命名空间。
            
            16 图 82 表 63
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTags.AddCustomTag(Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTag)">
            <summary>
            【可选】
            增加 自定义标引入口
            </summary>
            <param name="customTag">  自定义标引入口 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.customTags.CustomTags.GetCustomTags">
            <summary>
            【可选】
            获取 自定义标引入口列表
            </summary>
            <returns>  自定义标引入口列表 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Exceptions.OfdException.#ctor">
            <summary>
            Initializes object by default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Exceptions.OfdException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Exceptions.OfdException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object by specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Exceptions.ParseException.#ctor">
            <summary>
            Initializes object with default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Exceptions.ParseException.#ctor(System.Exception)">
            <summary>
            Initializes object with default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Exceptions.ParseException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Exceptions.ParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object with specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension">
            <summary>
            扩展信息节点
            <para>
            17 扩展信息 图 83 表 6
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.setAppName(System.String)">
            <summary>
            【必选 属性】
            设置 用于生成或解释该自定义对象数据的扩展应用程序名称
            </summary>
            <param name="appName"> 用于生成或解释该自定义对象数据的扩展应用程序名称 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.AppName">
            <summary>
            【必选 属性】
            获取 用于生成或解释该自定义对象数据的扩展应用程序名称
            </summary>
            <returns> 用于生成或解释该自定义对象数据的扩展应用程序名称 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.setCompany(System.String)">
            <summary>
            【可选 属性】
            设置 形成此扩展信息的软件厂商标识
            </summary>
            <param name="company"> 形成此扩展信息的软件厂商标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.Company">
            <summary>
            【可选 属性】
            获取 形成此扩展信息的软件厂商标识
            </summary>
            <returns> 形成此扩展信息的软件厂商标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.setAppVersion(System.String)">
            <summary>
            【可选 属性】
            设置 形成此扩展信息的软件版本
            </summary>
            <param name="appVersion"> 形成此扩展信息的软件版本 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.AppVersion">
            <summary>
            【可选 属性】
            获取 形成此扩展信息的软件版本
            </summary>
            <returns> 形成此扩展信息的软件版本 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.setDate(System.DateTime)">
            <summary>
            【可选 属性】
            设置 形成此扩展信息的日期时间
            </summary>
            <param name="date"> 形成此扩展信息的日期时间 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.Date">
            <summary>
            【可选 属性】
            获取 形成此扩展信息的日期时间
            </summary>
            <returns> 形成此扩展信息的日期时间 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.setRefId(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 引用扩展项针对的文档项目的标识
            </summary>
            <param name="refId"> 引用扩展项针对的文档项目的标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.RefId">
            <summary>
            【可选 属性】
            获取 引用扩展项针对的文档项目的标识
            </summary>
            <returns> 引用扩展项针对的文档项目的标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.addProperty(Spire.Pdf.General.Paper.Ofd.Core.extensions.Property)">
            <summary>
            【必选 属性】
            增加 属性
            </summary>
            <param name="property"> 属性 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.Propertys">
            <summary>
            【必选 属性】
            获取 属性列表
            </summary>
            <returns> 属性列表 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.addExtendData(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            增加 扩展数据文件所在位置
            <para>
            用于扩展大量信息
            
            </para>
            </summary>
            <param name="extendData"> 扩展数据文件所在位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.ExtendDatas">
            <summary>
            @Date 2021 04 20 19 07
            @return
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.AddData(Spire.Pdf.General.Paper.Ofd.Core.OfdXmlElement)">
            <summary>
            【必选】
            增加 扩展复杂属性
            <para>
            使用xs:anyType，用于较复杂的扩展
            
            </para>
            </summary>
            <param name="data"> 扩展复杂属性 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension.Datas">
            <summary>
            【必选】
            获取 扩展复杂属性序列
            <para>
            使用xs:anyType，用于较复杂的扩展
            
            </para>
            </summary>
            <returns> 扩展复杂属性序列 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.extensions.Extensions">
            <summary>
            扩展信息
            <para>
            扩展信息列表的入口文件在 7.5 文档根节点中定义。
            扩展信息列表文件的根节点名为 Extensions，其下
            由 0 到多个扩展信息节点（Extension）组成，扩展
            信息列表的根节点结构如图 83 所示。
            
            </para>
            <para>
            17 扩展信息 图 83 表 64
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.Extensions.addExtension(Spire.Pdf.General.Paper.Ofd.Core.extensions.CT_Extension)">
            <summary>
            【可选】
            增加 扩展信息节点
            </summary>
            <param name="extension"> 扩展信息节点 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.Extensions.GetExtensions">
            <summary>
            【可选】
            获取 扩展信息节点序列
            </summary>
            <returns> 扩展信息节点 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.extensions.Property">
            <summary>
            扩展信息
            <para>
            "Name Type Value" 的数值组，用于简单的扩展
            </para>
            <para>
            17 扩展信息 图 83 表 6
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.Property.setExtensionName(System.String)">
            <summary>
            【必选 属性】
            设置 扩展属性名称
            </summary>
            <param name="name"> 扩展属性名称 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.Property.ExtensionName">
            <summary>
            【必选 属性】
            获取 扩展属性名称
            </summary>
            <returns> 扩展属性名称 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.Property.setType(System.String)">
            <summary>
            【可选 属性】
            设置 扩展属性值类型
            </summary>
            <param name="type"> 扩展属性值类型 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.Property.Type">
            <summary>
            【可选 属性】
            获取 扩展属性值类型
            </summary>
            <returns> 扩展属性值类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.extensions.Property.SetValue(System.String)">
            <summary>
            【必选】
            设置 属性值
            </summary>
            <param name="value"> 属性值 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.extensions.Property.Value">
            <summary>
            【必选】
            获取 属性值
            </summary>
            <returns> 属性值 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData">
            <summary>
            图形轮廓数据
            <para>
            由一系列的紧缩的操作符和操作数构成
            </para>
            <para>
            9.1 表 35 36
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.dataQueue">
            <summary>
            绘制数据队列
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.Parse(System.String)">
            <summary>
            解析字符串构造数据队列
            </summary>
            <param name="txt"> 紧缩字符串 </param>
            <returns> 数据队列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.Flush">
            <summary>
            刷新元素
            <para>
            默认情况下，每次调用C都将会刷新元素内容
            
            </para>
            </summary>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.DefineStart(System.Double,System.Double)">
            <summary>
            定义自绘制图形边线的起始点坐标 （x，y）
            </summary>
            <param name="x"> 目标点 x </param>
            <param name="y"> 目标点 y </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.MoveTo(System.Double,System.Double)">
            <summary>
            当前点移动到制定点（x，y）
            </summary>
            <param name="x"> 目标点 x </param>
            <param name="y"> 目标点 y </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.LineTo(System.Double,System.Double)">
            <summary>
            从当前点连接一条指定点（x，y）的线段，并将当前点移动到制定点
            </summary>
            <param name="x"> 目标点 x </param>
            <param name="y"> 目标点 y </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.QuadraticBezier(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            从当前点连接一条到点（x2，y2）的二次贝塞尔曲线，
            并将当前点移动到点（x2，y2），此贝塞尔曲线使用
            点（x1，y1）作为其控制点
            </summary>
            <param name="x1"> 控制点 x </param>
            <param name="y1"> 控制点 y </param>
            <param name="x2"> 目标点 x </param>
            <param name="y2"> 目标点 y </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.CubicBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            从当前点连接一条到点（x3，y3）的三次贝塞尔曲线，
            并将当前点移动到点（x3，y3），此贝塞尔曲线使用点
            （x1，y1）和点（x2，y2）作为控制点
            </summary>
            <param name="x1"> 控制点 x1 </param>
            <param name="y1"> 控制点 y1 </param>
            <param name="x2"> 控制点 x2 </param>
            <param name="y2"> 控制点 y2 </param>
            <param name="x3"> 目标点 x3 </param>
            <param name="y3"> 目标点 y3 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.Arc(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            从当前点连接到点（x，y）的圆弧，并将当前点移动到点（x，y）。
            rx 表示椭圆的长轴长度，ry 表示椭圆的短轴长度。angle 表示
            椭圆在当前坐标系下旋转的角度，正值为顺时针，负值为逆时针，
            large 为 1 时表示对应度数大于180°的弧，为 0 时表示对应
            度数小于 180°的弧。sweep 为 1 时表示由圆弧起始点到结束点
            是顺时针旋转，为 0 时表示由圆弧起始点到结束点是逆时针旋转。
            </summary>
            <param name="rx">    椭圆长轴长度 </param>
            <param name="ry">    椭圆短轴长度 </param>
            <param name="angle"> 旋转角度，正值顺时针，负值逆时针 </param>
            <param name="large"> 1 时表示对应度数大于 180°的弧，0 时表示对应度数小于 180°的弧 </param>
            <param name="sweep"> sweep 为 1 时表示由圆弧起始点到结束点是顺时针旋转，为 0 时表示由圆弧起始点到结束点是逆时针旋转。 </param>
            <param name="x">     目标点 x </param>
            <param name="y">     目标点 y </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.Close">
            <summary>
            SubPath 自动闭合，表示将当前点和 SubPath 的起始点用线段直连连接
            </summary>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.Undo">
            <summary>
            撤销上一步操作
            </summary>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.ToString">
            <summary>
            序列化为操作序列
            </summary>
            <returns> 操作序列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData.Clone">
            <summary>
            复制路径对象
            </summary>
            <returns> 复制之后的路径对象 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path">
            <summary>
            图形对象
            <para>
            图形对象具有一般图元的一切属性和行为特征。
            </para>
            <para>
            9.1 图形对象 图 46  表 35
            
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.ToObj(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            构造路径对象
            </summary>
            <param name="id"> 对象ID </param>
            <returns> 对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.SetStroke(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 图形是否被沟边
            </summary>
            <param name="stroke"> true - 沟边；false - 不勾边 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.GetStroke">
            <summary>
            【可选 属性】
            获取 图形是否被沟边
            </summary>
            <returns> true - 沟边；false - 不勾边 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.SetFill(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 图形是否被填充
            </summary>
            <param name="fill"> true - 填充； false - 不填充 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.GetFill">
            <summary>
            【可选 属性】
            获取 图形是否被填充
            </summary>
            <returns> true - 填充； false - 不填充 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.SetRule(Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.Rule)">
            <summary>
            【可选 属性】
            设置  图形的填充规则
            <para>
            当 Fill 属性存在时出现，可选值参考 <seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.Rule"/>
            </para>
            <para>
            默认值为 NonZero
            
            </para>
            </summary>
            <param name="rule"> 图形的填充规则 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.Rule">
            <summary>
            【可选 属性】
            获取 图形的填充规则
            <para>
            当 Fill 属性存在时出现，可选值参考 <seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.Rule"/>
            </para>
            <para>
            默认值为 NonZero
            
            </para>
            </summary>
            <returns> 图形的填充规则 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.SetStrokeColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【可选】
            设置 沟边颜色
            <para>
            默认为黑色
            
            </para>
            </summary>
            <param name="strokeColor"> 沟边颜色，颜色定义请参考 8.3.2 基本颜色 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.GetStrokeColor">
            <summary>
            【可选】
            获取 沟边颜色
            <para>
            默认为黑色
            </para>
            </summary>
            <returns> 沟边颜色，null表示为黑色，颜色定义请参考 8.3.2 基本颜色 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.SetFillColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【可选】
            设置 填充颜色
            <para>
            默认为透明色
            
            </para>
            </summary>
            <param name="fillColor"> 填充颜色，颜色定义请参考 8.3.2 基本颜色 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.GetFillColor">
            <summary>
            【可选】
            获取 填充颜色
            <para>
            默认为透明色
            
            </para>
            </summary>
            <returns> 填充颜色，颜色定义请参考 8.3.2 基本颜色 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.SetAbbreviatedData(Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.AbbreviatedData)">
            <summary>
            【必选】
            设置 图形轮廓数据
            <para>
            由一系列紧缩的操作符和操作数构成
            
            </para>
            </summary>
            <param name="abbreviatedData"> 图形轮廓数据 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.CT_Path.GetAbbreviatedData">
            <summary>
            【必选】
            获取 图形轮廓数据
            <para>
            由一系列紧缩的操作符和操作数构成
            
            </para>
            </summary>
            <returns> 图形轮廓数据字符串 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.FillColor">
            <summary>
            填充颜色
            <para>
            9.1 表 35
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.Rule">
            <summary>
            图形的填充规则
            <para>
            9.1 表 35 图形对象描述
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.PathObj.StrokeColor">
            <summary>
            勾边颜色
            <para>
            9.1 表 35
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Area">
            <summary>
            区域由一系列的分路径（Area）组成，每个路径都是闭合的
            <para>
            图 49 区域结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Area.setStart(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 定义字图形的起始点坐标
            </summary>
            <param name="start"> 定义字图形的起始点坐标 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Area.Start">
            <summary>
            【必选 属性】
            获取 定义字图形的起始点坐标
            </summary>
            <returns> 定义字图形的起始点坐标 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Area.addCommand(Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Command)">
            <summary>
            【必选】
            增加 绘制指令
            <para>
            移动点、画线、画圆弧等
            
            </para>
            </summary>
            <param name="command"> 绘制指令 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Area.Next(Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Command)">
            <summary>
            连续绘制
            </summary>
            <param name="command"> 绘制指令 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Area.Commands">
            <summary>
            【必选】
            获取 绘制指令序列（顺序决定了绘制图形）
            <para>
            移动点、画线、画圆弧等
            
            </para>
            </summary>
            <returns> 绘制指令序列 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Region">
            <summary>
            图形也可以使用 XML 负载类型的方式进行描述，这种方式主要用于
            区域（Region）。区域由一系列的分路径（Area）组成，每个路径都是闭合的.
            <para>
            图 49 区域结构	/// </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Region.AddArea(Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Area)">
            <summary>
            【必选】
            为区域增加分路径
            </summary>
            <param name="area"> 路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.CT_Region.Areas">
            <summary>
            【必选】
            获取 区域中所有分路径
            </summary>
            <returns> 区域中所有分路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc">
            <summary>
            圆弧
            <para>
            图 56圆弧的结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.setSweepDirection(System.Boolean)">
            <summary>
            【必选 属性】
            设置 弧线方向是否顺时针
            <para>
            true 表示由圆弧起始点到结束点是顺时针，false 表示由圆弧起始点到结束点是逆时针
            </para>
            <para>
            对于经过坐标系上指定两点，给定旋转角度和长短轴长度的椭圆，满足条件的可能有 2 个，
            对应的圆弧有 4 条，通过 LargeArc 属性可以排除 2 条，次属性从剩余的 2 条圆弧中确定
            一条
            
            </para>
            </summary>
            <param name="sweepDirection"> true - 由圆弧起始点到结束点是顺时针;false - 由圆弧起始点到结束点是逆时针 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.getSweepDirection">
            <summary>
            【必选 属性】
            获取 弧线方向是否顺时针
            <para>
            true 表示由圆弧起始点到结束点是顺时针，false 表示由圆弧起始点到结束点是逆时针
            </para>
            <para>
            对于经过坐标系上指定两点，给定旋转角度和长短轴长度的椭圆，满足条件的可能有 2 个，
            对应的圆弧有 4 条，通过 LargeArc 属性可以排除 2 条，次属性从剩余的 2 条圆弧中确定
            一条
            
            </para>
            </summary>
            <returns> true - 由圆弧起始点到结束点是顺时针;false - 由圆弧起始点到结束点是逆时针 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.setLargeArc(System.Boolean)">
            <summary>
            【必选 属性】
            设置 是否是大圆弧
            <para>
            true 表示此线型对应的位角度大于 180°的弧，false 表示对应度数小于 180°的弧
            </para>
            <para>
            对于一个给定长、短轴的椭圆以及起始点和结束点，有一大一小两条圆弧，
            如果所描述线型恰好为 180°的弧，此属性的值不被参考，可由 SweepDirection 属性确定圆弧形状
            
            </para>
            </summary>
            <param name="largeArc"> true - 此线型对应的位角度大于 180°的弧；false - 对应度数小于 180°的弧 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.getLargeArc">
            <summary>
            【必选 属性】
            获取 是否是大圆弧
            <para>
            true 表示此线型对应的位角度大于 180°的弧，false 表示对应度数小于 180°的弧
            </para>
            <para>
            对于一个给定长、短轴的椭圆以及起始点和结束点，有一大一小两条圆弧，
            如果所描述线型恰好为 180°的弧，此属性的值不被参考，可由 SweepDirection 属性确定圆弧形状
            
            </para>
            </summary>
            <returns> true - 此线型对应的位角度大于 180°的弧；false - 对应度数小于 180°的弧 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.setRotationAngle(System.Double)">
            <summary>
            【必选 属性】
            设置 按 EllipseSize 绘制的椭圆在当前坐标系下旋转的角度，
            正值为顺时针，负值为逆时针
            <para>
            [异常处理] 如果角度大于 360°，则以 360°取模
            
            </para>
            </summary>
            <param name="rotationAngle"> 绘制的椭圆在当前坐标系下旋转的角度，正值为顺时针，负值为逆时针 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.getRotationAngle">
            <summary>
            【必选 属性】
            获取 按 EllipseSize 绘制的椭圆在当前坐标系下旋转的角度，
            正值为顺时针，负值为逆时针
            <para>
            [异常处理] 如果角度大于 360°，则以 360°取模
            
            </para>
            </summary>
            <returns> 绘制的椭圆在当前坐标系下旋转的角度，正值为顺时针，负值为逆时针 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.setEllipseSize(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【必选 属性】
            设置 长短轴
            <para>
            形如[200 100]的数组，2个浮点数值一次对应椭圆的长、短轴长度，较大的一个为长轴
            </para>
            <para>
            [异常处理]如果数组长度超过 2，则只取前两个数值
            </para>
            <para>
            [异常处理]如果数组长度为 1，则认为这是一个园，该数值为圆的半径
            </para>
            <para>
            [异常处理]如果数组前两个数值中有一个为 0，或者数组为空，则圆弧退化为一条从当前点
            到 EndPoint的线段
            </para>
            <para>
            [异常处理]
            
            </para>
            </summary>
            <param name="ellipseSize"> 形如[200 100]的数组，2个浮点数值一次对应椭圆的长、短轴长度，较大的一个为长轴 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.setEllipseSize(System.Double[])">
            <summary>
            【必选 属性】
            设置 长短轴
            <para>
            形如[200 100]的数组，2个浮点数值一次对应椭圆的长、短轴长度，较大的一个为长轴
            </para>
            <para>
            [异常处理]如果数组长度超过 2，则只取前两个数值
            </para>
            <para>
            [异常处理]如果数组长度为 1，则认为这是一个园，该数值为圆的半径
            </para>
            <para>
            [异常处理]如果数组前两个数值中有一个为 0，或者数组为空，则圆弧退化为一条从当前点
            到 EndPoint的线段
            </para>
            <para>
            [异常处理]
            
            </para>
            </summary>
            <param name="sizes"> 长短轴参数 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.EllipseSize">
            <summary>
            【必选 属性】
            获取 长短轴
            <para>
            形如[200 100]的数组，2个浮点数值一次对应椭圆的长、短轴长度，较大的一个为长轴
            </para>
            <para>
            [异常处理]如果数组长度超过 2，则只取前两个数值
            </para>
            <para>
            [异常处理]如果数组长度为 1，则认为这是一个园，该数值为圆的半径
            </para>
            <para>
            [异常处理]如果数组前两个数值中有一个为 0，或者数组为空，则圆弧退化为一条从当前点
            到 EndPoint的线段
            </para>
            <para>
            [异常处理]
            
            </para>
            </summary>
            <returns> 形如[200 100]的数组，2个浮点数值一次对应椭圆的长、短轴长度，较大的一个为长轴 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.SetEndPoint(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 圆弧结束点，下一个路径起点
            <para>
            不能与当前的绘制点为同一位置
            
            </para>
            </summary>
            <param name="endPoint"> 圆弧结束点，下一个路径起点 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.SetEndPoint(System.Double,System.Double)">
            <summary>
            【必选 属性】
            设置 圆弧结束点，下一个路径起点
            <para>
            不能与当前的绘制点为同一位置
            
            </para>
            </summary>
            <param name="x"> X坐标 </param>
            <param name="y"> Y坐标 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Arc.EndPoint">
            <summary>
            【必选 属性】
            设置 圆弧结束点，下一个路径起点
            <para>
            不能与当前的绘制点为同一位置
            
            </para>
            </summary>
            <returns> 圆弧结束点，下一个路径起点 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Close">
            <summary>
            自动闭合到当前路径的起始点，并以该点为当前点
            <para>
            表 37 图形对象描述方法
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Command">
            <summary>
            路径操作
            
            表 37 图形对象描述方法，如：移动、划线等
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.CubicBezier">
            <summary>
            三次贝塞尔曲线
            <para>
            图 53 三次贝塞尔曲线结构
            </para>
            <para>
            三次贝塞尔曲线公式
            <code>
               B(t) = (1-t)^3(P0) + 3t(1-t)^2(P1) + 3t^2(1-t)(P2) + t^3(P3) t∈[0,1]
            </code>
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.CubicBezier.SetPoint1(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 三次贝塞尔曲线的第一个控制点
            </summary>
            <param name="point1"> 三次贝塞尔曲线的第一个控制点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.CubicBezier.Point1">
            <summary>
            【必选 属性】
            获取 三次贝塞尔曲线的第以个控制点
            </summary>
            <returns> 三次贝塞尔曲线的第一个控制点 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.CubicBezier.SetPoint2(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 三次贝塞尔曲线的第二个控制点
            </summary>
            <param name="point2"> 三次贝塞尔曲线的第二个控制点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.CubicBezier.Point2">
            <summary>
            【必选 属性】
            获取 三次贝塞尔曲线的第二个控制点
            </summary>
            <returns> 三次贝塞尔曲线的第二个控制点 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.CubicBezier.setPoint3(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 三次贝塞尔曲线的结束点，下一路径的起始点
            </summary>
            <param name="point3"> 三次贝塞尔曲线的结束点，下一路径的起始点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.CubicBezier.Point3">
            <summary>
            【必选 属性】
            获取 三次贝塞尔曲线的结束点，下一路径的起始点
            </summary>
            <returns> 三次贝塞尔曲线的结束点，下一路径的起始点 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Line">
            <summary>
            线段
            <para>
            图 51 线段结构
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Line.SetPoint1(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 线段的结束点
            </summary>
            <param name="point1"> 线段的结束点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Line.Point1">
            <summary>
            【必选 属性】
            获取 线段的结束点
            </summary>
            <returns> 线段的结束点 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Move">
            <summary>
            移动节点
            <para>
            用于表示到新的绘制点指令
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Move.SetPoint1(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 移动后新的当前绘制点
            </summary>
            <param name="pint1"> 移动后新的当前绘制点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.Move.Point1">
            <summary>
            【必选 属性】
            获取 移动后新的当前绘制点
            </summary>
            <returns> 移动后新的当前绘制点 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.QuadraticBezier">
            <summary>
            二次贝塞尔曲线结构
            <para>
            图 52 二次贝塞尔曲线结构
            
            二次贝塞尔曲线公式
            <code>
                B(t) = (1 - t)^2 + 2t(1 - t)(P1) + t^2(P2)
                t ∈ [0,1]
            </code>
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.QuadraticBezier.setPoint1(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 二次贝塞尔曲线的控制点
            </summary>
            <param name="point1"> 二次贝塞尔曲线的控制点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.QuadraticBezier.Point1">
            <summary>
            【必选 属性】
            获取 二次贝塞尔曲线的控制点
            </summary>
            <returns> 二次贝塞尔曲线的控制点 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.QuadraticBezier.SetPoint2(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos)">
            <summary>
            【必选 属性】
            设置 二次贝塞尔曲线的结束点
            </summary>
            <param name="point2"> 二次贝塞尔曲线的结束点 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Graph.Tight.method.QuadraticBezier.Point2">
            <summary>
            【必选 属性】
            获取 二次贝塞尔曲线的结束点
            </summary>
            <returns> 二次贝塞尔曲线的结束点 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Image.Border">
            <summary>
            图像边框
            <para>
            10 表 43
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.SetLineWidth(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 边框线宽
            <para>
            如果为 0 则表示边框不进行绘制
            </para>
            <para>
            默认值为 0.353 mm
            
            </para>
            </summary>
            <param name="lineWidth"> 边框线宽 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.LineWidth">
            <summary>
            【可选 属性】
            获取 边框线宽
            <para>
            如果为 0 则表示边框不进行绘制
            </para>
            <para>
            默认值为 0.353 mm
            
            </para>
            </summary>
            <returns> 边框线宽 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.SetHorizonalCornerRadius(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 边框水平角半径
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="horizonalCornerRadius"> 边框水平角半径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.HorizonalCornerRadius">
            <summary>
            【可选 属性】
            获取 边框水平角半径
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 边框水平角半径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.SetVerticalCornerRadius(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 边框垂直角半径
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="verticalCornerRadius"> 边框垂直角半径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.VerticalCornerRadius">
            <summary>
            【可选 属性】
            获取 边框垂直角半径
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 边框垂直角半径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.SetDashOffset(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 边框虚线重复样式开始的位置
            <para>
            边框的起点位置为左上角，绕行方向为顺时针
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="dashOffset"> 边框虚线重复样式开始的位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.DashOffset">
            <summary>
            【可选 属性】
            获取 边框虚线重复样式开始的位置
            <para>
            边框的起点位置为左上角，绕行方向为顺时针
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 边框虚线重复样式开始的位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.SetDashPattern(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【属性 可选】
            设置 边框虚线重复样式
            <para>
            边框的起点位置为左上角，绕行方向为顺时针
            
            </para>
            </summary>
            <param name="dashPattern"> 边框虚线重复样式 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.DashPattern">
            <summary>
            【属性 可选】
            获取 边框虚线重复样式
            <para>
            边框的起点位置为左上角，绕行方向为顺时针
            
            </para>
            </summary>
            <returns> 边框虚线重复样式 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.SetBorderColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【可选】
            设置 边框颜色
            <para>
            有关边框颜色描述见 8.3.2 基本颜色
            </para>
            <para>
            默认为黑色
            
            </para>
            </summary>
            <param name="borderColor"> 边框颜色 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.Border.GetBorderColor">
            <summary>
            【可选】
            获取 边框颜色
            <para>
            有关边框颜色描述见 8.3.2 基本颜色
            </para>
            <para>
            默认为黑色
            
            </para>
            </summary>
            <returns> 边框颜色，null表示为黑色 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Image.BorderColor">
            <summary>
            边框颜色
            <para>
            有关边框颜色描述见 8.3.2 基本颜色
            </para>
            <para>
            默认为黑色
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image">
            <summary>
            图像
            <para>
            10 图像 图 57 表 43
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.SetResourceID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用资源文件的定义多媒体的标识
            </summary>
            <param name="resourceId"> 引用资源文件的定义多媒体的标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.ResourceID">
            <summary>
            【必选 属性】
            设置 引用资源文件的定义多媒体的标识
            </summary>
            <returns> 引用资源文件的定义多媒体的标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.SetSubstitution(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 可替换图像
            <para>
            引用资源文件中定义的多媒体的标识，由于某些情况
            如高分辨率输出进行图像替换
            
            </para>
            </summary>
            <param name="substitution"> 可替换图像标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.Substitution">
            <summary>
            【可选 属性】
            获取 可替换图像引用
            <para>
            引用资源文件中定义的多媒体的标识，由于某些情况
            如高分辨率输出进行图像替换
            
            </para>
            </summary>
            <returns> 可替换图像标识引用 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.SetImageMask(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【可选 属性】
            设置 图像蒙版
            <para>
            引用资源文件中定义的多媒体的标识，用作蒙板的图像应是
            与 ResourceID 指向的图像相同大小的二值图
            
            </para>
            </summary>
            <param name="imageMask"> 图像蒙版资源引用 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.ImageMask">
            <summary>
            【可选 属性】
            获取 图像蒙版资源引用
            <para>
            引用资源文件中定义的多媒体的标识，用作蒙板的图像应是
            与 ResourceID 指向的图像相同大小的二值图
            
            </para>
            </summary>
            <returns> 图像蒙版资源引用 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.SKDetBorder(Spire.Pdf.General.Paper.Ofd.Core.Image.Border)">
            <summary>
            【可选】
            设置 图像边框
            </summary>
            <param name="border"> 图像边框 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.ToObj(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            构造图片对象
            </summary>
            <param name="id"> 对象ID </param>
            <returns> 对象 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Image.CT_Image.Border">
            <summary>
            【可选】
            设置 图像边框
            </summary>
            <returns> 图像边框 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.OFDCommonQName">
            <summary>
            OFD通用  qualified name
            <para>
            只要名称相同并且命名空间前缀保持一致就认为是同一种  qualified name
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDCommonQName.#ctor(System.String)">
            <param name="name"> OFD元素名称 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDCommonQName.Equals(System.Object)">
            <summary>
            Name相同并且，只要符合命名空间前缀相同那么
            那么认定为是相等的qualified name
            </summary>
            <param name="obj"> 比较对象 </param>
            <returns> true 相同；false 不同 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.OFDElement">
            <summary>
            文件根节点
            <para>
            XML文档使用的命名空间为 http://www.ofdspec.org/2016，其表示符应为 ofd；
            应在包内各XML文档的根节点申明 defaults:ofd。
            元素节点应使用命名空间标识符，元素属性不使用命名空间标识符。
            ————《GB/T 33190-2016》 7.1 命名空间
            
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.GetInstance(System.String)">
            <param name="name"> 元素名称 </param>
            <returns> 获取OFD类型元素实例 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.AddOFDEntity(System.String,System.Object)">
            <summary>
            向元素中增加OFD元素
            </summary>
            <param name="name">  元素名称 </param>
            <param name="value"> 元素文本</param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.SetOFDEntity(System.String,System.Object)">
            <summary>
            设置OFD参数
            <para>
            如果参数已经存在则修改参数
            </para>
            <para>
            如果属性值value为null，表示删除该类元素
            
            </para>
            </summary>
            <param name="name">  元素名称 </param>
            <param name="value"> 元素文本 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.SetOFDName(System.String)">
            <summary>
            设置 元素名称
            </summary>
            <param name="name"> 元素名称 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.GetOFDElement(System.String)">
            <summary>
            获取OFD的元素
            </summary>
            <param name="name"> OFD元素名称 </param>
            <returns> OFD元素或null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.RemoveAttr(System.String)">
            <summary>
            如果属性存在则删除
            </summary>
            <param name="name"> 属性名 </param>
            <returns> true 删除成功；false 删除失败，可能是由于属性不存在 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.GetOFDElementText(System.String)">
            <summary>
            获取OFD元素中的文本
            </summary>
            <param name="name"> 元素名称 </param>
            <returns> 文本 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.Set(Spire.Pdf.General.Paper.Ofd.Core.OfdXmlElement)">
            <summary>
            设置元素
            <para>
            如果同类型元素已经存在，那么删除原有元素
            
            </para>
            </summary>
            <param name="element"> 需要设置的元素 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.RemoveOFDElemByNames(System.String[])">
            <summary>
            @Date 2021 04 20 19 18 </summary>
            <param name="names">
            @return </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.SetObjID(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            【可选】
            <para>
            设置 OFD对象标识，无符号整数，应在文档内唯一。
            </para>
            <para>
            0标识无效标识符
            
            </para>
            </summary>
            <param name="objId"> OFD对象标识 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.RemoveAll">
            <summary>
            @Data 2021 4 20 18 53
            @return
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.ObjID">
            <summary>
            【可选】
            <para>
            设置 OFD对象标识，无符号整数，应在文档内唯一。
            </para>
            <para>
            0标识无效标识符
            
            </para>
            </summary>
            <returns> OFD对象标识，null表示对象标识不存在 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.OFDElement.QualifiedName">
            <summary>
            OFD元素采用OFD的命名空间，所以直接调用代理对象
            </summary>
            <returns> 元素全名（含有前缀） </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.OFDSimpleTypeElement">
            <summary>
            简单类型元素对象，用于承载 Text
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OFDSimpleTypeElement.#ctor(System.String,System.Object)">
            <summary>
            创建一个带有文本元素
            </summary>
            <param name="name"> 元素名称 </param>
            <param name="obj">  元素值对象（可toString 序列化为字符串） </param>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.OfdXmlElement.QualifiedName">
            <summary>
            需要继承的子类实现该方法，用于在代理对象是做类型检查
            </summary>
            <returns> 元素全名（含有前缀） </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.OfdXmlElement.RemoveAttr(System.String)">
            <summary>
            如果属性存在则删除
            </summary>
            <param name="name"> 属性名 </param>
            <returns> true 删除成功；false 删除失败，可能是由于属性不存在 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.Seal">
            <summary>
            电子印章信息
            <para>
            18.2.1 图 86 表 67
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.Seal.SetBaseLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            设置 指向包内的安全电子印章文件路径
            <para>
            遵循密码领域的相关规范
            
            </para>
            </summary>
            <param name="baseLoc"> 指向包内的安全电子印章文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.Seal.BaseLoc">
            <summary>
            【必选】
            获取 指向包内的安全电子印章文件路径
            <para>
            遵循密码领域的相关规范
            
            </para>
            </summary>
            <returns> 指向包内的安全电子印章文件路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot">
            <summary>
            签名的外观
            <para>
            一个数字签名可以跟一个或多个外观描述关联，也可以不关联任何外观，
            其关联方式如图 88所示。
            </para>
            <para>
            18.2.3 图 88 表 69
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot.SetID(System.String)">
            <summary>
            【必选 属性】
            设置 签章注释的标识
            <para>
            推荐使用"sNNN"的编码方式，NNN从1开始
            
            </para>
            </summary>
            <param name="id"> 签章注释的标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot.ID">
            <summary>
            【必选 属性】
            获取 签章注释的标识
            <para>
            推荐使用"sNNN"的编码方式，NNN从1开始
            
            </para>
            </summary>
            <returns> 签章注释的标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot.SetPageRef(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用外观注释所在的页面的标识符
            </summary>
            <param name="pageRef"> 引用外观注释所在的页面的标识符 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot.GetPageRef">
            <summary>
            【必选 属性】
            获取 引用外观注释所在的页面的标识符
            </summary>
            <returns> 引用外观注释所在的页面的标识符 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot.SetBoundary(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box)">
            <summary>
            【必选 属性】
            设置 签章注释的外观边框位置
            <para>
            可用于签章注释所在页面内的定位
            
            </para>
            </summary>
            <param name="boundary"> 签章注释的外观边框位置 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot.GetBoundary">
            <summary>
            【必选 属性】
            获取 签章注释的外观边框位置
            <para>
            可用于签章注释所在页面内的定位
            
            </para>
            </summary>
            <returns> 签章注释的外观边框位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot.SetClip(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box)">
            <summary>
            【可选 属性】
            设置 签章注释的外观裁剪设置
            </summary>
            <param name="clip"> 签章注释的外观裁剪设置 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot.GetClip">
            <summary>
            【可选 属性】
            获取 签章注释的外观裁剪设置
            </summary>
            <returns> 签章注释的外观裁剪设置 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.Reference">
            <summary>
            针对一个文件的摘要节点
            <para>
            18.2.2 签名的范围 图 87 表 68
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.Reference.SetFileRef(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选 属性】
            设置 指向包内的文件，使用绝对路径
            </summary>
            <param name="fileRef"> 指向包内的文件，使用绝对路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.Reference.FileRef">
            <summary>
            【必选 属性】
            获取 指向包内的文件，使用绝对路径
            </summary>
            <returns> 指向包内的文件，使用绝对路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.Reference.SetCheckValue(System.Byte[])">
            <summary>
            【必选】
            设置 对包内文件进行摘要计算值的杂凑值
            <para>
            所得的二进制摘要值进行 base64 编码
            
            </para>
            </summary>
            <param name="checkValue"> 对包内文件进行摘要计算值的杂凑值 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.Reference.CheckValue">
            <summary>
            【必选】
            获取 对包内文件进行摘要计算值的杂凑值
            </summary>
            <returns> 对包内文件进行摘要计算值的杂凑值 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.References">
            <summary>
            签名的范围
            <para>
            18.2.2 签名的范围 图 87 表 68
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.References.SetCheckMethod(System.String)">
            <summary>
            【可选 属性】
            设置 摘要方法
            <para>
            视应用场景的不同使用不同的摘要方法。
            用于各行业应用时，应使用符合行业安全贵方的算法。
            
            </para>
            </summary>
            <param name="checkMethod"> 摘要方法 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.References.CheckMethod">
            <summary>
            【可选 属性】
            获取 摘要方法
            <para>
            视应用场景的不同使用不同的摘要方法。
            用于各行业应用时，应使用符合行业安全贵方的算法。
            
            </para>
            </summary>
            <returns> 摘要方法 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.References.AddReference(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.Reference)">
            <summary>
            【必选】
            增加 针对一个文件的摘要节点
            </summary>
            <param name="reference"> 针对一个文件的摘要节点 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.References.HasFile(System.String)">
            <summary>
            检查是否包含文件
            </summary>
            <param name="absLoc"> 文件绝对路径 </param>
            <returns> true - 含有文件；false - 不含 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.References.GetReferences">
            <summary>
            【必选】
            获取 针对一个文件的摘要节点列表
            </summary>
            <returns> 针对一个文件的摘要节点列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature">
            <summary>
            数字签名或安全签章在类表中的注册信息，依次签名或签章对应一个节点
            <para>
            18.1 签名列表 图 85 表 66
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature.SetID(System.String)">
            <summary>
            【必选 属性】
            设置 签名或签章的标识
            <para>
            推荐使用"sNNN"的编码方式，NNN从1开始
            
            </para>
            </summary>
            <param name="id"> 签名或签章的标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature.ID">
            <summary>
            【必选 属性】
            获取 签名或签章的标识
            <para>
            推荐使用"sNNN"的编码方式，NNN从1开始
            
            </para>
            </summary>
            <returns> 签名或签章的标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature.SetType(Spire.Pdf.General.Paper.Ofd.Core.Signatures.SigType)">
            <summary>
            【可选 属性】
            设置  签名节点的类型
            <para>
            可选值参考<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.SigType"/>
            </para>
            <para>
            默认值为Seal
            
            </para>
            </summary>
            <param name="type"> 签名节点的类型 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature.Type">
            <summary>
            【可选 属性】
            获取  签名节点的类型
            <para>
            可选值参考<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.SigType"/>
            </para>
            <para>
            默认值为Seal
            
            </para>
            </summary>
            <returns> 签名节点的类型 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature.SetBaseLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选 属性】
            设置 指向包内的签名描述文件
            </summary>
            <param name="baseLoc"> 指向包内的签名描述文件 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature.BaseLoc">
            <summary>
            【必选 属性】
            获取 指向包内的签名描述文件
            </summary>
            <returns> 指向包内的签名描述文件 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signatures">
            <summary>
            签名列表根节点
            <para>
            签名列表问价你的入口点在 7.4 主入口中定义。
            签名列表文件中可以包含多个签名（例如联合发文等情况），见图 85。
            当允许下次继续添加签名时，该文件不会被包含到本次签名的
            保护文件列表（References）中。
            </para>
            <para>
            18.1 签名列表 图 85 表 66
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signatures.SetMaxSignId(System.String)">
            <summary>
            【可选 属性】
            设置 安全标识的最大值
            <para>
            作用与文档入口文件 Document.xml 中的 MaxID相同，
            为了避免在签名时影响文档入口文件，采用了与ST_ID不一样
            的ID编码方式。
            </para>
            <para>
            推荐使用"sNNN"的编码方式，NNN从1开始
            
            </para>
            </summary>
            <param name="maxSignId"> 安全标识的最大值 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signatures.MaxSignId">
            <summary>
            【可选 属性】
            获取 安全标识的最大值
            <para>
            作用与文档入口文件 Document.xml 中的 MaxID相同，
            为了避免在签名时影响文档入口文件，采用了与ST_ID不一样
            的ID编码方式。
            </para>
            <para>
            推荐使用"sNNN"的编码方式，NNN从1开始
            
            </para>
            </summary>
            <returns> 安全标识的最大值 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signatures.AddSignature(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature)">
            <summary>
            【可选】
            增加 数字签名或安全签章在类表中的注册信息
            </summary>
            <param name="signature"> 数字签名或安全签章在类表中的注册信息 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signatures.GetSignatures">
            <summary>
            【可选】
            获取 数字签名或安全签章在类表中的注册信息序列
            </summary>
            <returns> 数字签名或安全签章在类表中的注册信息序列 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.SigType">
            <summary>
            签名节点的类型
            <para>
            目前规定了两个可选值
            </para>
            <para>
            18.1 签名列表 图 85 表 66
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Signatures.SigType.Seal">
            <summary>
            安全签章
            <para>
            默认值
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Signatures.SigType.Sign">
            <summary>
            纯数字签名
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Provider">
            <summary>
            创建签名时所用的签章组件提供者信息
            <para>
            18.2.1 文件摘要 图 86 表 67
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Provider.SetProviderName(System.String)">
            <summary>
            【必选 属性】
            设置 创建签名时所用的签章组件提供者信息
            </summary>
            <param name="providerName"> 创建签名时所用的签章组件提供者信息 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Provider.ProviderName">
            <summary>
            【必选 属性】
            设置 创建签名时所用的签章组件提供者信息
            </summary>
            <returns> 创建签名时所用的签章组件提供者信息 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Provider.SetVersion(System.String)">
            <summary>
            【可选 属性】
            设置 创建签名时所使用的签章组件的版本
            </summary>
            <param name="version"> 创建签名时所使用的签章组件的版本 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Provider.Version">
            <summary>
            【可选 属性】
            获取 创建签名时所使用的签章组件的版本
            </summary>
            <returns> 创建签名时所使用的签章组件的版本 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Provider.SetCompany(System.String)">
            <summary>
            【可选 属性】
            设置 创建签名时所使用的签章组件的制造商
            </summary>
            <param name="company"> 创建签名时所使用的签章组件的制造商 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Provider.Company">
            <summary>
            【可选 属性】
            设置 创建签名时所使用的签章组件的制造商
            </summary>
            <returns> 创建签名时所使用的签章组件的制造商 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Signature">
            <summary>
            签名描述文件的根节点
            <para>
            OFD的数字签名通过对描述文件的保护间接实现对OFD原文的保护。
            签名结构中的签名信息（SignedInfo）是这一过程中的关键点，
            其中记录了当次数字签名保护的所有文件的二进制摘要信息，同时
            将安全算法提供者、签名算法、签名时间、和所应用的安全印章等
            信息也包含在此节点内。签名描述文件同时包含了签名值将要存放的
            包内位置，一旦对该文件实施签名保护，则其对应的包内文件原文
            以及本次签名对应的附加信息都将不可改动，从而实现依次数字签名
            对整个原文内容的保护。签名描述文件的主要结构描述见图 86。
            </para>
            <para>
            文件摘要文件根节点为 Signature，其子节点 SignedInfo 对应元素说明见表 67。
            </para>
            <para>
            18.2.1 文件摘要 图 86 表 67
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Signature.SetSignedInfo(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo)">
            <summary>
            【必选】
            设置 签名要保护的原文及本次签名的相关信息
            </summary>
            <param name="signedInfo"> 签名要保护的原文及本次签名的相关信息 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Signature.SignedInfo">
            <summary>
            【必选】
            获取 签名要保护的原文及本次签名的相关信息
            </summary>
            <returns> 签名要保护的原文及本次签名的相关信息 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Signature.SetSignedValue(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            设置 指向安全签名提供者所返还的针对签名描述文件计算所得的签名值文件
            </summary>
            <param name="signedValue"> 指向安全签名提供者所返还的针对签名描述文件计算所得的签名值文件 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Signature.SignedValue">
            <summary>
            【必选】
            获取 指向安全签名提供者所返还的针对签名描述文件计算所得的签名值文件
            </summary>
            <returns> 指向安全签名提供者所返还的针对签名描述文件计算所得的签名值文件 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo">
            <summary>
            签名要保护的原文及本次签名相关的信息
            <para>
            18.2.1 文件摘要 图 86 表 67
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.SetProvider(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.Provider)">
            <summary>
            【必选】
            设置 创建签名时所用的签章组件提供者信息
            </summary>
            <param name="provider"> 创建签名时所用的签章组件提供者信息 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.Provider">
            <summary>
            【必选】
            获取 创建签名时所用的签章组件提供者信息
            </summary>
            <returns> 创建签名时所用的签章组件提供者信息 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.SetSignatureMethod(System.String)">
            <summary>
            【可选】
            设置 签名方法
            <para>
            记录安全模块返回的签名算法代码，以便验证时使用
            
            </para>
            </summary>
            <param name="signatureMethod"> 签名方法 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.SignatureMethod">
            <summary>
            【可选】
            设置 签名方法
            <para>
            记录安全模块返回的签名算法代码，以便验证时使用
            
            </para>
            </summary>
            <returns> 签名方法 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.SetSignatureDateTime(System.String)">
            <summary>
            【可选】
            设置 签名时间
            <para>
            记录安全模块返回的签名时间，以便验证时使用
            
            </para>
            </summary>
            <param name="signatureDateTime"> 签名时间 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.SignatureDateTime">
            <summary>
            【可选】
            设置 签名时间
            <para>
            记录安全模块返回的签名时间，以便验证时使用
            
            </para>
            </summary>
            <returns> 签名时间 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.SetReferences(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Range.References)">
            <summary>
            【必选】
            设置 包内文件计算所得的摘要记录列表
            <para>
            一个受本次签名保护的包内文件对应一个 Reference节点
            
            </para>
            </summary>
            <param name="references"> 包内文件计算所得的摘要记录列表 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.References">
            <summary>
            【必选】
            设置 包内文件计算所得的摘要记录列表
            <para>
            一个受本次签名保护的包内文件对应一个 Reference节点
            
            </para>
            </summary>
            <returns> 包内文件计算所得的摘要记录列表 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.AddStampAnnot(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot)">
            <summary>
            【可选】
            增加 本签名关联的外观（用OFD中的注解表示）
            <para>
            该节点可出现多次
            
            </para>
            </summary>
            <param name="stampAnnot"> 本签名关联的外观 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.StampAnnots">
            <summary>
            【可选】
            获取 本签名关联的外观（用OFD中的注解表示）序列
            <para>
            该节点可出现多次
            
            </para>
            </summary>
            <returns> 本签名关联的外观序列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.SetSeal(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.Seal)">
            <summary>
            【可选】
            设置 电子印章信息
            </summary>
            <param name="seal"> 电子印章信息 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Signatures.Sig.SignedInfo.Seal">
            <summary>
            【可选】
            设置 电子印章信息
            </summary>
            <returns> 电子印章信息 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.signatures.range.CheckMethod">
            <summary>
            摘要算法
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.signatures.range.CheckMethod.MD5">
            <summary>
            默认值
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform">
            <summary>
            变换描述
            <para>
            当存在字形变换时，TextCode对象中使用字形变换节点（CGTransform）描述字符编码
            和字形索引之间的关系。
            </para>
            <para>
            11.4.1 变换描述 图 66 表 48
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform.SetCodePosition(System.Nullable{System.Int32})">
            <summary>
            【必选 属性】
            设置 TextCode 中字符编码的起始位置
            <para>
            从 0 开始
            
            </para>
            </summary>
            <param name="codePosition"> TextCode 中字符编码的起始位置 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform.CodePosition">
            <summary>
            【必选 属性】
            获取 TextCode 中字符编码的起始位置
            <para>
            从 0 开始
            
            </para>
            </summary>
            <returns> TextCode 中字符编码的起始位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform.SetCodeCount(System.Nullable{System.Int32})">
            <summary>
            【可选 属性】
            设置 变换关系中字符的数量
            <para>
            该数值应大于等于 1，否则属于错误描述
            </para>
            <para>
            默认为 1
            
            </para>
            </summary>
            <param name="codeCount"> 变换关系中字符的数量，数值应大于等于 1，否则属于错误描述 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform.CodeCount">
            <summary>
            【可选 属性】
            获取 变换关系中字符的数量
            <para>
            该数值应大于等于 1，否则属于错误描述
            </para>
            <para>
            默认为 1
            
            </para>
            </summary>
            <returns> 变换关系中字符的数量，数值应大于等于 1，否则属于错误描述 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform.SetGlyphCount(System.Nullable{System.Int32})">
            <summary>
            【可选 属性】
            设置 变换关系中字形索引的个数
            <para>
            该数值应大于等于 1，否则属于错误描述
            </para>
            <para>
            默认为 1
            
            </para>
            </summary>
            <param name="glyphCount"> 变换关系中字形索引的个数 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform.GlyphCount">
            <summary>
            【可选 属性】
            设置 变换关系中字形索引的个数
            <para>
            该数值应大于等于 1，否则属于错误描述
            </para>
            <para>
            默认为 1
            
            </para>
            </summary>
            <returns> 变换关系中字形索引的个数 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform.SetGlyphs(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选】
            设置 变换后的字形索引列表
            </summary>
            <param name="glyphs"> 变换后的字形索引列表 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform.Glyphs">
            <summary>
            【可选】
            获取 变换后的字形索引列表
            </summary>
            <returns> 变换后的字形索引列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.Charset">
            <summary>
            字形适用的字符分类
            <para>
            用于匹配替代字形
            </para>
            <para>
            11.1 表 44
            </para>
            <para>
            附录 A.5 CT_Font
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.Charset.symbol">
            <summary>
            符号
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.Charset.unicode">
            <summary>
            默认值
            </summary>
        </member>
        <!-- 对于成员“T:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.#ctor(System.String)">
            <param name="fontName"> 字形名 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.SetFontName(System.String)">
            <summary>
            【必选 属性】
            设置 字形名
            </summary>
            <param name="fontName"> 字形名 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.FontName">
            <summary>
            【必选 属性】
            获取 字形名
            </summary>
            <returns> 字形名 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.SetFamilyName(System.String)">
            <summary>
            【可选 属性】
            设置 字形族名
            <para>
            用于匹配代替字形
            
            </para>
            </summary>
            <param name="familyName"> 字形族名 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.FamilyName">
            <summary>
            【可选 属性】
            获取 字形族名
            <para>
            用于匹配代替字形
            
            </para>
            </summary>
            <returns> 字形族名 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.SetCharSet(Spire.Pdf.General.Paper.Ofd.Core.Text.Font.Charset)">
            <summary>
            【可选 属性】
            设置 字形适用的字符分类
            <para>
            可选值参考<seealso cref="T:System.Runtime.InteropServices.CharSet"/>
            
            </para>
            </summary>
            <param name="charSet"> 字形适用的字符分类 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.Charset">
            <summary>
            【可选 属性】
            获取 字形适用的字符分类
            可选值参考<seealso cref="T:System.Runtime.InteropServices.CharSet"/>
            </summary>
            <returns> 字形适用的字符分类 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.SetItalic(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 是否是斜体
            <para>
            用于匹配替代字形
            </para>
            <para>
            默认值是 false
            
            </para>
            </summary>
            <param name="italic"> true - 斜体； false - 正常 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.Italic">
            <summary>
            【可选 属性】
            获取 是否是斜体
            <para>
            用于匹配替代字形
            </para>
            <para>
            默认值是 false
            
            </para>
            </summary>
            <returns> true - 斜体； false - 正常 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.SetBold(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 是否是粗字体
            <para>
            用于匹配替代字形
            </para>
            <para>
            默认值是 false
            
            </para>
            </summary>
            <param name="bold"> true - 粗体； false - 正常 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.Bold">
            <summary>
            【可选 属性】
            获取 是否是粗字体
            <para>
            用于匹配替代字形
            </para>
            <para>
            默认值是 false
            
            </para>
            </summary>
            <returns> true - 粗体； false - 正常 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.SetSerif(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 是否是带衬线字形
            <para>
            用于匹配替代字形
            </para>
            <para>
            默认值是 false
            
            </para>
            </summary>
            <param name="serif"> true - 带衬线；false - 正常 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.Serif">
            <summary>
            【可选 属性】
            获取 是否是带衬线字形
            <para>
            用于匹配替代字形
            </para>
            <para>
            默认值是 false
            
            </para>
            </summary>
            <returns> true - 带衬线；false - 正常 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.SetFixedWidth(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 是否是等宽字形
            <para>
            用于匹配替代字形
            </para>
            <para>
            默认值是 false
            
            </para>
            </summary>
            <param name="fixedWidth"> true - 等宽字形；false - 正常 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.FixedWidth">
            <summary>
            【可选 属性】
            设置 是否是等宽字形
            <para>
            用于匹配替代字形
            </para>
            <para>
            默认值是 false
            
            </para>
            </summary>
            <returns> true - 等宽字形；false - 正常 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.SetFontFile(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【可选】
            设置 指向内嵌字形文件
            <para>
            嵌入字形文件应使用 OpenType 格式
            
            </para>
            </summary>
            <param name="fontFile"> 指向内嵌字形文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font.FontFile">
            <summary>
            【可选】
            获取 指向内嵌字形文件
            <para>
            嵌入字形文件应使用 OpenType 格式
            
            </para>
            </summary>
            <returns> 指向内嵌字形文件路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode">
            <summary>
            文字定位
            <para>
            文字对象使用严格的文字定位信息进行定位
            </para>
            <para>
            11.3 文字定位 图 61 表 46
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.SetContent(System.String)">
            <summary>
            设置文字内容
            </summary>
            <param name="content"> 内容 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.Content">
            <summary>
            获取文字内容
            </summary>
            <returns> 文字内容 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.SetCoordinate(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            设置坐标
            </summary>
            <param name="x"> 横坐标 </param>
            <param name="y"> 纵坐标 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.SetX(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 第一个文字的字形在对象坐标系下的 X 坐标
            <para>
            当 X 不出现，则采用上一个 TextCode 的 X 值，文字对象中的一个
            TextCode 的属性必选
            
            </para>
            </summary>
            <param name="x"> 第一个文字的字形在对象坐标系下的 X 坐标 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.X">
            <summary>
            【可选 属性】
            设置 第一个文字的字形在对象坐标系下的 X 坐标
            <para>
            当 X 不出现，则采用上一个 TextCode 的 X 值，文字对象中的一个
            TextCode 的属性必选
            
            </para>
            </summary>
            <returns> 第一个文字的字形在对象坐标系下的 X 坐标；null表示采用上一个 TextCode 的 X 值 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.SetY(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 第一个文字的字形原点在对象坐标系下的 Y 坐标
            <para>
            当 Y 不出现，则采用上一个 TextCode 的 Y 值，文字对象中的一个
            TextCode 的属性必选
            
            </para>
            </summary>
            <param name="y"> 第一个文字的字形原点在对象坐标系下的 Y 坐标 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.Y">
            <summary>
            【可选 属性】
            设置 第一个文字的字形在对象坐标系下的 Y 坐标
            <para>
            当 X 不出现，则采用上一个 TextCode 的 Y 值，文字对象中的一个
            TextCode 的属性必选
            
            </para>
            </summary>
            <returns> 第一个文字的字形在对象坐标系下的 Y 坐标；null表示采用上一个 TextCode 的 Y 值 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.SetDeltaX(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选 属性】
            设置 文字之间在 X 方向上的偏移值
            <para>
            double 型数值队列，列表中的每个值代表一个文字与前一个
            文字之间在 X 方向的偏移值
            </para>
            <para>
            DeltaX 不出现时，表示文字的绘制点在 X 方向不做偏移。
            
            </para>
            </summary>
            <param name="deltaX"> 文字之间在 X 方向上的偏移值 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.SetDeltaX(System.Double[])">
            <summary>
            【可选 属性】
            设置 文字之间在 X 方向上的偏移值
            <para>
            double 型数值队列，列表中的每个值代表一个文字与前一个
            文字之间在 X 方向的偏移值
            </para>
            <para>
            DeltaX 不出现时，表示文字的绘制点在 X 方向不做偏移。
            
            </para>
            </summary>
            <param name="arr"> 文字之间在 X 方向上的偏移值数值 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.DeltaX">
            <summary>
            【可选 属性】
            获取 文字之间在 X 方向上的偏移值
            <para>
            double 型数值队列，列表中的每个值代表一个文字与前一个
            文字之间在 X 方向的偏移值
            </para>
            <para>
            DeltaX 不出现时，表示文字的绘制点在 X 方向不做偏移。
            
            </para>
            </summary>
            <returns> 文字之间在 X 方向上的偏移值；null表示不偏移 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.SetDeltaY(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            【可选 属性】
            设置 文字之间在 Y 方向上的偏移值
            <para>
            double 型数值队列，列表中的每个值代表一个文字与前一个
            文字之间在 Y 方向的偏移值
            </para>
            <para>
            DeltaY 不出现时，表示文字的绘制点在 Y 方向不做偏移。
            
            </para>
            </summary>
            <param name="deltaY"> 文字之间在 Y 方向上的偏移值；null表示不偏移 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.SetDeltaY(System.Double[])">
            <summary>
            【可选 属性】
            设置 文字之间在 Y 方向上的偏移值
            <para>
            double 型数值队列，列表中的每个值代表一个文字与前一个
            文字之间在 Y 方向的偏移值
            </para>
            <para>
            DeltaY 不出现时，表示文字的绘制点在 Y 方向不做偏移。
            
            </para>
            </summary>
            <param name="arr"> 文字之间在 Y 方向上的偏移数值 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.DeltaY">
            <summary>
            【可选 属性】
            获取 文字之间在 Y 方向上的偏移值
            <para>
            double 型数值队列，列表中的每个值代表一个文字与前一个
            文字之间在 Y 方向的偏移值
            </para>
            <para>
            DeltaY 不出现时，表示文字的绘制点在 Y 方向不做偏移。
            
            </para>
            </summary>
            <returns> 文字之间在 Y 方向上的偏移值；null表示不偏移 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode.DeltaFormatter(System.String)">
            <summary>
            解析delta的值，处理g的格式 </summary>
            <param name="delta">
            @return </param>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text">
            <summary>
            文字对象
            <para>
            11.2 文字对象 图 59 表 45
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.TextObject(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            获取文字对象
            </summary>
            <param name="id"> 文字对象ID </param>
            <returns> 文字对象 TextObject </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.ToObj(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID)">
            <summary>
            构造文字对象
            </summary>
            <param name="id"> 对象ID </param>
            <returns> 对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetFont(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_RefID)">
            <summary>
            【必选 属性】
            设置 引用资源文件中定义的字形标识
            </summary>
            <param name="font"> 引用字形资源文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetFont(System.Int64)">
            <summary>
            【必选 属性】
            设置 引用资源文件中定义的字形标识
            </summary>
            <param name="refId"> ID </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.Font">
            <summary>
            【必选 属性】
            获取 引用资源文件路径
            </summary>
            <returns> 引用字形资源文件路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetSize(System.Nullable{System.Double})">
            <summary>
            【必选 属性】
            设置 字号，单位为毫米
            </summary>
            <param name="size"> 字号，单位为毫米 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.Size">
            <summary>
            【必选 属性】
            获取 字号，单位为毫米
            </summary>
            <returns> 字号，单位为毫米 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetStroke(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 是否勾边
            <para>
            默认值为 false
            
            </para>
            </summary>
            <param name="stroke"> true - 勾边；false - 不勾边 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.GetStroke">
            <summary>
            【可选 属性】
            获取 是否勾边
            <para>
            默认值为 false
            
            </para>
            </summary>
            <returns> true - 勾边；false - 不勾边 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetFill(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 是否填充
            <para>
            默认值为 true
            
            </para>
            </summary>
            <param name="fill"> true - 填充；false - 不填充 </param>
            <returns> this </returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.GetFill”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetLineWidth(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 勾边宽度
            </summary>
            <param name="lineWidth">勾边宽度 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetHScale(System.Nullable{System.Double})">
            <summary>
            【可选 属性】
            设置 字形在水平方向的缩放比
            <para>
            默认值为 1.0
            </para>
            <para>
            例如：当 HScale 值为 0.5 时表示实际显示的字宽为原来字宽的一半。
            
            </para>
            </summary>
            <param name="hScale"> 字形在水平方向的缩放比 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.HScale">
            <summary>
            【可选 属性】
            获取 字形在水平方向的缩放比
            <para>
            默认值为 1.0
            </para>
            <para>
            例如：当 HScale 值为 0.5 时表示实际显示的字宽为原来字宽的一半。
            
            </para>
            </summary>
            <returns> 字形在水平方向的缩放比 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetReadDirection(Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction)">
            <summary>
            【可选 属性】
            指定 阅读方向
            <para>
            指定了文字排列的方向，描述见 11.3 文字定位
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="readDirection"> 阅读方向，可选值为<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction"/> </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.ReadDirection">
            <summary>
            【可选 属性】
            获取 阅读方向
            <para>
            指定了文字排列的方向，描述见 11.3 文字定位
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 阅读方向，可选值为<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction"/> </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetCharDirection(Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction)">
            <summary>
            【可选 属性】
            指定 字符方向
            <para>
            指定了文字放置的方向，描述见 11.3 文字定位
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <param name="charDirection"> 字符方向，可选值为<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction"/> </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.CharDirection">
            <summary>
            【可选 属性】
            获取 字符方向
            <para>
            指定了文字放置的方向，描述见 11.3 文字定位
            </para>
            <para>
            默认值为 0
            
            </para>
            </summary>
            <returns> 字符方向，可选值为<seealso cref="T:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction"/> </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetWeight(Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Weight)">
            <summary>
            【可选 属性】
            设置 文字对象的粗细值
            <para>
            默认值为 400
            
            </para>
            </summary>
            <param name="weight"> 文字对象的粗细值，可选值<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.Weight"/> </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.Weight">
            <summary>
            【可选 属性】
            设置 文字对象的粗细值
            <para>
            默认值为 400
            
            </para>
            </summary>
            <returns> 文字对象的粗细值，可选值<seealso cref="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.Weight"/> </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetItalic(System.Nullable{System.Boolean})">
            <summary>
            【可选 属性】
            设置 是否是斜体样式
            <para>
            默认值为 false
            
            </para>
            </summary>
            <param name="italic"> true - 斜体样式； false - 正常 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.Italic">
            <summary>
            【可选 属性】
            获取 是否是斜体样式
            <para>
            默认值为 false
            
            </para>
            </summary>
            <returns> true - 斜体样式； false - 正常 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetFillColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【可选】
            设置 填充颜色
            <para>
            默认为黑色
            </para>
            </summary>
            <param name="fillColor"> 填充颜色 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.GetFillColor">
            <summary>
            【可选】
            获取 填充颜色
            <para>
            默认为黑色
            </para>
            </summary>
            <returns> 填充颜色，null表示黑色 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.SetStrokeColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            【可选】
            设置 勾边颜色
            <para>
            默认为透明色
            
            </para>
            </summary>
            <param name="strokeColor"> 勾边颜色 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.GetStrokeColor">
            <summary>
            【可选】
            获取 勾边颜色
            <para>
            默认为透明色
            
            </para>
            </summary>
            <returns> 勾边颜色，null为透明色 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.AddCGTransform(Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform)">
            <summary>
            【可选】
            增加  指定字符编码到字符索引之间的变换关系
            <para>
            描述见 11.4 字符变换
            
            </para>
            </summary>
            <param name="cgTransform"> 字符编码到字符索引之间的变换关系 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.CGTransforms">
            <summary>
            【可选】
            获取  指定字符编码到字符索引之间的变换关系序列
            <para>
            描述见 11.4 字符变换
            
            </para>
            </summary>
            <returns> 字符编码到字符索引之间的变换关系序列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.AddTextCode(Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode)">
            <summary>
            【必选】
            增加 文字内容
            <para>
            也就是一段字符编码串
            </para>
            <para>
            如果字符编码不在XML编码方式的字符范围之内，应采用"\"加四位
            十六进制数的格式转义；文字内容中出现的空格也需要转义
            若 TextCode 作为占位符使用时一律采用  ¤ （\u00A4）占位
            
            </para>
            </summary>
            <param name="textCode"> 文字内容 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text.TextCodes">
            <summary>
            【必选】
            获取 文字内容序列
            <para>
            也就是一段字符编码串
            </para>
            <para>
            如果字符编码不在XML编码方式的字符范围之内，应采用"\"加四位
            十六进制数的格式转义；文字内容中出现的空格也需要转义
            若 TextCode 作为占位符使用时一律采用  ¤ （\u00A4）占位
            
            </para>
            </summary>
            <returns> 文字内容序列 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction">
            <summary>
            方向角度
            <para>
            11.3 文字定位 表 47
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction.Angle_0">
            <summary>
            可选旋转角度 0、90、180、270
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Direction.angle">
            <summary>
            旋转角度
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Weight">
            <summary>
            文字对象的粗细值
            <para>
            11.3 表 45
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Weight.W_100">
            <summary>
            可选值为
            100，200，300，400，500，600，700，800，900
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Weight.W_400">
            <summary>
            默认值
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.Text.Text.Weight.GetWeight">
            <summary>
            获取字体粗细值
            </summary>
            <returns> 粗细值 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion">
            <summary>
            版本
            <para>
            版本信息在独立的文件中描述，如图 90 所示。
            版本定义结构中列出了一个 OFD 文档版本中所需的所有文件。
            </para>
            <para>
            19.2 版本 图 90 表 71
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.SetID(System.String)">
            <summary>
            【属性 必选】
            设置 版本标识符
            </summary>
            <param name="id"> 版本标识符 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.ID">
            <summary>
            【属性 必选】
            获取 版本标识符
            </summary>
            <returns> 版本标识符 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.SetVersion(System.String)">
            <summary>
            【属性 可选】
            设置 该文件适用的格式版本
            </summary>
            <param name="version"> 该文件适用的格式版本 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.Version">
            <summary>
            【属性 可选】
            获取 该文件适用的格式版本
            </summary>
            <returns> 该文件适用的格式版本，null表示不存在 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.SetDocVersionName(System.String)">
            <summary>
            【属性 可选】
            设置 版本名称
            </summary>
            <param name="name"> 版本名称 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.DocVersionName">
            <summary>
            【属性 可选】
            获取 版本名称
            </summary>
            <returns> 版本名称，null表示不存在 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.SetCreationDate(System.DateTime)">
            <summary>
            【属性 可选】
            设置 创建时间
            </summary>
            <param name="creationDate"> 创建时间 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.GetCreationDate">
            <summary>
            【属性 可选】
            获取 创建时间
            </summary>
            <returns> 创建时间 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.SetFileList(Spire.Pdf.General.Paper.Ofd.Core.versions.FileList)">
            <summary>
            【必选】
            设置 版本包含的文件列表
            </summary>
            <param name="fileList"> 版本包含的文件列表 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.FileList">
            <summary>
            【必选】
            获取 版本包含的文件列表
            </summary>
            <returns> 版本包含的文件列表 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.SetDocRoot(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            设置 该版本的入口文件
            </summary>
            <param name="docRoot"> 该版本的入口文件 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.DocVersion.DocRoot">
            <summary>
            【必选】
            获取 该版本的入口文件
            </summary>
            <returns> 该版本的入口文件 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.versions.File">
            <summary>
            文件列表文件描述
            <para>
            19.2 表 71
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.File.#ctor(System.String,Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <param name="id">  文件列表文件标识 </param>
            <param name="loc"> 文件列表文件描述 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.File.SetID(System.String)">
            <summary>
            【必选 属性】
            设置 文件列表文件标识
            </summary>
            <param name="id"> 文件列表文件标识 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.File.ID">
            <summary>
            【必选 属性】
            获取 文件列表文件标识
            </summary>
            <returns> 文件列表文件标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.File.setFile(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            设置 文件列表文件描述
            </summary>
            <param name="file"> 文件列表文件描述 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.File.GetFile">
            <summary>
            【必选】
            获取 文件列表文件描述
            </summary>
            <returns> 文件列表文件描述 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.versions.FileList">
            <summary>
            版本包含的文件列表
            <para>
            19.2 标 71
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.FileList.AddFile(Spire.Pdf.General.Paper.Ofd.Core.versions.File)">
            <summary>
            【必选】
            增加  文件列表文件描述
            </summary>
            <param name="file"> 文件列表文件描述 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.FileList.AddFile(System.String,Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            增加  文件列表文件描述
            </summary>
            <param name="id">      文件列表文件标识 </param>
            <param name="fileLoc"> 文件列表文件描述 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.FileList.Files">
            <summary>
            【必选】
            获取  文件列表文件描述列表
            </summary>
            <returns> 文件列表文件描述列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.versions.Version">
            <summary>
            表 70 版本描述入口
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.#ctor(System.String,System.Int32,Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            创建版本描述入口
            
            默认为默认版本（Current="false"） </summary>
            <param name="id"> 版本标识（不含特殊字符字符串） </param>
            <param name="index"> 版本号 </param>
            <param name="baseLoc"> 指向包内的版本描述文件 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.setID(System.String)">
            <summary>
            【必选】
            设置版本标识
            </summary>
            <param name="id"> 版本标识 （不含特殊字符，字符串） </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.ID">
            <summary>
            【必选】
            获取版本标识 </summary>
            <returns> 版本标识 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.setIndex(System.Int32)">
            <summary>
            【必选】
            设置 版本号
            </summary>
            <param name="index"> 版本号 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.getIndex">
            <summary>
            【必选】
            获取 版本号
            </summary>
            <returns> 版本号，  -1 表示没有 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.Current">
            <summary>
            【可选】
            获取 是否是默认版本
            <para>
            默认值：false
            
            </para>
            </summary>
            <returns> true 表示是默认版本 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.setCurrent(System.Boolean)">
            <summary>
            【可选】
            设置 是否是默认版本
            </summary>
            <param name="current"> true 表示是默认版本 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.SetBaseLoc(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            【必选】
            设置 指向包内的版本描述文件
            </summary>
            <param name="baseLoc"> 版本描述文件路径 </param>
            <returns> this </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Core.versions.Version.BaseLoc">
            <summary>
            【必选】
            设置 指向包内 的版本描述文件
            </summary>
            <returns> 版本描述文件路径 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.versions.Versions">
            <summary>
            一个OFD文档可能有多个版本
            <para>
            版本序列
            </para>
            <para>
            图 89 版本结构列表
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.Versions.AddVersion(Spire.Pdf.General.Paper.Ofd.Core.versions.Version)">
            <summary>
            【必选】
            增加 版本描述入口
            </summary>
            <param name="version"> 版本描述入口 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Core.versions.Versions.GetVersions">
            <summary>
            【必选】
            获取 版本描述入口列表
            </summary>
            <returns> 版本描述入口列表 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Core.Const">
            <summary>
            静态变量
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.Slash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.COLON">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.Png">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.Comma">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.BaseLoc">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.OFD_NAMESPACE_URI">
            <summary>
            命名空间 URI,《GB/T_33190-2016》 7.1 命名空间
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.OFD_VALUE">
            <summary>
            元素节点应使用命名空间标识符
            ————《GB/T 33190-2016》 7.1 命名空间
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.OFD_Q">
            <summary>
            OFD命名空间
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.CommonOFDNameSpacePrefix">
            <summary>
            通用的OFD命名空间前缀
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.OFD_NAMESPACE">
            <summary>
            使用命名空间为 http://www.ofdspec.org/2016，其表示符应为 ofd。
            ————《GB/T 33190-2016》 7.1 命名空间
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.DATE_FORMATTER">
            <summary>
            xs:date 类型日期格式化
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.DATETIME_FORMATTER">
            <summary>
            xs:dateTime 类型时间日期格式化
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.INDEX_FILE">
            <summary>
            OFD索引文件
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.DocContainerPrefix">
            <summary>
            文档容器名称前缀
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.DocumentFileName">
            <summary>
            文档的根节点描述文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.PublicResFileName">
            <summary>
            文档公共资源索引描述文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.DocumentResFileName">
            <summary>
            文档自身资源索引描述文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.AnnotationsFileName">
            <summary>
            注释入口文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.Attachments">
            <summary>
            附件入口文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.OFDFileName">
            <summary>
            OFD文档主入口文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.Pages">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.Res">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.Signs">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.TTF">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.PageContainerPrefix">
            <summary>
            页面容器名称前缀
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.ContentFileName">
            <summary>
            页面描述文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.PageResFileName">
            <summary>
            记录了资源描述文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.AnnotationFileName">
            <summary>
            记录了页面关联的注解对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.SignContainerPrefix">
            <summary>
            签名容器名称前缀
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.SealFileName">
            <summary>
            电子印章文件名
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.SignatureFileName">
            <summary>
            签名/签章 描述文件名
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.SignedValueFileName">
            <summary>
            签名值文件名
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Core.Const.SignaturesFileName">
            <summary>
            签名列表文件名称
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.SESVersion">
            <summary>
            电子签章版本号
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.SESVersion.version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.SESVersionHolder">
            <summary>
            版本持有器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.SESVersionHolder.version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.SESVersionHolder.objSeq">
            <summary>
            没有构造的对象
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.SESVersionHolder.SESObject``1”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.SESVersionHolder.SealObject``1”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.VersionParser">
            <summary>
            版本解析
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.VersionParser.ParseSES_SealVersion(System.Object)">
            <summary>
            解析电子印章版本
            </summary>
            <param name="o"> 带解析数据，可以是字节串也可以是ASN1对象 </param>
            <returns> 带有版本的ASN1对象序列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Gm.Ses.Parse.VersionParser.ParseSES_SignatureVersion(System.Object)">
            <summary>
            解析电子签章数据版本
            </summary>
            <param name="o"> 带解析数据，可以是字节串也可以是ASN1对象 </param>
            <returns> 带有版本的ASN1对象序列 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.ExtData">
            <summary>
            厂商自定义数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.ExtData.extnID">
            <summary>
            自定义扩展字段标识
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.ExtData.critical">
            <summary>
            自定义扩展字段是否关键
            <para>
            默认值FALSE
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.ExtData.extnValue">
            <summary>
            自定义扩展字段数据值
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.ExtensionDatas">
            <summary>
            自定义属性字段序列
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SESeal">
            <summary>
            电子印章数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SESeal.esealInfo">
            <summary>
            印章信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SESeal.signInfo">
            <summary>
            制章人对印章签名的信息
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPictrueInfo">
            <summary>
            印章图片信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPictrueInfo.type">
            <summary>
            图片类型
            <para>
            代表印章图片类型，如 GIF、BMP、JPG、SVG等
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPictrueInfo.data">
            <summary>
            印章图片数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPictrueInfo.width">
            <summary>
            图片显示宽度，单位为毫米（mm）
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPictrueInfo.height">
            <summary>
            图片显示高度，单位为毫米（mm）
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo">
            <summary>
            印章属性信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo.OrgType">
            <summary>
            单位印章类型
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo.PersonType">
            <summary>
            个人印章类型
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo.type">
            <summary>
            印章类型
            <para>
            1 - 单位印章
            2 - 个人印章
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo.name">
            <summary>
            印章名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo.certList">
            <summary>
            签章人证书列表
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo.createDate">
            <summary>
            印章制做日期
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo.validStart">
            <summary>
            印章有效起始日期
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_ESPropertyInfo.validEnd">
            <summary>
            印章有效终止日期
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Header">
            <summary>
            头信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Header.V4">
            <summary>
            电子印章数据结构版本号，V4
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Header.ID">
            <summary>
            电子印章数据标识符
            固定值"ES"
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Header.id">
            <summary>
            电子印章数据标识符
            <para>
            固定值"ES"
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Header.version">
            <summary>
            电子印章数据版本号标识
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Header.vid">
            <summary>
            电子印章厂商ID
            <para>
            在互联互通时，用于识别不同的软件厂商实现
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SealInfo">
            <summary>
            印章信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SealInfo.header">
            <summary>
            头信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SealInfo.esID">
            <summary>
            电子印章标识符
            <para>
            电子印章数据唯一标识编码
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SealInfo.property">
            <summary>
            印章属性信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SealInfo.picture">
            <summary>
            电子印章图片数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SealInfo.extDatas">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Signature">
            <summary>
            电子签章数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Signature.toSign">
            <summary>
            待电子签章数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_Signature.signature">
            <summary>
            电子签章中签名值
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SignInfo">
            <summary>
            印章签名信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SignInfo.cert">
            <summary>
            代表对电子印章数据进行签名的制章人证书
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SignInfo.signatureAlgorithm">
            <summary>
            代表签名算法OID标识
            <para>
            遵循 GM/T 006
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.SES_SignInfo.signData">
            <summary>
            制章人的签名值
            <para>
            制章人对电子印章格式中印章信息SES_SealInfo、制章人证书、签名算法标识符按 SEQUENCE方式组成的信息内容的数字签名
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.TBS_Sign">
            <summary>
            待电子签章数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.TBS_Sign.version">
            <summary>
            版本信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.TBS_Sign.eseal">
            <summary>
            电子印章
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.TBS_Sign.timeInfo">
            <summary>
            签章时间信息
            <para>
            可以是时间戳，也可以是UTCTIME时间；
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.TBS_Sign.dataHash">
            <summary>
            原文杂凑值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.TBS_Sign.propertyInfo">
            <summary>
            原文数据的属性信息
            <para>
            如文档ID、日期、段落、原文内容的字节数、指示信息、签章保护范围等
            </para>
            <para>
            自行定义
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.TBS_Sign.cert">
            <summary>
            签章人对应的签名证书
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V1.TBS_Sign.signatureAlgorithm">
            <summary>
            签名算法标识符
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.CertDigestList">
            <summary>
            签章者证书杂凑值列表
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.CertDigestList.dataSequence">
            <summary>
            签章者证书杂凑值
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.CertDigestObj">
            <summary>
            签章者证书杂凑值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.CertDigestObj.type">
            <summary>
            自定义类型
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.CertDigestObj.value">
            <summary>
            证书杂凑值
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.CertInfoList">
            <summary>
            签章者证书列表
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SESeal">
            <summary>
            电子印章数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SESeal.eSealInfo">
            <summary>
            印章信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SESeal.cert">
            <summary>
            制章人证书
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SESeal.signAlgID">
            <summary>
            签名算法标识符
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SESeal.signedValue">
            <summary>
            签名值
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_CertList">
            <summary>
            签章者证书信息列表
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_CertList.certs">
            <summary>
            签章者证书列表
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_CertList.certDigestList">
            <summary>
            签章者证书杂凑值列表
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo">
            <summary>
            印章属性
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.CertListType_Conflict">
            <summary>
            签章者证书信息类型： 1 - 数字证书类型
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.CertDigestListType">
            <summary>
            签章者证书信息类型： 2 - 数字证书杂凑值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.type">
            <summary>
            印章类型
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.name">
            <summary>
            印章名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.certListType">
            <summary>
            签章者证书信息类型
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.certList">
            <summary>
            签章者证书信息列表
            <para>
            SES_CertList
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.createDate">
            <summary>
            印章制做日期
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.validStart">
            <summary>
            印章有效起始日期
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_ESPropertyInfo.validEnd">
            <summary>
            印章有效终止日期
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_SealInfo">
            <summary>
            印章信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_SealInfo.header">
            <summary>
            头信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_SealInfo.esID">
            <summary>
            电子印章标识符
            <para>
            电子印章数据唯一标识编码
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_SealInfo.property">
            <summary>
            印章属性信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_SealInfo.picture">
            <summary>
            电子印章图片数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_SealInfo.extDatas">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_Signature">
            <summary>
            电子签章数据
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_Signature.toSign">
            <summary>
            签章信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_Signature.cert">
            <summary>
            签章者证书
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_Signature.signatureAlgID">
            <summary>
            签名算法标识
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_Signature.signature">
            <summary>
            签名值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.SES_Signature.timeStamp">
            <summary>
            对签名值的时间戳【可选】
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.TBS_Sign">
            <summary>
            签章信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.TBS_Sign.version">
            <summary>
            电子印章版本号，与电子印章版本号保持一致
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.TBS_Sign.eseal">
            <summary>
            电子印章
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.TBS_Sign.timeInfo">
            <summary>
            签章时间
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.TBS_Sign.dataHash">
            <summary>
            原文杂凑值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.TBS_Sign.propertyInfo">
            <summary>
            原文数据的属性
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Gm.Ses.V4.TBS_Sign.extDatas">
            <summary>
            自定义数据 【可选】
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.OfdDocument">
            <summary>
            Ofd文档对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.OfdDocument.m_licenseProtector">
            <summary>
            The license protected.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.OfdDocument.reader">
            <summary>
            odf文档阅读器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.OfdDocument.document">
            <summary>
            文档根节点对象,Document.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.OfdDocument.pages">
            <summary>
            ofd文档所有页面
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.OfdDocument.resMgt">
            <summary>
            资源管理器
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.OfdDocument.ResMgt">
            <summary>
            资源管理器
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.OfdDocument.ResourceLocator">
            <summary>
            资源定位器
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.OfdDocument.Pages">
            <summary>
            ofd文档所有页面
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.OfdDocument.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="ofdStream"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.OfdDocument.GetDocumentInfo">
            <summary>
            Get the document info.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.OfdDocument.GetPageSize(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page)">
            <summary>
            获取页面物理大小
            <para>
            如果页面没有定义页面区域，则使用文件 CommonData中的定义
            
            </para>
            </summary>
            <param name="page"> 页面对象 </param>
            <returns> 页面大小 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.OfdDocument.GetPageByTemplateID(System.String)">
            <summary>
            根据模板ID获取页对象
            </summary>
            <param name="templateId"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsPathBuilder.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsPathBuilder.Build(System.String)">
            <summary>
            Convert a path data to a list of PsPathFigure.
            </summary>
            <param name="pathString">The Path data.</param>
            <return>A list of PsPathFigure</return>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsPathBuilder.GetPsPolyLine(System.Drawing.PointF,System.Single[])">
            <summary>
            Convert line points to PsPolyLineSegment.
            </summary>
            <param name="startPoint">The start point of the line.</param>
            <param name="points">The points of the line.</param>
            <return>The PsPolyLineSegment</return>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsPathBuilder.GetPsBezierSegment(System.Drawing.PointF,System.Single[])">
            <summary>
            Convert bezier curve points to PsBezierSegment.
            </summary>
            <param name="startPoint">The start point of the bezier curve.</param>
            <param name="points">The points of the bezier curve.</param>
            <return>The PsBezierSegment</return>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsPathBuilder.GetPsArcSegment(System.Drawing.PointF,System.Single[])">
            <summary>
            Convert elliptical arc points to ApsArcSegment.
            </summary>
            <param name="startPoint">The start point of the elliptical arc.</param>
            <param name="points">The points of the elliptical arc.</param>
            <return>The ApsArcSegment</return>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsPathBuilder.GetEllipticalArcCenterPoint(System.Drawing.PointF,System.Single[])">
            <summary>
            Get the center point of an elliptical arc.
            </summary>
            <param name="startPoint">The start point of the elliptical arc.</param>
            <param name="points">The points of the elliptical arc.</param>
            <return>The center point.</return>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsPathBuilder.SplitPath(System.String)">
            <summary>
            Split a path data to a list of path commands.
            </summary>
            <param name="data">The Path data.</param>
            <return>A list of path commands</return>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.CommonUtils.IsNullOrEmpty(System.String)">
            <summary>
            指示指定的字符串是 null 还是空字符串 ("") or (" ").
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.ImageRenderer.context">
            <summary>
            The process context.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ImageRenderer.#ctor(Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ImageRenderer.RenderImageObject(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.ImageObject,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render ofd image to ps object.
            </summary>
            <param name="imageObject">The text object.</param>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.PathRenderer.context">
            <summary>
            The process context.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PathRenderer.#ctor(Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PathRenderer.RenderPathObject(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.PathObject,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render ofd path to ps object.
            </summary>
            <param name="pathObject">The path object.</param>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.context">
            <summary>
            The process context.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.imageRenderer">
            <summary>
            The image renderer.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.textRenderer">
            <summary>
            The text renderer.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.pathRenderer">
            <summary>
            The path renderer.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.#ctor(Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.RenderPages(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Reader.Model.AnnotionVo},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Reader.Model.StampAnnotVo})">
            <summary>
            Render a list of ofd pages to ps pages.
            </summary>
            <returns>The list of ps pages.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.RenderPage(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render a ofd page to ps page.
            </summary>
            <param name="ofdPage">The ofd page to be rendered.</param>
            <returns>A ps page.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.RenderLayers(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.CT_Layer},Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render ofd layers.
            </summary>
            <param name="layers">The list of layer.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.RenderPageBlocks(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType},Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render ofd page blocks.
            </summary>
            <param name="pageBlocks">The list of block.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.RenderAnnotion(Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.Annot,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render ofd annotation.
            </summary>
            <param name="annot">The annot.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.PsRenderer.RenderStampAnnotion(Spire.Pdf.General.Paper.Ofd.Reader.Model.StampAnnotVo,Spire.Pdf.General.Paper.Ofd.Core.Signatures.Appearance.StampAnnot,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render ofd stamp annotation.
            </summary>
            <param name="stampAnnotVo">The stamp annot entity.</param>
            <param name="stampAnnot">The stamp annot.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ResourceManager.#ctor(Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage)">
            <param name="document">The ofd document.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ResourceManager.GetImage(System.String)">
            <summary>
            获取PS图片对象
            </summary>
            <param name="refID"> 引用ID </param>
            <returns>The image stream.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ResourceManager.GetImage(System.String,System.Drawing.RectangleF)">
            <summary>
            获取PS图片对象
            </summary>
            <param name="refID"> 引用ID </param>
            <returns>A ps image object.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ResourceManager.GetPsFont(System.String,System.Drawing.FontStyle,System.Single)">
             <summary>
            Get ps font
             </summary>
             <param name="refID"> 引用ID </param>
             <param name="fontStyle"> fontStyle </param>
             <param name="fontSize">The font size. </param>
             <returns>A ps font.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ResourceManager.GetCompositeGraphicUnit(System.String)">
            <summary>
            获取矢量图形
            </summary>
            <param name="refID"> 资源ID </param>
            <returns> 矢量图形，不存在返回null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ResourceManager.GetColorSpace(System.String)">
            <summary>
            Get ofd color space.
            </summary>
            <param name="refID"> 引用ID </param>
            <returns>A color space object.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ResourceManager.GetFont(System.String)">
            <summary>
            Get ofd font
            </summary>
            <param name="refID">引用ID</param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.TextRenderer.context">
            <summary>
            The process context.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TextRenderer.#ctor(Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TextRenderer.RenderTextObject(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.TextObject,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render ofd text object to ps object.
            </summary>
            <param name="textObject">The text object.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TextRenderer.RenderTextCode(Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform,Spire.Pdf.General.Paper.Drawing.PsFont,System.Single,Spire.Pdf.General.Paper.Drawing.PsMatrix,Spire.Pdf.General.Paper.Drawing.PsColor,Spire.Pdf.General.Paper.Drawing.PsColor,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Render ofd text code to ps object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TextRenderer.GetPsGlyphs(System.String,Spire.Pdf.General.Paper.Drawing.PsFont,System.Single,Spire.Pdf.General.Paper.Drawing.PsMatrix,Spire.Pdf.General.Paper.Drawing.PsColor,Spire.Pdf.General.Paper.Drawing.PsColor,System.Drawing.PointF)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="drFont"></param>
            <param name="lineWidth"></param>
            <param name="matrix"></param>
            <param name="fillcolor"></param>
            <param name="strokeColor"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TextRenderer.GetEncodeText(Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform)">
            <summary>
            获取最终写入的字符编码
            </summary>
            <param name="textCode"></param>
            <param name="ct_cgTransform"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TextRenderer.GetFontStyle(Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font)">
            <summary>
            获取文本的字体样式
            </summary>
            <param name="ctFont">The ofd font.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TextRenderer.GetTextLocation(Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode)">
            <summary>
            获取文本偏移位子
            </summary>
            <param name="textCode"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext.#ctor(Spire.Pdf.General.Paper.Ofd.OfdDocument)">
            <param name="document">The ofd document.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext.GetPageByTemplateID(System.String)">
            <summary>
            根据模板ID获取页对象
            </summary>
            <param name="templateId"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext.ToPsColor(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color)">
            <summary>
            Convert ofd color to ps color.
            </summary>
            <param name="ctColor">The ofd color.</param>
            <returns>A ps color.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext.ToPSBrush(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_Color,System.Drawing.RectangleF)">
            <summary>
            Convert ofd color to ps brush.
            </summary>
            <param name="ctColor">The ofd color.</param>
            <returns>A ps brush.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext.ConvertAxialShd(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_AxialShd,System.Drawing.RectangleF)">
            <summary>
            Convert ofd axialShd to ps brush.
            </summary>
            <param name="axialShd">The ofd axialShd.</param>
            <param name="rect">The rectangle.</param>
            <returns>A ps brush.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext.ConvertRadialShd(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Color.CT_RadialShd)">
            <summary>
            Convert ofd radialShd to ps brush.
            </summary>
            <param name="radialShd">The ofd radialShd.</param>
            <returns>A ps brush.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext.ConvertPattern(Spire.Pdf.General.Paper.Ofd.Core.PageDescription.Color.Pattern.CT_Pattern)">
            <summary>
            Convert ofd pattern to ps brush.
            </summary>
            <param name="pattern">The ofd pattern.</param>
            <returns>A ps brush.</returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder">
            <summary>
            Converts a ofd font to TtfFont
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.context">
            <summary>
            The process context.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.m_sourceFonts">
            <summary>
            The ofd source font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.m_newTTFFonts">
            <summary>
            The new embedded TTFFont.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.#ctor(Spire.Pdf.General.Paper.Ofd.Ps.ProcessContext)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.BuildFont(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Reader.Model.AnnotionVo})">
            <summary>
            构建所有页面下的字体
            </summary>
            <param name="ofdPages"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.BuildPageFont(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page)">
            <summary>
            构建当前Page下的字体
            </summary>
            <param name="ofdPage"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.BuildLayersFont(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.CT_Layer})">
            <summary>
            构建Layers节点下的字体
            </summary>
            <param name="layers"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.BuildPageBlocksFont(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType})">
            <summary>
            构建PageBlocks节点下的字体
            </summary>
            <param name="pageBlocks"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.BulidTextObjectFont(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.TextObject)">
            <summary>
            Builds the font of the current text 
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.BuildIFont(Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font,System.IO.Stream)">
            <summary>
            Build font by font data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.BulidNewTTFFont(Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font,Spire.Pdf.General.Paper.Font.Common.IFont)">
            <summary>
            Create TTFont by ofd embedded font.
            </summary>
            <param name="ctFont">The ofd source font.</param>
            <returns>The new TTFFont</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.BulidNewTTFont(Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font)">
            <summary>
            Create TTFont by ofd non-embedded font.
            </summary>
            <param name="ctFont">The ofd source font.</param>
            <returns>The new TTFont</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.AddGlyphToTTFFont(Spire.Pdf.General.Paper.Font.Common.IFont,Spire.Pdf.General.Paper.Font.TTF.TTFFont,Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.TextObject)">
            <summary>
            ofd字体数据写入新的ttf字体
            </summary>
            <param name="iFont">The source font.</param>
            <param name="ttfFont">The new ttf font.</param>
            <param name="textObject">The text object.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.CreateCFFFont(System.Byte[])">
            <summary>
            Create a cff font by font data.
            </summary>
            <param name="data">The font data.</param>
            <returns>The cff font.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.CreateType1Font(System.Byte[])">
            <summary>
            Create a type1 font by font data.
            </summary>
            <param name="data">The font data.</param>
            <returns>The type1 font.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.CreateTTFFont(System.Byte[])">
            <summary>
            Create a ttf font by font data.
            </summary>
            <param name="data"></param>
            <returns>The ttf font.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.CheckIsType1Font(Spire.Pdf.General.Paper.Font.Common.IFont)">
            <summary>
            Is Type1 Font?
            </summary>
            <param name="iFont"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.AddEmbeddedFontToResourceManage">
            <summary>
            Save the TTFFont to the TTFont
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.IsOneMapOne(Spire.Pdf.General.Paper.Ofd.Core.Text.CT_CGTransform,System.String)">
            <summary>
            一对一关系,检查textObject.CGTransforms与textCode的映射关系是否正确,某些情况下不能使用textCode作为写入的字符编码
            </summary>
            <param name="cgTransform"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.FetchFontName(System.String)">
            <summary>
            Fetch font name.
            </summary>
            <param name="ofdFontName"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.upperLists">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.m_installedFontNameString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.s_Lock">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Ps.TTFontBuilder.InitInstalledFontName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdGraphicObject">
            <summary>
            Used for writing graphic objects such as pens, brushes to Ofd objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdGraphicObject.WritePathAttributes(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath)">
            <summary>
            Write attributes to the ofd path.
            </summary>
            <param name="path">The psPath.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdGraphicObject.WritePen(Spire.Pdf.General.Paper.Drawing.psPen)">
            <summary>
            Write stroke attribute.
            </summary>
            <param name="pen"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdGraphicObject.WriteBrush(Spire.Pdf.General.Paper.Drawing.PsBrush)">
            <summary>
            Write fill attribute.
            </summary>
            <param name="brush"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdGraphicObject.CreatePsImage(System.Byte[])">
            <summary>
            Create ps image.
            </summary>
            <param name="imageBytes">The image bytes</param>
            <returns>The ps image</returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer">
            <summary>
            The renderer to OFD format.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.IsNegative">
            <summary>
            Reverse y position.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.#ctor(Spire.Pdf.General.Paper.Base.DocumentInfo)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="info">The document info.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.CreateDocumentBody(Spire.Pdf.General.Paper.Base.DocumentInfo)">
            <summary>
            Create ofd document body.
            </summary>
            <param name="info">The document info.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.CreateDocumentInfo(Spire.Pdf.General.Paper.Base.DocumentInfo)">
            <summary>
            Create ofd document info.
            </summary>
            <param name="info">The document info.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.AddAttachments(Spire.Pdf.Attachments.PdfAttachmentCollection)">
            <summary>
            Add attachments to the ofd document.
            </summary>
            <param name="attachmentCollection"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.Render(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsNode)">
            <summary>
            Renders a layout node and all its contents into a OFD document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.EndDocument">
            <summary>
            The method should be called when you finished building of OFD document. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.VisitPageStart(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPage)">
            <summary>
            Start visiting page.
            </summary>
            <param name="page">The PsPage</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.GetCanvasRenderTransform">
            <summary>
            Get current canvas render transform.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.GetClipRect">
            <summary>
            Get current clip rectangle.
            </summary>
            <returns>The clip rectangle.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.GetPathRect(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath)">
            <summary>
            Get the rectangle of the path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.IsValidClipPath(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath,System.Drawing.RectangleF)">
            <summary>
            Check whether the clippping path is valid.
            </summary>
            <param name="path">The clip path.</param>
            <param name="bounds">The boundary of current object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdRenderer.AddPageBlock(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType)">
            <summary>
            Add page block to current node.
            </summary>
            <param name="pageBlock">The page block.</param>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.PsToOfd.OfdUtils.Equals(System.Byte[],System.Byte[])”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir">
            <summary>
            文档容器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.index">
            <summary>
            表示第几份文档，从0开始
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.Index">
            <summary>
            获取文档索引
            </summary>
            <returns> 文档编号（用于表示第几个） ，从0起 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.Document">
            <summary>
            获取文档的根节点
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.PublicRes">
            <summary>
            获取文档公共资源索引
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.DocumentRes">
            <summary>
            获取文档自身资源索引对象
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.Annotations">
            <summary>
            获取注释列表对象
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.Res">
            <summary>
            获取资源容器
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.Signs">
            <summary>
            获取 数字签名存储目录
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.#ctor(System.String,Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="virtualContainer"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.SetPublicRes(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res)">
            <summary>
            设置 文档公共资源索引
            </summary>
            <param name="internalRes"> 文档公共资源索引 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.SetAnnotations(Spire.Pdf.General.Paper.Ofd.Core.Annotation.Annotations)">
            <summary>
            设置注释列表对象
            </summary>
            <param name="annotations"> 注释列表对象 </param>
            <returns> 注释列表对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.SetDocumentRes(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res)">
            <summary>
            设置 文档自身资源索引
            </summary>
            <param name="documentRes"> 文档自身资源索引 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.SetDocument(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document)">
            <summary>
            设置 文档的根节点
            </summary>
            <param name="document"> 文档的根节点 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.ObtainRes">
            <summary>
            获取 资源文件夹
            <para>
            如果资源文件不存在则创建
            
            </para>
            </summary>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.ObtainSigns">
            <summary>
            获取 数字签名存储目录
            <para>
            如果数字签名存储目录不存在则创建
            
            </para>
            </summary>
            <returns> 数字签名存储目录 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.ObtainPages">
            <summary>
            获取 页面存储目录
            <para>
            如果页面存储目录则会创建
            
            </para>
            </summary>
            <returns> 页面存储目录 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.DocDir.AddResource(System.Byte[],System.String)">
            <summary>
            增加资源
            </summary>
            <param name="data"> 资源 </param>
            <returns> this </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir">
            <summary>
            OFD文档对象
            <para>
            请显示的调用Close或clean方法清除工作过程中的文件和目录
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.OFDFileName">
            <summary>
            OFD文档主入口文件名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.maxDocIndex">
            <summary>
            最大文档索引 + 1
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.NewOFD">
            <summary>
            新建一个OFD文档
            </summary>
            <returns> OFD文档 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.#ctor(Spire.Pdf.General.Paper.Ofd.Pkg.Tool.ElemCup)">
            <summary>
            指定路径创建或读取OFD文档容器
            <para>
            如果容器文档已经存在，那么读取
            </para>
            <para>
            如果文档不存在那么创建一个文档
            
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.InitContainer">
            <summary>
            容器初始化
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.Ofd">
            <summary>
            获取
            </summary>
            <returns> 文档主入口文件对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.SetOfd(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.OFD)">
            <summary>
            设置  文档主入口文件对象
            </summary>
            <param name="ofd"> 文档主入口文件对象 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.NewDoc">
            <summary>
            新建一个文档容器
            </summary>
            <returns> 新建的文档容器 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.ObtainDoc(System.Int32)">
            <summary>
            获取指定Index的文档
            <para>
            如果文档不存在那么创建
            
            </para>
            </summary>
            <param name="index"> index </param>
            <returns> 文档容器 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.GetDocByIndex(System.Int32)">
            <summary>
            通过文档索引获取文档容器
            </summary>
            <param name="index"> 文档索引 </param>
            <returns> 文档容器 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.OFDDir.ObtainDocDefault">
            <summary>
            获取第一个文档容器作为默认
            </summary>
            <returns> 第一个文档容器 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir">
            <summary>
            页面目录容器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.index">
            <summary>
            代表OFD中第几页
            <para>
            index 从 0 开始取
            </para>
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.Index">
            <summary>
            获取页面索引
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.PageRes">
            <summary>
            获取页面资源描述文件
            </summary>
            <returns> 页面资源描述文件 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.PageAnnot">
            <summary>
            获取分页注释文件
            </summary>
            <returns> 分页注释文件 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.ResDir">
            <summary>
            获取资源文件虚拟容器
            </summary>
            <returns> 获取资源目录 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.Content">
            <summary>
            获取页面描述对象
            </summary>
            <returns> 页面描述 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.SetContent(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page)">
            <summary>
            设置页面描述
            </summary>
            <param name="content"> 页面描述 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.AddResource(System.Byte[],System.String)">
            <summary>
            向页面中增加页面资源
            </summary>
            <param name="data"> 资源 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.SetPageRes(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Res.Res)">
            <summary>
            设置页面资源描述对象
            </summary>
            <param name="pageRes"> 页面资源描述对象 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.SetPageAnnot(Spire.Pdf.General.Paper.Ofd.Core.Annotation.PageAnnot.PageAnnot)">
            <summary>
            设置分页注释文件
            </summary>
            <param name="pageAnnot"> 分页注释文件 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PageDir.ObtainRes">
            <summary>
            获取页面资源目录
            <para>
            如果目录不存在则创建
            
            </para>
            </summary>
            <returns> 资源目录容器 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PagesDir">
            <summary>
            页面容器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PagesDir.maxPageIndex">
            <summary>
            最大页面索引 + 1
            <para>
            index + 1
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PagesDir.#ctor(System.String,Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PagesDir.InitContainer">
            <summary>
            初始化容器
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PagesDir.NewPageDir">
            <summary>
            创建一个新的页面容器
            </summary>
            <returns> 页面容器 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.PagesDir.GetByIndex(System.Int32)">
            <summary>
            获取索引的页面容器
            <para>
            页码 = index + 1
            
            </para>
            </summary>
            <param name="index"> 索引（从0开始） </param>
            <returns> 指定索引页面容器 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Container.ResDir">
            <summary>
            资源目录
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.ResDir.Add(System.Byte[],System.String)">
            <summary>
            向目录中加入资源
            <para>
            加入的资源将会被复制到指定目录，与原有资源无关
            
            </para>
            </summary>
            <param name="data"> 资源 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.ResDir.GetResourceName(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignDir">
            <summary>
            签名资源容器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignDir.index">
            <summary>
            表示第几个签名
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignDir.Index">
            <returns> 第几个签名，从1开始 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignDir.Seal">
            <summary>
            获取 电子印章文件
            </summary>
            <returns> 电子印章文件 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignDir.SignedValue">
            <summary>
            获取 签名值文件
            </summary>
            <returns> 签名值文件 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignDir.Signature">
            <summary>
            获取 签名/签章 描述文件
            </summary>
            <returns> 签名/签章 描述文件 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignDir.SetSignature(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signature)">
            <summary>
            设置 签名/签章 描述文件
            </summary>
            <param name="signature"> 签名/签章 描述文件 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignDir.SetSignedValue(System.Byte[],System.String)">
            <summary>
            设置签名值文件
            </summary>
            <param name="signedValue"> 签名值文件 </param>
            <returns> this </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignsDir">
            <summary>
            签名容器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignsDir.maxSignIndex">
            <summary>
            签名Index最大值 + 1
            <para>
            也就是签名容器数量，因为签名容器Index从0起算
            </para>
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignsDir.Signatures">
            <summary>
            获取 签名列表文件
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignsDir.InitContainer">
            <summary>
            初始化容器
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignsDir.SetSignatures(Spire.Pdf.General.Paper.Ofd.Core.Signatures.Signatures)">
            <summary>
            设置 签名列表文件
            </summary>
            <param name="signatures"> 签名列表文件 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignsDir.NewSignDir">
            <summary>
            创建一个签名/章虚拟容器
            </summary>
            <returns> 签名/章虚拟容器 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.SignsDir.GetByIndex(System.Nullable{System.Int32})">
            <summary>
            获取指定签名容器
            </summary>
            <param name="index"> 第几个签名 </param>
            <returns> 签名容器 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer">
            <summary>
            虚拟容器对象
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.fullPath">
            <summary>
            文件根路径(完整路径包含当前文件名)
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.name">
            <summary>
            目录名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.parent">
            <summary>
            所属容器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.fileCache">
            <summary>
            文件缓存
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.fileSrcHash">
            <summary>
            用于保存读取到的文件的Hash
            因为读取操作导致文档加载到缓存，
            但是文件在flush时候，反序列丢失格式字符等
            导致文件改动。
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.dirCache">
            <summary>
            目录中的虚拟容器缓存
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.SysAbsPath">
            <summary>
             获取当前容器完整路径
             @return 容器完整路径（绝对路径）
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.ParentUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.ContainerName">
            <summary>
            获取虚拟容器的名称
            </summary>
            <returns> 名称 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.AbsLoc">
            <summary>
            获取在容器中的绝对路径
            </summary>
            <returns> 绝对路径对象 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.Parent">
            <summary>
            获取该容器所属容器
            </summary>
            <returns> 所属容器对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.PutFile(System.Byte[],System.String)">
            <summary>
            向虚拟容器中加入文件
            </summary>
            <param name="data"> 文件路径对象 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.PutObj(System.String,Spire.Pdf.General.Paper.Ofd.Core.OfdXmlElement)">
            <summary>
            向虚拟容器加入对象
            </summary>
            <param name="fileName"> 文件名 </param>
            <param name="element">  元素对象 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.GetObj(System.String)">
            <summary>
            通过文件名获取元素对象
            </summary>
            <param name="fileName"> 文件名 </param>
            <returns> 元素对象（不含代理） </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.ObjectHash(Spire.Pdf.General.Paper.Ofd.Core.OfdXmlElement)">
            <summary>
            计算获取的对象的序列化Hash值
            </summary>
            <param name="element"> 文档对象 </param>
            <returns> Hash </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.FileChanged(System.String,Spire.Pdf.General.Paper.Ofd.Core.OfdXmlElement)">
            <summary>
            判断文件是否改动
            </summary>
            <param name="filename"> 文件名 </param>
            <param name="element">  文件对象 </param>
            <returns> true - 已经被改动;false - 未改动 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.GetStream(System.String)">
            <summary>
            获取容器中的文件对象
            </summary>
            <param name="fileName"> 文件名称 </param>
            <returns> 文件路径对象 </returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.ObtainContainer``1(System.String,``0)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.GetContainer``1(System.String,``0)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.Exit(System.String)">
            <summary>
            判断文件或对象是否存在
            </summary>
            <param name="fileName"> 文件名称 </param>
            <returns> true - 存在;false - 不存在 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.Clear">
            <summary>
            删除整个虚拟容器
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.Flush">
            <summary>
            将缓存中的对象写入到文件系统中
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.FlushContainerByName(System.String)">
            <summary>
            从缓存中刷新指定容器到文件系统中
            </summary>
            <param name="name"> 容器名称 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer.FlushFileByName(System.String)">
            <summary>
            从缓存将指定对象写入到文件系统中
            </summary>
            <param name="name"> 文件名称 </param>
            <returns> this </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Pkg.Tool.ElemCup">
            <summary>
            元素杯子
            <para>
            对象序列化和反序列化工具
            </para>
            <para>
            反序列化 向杯子中注入水
            </para>
            <para>
            序列化把杯子中的水倒出
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Pkg.Tool.ElemCup.Inject(System.IO.Stream)">
            <summary>
            从文件加载反序列化元素对象
            </summary>
            <param name="stream"> 文件路径对象 </param>
            <returns> 反序列化的元素对象 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.BadOFDException">
            <summary>
            错误OFD文件结构和文档格式异常
            @since 2020-04-17 03:29:28
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.ContentExtractor">
            <summary>
            内容抽取器
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.ContentExtractor.Receiver">
            <summary>
            解析结果接收器
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ContentExtractor.#ctor(Spire.Pdf.General.Paper.Ofd.Reader.OFDReader)">
            <summary>
            构造文字抽取器
            </summary>
            <param name="reader"> OFD解析器 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ContentExtractor.GetPageContent(System.Int32)">
            <summary>
            抽取指定页面内的所有文字
            </summary>
            <param name="pageNum"> 页码，从1开始 </param>
            <returns> 页面内容的所有文本内容序列 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ContentExtractor.PageBlockHandle(System.Collections.Generic.LinkedList{System.String},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType})">
            <summary>
            页块处理
            </summary>
            <param name="txtContentList"> 文本列表 </param>
            <param name="pageBlocks">     页块列表 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ContentExtractor.ExtractAll">
            <summary>
            获取OFD内的所有文本内容
            </summary>
            <returns> OFD中所有文本内容 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ContentExtractor.Traverse(Spire.Pdf.General.Paper.Ofd.Reader.ContentExtractor.Receiver)">
            <summary>
            遍历所有页面
            </summary>
            <param name="e"> 接受 </param>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.DeltaTool">
            <summary>
            DeltaX和DeltaY工具
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.DeltaTool.GetDelta(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array,System.Int32)">
            <summary>
            获取Delta数据
            </summary>
            <param name="delta"> OFD数组对象 </param>
            <param name="contentLength"> 文本长度 </param>
            <returns> 一组坐标偏移值 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.DLOFDReader">
            <summary>
            ofd解析器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.DLOFDReader.resMgt">
            <summary>
            资源管理器
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.DLOFDReader.#ctor(System.String,System.Boolean)">
            <summary>
            因一些ofd文件无法使用ZipUtil解压缩，可以让用户自己在外面解压缩好后，传入根目录创建
            例如用户可以使用unzip或者unar等命令行方式解压缩
            </summary>
            <param name="unzippedPathRoot"> 已经解压的OFD根目录位置，因此通过参数控制是否删除目录。 </param>
            <param name="deleteOnClose">    退出时是否删除 unzippedPathRoot 文件， true - 退出时删除；false - 不删除 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.DLOFDReader.InitReader">
            <summary>
            初始化reader
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.DLOFDReader.ResMgt">
            <summary>
            获取资源管理器
            <para>
            资源管理器获取到的对象均为只读对象
            
            </para>
            </summary>
            <returns> 资源管理器 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException">
            <summary>
            文档异常
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.ErrorPathException">
            <summary>
            错误路径异常
            @since 2020-04-09 20:05:29
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor">
            <summary>
            关键字抽取
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.POINT_PER_MM">
            <summary>
            每毫米的point单位
            1 point / 2.83464567 ≈ 0.35277778 mm
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetKeyWordPositionList(Spire.Pdf.General.Paper.Ofd.Reader.OFDReader,System.String)">
            <summary>
            获取关键字坐标列表(坐标单位毫米mm)
            </summary>
            <param name="reader">  OFD解析器 </param>
            <param name="keyword"> 关键字 </param>
            <returns> 关键字坐标列表 </returns>
            <exception cref="!:FileNotFoundException"> 文件不存在异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException">     文档解析异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetKeyWordPositionList(Spire.Pdf.General.Paper.Ofd.Reader.OFDReader,System.String[])">
            <summary>
            获取关键字坐标列表(坐标单位毫米mm)
            </summary>
            <param name="reader">   OFD解析器 </param>
            <param name="keywords"> 关键字列表 </param>
            <returns> 关键字坐标列表 </returns>
            <exception cref="!:FileNotFoundException"> 文件不存在异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException">     文档解析异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetKeyWordPositionList(Spire.Pdf.General.Paper.Ofd.Reader.OFDReader,System.String,System.Int32[])">
            <summary>
            获取关键字坐标列表(坐标单位毫米mm)
            </summary>
            <param name="reader">  OFD解析器 </param>
            <param name="keyword"> 关键字 </param>
            <param name="pages">   要检索的页码，从1开始，不超过最大页码 </param>
            <returns> 关键字坐标列表 </returns>
            <exception cref="!:FileNotFoundException"> 文件不存在异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException">     文档解析异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetKeyWordPositionList(Spire.Pdf.General.Paper.Ofd.Reader.OFDReader,System.String[],System.Int32[])">
            <summary>
            获取关键字坐标列表(坐标单位毫米mm)
            </summary>
            <param name="reader">   OFD解析器 </param>
            <param name="keywords"> 关键字列表 </param>
            <param name="pages">    要检索的页码，从1开始，不超过最大页码 </param>
            <returns> 关键字坐标列表 </returns>
            <exception cref="!:FileNotFoundException"> 文件不存在异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException">     文档解析异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.CheckPostfixMatch(System.String,System.String)">
            <summary>
            检查后缀匹配
            </summary>
            <param name="content"> 待匹配文本 </param>
            <param name="keyword"> 关键字 </param>
            <returns> 是/否 匹配 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.AddPostfixBreakTextCodeList(System.String,System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordPosition},System.Int32,System.Int32,Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode)">
            <summary>
            处理后缀匹配断字断行文本定位关键字
            </summary>
            <param name="keyword">         关键字字符串 </param>
            <param name="boundaryMapping"> 映射对象 </param>
            <param name="textCodeList">    文本定位列表 </param>
            <param name="positionList">    关键字位置列表 </param>
            <param name="textCodeIndex">   TextCode位置 </param>
            <param name="startIndex">      TextCode文本起始位置 </param>
            <param name="textCode">        第一个文字定位 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.AddPrefixBreakTextCodeList(System.String,System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordPosition},System.Int32,Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode)">
            <summary>
            处理前缀匹配断字断行文本定位关键字
            </summary>
            <param name="keyword">         关键字字符串 </param>
            <param name="boundaryMapping"> 映射对象 </param>
            <param name="textCodeList">    文本定位列表 </param>
            <param name="positionList">    关键字位置列表 </param>
            <param name="textCodeIndex">   定位起始位置 </param>
            <param name="textCode">        第一个文字定位 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.SearchNextText(System.String,System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode},System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource},System.Int32,System.String,Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode)">
            <summary>
            检索下一个文本定位节点
            </summary>
            <param name="keyword">           关键字字符串 </param>
            <param name="textCodeList">      文本定位列表 </param>
            <param name="mergeTextCodeList"> 合并的TextCode列表 </param>
            <param name="boundaryMapping">   文本资源映射对象 </param>
            <param name="textCodeIndex">     TextCode位置 </param>
            <param name="firstMatchString">  最先匹配字符串 </param>
            <param name="textCode">          第一个匹配文字 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.AddNormalKeyword(System.String,System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordPosition},Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,System.Int32)">
            <summary>
            处理正常关键字
            </summary>
            <param name="keyword">         关键字 </param>
            <param name="boundaryMapping"> 映射对象 </param>
            <param name="positionList">    为转移列表 </param>
            <param name="textCode">        文字定位 </param>
            <param name="textIndex">       文本索引 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetCtmKeywordPosition(Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,System.Int32,System.Int32,Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text,System.Drawing.Font,Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array,System.Collections.Generic.IList{System.Single},System.Collections.Generic.IList{System.Single},System.Int32)">
            <summary>
            获取CTM后的关键字位置
            </summary>
            <param name="textCode">      文字定位 </param>
            <param name="textIndex">     文本索引 </param>
            <param name="page">          文本资源 </param>
            <param name="ctText">        文字对象 </param>
            <param name="ctm">           CTM对象 </param>
            <param name="deltaX">        X偏移 </param>
            <param name="deltaY">        Y偏移 </param>
            <param name="keywordLength"> 文本长度 </param>
            <returns> 关键字位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.MergePos(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Pos[])">
            <summary>
            合并坐标
            </summary>
            <param name="posList"> 坐标列表 </param>
            <returns> 矩形框 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.Transform(System.Double[],System.Double,System.Double)">
            <summary>
            坐标转换
            </summary>
            <param name="matrix"> 矩阵数组 </param>
            <param name="sx">     原始X </param>
            <param name="sy">     原始Y </param>
            <returns> 计算后位置 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetMatrix(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Array)">
            <summary>
            获取Matrix数据
            </summary>
            <param name="ctm"> ctm对象 </param>
            <returns> 矩阵对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.MergeKeywordPosition(System.String,System.Int32,System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordPosition},System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode},System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource})">
            <summary>
            合并关键字位置对象
            </summary>
            <param name="keyword">         关键字 </param>
            <param name="firstStartIndex"> 第一个关键字起始匹配位置 </param>
            <param name="positionList">    检索到的关键字列表 </param>
            <param name="textCodeList">    合并列表 </param>
            <param name="boundaryMapping"> 外接矩形映射 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.MergeBox(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box})">
            <summary>
            合并Box
            </summary>
            <param name="boxList"> 盒子列表 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetTemplatePage(Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator,System.String,Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document)">
            <summary>
            获取获取模板字典
            </summary>
            <param name="locator">  资源定位器 </param>
            <param name="dataDir">  Document File路径 </param>
            <param name="document"> 文档对象 </param>
            <exception cref="!:FileNotFoundException"> 文件不存在异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException">     文档解析异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetKeywordPosition(Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,System.Int32,System.Int32,Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text,System.Drawing.Font,System.Collections.Generic.IList{System.Single},System.Collections.Generic.IList{System.Single},System.Int32)">
            <summary>
            创建关键字位置对象
            </summary>
            <param name="textCode">      文字定位对象 </param>
            <param name="textIndex">     文本索引 </param>
            <param name="page">          页码 </param>
            <param name="ctText">        文字对象 </param>
            <param name="fontMetrics">   字体属性 </param>
            <param name="deltaX">        X偏移 </param>
            <param name="deltaY">        Y偏移 </param>
            <param name="keywordLength"> 文本长度 </param>
            <returns> 关键字对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetStringWidth(System.Int32,System.Int32,System.Collections.Generic.IList{System.Single},System.Nullable{System.Double})">
            <summary>
            获取文本宽度，单位毫米(mm)
            </summary>
            <param name="textIndex">     文字索引 </param>
            <param name="keywordLength"> 文本长度 </param>
            <param name="deltaX">        X偏移量 </param>
            <param name="fontSize">      文字字号 </param>
            <returns> 文本宽度 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetFont(Spire.Pdf.General.Paper.Ofd.Core.Text.Text.CT_Text,Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font)">
            <summary>
            获取字体
            </summary>
            <param name="ctText"> 文字对象 </param>
            <param name="ctFont"> 字形对象 </param>
            <returns> 字体对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetLeftBottomPos(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Box,Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,System.Collections.Generic.IList{System.Single},System.Collections.Generic.IList{System.Single},System.Int32)">
            <summary>
            获取左下角位置
            </summary>
            <param name="boundary">  矩形框 </param>
            <param name="textCode">  文字定位 </param>
            <param name="deltaX">    X偏移 </param>
            <param name="deltaY">    Y偏移 </param>
            <param name="textIndex"> 文字索引 </param>
            <returns> 左下角坐标 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.PreparedContextData(Spire.Pdf.General.Paper.Ofd.Reader.OFDReader,System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode},System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource},System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID,Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font},System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID,Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page},System.Int32)">
            <summary>
            预处理数据
            </summary>
            <param name="reader">          OFD解析器 </param>
            <param name="textCodeList">    文本列表 </param>
            <param name="boundaryMapping"> 外接矩形映射 </param>
            <param name="fontMapping">     字体映射对象 </param>
            <param name="templatePageMap"> 模板数据 </param>
            <param name="pageNumber">      页码 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.PageBlockHandle(System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode},System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.Text.TextCode,Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource},System.Collections.Generic.IDictionary{Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_ID,Spire.Pdf.General.Paper.Ofd.Core.Text.Font.CT_Font},System.Int32,System.Collections.Generic.IList{Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.PageBlockType})">
            <summary>
            页面块处理
            </summary>
            <param name="textCodeList">    文本列表 </param>
            <param name="boundaryMapping"> 外接矩形映射 </param>
            <param name="fontMapping">     字体映射对象 </param>
            <param name="pageNumber">      页码 </param>
            <param name="pageBlocks">      页块列表 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordExtractor.GetFontMapping(Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator,System.String,Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Doc.Document)">
            <summary>
            获取字体映射对象
            </summary>
            <param name="locator">  资源定位器 </param>
            <param name="dataDir">  Document File路径 </param>
            <param name="document"> 文档对象 </param>
            <exception cref="!:FileNotFoundException"> 文件不存在异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException">     文档解析异常 </exception>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordPosition">
            <summary>
            关键字位置
            
            @author minghu-zhang
            @since 16:25 2020/9/26
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordPosition.page">
            <summary>
            关键字所在页码
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordPosition.box">
            <summary>
            矩形区域
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordPosition.keyword">
            <summary>
            所属关键字
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource">
            <summary>
            文本资源
            @since 16:25 2020/9/25
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource.page">
            <summary>
            页码
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource.font">
            <summary>
            字体对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.Keyword.KeywordResource.text">
            <summary>
            文字对象
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Model.AnnotionVo">
            <summary>
            @since 2020/9/25
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Model.OFDDocumentVo">
            <summary>
            @since 2020/8/11
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Model.OfdPageVo">
            <summary>
            @since 2020/8/11
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Model.SealDataVo">
            <summary>
            @author dltech21
            @since 2020/8/11
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Model.StampAnnotVo">
            <summary>
            @author dltech21
            @since 2020/8/11
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader">
            <summary>
            OFD解析器
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.ofdDir">
            <summary>
            OFD虚拟容器对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.rl">
            <summary>
            资源定位器
            <para>
            解析路径获取资源
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.closed">
            <summary>
            是否已经关闭文档
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.#ctor(System.String)">
            <summary>
            构造一个 OFDReader
            </summary>
            <param name="ofdFileLoc"> OFD文件位置，例如："/home/user/myofd.ofd" </param>
            <exception cref="T:System.IO.IOException"> OFD文件操作IO异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.#ctor(System.IO.Stream)">
            <summary>
            构造一个 OFDReader
            </summary>
            <param name="stream"> OFD文件输入流 </param>
            <exception cref="T:System.IO.IOException"> OFD文件操作IO异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.#ctor(System.String,System.Boolean)">
            <summary>
            因一些ofd文件无法使用ZipUtil解压缩，可以让用户自己在外面解压缩好后，传入根目录创建
            例如用户可以使用unzip或者unar等命令行方式解压缩，因此通过参数控制是否删除目录。
            </summary>
            <param name="unzippedPathRoot"> 已经解压的OFD根目录位置 </param>
            <param name="deleteOnClose">    退出时是否删除 unzippedPathRoot 文件， true - 退出时删除；false - 不删除 </param>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.OFDDir">
            <summary>
            获取文档虚拟容器
            </summary>
            <returns> OFD文档虚拟容器 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.DefaultDocSignaturesPath">
            <summary>
            获取默认文档Doc_0中的签名列表文件的绝对路径
            </summary>
            <returns> 签名列表文件绝对路径 </returns>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.BadOFDException"> 错误OFD结构和文件格式导致结构无法解析 </exception>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.DefaultSignatures">
            <summary>
            获取默认的签名列表对象
            </summary>
            <returns> 签名列表对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.HasSignature">
            <summary>
            文档是否包含数字签名
            </summary>
            <returns> true - 含有；false - 不含； </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.Annotations">
            <summary>
            获取注解列表文件对象
            <para>
            如果文档中没有注释文件，那么返还null
            
            </para>
            </summary>
            <returns> 注解列表文件对象或null </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.NumberOfPages">
            <summary>
            获取OFD含有的总页面数量
            </summary>
            <returns> 总页数 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.GetPageInfo(System.Int32)">
            <summary>
            获取页面信息
            </summary>
            <param name="pageNum"> 页码，从1开始 </param>
            <returns> 页面信息 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.GetPageSize(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Page)">
            <summary>
            获取页面物理大小
            <para>
            如果页面没有定义页面区域，则使用文件 CommonData中的定义
            
            </para>
            </summary>
            <param name="page"> 页面对象 </param>
            <returns> 页面大小 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.GetPage(System.Int32)">
            <summary>
            通过页面页码获取页面对象
            </summary>
            <param name="pageNum"> 页码，从1起 </param>
            <returns> 页面对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.GetPageObjectId(System.Int32)">
            <summary>
            获取页面的对象ID
            </summary>
            <param name="pageNum"> 页码 </param>
            <returns> 对象ID </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.ResourceLocator">
            <summary>
            获取资源定位器
            </summary>
            <returns> 资源定位器 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.GetAttachment(System.String)">
            <summary>
            获取附件对象
            </summary>
            <param name="name"> 附件名称 </param>
            <returns> 如果附件或附件记录不存在，那么返还null </returns>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.BadOFDException"> 文档结构损坏 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.GetAttachment(System.String,Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator)">
            <summary>
            获取附件对象
            <para>
            该方法不会恢复资源定位器
            
            </para>
            </summary>
            <param name="name"> 附件名称 </param>
            <param name="rl">   资源定位器 </param>
            <returns> 附件对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.OFDReader.Dispose">
            <summary>
            关闭文档
            <para>
            删除工作区
            
            </para>
            </summary>
            <exception cref="T:System.IO.IOException"> 工作区删除异常 </exception>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.PageInfo">
            <summary>
            页面信息
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.PageInfo.size">
            <summary>
            页面的物理大小
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.PageInfo.obj">
            <summary>
            页面底层对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.PageInfo.id">
            <summary>
            页面在OFD中的对象ID
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.PageInfo.index">
            <summary>
            页码，从1起
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.PageInfo.pageAbsLoc">
            <summary>
            页面的绝对路径
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator">
            <summary>
            资源定位器
            <para>
            通过给与的资源地址获取对应的资源文件或对象
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.PtDoc">
            <summary>
            路径匹配正则列表
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.ofdDir">
            <summary>
            资源容器
            <para>
            该容器带有缓存功能
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.workDir">
            <summary>
            当前目录
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.savedStack">
            <summary>
            保存的路径栈
            <para>
            每次调用Save都会入栈
            </para>
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.#ctor(Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer)">
             <summary>
            *
             通过虚拟容器创建资源加载器
             
             创建资源加载器的同时切换路径至虚拟容器的目录
             </summary>
             <param name="vc"> 虚拟容器 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Save">
            <summary>
            保存当前工作路径
            </summary>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Restore">
            <summary>
            还原原有工作区
            <para>
            如果没有保存过工作区，那么不会造成任何影响
            
            </para>
            </summary>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.ToAbsolutePath(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            转换路径对象为绝对路径字符串
            </summary>
            <param name="path"> 路径对象 </param>
            <returns> 绝对路径字符串 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.ToAbsolutePath(System.String)">
            <summary>
            路径转换为绝对路径
            </summary>
            <param name="path"> 容器路径 </param>
            <returns> 绝对路径字符串 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.RestWd">
            <summary>
            重置工作路径
            <para>
            重置后将回到根路径
            
            </para>
            </summary>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Cd(Spire.Pdf.General.Paper.Ofd.Pkg.Container.VirtualContainer)">
            <summary>
            切换到制定的虚拟容器目录下
            </summary>
            <param name="vc"> 虚拟容器 </param>
            <returns> this </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Cd(System.String)">
            <summary>
            改变目录  Change Directory
            </summary>
            <param name="path"> 路径位置 </param>
            <returns> this </returns>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.ErrorPathException"> 路径不存在 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Cd(System.Collections.Generic.LinkedList{System.String},System.String)">
            <summary>
            改变目录  Change Directory
            <para>
            路径最后如果是目录也不加 "/"
            
            </para>
            </summary>
            <param name="path">    路径位置 </param>
            <param name="workDir"> 已有工作目录 </param>
            <returns> this </returns>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.ErrorPathException"> 路径不存在 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Exist(System.Collections.Generic.LinkedList{System.String})">
            <summary>
            判断路径是否存在
            </summary>
            <param name="workDir"> 路径集合 </param>
            <returns> true -存在，false - 不存在 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.DirExit(System.Collections.Generic.LinkedList{System.String})">
            <summary>
            判断路径是否存在
            </summary>
            <param name="workDir"> 工作路径 </param>
            <returns> true -存在，false - 不存在 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Pwd">
            <summary>
            打印工作目录 Print Work Directory
            <para>
            路径最后如果是目录也不加 "/"
            
            </para>
            </summary>
            <returns> 工作目录路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Pwd(System.Collections.Generic.LinkedList{System.String})">
            <summary>
            打印工作目录 Print Work Directory
            </summary>
            <param name="workDir"> 工作目录 </param>
            <returns> 工作目录路径 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.GetAbsTo(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            获取以当前路径为基础的容器内绝对路径
            </summary>
            <param name="to"> 目标路径 </param>
            <returns> 容器内绝对路径 </returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Get(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.Get(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.GetFile(Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            获取路径下的文件
            </summary>
            <param name="stLoc"> 路径 </param>
            <returns> 系统文件路径 </returns>
            <exception cref="T:System.IO.FileNotFoundException"> 文件或路径不存在 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.GetContainer(System.Collections.Generic.LinkedList{System.String})">
            <summary>
            通过路径获取容器
            </summary>
            <param name="workDir"> 路径序列 </param>
            <returns> 虚拟容器 </returns>
            <exception cref="T:System.IO.FileNotFoundException"> 路径不存在 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator.GetContainer(System.String)">
            <summary>
            根据路径获取虚拟容器对象
            <para>
            获取的同时会缓存整个容器链路
            
            </para>
            </summary>
            <param name="containerPath"> 容器目录 </param>
            <returns> 虚拟容器 </returns>
            <exception cref="T:System.IO.FileNotFoundException"> 路径不存在 </exception>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage">
            <summary>
            资源管理器
            <para>
            使用ID随机访问文档中出现的资源对象
            </para>
            <para>
            包括 公共资源序列（PublicRes） 和 文档资源序列（DocumentRes）
            </para>
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            </para>
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.colorSpaceMap">
            <summary>
            颜色空间
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.drawParamMap">
            <summary>
            绘制参数
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.fontMap">
            <summary>
            字形
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.multiMediaMap">
            <summary>
            多媒体对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.compositeGraphicUnitMap">
            <summary>
            矢量图像
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.#ctor(Spire.Pdf.General.Paper.Ofd.Reader.OFDReader)">
            <summary>
            创建资源管理器
            <para>
            选择默认文档（Doc_0）进行资源的加载
            
            </para>
            </summary>
            <param name="ofdReader"> OFD解析器 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.#ctor(Spire.Pdf.General.Paper.Ofd.Reader.OFDReader,System.Int32)">
            <summary>
            指定文档创建资源管理器
            </summary>
            <param name="ofdReader"> OFD解析器 </param>
            <param name="docNum">    文档序号，从0起 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.GetDrawParam(System.String)">
            <summary>
            获取绘制参数
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <param name="id"> 资源ID </param>
            <returns> 绘制参数，不存在返回null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.GetMultiMedia(System.String)">
            <summary>
            获取多媒体对象
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <param name="id"> 资源ID </param>
            <returns> 多媒体对象，不存在返回null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.GetImage(System.String)">
            <summary>
            获取图片资源的图片对象
            </summary>
            <param name="refID"> 引用ID </param>
            <returns>  图片流 </returns>
            <exception cref="T:System.IO.IOException"> IO异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.GetImage(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.PageObj.Layer.Block.ImageObject)">
            <summary>
            获取图片对象的图像
            <para>
            如果图片存在蒙板，那么返回蒙板后的图像
            
            </para>
            </summary>
            <param name="imageObject"> 图片对象 </param>
            <returns> 图片流（蒙板后） </returns>
            <exception cref="T:System.IO.IOException"> 图片操作IO异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.GetFont(System.String)">
            <summary>
            获取 字形
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <param name="id"> 资源ID </param>
            <returns> 字形，不存在返回null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.GetColorSpace(System.String)">
            <summary>
            获取颜色空间
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <param name="id"> 资源ID </param>
            <returns> 颜色空间，不存在返回RGB </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.GetCompositeGraphicUnit(System.String)">
            <summary>
            获取矢量图形
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <param name="id"> 资源ID </param>
            <returns> 矢量图形，不存在返回null </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.LoadDoc(System.Int32)">
            <summary>
            加载指定文档的资源
            <para>
            由于每个文档的ID体系都是独立的，
            </para>
            <para>
            所以资源也是独立的，因此每次加载都会对上一个文档的资源进行清理。
            
            </para>
            </summary>
            <param name="docNum"> 文档序号，从0起 </param>
            <returns> this </returns>
            <exception cref="T:System.IO.IOException">       文件读写异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException"> 文档解析异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.LoadDefaultDoc">
            <summary>
            多文档资源加载
            </summary>
            <exception cref="T:System.IO.IOException">       文件读写异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException"> 文档解析异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.LoadDocRes(Spire.Pdf.General.Paper.Ofd.Core.BasicStructure.Ofd.DocBody)">
            <summary>
            加载文档中的资源
            </summary>
            <param name="docBody"> 文档描述信息 </param>
            <exception cref="T:System.IO.IOException">       文件读写异常 </exception>
            <exception cref="T:Spire.Pdf.General.Paper.Ofd.Reader.DocumentException"> 文档解析异常 </exception>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.LoadResFile(Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator,Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            加载资源文文件中描述的资源对象
            <para>
            该方法不应该抛出异常所有异常均应该被忽略以便程序继续执行
            
            </para>
            </summary>
            <param name="rl">     资源加载器 </param>
            <param name="resLoc"> 资源文件位置 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.Abs(Spire.Pdf.General.Paper.Ofd.Reader.ResourceLocator,Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc,Spire.Pdf.General.Paper.Ofd.Core.BasicType.ST_Loc)">
            <summary>
            获取资源的绝对地址
            </summary>
            <param name="rl">     资源加载器 </param>
            <param name="base">   资源文件的通用存储路径 </param>
            <param name="target"> 资源文件路径 </param>
            <returns> 资源文件绝对地址 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.ColorSpaces">
            <summary>
            获取文档中所有 颜色空间
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <returns> 颜色空间列表 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.DrawParams">
            <summary>
            获取文档中所有 绘制参数
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <returns> 绘制参数 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.Fonts">
            <summary>
            获取文档中所有 字形
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <returns> 字形 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.MultiMedias">
            <summary>
            获取文档中所有 媒体对象
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <returns> 媒体对象 </returns>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Ofd.Reader.ResourceManage.CompositeGraphicUnits">
            <summary>
            获取文档中所有 矢量图形
            <para>
            注意：资源管理器提供的资源对象均为只读对象（副本），不允许对资源进行修改。
            
            </para>
            </summary>
            <returns> 矢量图形 </returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.SealOFDReader">
            <summary>
            印章ofd的解析器
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.Tools.ImageUtils">
            <summary>
            图片处理工具
            @since 2021-04-10 18:31:03
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Tools.ImageUtils.RenderMask(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            蒙版抠图
            <para>
            根据mask中像素的颜色将原图中的像素抠掉
            
            </para>
            </summary>
            <param name="image"> 原始图片 </param>
            <param name="mask">  蒙板图片 </param>
            <returns> 扣去背景的图片对象 </returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Tools.ImageUtils.CreateImage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            创建图片
            </summary>
            <param name="width">         图形宽度 </param>
            <param name="height">        图像高度 </param>
            <param name="isTransparent"> 是否透明 </param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Ofd.Reader.Tools.ImageUtils.Gray(System.Int32,System.Int32,System.Int32)">
            <summary>
            计算灰度
            </summary>
            <param name="r"> 红色通道 </param>
            <param name="g"> 绿色通道 </param>
            <param name="b"> 蓝色通道 </param>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.tools.NameSpaceCleaner">
            <summary>
            命名空间清理类
            <para>
            用于清理已经存在的命名空间
            
            @author libra19911018
            @since 2020-10-15 19:38:15
            </para>
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Ofd.Reader.tools.NameSpaceModifier">
            <summary>
            命名空间变更
            @since 2020-10-15 20:01:20
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.AbstractProcessor">
            <summary>
            This is a abstract class base processor, it provides common functions.
            </summary>
            <author>linwei</author>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.AbstractProcessor.PicPretreatment(System.Xml.XmlDocument,System.String,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
             pretreatment of picture
            </summary>
            <param name="xmlDoc">input file stream</param>
            <param name="fireNodeName">first node</param>
            <param name="picPath">picture location</param>
            <param name="nms">xml namespace manager</param>
            <returns>result stream</returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.IProcessor">
            <summary>
            This is the interface of pre and post processors
            </summary>
            <author>linwei</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.IUofCompressAdapter">
            <summary>
            interface for compression adapter
            </summary>
            <author>linwei</author>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.IUofCompressAdapter.Transform">
            <summary>
            compress or decompress
            </summary>
            <returns>true if succeeded</returns>
            <returns>false if failed</returns>
            <exception cref="T:System.Exception">exceptions happen</exception>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Uof.IUofCompressAdapter.InputFilename">
            <summary>
            input file name
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Uof.IUofCompressAdapter.OutputFilename">
            <summary>
            output file name
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.IUOFTranslator">
            <summary>
            This interface defines the exposed interface of Translator
            </summary>
            <author>linwei</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.NotAnOoxDocumentException">
            <summary>Thrown whenever an error occurs during the build.</summary>
            <author>linwei</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.NotAnUofDocumentException">
            <summary>Thrown whenever an error occurs during the build.</summary>
            <author>linwei</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.OoxZipResolver">
            <summary>
            An XmlUrlResolver for zip packaged files
            </summary>
            <author>sunqingzhi, linwei</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.ProcessingState">
            <summary>
            Zip archiving states
            </summary>
            <author>linwei, sunqingzhi</author>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.ProcessingState.None">
            <summary>
            Not archiving
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.ProcessingState.EntryWaiting">
            <summary>
            Waiting for an entry
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.ProcessingState.EntryStarted">
            <summary>
            Processing an entry
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.OoxZipWriter">
            <summary>
            An <c>XmlWriter</c> implementation for serializing the xml stream to a zip archive.
            All the necessary information for creating the archive and its entries is picked up 
            from the incoming xml stream and must conform to the following specification :
            
            TODO : XML schema
            
            example :
            
            <c>&lt;pzip:archive pzip:target="path"&gt;</c>
            	<c>&lt;pzip:entry pzip:target="relativePath"&gt;</c>
            		<c>&lt;-- xml fragment --&lt;</c>
            	<c>&lt;/pzip:entry&gt;</c>
            	<c>&lt;-- other zip entries --&lt;</c>
            <c>&lt;/pzip:archive&gt;</c>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.OoxZipWriter.zipOutputStream">
            <summary>
            The zip archive
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.OoxZipWriter.delegateWriter">
            <summary>
            A delegate <c>XmlWriter</c> that actually feeds the zip output stream. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.OoxZipWriter.delegateSettings">
            <summary>
            The delegate settings
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.OoxZipWriter.fileDict">
            <summary>
            源文件
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.OoxZipWriter.binarySource">
            <summary>
            Source attribute of the currently processed binary file
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.OoxZipWriter.binaries">
            <summary>
            所有需要处理的二进制文件
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.OoxZipWriter.#ctor(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},System.IO.Stream,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.OoxZipWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>
            Delegates <c>WriteStartElement</c> calls when the element's prefix does not 
            match a zip command.  
            </summary>
            <param name="prefix"></param>
            <param name="localName"></param>
            <param name="ns"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.OoxZipWriter.WriteEndElement">
            <summary>
            Delegates <c>WriteEndElement</c> calls when the element's prefix does not 
            match a zip command. 
            Otherwise, close the archive or flush the delegate writer. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.OoxZipWriter.CopyBinaryData">
            <summary>
            copy binary data (currently, only picture) in to zip archive
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.OoxZipWriter.Node">
            <summary>
            Simple representation of elements or attributes nodes
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.ResourceResolver">
            <summary>
            An XmlUrlResolver for embedded resources.
            </summary>
            <author>sunqingzhi, linwei</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.TranslatorConstants">
            <summary>
            This class is used to hold contants.
            </summary>
            <author>linwei</author>
            <modify>linyaohu</modify>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.DocType">
            <summary>
            OOX file type
            </summary>
            <author>linyaohu</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.TranslatorFactory">
            <summary>
            Translator factory which can judeg the input file type and initialize
            </summary>
            <author>linyaohu</author>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.TranslatorFactory.CheckUOFFileType(System.String)">
            <summary>
            check uof file type
            </summary>
            <param name="srcFileName">source file name</param>
            <returns>document type</returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.UofEventArgs">
            <summary>
            The event arguments passed between TranslatorLib and Add-in
            </summary>
            <author>linwei</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.UOFTranslator">
            <summary>
            This is a abstract class base Translator, it provides common functions.
            </summary>
            <author>linwei</author>
            <modifier>linyaohu</modifier>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.MainTransform(System.String,System.Xml.XmlUrlResolver,System.String,System.String,System.String)">
            <summary>
             main transform which needs the orginal File
            </summary>
            <param name="directionXSL">transform direction</param>
            <param name="resourceResolver">xsl location</param>
            <param name="originalFile">original File</param>
            <param name="inputFile">File after pretreatment</param>
            <param name="outputFile">output file</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.ZipXMLFile(System.String)">
            <summary>
            zip the big xml file
            </summary>
            <param name="inputFile">input xml file</param>
            <returns>zip file</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.PicPretreatment(System.Xml.XmlDocument,System.String,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
             pretreatment of picture
            </summary>
            <param name="xmlDoc">input file stream</param>
            <param name="fireNodeName">first node</param>
            <param name="picPath">picture location</param>
            <param name="nms">xml namespace manager</param>
            <returns>result stream</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.CustomXMPretreatment(System.Xml.XmlDocument,System.String,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            pretreatment of custom xml data,OOXM to UOF
            </summary>
            <param name="xmlDoc">input file stream</param>
            <param name="firstNodeName">first node</param>
            <param name="nms">name space manager</param>
            <returns>result stream</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.GetChartData(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
             get the embeded chart data
            </summary>
            <param name="chartTypeNode">chart type node (eg:c:barChart)</param>
            <param name="nm">name space</param>
            <returns>chart data</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.GetSeriesName(System.Xml.XmlNodeList,System.Xml.XmlNamespaceManager)">
            <summary>
             get the series name
            </summary>
            <param name="series">series node</param>
            <param name="nm">name space</param>
            <returns>series name</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.GetCategoryName(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
             get the category name
            </summary>
            <param name="ser">series node</param>
            <param name="nm">name space</param>
            <returns>category name</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.GetSeriesName(System.String)">
            <summary>
             get the series' name
            </summary>
            <param name="chartFile">chart xml file</param>
            <returns>series' name</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.GetCategoryName(System.String)">
            <summary>
            get the categories name
            </summary>
            <param name="chartFile">chart xml file</param>
            <returns>categories name</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.ChkChartTypeNodes(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
             Check the chart cotains how many chart Types (Combo type)
            </summary>
            <param name="xdoc">chart file</param>
            <param name="nm">name space manager</param>
            <returns>chart type nodes</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UOFTranslator.GetTitleText(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            get the title's text
            </summary>
            <param name="paragraphNode">a:p</param>
            <param name="nm">name sapce</param>
            <returns>title</returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.UofWriter">
            <summary>
            This class is used to handle the post processing for UOF.Currently, 
            we just replace the picture element with base64 content.
            </summary>
            <author>sunqingzhi, linwei</author>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.UofZipWriter">
            <summary>
            Zip archiving states
            </summary>
            <author>linwei, sunqingzhi</author>
            <summary>
            An <c>XmlWriter</c> implementation for serializing the xml stream to a zip archive.
            All the necessary information for creating the archive and its entries is picked up 
            from the incoming xml stream and must conform to the following specification :
            
            TODO : XML schema
            
            example :
            
            <c>&lt;pzip:archive pzip:target="path"&gt;</c>
            	<c>&lt;pzip:entry pzip:target="relativePath"&gt;</c>
            		<c>&lt;-- xml fragment --&lt;</c>
            	<c>&lt;/pzip:entry&gt;</c>
            	<c>&lt;-- other zip entries --&lt;</c>
            <c>&lt;/pzip:archive&gt;</c>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.UofZipWriter.zipOutputStream">
            <summary>
            The zip archive
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.UofZipWriter.delegateWriter">
            <summary>
            A delegate <c>XmlWriter</c> that actually feeds the zip output stream. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.UofZipWriter.delegateSettings">
            <summary>
            The delegate settings
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.UofZipWriter.sourcefile">
            <summary>
            源文件
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.UofZipWriter.binarySource">
            <summary>
            Source attribute of the currently processed binary file
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Uof.UofZipWriter.binaries">
            <summary>
            所有需要处理的二进制文件
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UofZipWriter.#ctor(System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.IO.Stream})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UofZipWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>
            Delegates <c>WriteStartElement</c> calls when the element's prefix does not 
            match a zip command.  
            </summary>
            <param name="prefix"></param>
            <param name="localName"></param>
            <param name="ns"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UofZipWriter.WriteEndElement">
            <summary>
            Delegates <c>WriteEndElement</c> calls when the element's prefix does not 
            match a zip command. 
            Otherwise, close the archive or flush the delegate writer. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.UofZipWriter.CopyBinaryData">
            <summary>
            copy binary data (currently, only picture) in to zip archive
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.UofZipWriter.Node">
            <summary>
            Simple representation of elements or attributes nodes
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.ZipEntryNotFoundException">
            <summary>Thrown whenever an error occurs during the build.</summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipEntryNotFoundException.#ctor">
            <summary>Constructs an exception with no descriptive information.</summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipEntryNotFoundException.#ctor(System.String)">
            <summary>Constructs an exception with a descriptive message.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipEntryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Constructs an exception with a descriptive message and a reference to the instance of the <c>Exception</c> that is the root cause of the this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">An instance of <c>Exception</c> that is the cause of the current Exception. If <paramref name="innerException"/> is non-null, then the current Exception is raised in a catch block handling <paramref>innerException</paramref>.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipEntryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the exception class with serialized data.</summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.ZipException">
            <summary>Thrown whenever an error occurs during the build.</summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipException.#ctor">
            <summary>Constructs an exception with no descriptive information.</summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipException.#ctor(System.String)">
            <summary>Constructs an exception with a descriptive message.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipException.#ctor(System.String,System.Exception)">
            <summary>Constructs an exception with a descriptive message and a reference to the instance of the <c>Exception</c> that is the root cause of the this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">An instance of <c>Exception</c> that is the cause of the current Exception. If <paramref name="innerException"/> is non-null, then the current Exception is raised in a catch block handling <paramref>innerException</paramref>.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the exception class with serialized data.</summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.ZipFactory">
            <summary>
            ZipFactory provides instances of IZipReader and IZipWriter.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipFactory.CreateArchive(System.String)">
            <summary>
            Provides an instance of IZipWriter.
            </summary>
            <param name="path">The path of the ZIP file to create.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipFactory.OpenArchive(System.String)">
            <summary>
            Provides an instance of IZipReader.
            </summary>
            <param name="path">The path of the ZIP file to read.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.ZipReader">
            <summary>
            ZipReader defines an abstract class to read entries from a ZIP file.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipReader.GetEntry(System.String)">
            <summary>
            Get an entry from a ZIP file.
            </summary>
            <param name="relativePath">The relative path of the entry in the ZIP
            file.</param>
            <returns>A stream containing the uncompressed data.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipReader.Close">
            <summary>
            Close the ZIP file.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Uof.ZipWriter">
            <summary>
            ZipWriter defines an abstract class to write entries into a ZIP file.
            To add a file, first call AddEntry with the relative path, then
            write the content of the file into the stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZipWriter.AddEntry(System.String)">
            <summary>
            Adds an entry to the ZIP file (only writes the header, to write
            the content use Stream methods).
            </summary>
            <param name="relativePath">The relative path of the entry in the ZIP
            file.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Uof.ZlibZipWriter.ResolvePath(System.String)">
            <summary>
            Resolves a path by interpreting "." and "..".
            </summary>
            <param name="path">The path to resolve.</param>
            <returns>The resolved path.</returns>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Pcl.Color.PixelEncodingMode.INDEXED_BY_PLANE">
            is the palette index for pixel 3 of row 1 (i1 is lsb; i3 is msb).
        </member>
        <member name="M:Spire.Pdf.General.Paper.Pcl.PCLFontDefinition.#ctor(Spire.Pdf.General.Paper.Font.Common.Locator.IStreamSource)">
            <summary>
            Initializes new PCL font definition object.
            </summary>
            <param name="streamSource"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Pcl.PclResource.WriteFonts(Spire.Pdf.General.Paper.Pcl.PclDocument)">
            <summary>
            Write font with PCL XL Font Formats.
            </summary>
            <param name="writer">PCL writer.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Pcl.PclFont.#ctor(Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFont)">
            <summary>
            PCL font.
            </summary>
            <param name="font">TTFont</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Pcl.PclFont.WriteFont(Spire.Pdf.General.Paper.Pcl.PclDocument)">
            <summary>
            Write font with PCL XL Font Formats.
            </summary>
            <param name="writer">PCL writer.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Pcl.PclFontBuilder.#ctor(Spire.Pdf.General.Paper.Pcl.PclDocument)">
            <summary>
            Constructor
            </summary>
            <param name="writer">Pcl document writer.</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Pcl.PclFontBuilder.WriteFont(Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFontSubset)">
            <summary>
            Write font with PCL XL Font Formats.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Pcl.PclFontBuilder.WriteFont(Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFont)">
            <summary>
            Write font with PCL XL Font Formats.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Pcl.PclBuilderOptions.ScaleForPrecison">
            <summary>
            PCL only support point unit "Int16",but PsPath support point unit "Float".
            1.When filling region is very small,overlap to line("Int16" to "Float").
            If only fill(no stroke),PsPath disappear.
            Bug_127/220/316/354/499,BaselineFile_8
            2.Glyph position loss precison.
            So,by scaling,advoid precison loss.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Pcl.Tags.SegmentIdentifier">
            <summary>
            Font segment identifier.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Pcl.Tags.SegmentIdentifier.GT">
            <summary>
            Global TrueType Data
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Pcl.Tags.SegmentIdentifier.NG">
            <summary>
            Null segment
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Base.CodePage.GetEncoding(System.Int32)">
            <summary>
            Returns the encoding associated with the specified code page identifier.
            </summary>
            <param name="codepage">The code page identifier of the preferred encoding.</param>
            <returns>The encoding that is associated with the specified code page.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Base.CodePage.GetEncoding(System.String)">
            <summary>
            Returns the encoding associated with the specified code page name.
            </summary>
            <param name="name">The code page name of the preferred encoding.</param>
            <returns>The encoding that is associated with the specified code page.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.CFF.CFFFontParser.Parse(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Common.FontFactory.CreateFont(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            Creates a font, using font definition ( that contains font type and font files )
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Common.IFontFactory.CreateFont(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
             Creates a font, using font definition and ttfReader
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Common.IFontParser.Parse(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            Parses font from  fontReader and fontDefinition
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTCFontSource.GetFontDefinitions">
            <summary>
            Parse for fontSource
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTCFontSource.GetFontDefinitionsImpl(System.Collections.ArrayList,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            Parse font form fontDefinitions and ttfReader
            </summary>
            <param name="fontDefinitions"></param>
            <param name="ttfReader"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTFFontParser.ParseImpl">
            <summary>
            Parse for font
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTFFontParser.ParseImpl(Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            Parse for fontReader
            </summary>
            <param name="fontReader"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTFFontParser.ParseringImpl(Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
             Parse for font
            </summary>
            <param name="ttfReader"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Type1.Type1FontParser.Parse(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Type42.Type42Builder.EncodeTableData(System.Byte[])">
            <summary>
            Encodes table data to ASCII hexadecimal string.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.PostScript.PostScriptApsGlyphsIndicesReader">
            <summary>
            Reference Spire.Pdf.General.Paper.Drawing.Rendering.Xps.ApsGlyphsIndicesToXpsReader
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.PostScript.PostScriptApsGlyphsIndicesReader.IsValidXmlChar(System.Int32)">
            <summary>
            Reference Spire.Pdf.General.Paper.Drawing.Rendering.Ps.XmlDocumentBuilder,IsValidXmlChar(char c)
            </summary>
            <param name="utf32Char"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.PostScript.PostScriptApsGlyphsIndicesReader.GetFormattedIndicesCharWidth(System.Int32)">
            <summary>
            Get the char width
            </summary>
            <param name="i">The index</param>
            <returns>The char width</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.PostScript.PostScriptApsGlyphsIndicesReader.GetFormattedIndicesTextRise">
            <summary>
            Get the text rise
            </summary>
            <returns>The text rise</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.PostScript.PostscriptBuilderContext.CheckCharRange(System.String)">
            <summary>
            check character range 
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.PostScript.PostscriptBuilderContext.GetEncodeString(System.String)">
            <summary>
            Encode the font name,Because the font has illegal characters, Postscript does not know
            </summary>
            <param name="fontName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.PostScript.PostscriptWriter.WriteLine(System.String,System.String,System.String)">
            <summary>
            Writes text followed by new line characters.
            The string must contain only 7 bit characters.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Svg.FilterEffects.GaussianBlur.FilterEdge(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Edge softness.
            </summary>
            <param name="image">Target image.</param>
            <param name="mw">Width.</param>
            <param name="mh">Height.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Svg.Ps.SvgToPsConverter.RecalculateCrossRectCurves(System.Single[],System.Int32,Spire.Pdf.General.Paper.Svg.Ps.SvgToPsConverter.SvgPathCommand,System.Single)">
            <summary>
            bug4304中，当圆弧起始点和终点在同一矩形区域，且该圆弧角度大于180度，说明该曲线的圆弧角度大于270，在绘制0区域时，由于cut点在曲线的起始点，
            在计算曲线时会漏掉该区域大于270度到曲线终点这部分曲线，该方法重新计算该部分曲线
            </summary>
            <param name="crossRectCurves"></param>
            <param name="aproxRatio"></param>
            <param name="pathCommand"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Svg.SvgPsReader.Unicode2String(System.String)">
            <summary>
            将unicode字符串转为普通字符串
            </summary>
            <param name="unicode"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Word.DocumentElement.Text.m_horizontalScal">
            <summary>
            The horizontal scal of current text
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Word.DocumentElement.Text.HorizontalScal">
            <summary>
            Get or set the horizontal scal
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.Doc.DocDocumentBuilder.SetHorizontalScal(Spire.Pdf.General.Paper.Word.DocumentElement.Text,Spire.Pdf.General.Paper.Drawing.PsFont)">
            <summary>
            Set the horizontal scal value to textElement
            </summary>
            <param name="textElement">The text element</param>
            <param name="font">The font</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.Doc.StreamsController.SetEmbedFontTag(System.IO.Stream)">
            <summary>
            write embedFont tag
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.IsHeyperlinkText(System.Drawing.RectangleF)">
            <summary>
            Whether the text inside the rectangle is the hyperlink text.
            </summary>
            <param name="rect">The rectangle</param>
            <returns>if inside return true or false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.HandHyperGlyph(System.Drawing.PointF,System.Drawing.SizeF,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs,System.String)">
            <summary>
            Hand hyper glyph.
            </summary>
            <param name="newPos">The new position</param>
            <param name="newSize">The new size</param>
            <param name="glyphs">The glyphs</param>
            <param name="text">The text</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.CreateHyperGlyph(System.Drawing.PointF,System.Drawing.SizeF,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs,System.String)">
            <summary>
            Create new hyper glyph.
            </summary>
            <param name="newPos">The new position</param>
            <param name="newSize">The new size</param>
            <param name="glyphs">The glyphs</param>
            <param name="text">The text</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.IsBuildNewHyperGlyph(System.Drawing.PointF,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs)">
            <summary>
            Hand new line.
            </summary>
            <param name="newPos">The new position</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.ClearCurrentHyperGlyph">
            <summary>
            Clear current hyper glyph.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.IsSameHorizontalLineText(Spire.Pdf.General.Paper.Drawing.PsMatrix)">
            <summary>
            Whether the text is on same horizontal line.
            </summary>
            <param name="matrix">The ps matrix</param>
            <returns>if the text is on same horizontal line return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.GetPsFont(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs)">
            <summary>
            Get the ps font.
            </summary>
            <param name="glyphs">The ps glyphs</param>
            <returns>ps font</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.IsLargePages">
            <summary>
            Whether this page is a large page
            </summary>
            <returns>if current page`s width big than 1584 or height big than 1584,return ture or false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.CropPsImage(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath,Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsImage)">
            <summary>
            Crop the ps image.
            </summary>
            <param name="psPath">The ps path</param>
            <param name="psImage">The ps image</param>
            <returns>The ps image</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.GetImageClipRectangleF(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath)">
            <summary>
            Get the image clip rectanglef.
            </summary>
            <param name="clip">The ps path</param>
            <returns>The rectangle array list</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.GetVisibleClipRegion(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath)">
            <summary>
            Get the visible clip region.
            </summary>
            <param name="clip">The ps path</param>
            <returns>The visible clip region</returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.ApsRecognizer.PsNormalizer.VisitHyperLink(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsHyperlink)">
            <summary>
            Visit hyper link.
            </summary>
            <param name="hyperLink">The hyper link</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.Format.IFlowDocumentBuilder.WriteFooter(Spire.Pdf.General.Paper.Word.ToFlowDoucment.Format.FormatElement,System.Single,System.Int32)">
            <summary>
            html Split Page Number
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.Format.IFlowDocumentBuilder.GetCurrentPageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.Format.IFlowDocumentBuilder.JavaScript">
             <summary>
            html write javascript
             </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.MathUtil.MeasurementUtil.SortTextBlock(Spire.Pdf.General.Paper.Word.ToFlowDoucment.PageElement.TextBlock)">
            <summary>
            Sort text block.
            </summary>
            <param name="textBlocks">The text block</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.PageElement.PlaneObjectPlacement.IsDrColorEqual(Spire.Pdf.General.Paper.Drawing.PsColor,Spire.Pdf.General.Paper.Drawing.PsColor)">
            <summary>
            compare whether two color values are the same
            </summary>
            <returns>true if the same or false</returns>
        </member>
        <member name="T:Spire.Pdf.General.Find.PdfTextFind">
            <summary>
            The class representing a result of searching designated text from PDF page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Find.PdfTextFind.m_fontName">
            <summary>
            Current text actual font name
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Find.PdfTextFind.m_originalFontName">
            <summary>
            Current text original font name
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.FontName">
            <summary>
            Get the actual font name
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.OriginalFontName">
            <summary>
            Get the original font name
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.SearchText">
            <summary>
             Gets  search text of this System.String structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.MatchText">
            <summary>
            Gets  match text of this System.String structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.OuterText">
            <summary>
            Gets  text which is including the searched text of this System.String structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.LineText">
            <summary>
            Gets all the text of the line where covers the searched text of this System.String structure .
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.SearchPage">
            <summary>
            Gets page which is including the searched text of this Spire.Pdf.PdfPageBase structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.SearchPageIndex">
            <summary>
            Gets index of page which is including the searched text of this System.Int32 structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Position">
            <summary>
             Gets the position of the searched text of this System.Drawing.PointF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Positions">
            <summary>
            Used by find text cross line
            if the MatchText in more lines( >=2 ),the results can not contain by one Rectangle.
            So we need a list to save data.
            Gets the positions of the searched text of this System.Drawing.PointF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Size">
            <summary>
            if the MatchText in more lines( >=2 ),the results can not contain by one Rectangle.
            So we need a list to save data.
             Gets the size of the searched text of this System.Drawing SizeF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Sizes">
            <summary>
            Used by find text cross line
            if the MatchText in more lines( >=2 ),the results can not contain by one Rectangle.
            So we need a list to save data.
            Gets the sizes of the searched text of this System.Drawing SizeF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Bounds">
            <summary>
            Gets the bounds of the searched text of this System.Drawing RectangleF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Boundses">
            <summary>
            Used by find text cross line
            if the MatchText in more lines( >=2 ),the results can not contain by one Rectangle.
            So we need a list to save data.
            Gets the bounds of the searched text of this System.Drawing RectangleF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.TextBounds">
            <summary>
            if the MatchText in more lines( >=2 ),the results can not contain by one Rectangle.
            So we need a list to save data.
            Gets the bounds of the searched text of this System.Drawing RectangleF structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.HighLight">
            <summary>
            Highlight the seached text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.HighLight(System.Drawing.Color)">
            <summary>
            Highlight the seached text.
            </summary>
            <param name="color">The hight light color.</param>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyHighLight">
            <summary>
            apply hight light of the seached text
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyHighLight(System.Drawing.Color)">
            <summary>
            Apply hight light of the seached text
            </summary>
            <param name="highlightColor">Hight light color</param>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ProcessingRectangle(System.Drawing.RectangleF)">
            <summary>
            Processing Rectangle.
            </summary>
            <param name="textRect">The textRect</param>
            <returns>The processed rectangle</returns>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyRecoverString(System.String)">
            <summary>
            apply hight light of the seached text
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyRecoverString(System.String,System.Boolean)">
            <summary>
            apply hight light of the seached text,with unicode
            </summary>
            <param name="newvalue"></param>
            <param name="unicode"></param>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyRecoverString(System.String,System.Drawing.Color)">
            <summary>
            Apply hight light of the seached text
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyRecoverString(System.String,System.Drawing.Color,System.Boolean)">
            <summary>
            apply hight light of the seached text,with unicode
            </summary>
            <param name="newvalue"></param>
            <param name="backColor"></param>
        </member>
        <member name="T:Spire.Pdf.General.Find.PdfTextFindCollection">
            <summary>
            The class representing all the resuls of searching designated text from PDF page
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Find.TextFindParameter">
             <summary>
            Setting find text Parameters
             </summary>
        </member>
        <member name="F:Spire.Pdf.General.Find.TextFindParameter.None">
            <summary>
             Do not select any parameters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Find.TextFindParameter.WholeWord">
            <summary>
            Full word matching.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Find.TextFindParameter.IgnoreCase">
            <summary>
            Ignore English character case.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Find.TextFindParameter.CrossLine">
            <summary>
            Find text Cross line
            The target text in one line or more(>=2) lines.
            It will be remove in the future because it will be set as default ;
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Find.TextFindParameter.Regex">
            <summary>
            Regular expression matching.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Find.PdfTextFinder">
            <summary>
            Representing the way how to find text which a target text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.Find(Spire.Pdf.PdfPageBase,System.Collections.Generic.List{System.Drawing.RectangleF},System.String,Spire.Pdf.General.Find.TextFindParameter)">
            <summary>
            Find text in a page with a table.
            </summary>
            <param name="page">The page</param>
            <param name="page">The find areas.</param>
            <param name="searchText">The target text</param>
            <param name="parameter">The way to find</param>
            <returns>The result find text</returns>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.SplitTextRangesList(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},System.Collections.Generic.List{System.Drawing.RectangleF})">
            <summary>
            Split text ranges by a list of rectangle.
            </summary>
            <param name="textRangesList">All text ranges</param>
            <param name="rectList">The list of rectangle.</param>
            <returns>A list of split result.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.Find(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF,System.String,Spire.Pdf.General.Find.TextFindParameter)">
            <summary>
            Find text in a page
            </summary>
            <param name="page">The page</param>
            <param name="rectangleF">The find area. if the value is RectangleF.Empty, area is the whole page.</param>
            <param name="searchText">The target text</param>
            <param name="parameter">The way to find</param>
            <returns>The result find text</returns>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.Find(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF,System.String,Spire.Pdf.General.Find.TextFindParameter,Spire.Pdf.Texts.PdfTextFindOptions)">
            <summary>
            Find text in a page
            </summary>
            <param name="page">The page</param>
            <param name="rectangleF">The find area. if the value is RectangleF.Empty, area is the whole page.</param>
            <param name="searchText">The target text</param>
            <param name="parameter">The way to find</param>
            /// <param name="options">The find options</param>
            <returns>The result find text</returns>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.FindAllText(Spire.Pdf.PdfPageBase)">
            <summary>
            Find all text in a page
            </summary>
            <param name="page">The page</param>
            <returns>All text find in the page.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.ConvertTextRangeCoordinate(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},Spire.Pdf.PdfPageBase)">
            <summary>
            Convert text coordinate, the lower-left corner is the origin of coordinates.
            </summary>
            <param name="page">The page</param>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.RevertTextRangeCoordinate(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},Spire.Pdf.PdfPageBase)">
            <summary>
            Revert text coordinate, revert to the original page coordinate.
            </summary>
            <param name="page">The page</param>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.SortAndGetAllText(Spire.Pdf.PdfPageBase,System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange}@,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Sort text range list by coordinate, and contact all text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFinder.MatchRectangleF(Spire.Pdf.General.Find.PdfTextFindCollection,System.Drawing.RectangleF)">
            <summary>
            Match TextFind in the range of rectangle from the given PDF Page.
            the coordinate origin is top left corner of the page.
            </summary>
            <param name="rectangleF">Provide a rangle to match textFind.</param>
            <returns>The match TextFinds.</returns>
        </member>
        <member name="T:Spire.Pdf.General.AbstractCodePointMapping">
            Abstract base class for code point mapping classes (1-byte character encodings).
        </member>
        <member name="F:Spire.Pdf.General.AbstractCodePointMapping.NOT_FOUND_CODE_POINT">
            Code point that is used if no code point for a specific character has been found. 
        </member>
        <member name="F:Spire.Pdf.General.AbstractCodePointMapping.NOT_A_CHARACTER">
            Unicode value indicating the the character is "not a character". 
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.#ctor(System.String,System.Int32[])">
            Main constructor.
            @param name the name of the encoding
            @param table the table ([code point, unicode scalar value]+) with the mapping
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.#ctor(System.String,System.Int32[],System.String[])">
            Extended constructor.
            @param name the name of the encoding
            @param table the table ([code point, unicode scalar value]+) with the mapping
            @param charNameMap all character names in the encoding (a value of null will be converted
                             to ".notdef")
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.buildFromTable(System.Int32[])">
            Builds the internal lookup structures based on a given table.
            @param table the table ([code point, unicode scalar value]+) with the mapping
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.getName">
            {@inheritDoc} 
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.mapChar(System.Char)">
            {@inheritDoc} 
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.getUnicodeForIndex(System.Int32)">
            Returns the main Unicode value that is associated with the given code point in the encoding.
            Note that multiple Unicode values can theoretically be mapped to one code point in the
            encoding.
            @param idx the code point in the encoding
            @return the Unicode value (or \uFFFF (NOT A CHARACTER) if no Unicode value is at that point)
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.getUnicodeCharMap">
            {@inheritDoc} 
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.getCodePointForGlyph(System.String)">
            Returns the index of a character/glyph with the given name. Note that this
            method is relatively slow and should only be used for fallback operations.
            @param charName the character name
            @return the index of the character in the encoding or -1 if it doesn't exist
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.getCharNameMap">
            {@inheritDoc} 
        </member>
        <member name="M:Spire.Pdf.General.AbstractCodePointMapping.ToString">
            {@inheritDoc} 
        </member>
        <member name="F:Spire.Pdf.General.CharGlyphs.winAnsiEncoding">
            The characters in WinAnsiEncoding
        </member>
        <member name="M:Spire.Pdf.General.CharGlyphs.glyphToString(System.String)">
            Return the glyphname from a string,
            eg, glyphToString("\\") returns "backslash"
        </member>
        <member name="M:Spire.Pdf.General.CharGlyphs.stringToGlyph(System.String)">
            Return the string representation of a glyphname,
            eg stringToGlyph("backslash") returns "\\"
        </member>
        <member name="T:Spire.Pdf.General.Excel.Compression">
            <summary>
            Compression method enumeration
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Compression.Store">
            <summary>Uncompressed storage</summary> 
        </member>
        <member name="F:Spire.Pdf.General.Excel.Compression.Deflate">
            <summary>Deflate compression method</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelCommon.m_Convertor">
            <summary>
            UnitConvertor
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelCommon.ColumnIndexToName(System.Int32)">
            <summary>
            Gets column name according to column index.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelCommon.IsDigit(System.String)">
            <summary>
            判断是否是阿拉伯数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelCommon.FilterCharacter(System.String)">
            <summary>
            filter character
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Content_Types">
            <summary>
            [Content_Types].xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Workbook">
            <summary>
            xl/workbook.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Workbook_Rels">
            <summary>
            xl/_rels/workbook.xml.rels
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_SharedStrings">
            <summary>
            xl/sharedStrings.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Sheet">
            <summary>
            xl/worksheets/sheet.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_App">
            <summary>
            docProps/app.xml 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Rels">
            <summary>
            _rels/.rels 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Core">
            <summary>
            docProps/core.xml 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Theme">
            <summary>
            xl/theme/theme1.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Styles">
            <summary>
            xl/styles.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Sheet_rels">
            <summary>
            xl/worksheets/_rels/sheet.xml.rels
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_Drawing">
            <summary>
            xl/drawings/drawing.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_DrawingRels">
            <summary>
            xl/drawings/_rels/drawing.xml.rels
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.xmlList">
            <summary>
            all xml file to StringBuilder
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_CellValueIndex">
            <summary>
            set cell value index
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.zipExcel">
            <summary>
            all xml file to zip stream
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.CreateSheet">
            <summary>
            create sheet.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_SheetDrawings">
            <summary>
            all drawing.xml file
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.CreateDrawing">
            <summary>
            create drawing.xml
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.BeginDrawing">
            <summary>
            begin drawing
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.EndDrawing">
            <summary>
            end drawing
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.m_ImageId">
            <summary>
            add image id
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ExcelModel.imageDictionary">
            <summary>
            all image save to dictionary
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.InsertImage(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Drawing.Image)">
            <summary>
            add image,absolute
            </summary>
            <param name="posX"></param>
            <param name="posY"></param>
            <param name="imageWidth"></param>
            <param name="imageHeight"></param>
            <param name="image"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.InsertImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Drawing.Image)">
            <summary>
            add image,relative
            </summary>
            <param name="fromColumn"></param>
            <param name="fromRow"></param>
            <param name="toColumn"></param>
            <param name="toRow"></param>
            <param name="fromColumnOffset"></param>
            <param name="fromRowOffset"></param>
            <param name="toColumnOffset"></param>
            <param name="toRowOffset"></param>
            <param name="image"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.BeginSheet">
            <summary>
            begin sheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.EndSheet">
            <summary>
            end sheet
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.ExcelModel.Styles">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.ExcelModel.CurrentSheet">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.SaveToZip(System.IO.Stream)">
            <summary>
            save and compress all xml file to stream
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.ToZip">
            <summary>
            compress to zip file
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ExcelModel.Dispose">
            <summary>
            dispose
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Excel.XlsxWriter">
            <summary>
            write pageobject to xlsx
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.m_UnitConvertor">
            <summary>
            Unit Convertor
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.excel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.mStream">
            <summary>
            save xlsx file to stream
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.m_documentBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.textId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.Writer(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Base.PageObject})">
            <summary>
            pageObjects write xlsx
            </summary>
            <param name="pageObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetCellKey(System.Int32,System.Int32)">
            <summary>
            获取行列编号(A1,A2,A2....)
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.CellTextIsEmpty(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn)">
            <summary>
            单元格内容是否为空
            </summary>
            <param name="logicColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.CellTextIsDigit(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn)">
            <summary>
            单元格内容是否是数字
            </summary>
            <param name="logicColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetTextMaxHeight(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            获取当前集合中文本最大高度
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetCurrentRowTextMaxHeight(Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow,Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            获取当前行的最大高度
            </summary>
            <param name="logicRow"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetCurrentRowTextMaxHeightByLineLayout(Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow)">
            <summary>
            获取当前行的最大高度
            </summary>
            <param name="logicRow"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetCurrentRowTextMaxHeightByTextLayout(Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow)">
            <summary>
            获取当前行的最大高度
            </summary>
            <param name="logicRow"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.m_ColumnIncrementWidths">
            <summary>
            每一列额外增加的宽度值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.m_RowIncrementHeights">
            <summary>
            每一行额外增加的宽度值
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetColumnWidths(Spire.Pdf.Conversion.LogicStructure.Base.PageObject)">
            <summary>
            获取当前sheet列宽
            </summary>
            <param name="pageObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.EachColumnIncrementWidth(System.Int32,System.Single)">
            <summary>
            每一列需要额外增加的宽度值
            </summary>
            <param name="columnIndex"></param>
            <param name="width"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.EachRowIncrementHeight(System.Int32,System.Single)">
            <summary>
            每一列需要加宽的值
            </summary>
            <param name="rowIndex"></param>
            <param name="height"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.WriteContent(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,Spire.Pdf.Conversion.XlsxOptions,System.Boolean)">
            <summary>
            pageObjects write xlsx
            </summary>
            <param name="logicSheet"></param>
            <param name="options"></param>
            <param name="isWrapText"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.WriteBorderStyle(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn)">
            <summary>
            写入border样式,返回引用的样式Id号
            </summary>
            <param name="logicColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.WriteBackgroundStyle(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn)">
            <summary>
            写入background样式,返回引用的样式Id号
            </summary>
            <param name="logicColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.WriteStyleIdToCellXfs(System.Int32,System.Int32,Spire.Pdf.General.Excel.TextAlignment,System.Boolean)">
            <summary>
            把边框样式Id,填充背景样式Id,是否自动换行写入样式表中CellXfs节点,返回CellXfs节点引用的Id号
            </summary>
            <param name="borderStyleId"></param>
            <param name="backgroundStyleId"></param>
            <param name="textAlignment"></param>
            <param name="wrapText"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetTextSharedStrings(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,System.Single,System.Boolean,System.Boolean@)">
            <summary>
            获取当前列的文本在SharedStrings.xml中的字符串
            </summary>
            <param name="logicColumn"></param>
            <param name="rowTopY"></param>
            <param name="wrapText"></param>
            <param name="multilineText"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetTextSharedStrings(System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}},Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,System.Single,System.Boolean,System.Boolean@)">
            <summary>
            获取单元格内所有文本的SharedStrings.xml字符串
            </summary>
            <param name="newRowTextObjects"></param>
            <param name="logicColumn"></param>
            <param name="rowTopY"></param>
            <param name="wrapText"></param>
            <param name="multilineText"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetTextSharedStrings(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject},System.Boolean,System.Boolean,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn)">
            <summary>
            获取当前行所有文本的SharedStrings.xml字符串
            </summary>
            <param name="textObjects"></param>
            <param name="isNewLine"></param>
            <param name="isSpaceChar"></param>
            <param name="logicColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetTextObjectsByYCoordinate(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}})">
            <summary>
            每一行的文本对象按Y坐标排列
            </summary>
            <param name="rowTextObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetTextSharedStrings(Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            获取当前文本的SharedStrings.xml字符串
            </summary>
            <param name="textObject"></param>
            <param name="isNewLine"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetSpaceString(System.Single,System.Single,System.Single)">
            <summary>
            获取空格字符串
            </summary>
            <param name="x1"></param>
            <param name="x2"></param>
            <param name="fontSize"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetSpaceWidth(System.Int32,System.Single)">
            <summary>
            获取空格宽度
            </summary>
            <param name="number"></param>
            <param name="fontSize"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetSpaceStyle(System.String,System.Single)">
            <summary>
            根据空格字符串得到样式
            </summary>
            <param name="space"></param>
            <param name="fontSize"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetRowCount(System.Single,System.Single,System.Single)">
            <summary>
            获取两行文本之间隔多少个空行
            </summary>
            <param name="y1"></param>
            <param name="y2"></param>
            <param name="fontSize"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetNewLine(System.Int32,System.Single)">
            <summary>
            enter line,换行
            </summary>
            <param name="newLineCount">需要换多少行</param>
            <param name="fontSize">字符大小</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetMergeCells(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            获取所有已经被合并的行列
            </summary>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetMergeSheetColumns(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            横向合并列,返回合并列的范围
            </summary>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetMergeSheeRows(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,System.Collections.Generic.Dictionary{System.String,Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange})">
            <summary>
            纵向合并行,返回合并行的范围
            </summary>
            <param name="logicSheet"></param>
            <param name="crossRowColumnDictionarys"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.ExecuteMergeRows(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,System.Collections.Generic.Dictionary{System.String,Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange})">
            <summary>
            合并行
            </summary>
            <param name="beforeColumn"></param>
            <param name="currentColumn"></param>
            <param name="crossRowColumnDictionarys"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetCrossRowColumn(System.Collections.Generic.Dictionary{System.String,Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            查找当前列是否被合并,返回合并的范围
            </summary>
            <param name="crossRowColumnDictionarys"></param>
            <param name="startRowIndex"></param>
            <param name="endRowIndex"></param>
            <param name="startColumnIndex"></param>
            <param name="endColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetCrossRowColumn(System.Collections.Generic.Dictionary{System.String,Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange},System.Int32,System.Int32)">
            <summary>
            查找当前列是否被合并,返回合并的范围
            </summary>
            <param name="crossRowColumnDictionarys"></param>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetLogicColumn(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,System.Int32,System.Int32)">
            <summary>
            根据行列所引查找对象
            </summary>
            <param name="logicSheet"></param>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.MergeCellText(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,System.Collections.Generic.Dictionary{System.String,Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange})">
            <summary>
            合并单元格的文本
            </summary>
            <param name="logicSheet"></param>
            <param name="crossRowColumnDictionarys"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.MergeCellText(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange)">
            <summary>
            合并单元格的文本
            </summary>
            <param name="logicSheet"></param>
            <param name="mergeRange"></param>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.cellWidth">
            <summary>
            单元格默认宽度
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XlsxWriter.cellHeight">
            <summary>
            单元格默认高度
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.WriteImage(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.ImageObject},Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,System.Single,System.Boolean)">
            <summary>
            按相对位置写入图片
            </summary>
            <param name="imageObjects"></param>
            <param name="logicSheet"></param>
            <param name="height"></param>
            <param name="isConvertToMultipleSheet"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.WriteImage(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.ImageObject})">
            <summary>
            按绝对位置写入图片
            </summary>
            <param name="imageObjects"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetImageStartRowIndex(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            计算图片开始位置y在logicSheet表中的开始行索引
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetImageStartRowOffset(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            计算图片开始位置y坐标点和与开始行的偏移位置
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetImageEndRowIndex(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            计算图片在logicSheet表中的结束行索引
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetImageEndRowOffset(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            计算图片结束位置y坐标点和与结束行的偏移位置
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetImageStartColumnIndex(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            计算图片在logicSheet表中的开始列索引
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetImageStartColumnOffset(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            计算图片开始位置x坐标点和与开始列的偏移位置
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetImageEndColumnIndex(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            计算图片在logicSheet表中的结束列索引
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetImageEndColumnOffset(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            计算图片结束位置X坐标点和与结束列的偏移位置
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.WriteImage(Spire.Pdf.Conversion.LogicStructure.Base.ImageObject,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            按相对位置写入图片
            </summary>
            <param name="imageObject"></param>
            <param name="logicSheet"></param>
            <param name="udapteLogicSheet"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetFlipLogicSheet(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,System.Single)">
            <summary>
            反转逻辑sheet,改变Y坐标起始点,从左上角开始
            </summary>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetLogicRowsRemoveLastRow(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            LogicSheet最后一行没有内容,移出最后一行
            </summary>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.GetLogicSheetRemoveLastRow(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            LogicSheet最后一行没有内容,移出最后一行
            </summary>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.CreateNewLogic(Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow)">
            <summary>
            根据旧的逻辑列创建新的逻辑列
            </summary>
            <param name="srcLogicRow"></param>
            <param name="newLogicRow"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.UdapteLogicSheet(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            根据每一行增加的高度,更新逻辑行的高度,起始点,结束点
            根据每一列增加的宽度,更新逻辑列的宽度,起始点,结束点
            </summary>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.UdapteLogicSheetRowHeight(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            根据每一行增加的高度,更新逻辑行的高度,起始点,结束点
            </summary>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.UdapteLogicSheetColumnWidth(Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            根据每一列增加的宽度,更新逻辑列的宽度,起始点,结束点
            </summary>
            <param name="logicSheet"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XlsxWriter.IsUseUpdateLogicSheet(System.Drawing.RectangleF,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet,Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet)">
            <summary>
            
            </summary>
            <param name="imageRect"></param>
            <param name="logicSheet"></param>
            <param name="updateLogicSheet"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.Types">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.OverrideTheme">
            <summary>
            override theme1.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.OverrideStyles">
            <summary>
            override styles.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.DefaultImageExtensionJpeg">
            <summary>
            override image/jpeg
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.DefaultImageExtensionPng">
            <summary>
            Default image/png
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.DefaultRels">
            <summary>
            Default Extension rels
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.DefaultXml">
            <summary>
            Default Extension xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.OverrideWorkbook">
            <summary>
            override workbook.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.OverrideDocPropsApp">
            <summary>
            override app.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.OverrideDocPropsCore">
            <summary>
            override core.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.OverrideSharedStrings">
            <summary>
            override sharedStrings.xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.CloseTypes">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Content_Types.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.m_SheetIndex">
            <summary>
            sheet index for create sheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Content_Types.AddSheet">
            <summary>
            add a sheet.xml
            </summary>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Content_Types.m_DrawingId">
            <summary>
            Drawing id for add image
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Content_Types.AddDrawing">
            <summary>
            add a drawing.xmlk
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Content_Types.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.App.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.App.Properties">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.App.m_SheetCount">
            <summary>
            sheet count
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.App.CloseProperties">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.App.SheetCount">
            <summary>
            sheet count
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.App.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.App.AddContent">
            <summary>
            add app.xml content
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.App.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Core.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Core.CpCoreProperties">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Core.CpLastModifiedBy">
            <summary>
            author
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Core.CpCloseCoreProperties">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Core.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Core.AddContent">
            <summary>
            add core.xml content
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Core.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Drawing.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Drawing.XdrWsDrXmlns">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Drawing.CloseXdrWsDr">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Drawing.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Drawing.m_XdrcNvPrid">
            <summary>
            cNvPr node Id
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Drawing.AddImageContentAbsolute(System.Int32,System.String,System.Int64,System.Int64,System.Int32,System.Int32)">
            <summary>
            add image,absolute
            </summary>
            <param name="index"></param>
            <param name="imageName"></param>
            <param name="posX"></param>
            <param name="posY"></param>
            <param name="cx"></param>
            <param name="cy"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Drawing.AddImageContentRelative(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            add image,relative
            </summary>
            <param name="index"></param>
            <param name="imageName"></param>
            <param name="fromColumn"></param>
            <param name="fromRow"></param>
            <param name="toColumn"></param>
            <param name="toRow"></param>
            <param name="fromColumnOffset"></param>
            <param name="fromRowOffset"></param>
            <param name="toColumnOffset"></param>
            <param name="toRowOffset"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Drawing.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.DrawingRels.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.DrawingRels.RelationshipsXmlns">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.DrawingRels.CloseRelationships">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.DrawingRels.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.DrawingRels.m_RelImageId">
            <summary>
            relationship id for reference image
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.DrawingRels.AddRelationship(System.String)">
            <summary>
            add a relationship for reference image
            </summary>
            <param name="imageName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.DrawingRels.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.SharedStrings.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.SharedStrings.sstXmlns">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.SharedStrings.CloseSst">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.SharedStrings.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.SharedStrings.AddCellValue(System.String,System.Boolean)">
            <summary>
            add value for cell
            </summary>
            <param name="cellValue"></param>
            <param name="isContainsStyle"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.SharedStrings.UpdateSharedStringsCount(System.Int32)">
            <summary>
            update all cell count
            </summary>
            <param name="m_SharedStringsCount"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.SharedStrings.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.StyleSheet">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.CloseStyleSheet">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.m_FontNumber">
            <summary>
            文本各种字体样式,统计总数
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.m_cellFontStyleLists">
            <summary>
            文本各种字体样式,集合对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.m_backgroundStyleIndex">
            <summary>
            单元格背景各种样式,统计总数
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.m_borderStyleIndex">
            <summary>
            单元格边框各种样式,统计总数
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.m_borderStyleDictionary">
            <summary>
            单元格边框各种样式,集合对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.m_backgroundStyleDictionary">
            <summary>
            单元格背景各种样式,集合对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.m_CellXfsNumber">
            <summary>
            单元格引用CellXfs中的节点,统计总数
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Styles.m_CellXfsLists">
            <summary>
            单元格引用CellXfs中的节点,集合对象
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.SetFont(System.String,System.Drawing.FontStyle,System.Single,System.Drawing.Color)">
            <summary>
            设置字体样式
            </summary>
            <param name="fontname"></param>
            <param name="style"></param>
            <param name="size"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.GetFontStyle">
            <summary>
            获取设置字体样式字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.GetCellBorderStyleIndex(System.String,System.String,System.String,System.String)">
            <summary>
            从单元格边框样式集合中，获取相同样式的索引
            </summary>
            <param name="cellEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.GetCellBackgroundStyleIndex(System.String)">
            <summary>
            从单元格背景样式集合中，获取相同样式的索引
            </summary>
            <param name="cellEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.GetAllBorderStyle">
            <summary>
            从单元格边框样式集合中,获取所有的样式字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.GetBorderStyle(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="top"></param>
            <param name="bottom"></param>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.GetAllBackgroundStyle">
            <summary>
            从单元格背景样式集合中,获取所有的样式字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.AddCellXfs(System.Int32,System.Int32,System.Int32,Spire.Pdf.General.Excel.TextAlignment,System.Boolean)">
            <summary>
            增加一条单元格样式引用记录
            </summary>
            <param name="fontNumber"></param>
            <param name="bgIndex"></param>
            <param name="borderIndex"></param>
            <param name="alignment"></param>
            <param name="wrapText"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.GetCellXfsString">
            <summary>
            获取单元格样式所有的引用记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.AddContent">
            <summary>
            add content styles.xml
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Styles.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Excel.CellFontStyle">
            <summary>
            单元格字体样式类
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellFontStyle.m_FontName">
            <summary>
            单元格字体名称
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellFontStyle.m_FontStyle">
            <summary>
            单元格字体样式
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellFontStyle.m_Size">
            <summary>
            单元格字体大小
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellFontStyle.m_Color">
            <summary>
            单元格字体颜色
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellFontStyle.m_FontStyleIndex">
            <summary>
            单元格字体在样式表中的索引
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellFontStyle.FontName">
            <summary>
            单元格字体名称
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellFontStyle.FontStyle">
            <summary>
            单元格字体样式
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellFontStyle.Size">
            <summary>
            单元格字体大小
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellFontStyle.Color">
            <summary>
            单元格字体颜色
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellFontStyle.FontStyleIndex">
            <summary>
            单元格字体在样式表中的索引
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.CellFontStyle.Equals(System.Object)">
            <summary>
            比较是否是相同的样式
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.General.Excel.CellXfs">
            <summary>
            单元格在样式表中引用的节点
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellXfs.m_CellXfsIndex">
            <summary>
            单元格在样式表中引用的节点,索引值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellXfs.m_FontNumber">
            <summary>
            字体样式的索引值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellXfs.m_BgIndex">
            <summary>
            背景样式的索引值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellXfs.m_BorderIndex">
            <summary>
            边框样式的索引值
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellXfs.m_WrapText">
            <summary>
            是否自动换行
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.CellXfs.m_Alignment">
            <summary>
            文本默认居左
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellXfs.CellXfsIndex">
            <summary>
            单元格在样式表中引用的节点,索引值
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellXfs.FontNumber">
            <summary>
            字体样式的索引值
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellXfs.BgIndex">
            <summary>
            背景样式的索引值
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellXfs.BorderIndex">
            <summary>
            边框样式的索引值
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellXfs.WrapText">
            <summary>
            是否自动换行
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.CellXfs.Alignment">
            <summary>
            文本默认居左
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.CellXfs.Equals(System.Object)">
            <summary>
            比较是否是相同的样式
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Theme.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Theme.ATheme">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Theme.CloseATheme">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Theme.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Theme.AddContent">
            <summary>
            add themeElements content
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Theme.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook.Worksheet">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook.CloseWorksheet">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Workbook.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Workbook.AddSheet(System.Int32,System.String)">
            <summary>
            add a sheet.xml
            </summary>
            <param name="sheetIndex"></param>
            <param name="rid"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Workbook.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Sheet.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Sheet.Worksheet">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Sheet.CloseWorksheet">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.OpenXml">
            <summary>
            open sheet.xml
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.AddCols">
            <summary>
            添加宽度xml标签
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.InsertToCols(System.Collections.Generic.Dictionary{System.Int32,System.Single})">
            <summary>
            更新宽度表Cols
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.AddCell(System.String,System.Int32)">
            <summary>
            为单元格引用一个样式
            </summary>
            <param name="columnRow"></param>
            <param name="cellXfsNumber"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.AddCell(System.String,System.Int32,System.Int32)">
            <summary>
            为单元格引用一个样式
            </summary>
            <param name="columnRowKey"></param>
            <param name="textId"></param>
            <param name="cellXfsIndex"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.AddIgnoredErrors(System.String)">
            <summary>
            
            </summary>
            <param name="columnRowKey"></param>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Sheet.ignoredErrorsLists">
            <summary>
            忽烈错误的单元格
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Sheet.m_MergeCells">
            <summary>
            合并了某些单元格
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.AddRowAndHeight(System.UInt32,System.Single)">
            <summary>
            添加行,设置行高
            </summary>
            <param name="rowIndex"></param>
            <param name="rowHeight"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.EndRow">
            <summary>
            结束行
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.BeginSheetData">
            <summary>
            开始sheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.EndSheetData">
            <summary>
            结束sheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.AddMergeCells(System.Collections.Generic.List{System.String})">
            <summary>
            合并的单元格写入mergeCells节点
            </summary>
            <param name="mergeCells"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.CloseXml(System.Collections.Generic.List{System.String})">
            <summary>
            close node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet.IgnoredErrors">
            <summary>
            忽烈错误的单元格写入ignoredErrors节点
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Sheet_Rels.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Sheet_Rels.ATheme">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Sheet_Rels.CloseRelationships">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet_Rels.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet_Rels.AddRelationships(System.Int32,System.Int32)">
            <summary>
            add drawing reference for image
            </summary>
            <param name="index"></param>
            <param name="drawingIndex"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Sheet_Rels.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook_Rels.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook_Rels.Xmlns">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook_Rels.RelationshipTheme">
            <summary>
            add theme1.xml refences
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook_Rels.RelationshipStyles">
            <summary>
             add styles.xml refences
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook_Rels.RelationshipSharedStrings">
            <summary>
             add sharedStrings.xml refences
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook_Rels.CloseRelationships">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Workbook_Rels.m_RIdIndex">
            <summary>
            Relationship index
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Workbook_Rels.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Workbook_Rels.AddRelationship(System.Int32)">
            <summary>
            add a relationship node
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Workbook_Rels.CloseXml">
            <summary>
            close node
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XmlStringBuilder.m_Xml_version">
            <summary>
            xml version
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XmlStringBuilder.m_Content">
            <summary>
            StringBuilder
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XmlStringBuilder.m_NextLine">
            <summary>
            enter line
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XmlStringBuilder.m_XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.XmlStringBuilder.m_Stream">
            <summary>
            current StringBuilder stream
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XmlStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="xmlPath"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XmlStringBuilder.Append(System.String)">
            <summary>
            append content
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XmlStringBuilder.Replace(System.String,System.String)">
            <summary>
            Replace string
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XmlStringBuilder.CloseXml(System.String)">
            <summary>
            close node
            </summary>
            <param name="closeString"></param>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XmlStringBuilder.ToString">
            <summary>
            override ToString();
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.General.Excel.XmlStringBuilder.Path">
             <summary>
            Gets or sets current file path
             </summary>
        </member>
        <member name="P:Spire.Pdf.General.Excel.XmlStringBuilder.Stream">
            <summary>
            Gets current StringBuilder stream
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XmlStringBuilder.IndexOf(System.String)">
            <summary>
            字符串在此实例中的第一个匹配项的从零开始的索引
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Excel.XmlStringBuilder.Insert(System.Int32,System.String)">
            <summary>
            将字符串插入到此实例中的指定字符位置
            </summary>
            <param name="index"></param>
            <param name="str"></param>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Rels.XmlPath">
            <summary>
            current file path
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Rels.Relationships">
            <summary>
            namespace used by xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Rels.RelationshipApp">
            <summary>
            references app.xml file
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Rels.RelationshipCore">
            <summary>
            references core.xml file
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Rels.RelationshipWorkbook">
            <summary>
            references workbook.xml file
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.Rels.CloseRelationships">
            <summary>
            close xml last node
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Rels.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.Rels.CloseXml">
            <summary>
            close xml
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipExcel.ForceDeflating">
            <summary>Force deflate algotithm even if it inflates the stored file. Off by default.</summary>
        </member>
        <member name="T:Spire.Pdf.General.Excel.ZipFileEntry">
            <summary>
            Represents an entry in Zip file directory
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.Method">
            <summary>Compression method</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.FilenameInZip">
            <summary>Full path and filename as stored in Zip</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.FileSize">
            <summary>Original file size</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.CompressedSize">
            <summary>Compressed file size</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.HeaderOffset">
            <summary>Offset of header information inside Zip storage</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.FileOffset">
            <summary>Offset of file inside Zip storage</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.HeaderSize">
            <summary>Size of header information</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.Crc32">
            <summary>32-bit checksum of entire file</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.ModifyTime">
            <summary>Last modification time of file</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.Comment">
            <summary>User comment for file</summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.ZipFileEntry.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="M:Spire.Pdf.General.Excel.ZipFileEntry.ToString">
            <summary>Overriden method</summary>
            <returns>Filename in Zip</returns>
        </member>
        <member name="T:Spire.Pdf.General.Excel.LineOrientation">
            <summary>
            Line orientation
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Excel.DataType">
            <summary>
            Cell data type
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Excel.BorderDirection">
            <summary>
            Border direction
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Excel.BorderStyle">
            <summary>
            Cell border line style
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Excel.TextAlignment">
            <summary>
            Specifies the type of horizontal text alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.TextAlignment.Left">
            <summary>
            Specifies the text is aligned to Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.TextAlignment.Center">
            <summary>
            Specifies the text is aligned to Center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.TextAlignment.Right">
            <summary>
            Specifies the text is aligned to Right.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Excel.VerticalAlignment">
            <summary>
            Specifies the type of Vertical alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.VerticalAlignment.Top">
            <summary>
            Specifies the element is aligned to Top.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.VerticalAlignment.Middle">
            <summary>
            Specifies the element is aligned to Middle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Excel.VerticalAlignment.Bottom">
            <summary>
            Specifies the element is aligned to Bottom.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfSound">
            <summary>
            Represents sound embedded into pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.PdfSound.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Rate">
            <summary>
            Gets or sets the sampling rate, in samples per second (in Hz).
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Bits">
            <summary>
            Gets or sets the number of bits per sample value per channel.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Encoding">
            <summary>
            Gets or sets the encoding format for the sample data.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Channels">
            <summary>
            Gets or sets the number of sound channels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.FileName">
            <value>The name of the file.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.General.SingleByteEncoding">
            The interface defines a 1-byte character encoding (with 256 characters).
        </member>
        <member name="M:Spire.Pdf.General.SingleByteEncoding.getName">
            Returns the encoding's name.
            @return the name of the encoding
        </member>
        <member name="M:Spire.Pdf.General.SingleByteEncoding.mapChar(System.Char)">
            Maps a Unicode character to a code point in the encoding.
            @param c the Unicode character to map
            @return the code point in the encoding or 0 (=.notdef) if not found
        </member>
        <member name="M:Spire.Pdf.General.SingleByteEncoding.getCharNameMap">
            Returns the array of character names for this encoding.
            @return the array of character names
                             (unmapped code points are represented by a ".notdef" value)
        </member>
        <member name="M:Spire.Pdf.General.SingleByteEncoding.getUnicodeCharMap">
            Returns a character array with Unicode scalar values which can be used to map encoding
            code points to Unicode values. Note that this does not return all possible Unicode values
            that the encoding maps.
            @return a character array with Unicode scalar values
        </member>
        <member name="T:Spire.Pdf.General.PdfSoundEncoding">
            <summary>
            The encoding format for the sample data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundEncoding.Raw">
            <summary>
            Unspecified or unsigned values in the range 0 to 2^B - 1.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundEncoding.Signed">
            <summary>
            Twos-complement values.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundEncoding.MuLaw">
            <summary>
            M-lawencoded samples.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundEncoding.ALaw">
            <summary>
            A-lawencoded samples.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfSoundChannels">
            <summary>
            The number of sound channels.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundChannels.Mono">
            <summary>
            One channel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundChannels.Stereo">
            <summary>
            Two channels.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfDestinationMode">
            <summary>
            Enumeration that represents fit mode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfDestinationMode.Location">
            <summary>
            Display the page designated by page, with the coordinates (left, top) positioned
            at the top-left corner of the window and the contents of the page magnified
            by the factor zoom. A NULL value for any of the parameters left, top, or
            zoom specifies that the current value of that parameter is to be retained unchanged.
            A zoom value of 0 has the same meaning as a NULL value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfDestinationMode.FitToPage">
            <summary>
            Display the page designated by page, with its contents magnified just enough
            to fit the entire page within the window both horizontally and vertically. If
            the required horizontal and vertical magnification factors are different, use
            the smaller of the two, centering the page within the window in the other
            dimension.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfDestinationMode.FitH">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned
            at the top edge of the window and the contents of the page magnified
            just enough to fit the entire width of the page within the window.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfDestinationMode.FitR">
            <summary>
            Display the page designated by page, with its contents magnified just enough
            to fit the rectangle specified by the coordinates left,bottom,right,and top
            entirely within the window both horizontally and vertically.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfDestinationMode.FitBH">
            <summary>
            Display the page designated by page, with the vertical coordinate
            top positioned at the top edge of the window and the contents of the page
            magnified just enough to fit the entire width of its bounding box within the
            window.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.FormFieldFTType">
            <summary>
            Pdf version 1-7 ,on page 675
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfDestination">
            <summary>
            Represents an anchor in the document where bookmarks or annotations can direct when clicked.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.PageNumber">
            <summary>
            The zero based page number.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.PdfDestination.#ctor(Spire.Pdf.PdfPageBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfDestination.#ctor(Spire.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfDestination.#ctor(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfDestination.#ctor(System.Int32,System.Drawing.PointF,System.Single)">
            <summary>
            Initializes a new instance of PdfDestination.
            </summary>
            <param name="pageNumber">The zero based page number.</param>
            <param name="location">The location in the page based on the lower-left coordinate system.</param>
            <param name="zoom">The zoom factor.</param>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Zoom">
            <summary>
            Gets or sets zoom factor.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Page">
            <summary>
            Gets or sets a page where the destination is situated.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Mode">
            <summary>
            Gets or sets mode of the destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Location">
            <summary>
            Gets or sets a location of the destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Rectangle">
            <summary>
            Gets or sets a rectangle of the destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets pdf primitive representing this object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfEmbeddedFileSpecification">
            <summary>
            Represents specification of embedded file.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.#ctor(System.String)">
            <param name="fileName">file name</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.#ctor(System.String,System.Byte[])">
            <param name="fileName">Name of the file.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.#ctor(System.String,System.IO.Stream)">
            <param name="fileName">Name of the file.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.FileName">
            <value></value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.MimeType">
            <summary>
            Gets or sets the MIME type of the embedded file.
            </summary>
            <value>The MIME type of the embedded file.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.CreationDate">
            <summary>
            Gets or sets creation date.
            </summary>
            <value>Creation date.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.ModificationDate">
            <summary>
            Gets or sets modification date.
            </summary>
            <value>Modification date.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.Relationship">
            <summary>
            Gets or sets attachment relationship.
            </summary>
            <value>Attachment relationship</value>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.SetFieldValue(System.String,System.String)">
            <summary>
            Set the corresponding field value by field name.
            </summary>
            <param name="fieldName">Custom field name.</param>
            <param name="fieldValue">The corresponding field value.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.SetFieldValue(System.String,System.DateTime)">
            <summary>
            Set the corresponding field value by field name.
            </summary>
            <param name="fieldName">Custom field name.</param>
            <param name="fieldValue">The corresponding field value.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.SetFieldValue(System.String,System.Int32)">
            <summary>
            Set the corresponding field value by field name.
            </summary>
            <param name="fieldName">Custom field name.</param>
            <param name="fieldValue">The corresponding field value.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.ModifyEmbeddedFile(System.Byte[])">
            <summary>
            Modify embeddedFile data
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Spire.Pdf.General.PdfAttachmentRelationship">
            <summary>
             Attachment relationship type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfAttachmentRelationship.Source">
            <summary>
             If this document specification is the original source material
             for the associated content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfAttachmentRelationship.Data">
            <summary>
             If this document specification represents the information used
             to generate a visual rendering.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfAttachmentRelationship.Alternative">
            <summary>
             If this document specification is an alternative representation
             of the content(such as audio).
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfAttachmentRelationship.Supplement">
            <summary>
             If this document specification represents a supplemental representation
             of the original source or data that may be easier to process.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfAttachmentRelationship.Unspecified">
            <summary>
             When the relationship is unknown or cannot be described using one
             of the other values.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfFileSpecificationBase">
            <summary>
            Represents base class for file specification objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.PdfFileSpecificationBase.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="P:Spire.Pdf.General.PdfFileSpecificationBase.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfFileSpecificationBase.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Exceptions.PdfConformanceException">
            <summary>
            Exception of this type is raised when the document contains object which are not 
            supported by current document standard.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfConformanceException.#ctor">
            <summary>
            Initializes object with default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfConformanceException.#ctor(System.Exception)">
            <summary>
            Initializes object with default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfConformanceException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfConformanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object with specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Spire.Pdf.Exceptions.PdfAnnotationException">
            <summary>
            Exception of this type is raised when annotation object is used incorrectly.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfAnnotationException.#ctor">
            <summary>
            Initializes object with default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfAnnotationException.#ctor(System.Exception)">
            <summary>
            Initializes object with default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfAnnotationException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfAnnotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object with specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Spire.Pdf.Exceptions.PdfException">
            <summary>
            General exception class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfException.#ctor">
            <summary>
            Initializes object by default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object by specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Spire.Pdf.Exceptions.PdfDocumentException">
            <summary>
            Base PDF document exception.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfDocumentException.#ctor">
            <summary>
            Initializes object by default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfDocumentException.#ctor(System.Exception)">
            <summary>
            Initializes object by default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfDocumentException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object by specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfCalGrayColorSpace">
            <summary>
            CalGray color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfCalGrayColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfCalGrayColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfCalGrayColorSpace.MinComponentValues">
            <summary>
            The maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfCalGrayColorSpace.MaxComponentValues">
            <summary>
            The minimum value in the range for component.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.ColorSpaces.PdfCalGrayColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.ColorSpaces.PdfCalGrayColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfCalGrayColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfCalRGBColorSpace">
            <summary>
            CalRGB color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfCalRGBColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfCalRGBColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfCalRGBColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfCalRGBColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.ColorSpaces.PdfCalRGBColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.ColorSpaces.PdfCalRGBColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfCalRGBColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfColorSpace">
            <summary>
            Pdf color space class
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfColorSpace.CreateICCProfile(System.String,System.Int32)">
            <summary>
            Create ICC profile stream.
            </summary>
            <param name="resource">The icc profile resource name.</param>
            <param name="numOfComponents">The number of color components in the color space described by the ICC profile.</param>
            <returns>The ICC profile stream.</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.ColorSpaces.PdfColorSpace.RGBToCMYK(System.Single,System.Single,System.Single)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.ColorSpaces.PdfColorSpace.RGBToGray(System.Single,System.Single,System.Single)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.ColorSpaces.PdfColorSpace.Create(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Create color space.
            If can't parse the colorSpaceObj, then return a PdfNotSupportedColorSpace instance.
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <returns>The color space.</returns>
        </member>
        <member name="F:Spire.Pdf.ColorSpaces.PdfColorSpace.m_element">
            <summary>
            The color space.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Constructors
            </summary>
            <param name="element">PdfColorSpace source object</param>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfColorSpace.ConvertColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a list of color to target color space.
            </summary>
            <param name="components">The color list components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color list components in target color space.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfDeviceCMYKColorSpace">
            <summary>
            DeviceCMYK color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceCMYKColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceCMYKColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceCMYKColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceCMYKColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceCMYKColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Construct an new instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceCMYKColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceCMYKColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfDeviceGrayColorSpace">
            <summary>
            DeviceGray color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceGrayColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceGrayColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceGrayColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceGrayColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceGrayColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Construct an new instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceGrayColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceGrayColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfDeviceNColorSpace">
            <summary>
            DeviceN color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceNColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceNColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceNColorSpace.MinComponentValues">
            <summary>
            The maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceNColorSpace.MaxComponentValues">
            <summary>
            The minimum value in the range for component.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.ColorSpaces.PdfDeviceNColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceNColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceNColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfDeviceRGBColorSpace">
            <summary>
            DeviceRGB color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceRGBColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceRGBColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceRGBColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfDeviceRGBColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceRGBColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Construct an new instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceRGBColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfDeviceRGBColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace">
            <summary>
            ICCBased color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="F:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.m_alternateColorSpace">
            <summary>
            color space by alternate
            </summary>
        </member>
        <member name="F:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.m_n">
            <summary>
            The number of color components in the color space described by the ICC profile data. 
            This number must match the number of components actually in the ICC profile. 
            As of PDF 1.4, N must be 1, 3, or 4.
            </summary>
        </member>
        <member name="F:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.m_range">
            <summary>
            An array of 2 × N numbers [ min0 max0 min1 max1 … ] specifying the minimum and maximum valid values 
            of the corresponding color components. These values must match the information in the ICC profile.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.AlternateColorSpace">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.MinComponentValues">
            <summary>
            The maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.MaxComponentValues">
            <summary>
            The minimum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.N">
            <summary>
            The number of color components in the color space described by the ICC profile data. 
            This number must match the number of components actually in the ICC profile. 
            As of PDF 1.4, N must be 1, 3, or 4.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.Range">
            <summary>
            An array of 2 × N numbers [ min0 max0 min1 max1 … ] specifying the minimum and maximum valid values 
            of the corresponding color components. These values must match the information in the ICC profile.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.IsEmbeddedICCProfile">
            <summary>
            Is embedded ICC profile or not.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Constructors
            </summary>
            <param name="n">
            The number of color components in the color space described by the ICC profile data. 
            This number must match the number of components actually in the ICC profile. 
            As of PDF 1.4, N must be 1, 3, or 4.
            </param>
            <param name="alternateColorSpace">
            PdfColorSpace alternateColorSpace
            </param>
            <param name="range">
            An array of 2 × N numbers [ min0 max0 min1 max1 … ] specifying the minimum and maximum valid values 
            of the corresponding color components. These values must match the information in the ICC profile.
            </param>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfICCBasedColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace">
            <summary>
            Indexed color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.ReadColorTable(Spire.Pdf.ColorSpaces.PdfColorSpace,System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Read color table.
            </summary>
            <param name="baseColorSpace">the base color space.</param>
            <param name="hival">specifies the maximum valid index value.</param>
            <param name="lookupObj">the color table obj.</param>
            <returns>the color table bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.ReadColorTable(Spire.Pdf.ColorSpaces.PdfColorSpace,System.Int32,System.Byte[])">
            <summary>
            Read color table.
            </summary>
            <param name="baseColorSpace">the base color space.</param>
            <param name="hival">specifies the maximum valid index value.</param>
            <param name="lookupBytes">the color table bytes.</param>
            <returns>the color table.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.Map(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Map value form source to target range.
            </summary>
            <param name="sourceValue">The source value.</param>
            <param name="sourceMinValue">The source min value.</param>
            <param name="sourceMaxValue">The source max value.</param>
            <param name="targetMinValue">The target min value.</param>
            <param name="targetMaxValue">The target max value.</param>
            <returns>The target value.</returns>
        </member>
        <member name="F:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.m_baseColorSpace">
            <summary>
            the base color space in which the values in the color table are to be interpreted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.m_hival">
            <summary>
            specifies the maximum valid index value 
            which the color table is to be indexed by integers in the range 0 to hival.
            </summary>
        </member>
        <member name="F:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.m_lookup">
            <summary>
            the color table which provides the mapping between index values and 
            the corresponding colors in the base color space.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Constructors
            </summary>
            <param name="element">PdfColorSpace baseColorSpace</param>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfIndexedColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfLabColorSpace">
            <summary>
            Lab color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfLabColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfLabColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfLabColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfLabColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfLabColorSpace.Range">
            <summary>
            An array of four numbers [ amin amax bmin bmax ] specifying 
            the range of valid values for the a* and b* (B and C) components of the color space.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.ColorSpaces.PdfLabColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.ColorSpaces.PdfLabColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfLabColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfNotSupportedColorSpace">
            <summary>
            Not support color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfNotSupportedColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Constructors
            </summary>
            <param name="element">PdfColorSpace source object</param>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfNotSupportedColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfNotSupportedColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfPatternColorSpace">
            <summary>
            Pattern color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfPatternColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfPatternColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Constructors
            </summary>
            <param name="element">PdfColorSpace source object</param>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfPatternColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfPatternColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpaces.PdfSeparationColorSpace">
            <summary>
            Separation color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfSeparationColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.ColorSpaces.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfSeparationColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfSeparationColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpaces.PdfSeparationColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.ColorSpaces.PdfSeparationColorSpace.#ctor(Spire.Pdf.Interfaces.IPdfPrimitive)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.ColorSpaces.PdfSeparationColorSpace.SupportConversion(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Whether support conversion to target color space.
            </summary>
            <param name="targetColorSpace">The target color space.</param>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.ColorSpaces.PdfSeparationColorSpace.ConvertSingleColor(System.Single[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Convert a color to target color space.
            </summary>
            <param name="components">The color components.</param>
            <param name="targetColorSpace">The target color space.</param>
            <returns>The color components in target color space.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Compression.CompressionProvider">
            <summary>
            The compression provider.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.CompressionProvider.Options">
            <summary>
            The compression options
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.CompressionProvider.#ctor(Spire.Pdf.Conversion.Compression.OptimizationOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.CompressionProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.CompressionProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.CompressionProvider.HandleContentStreamResources(Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the the content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.CompressionProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.OptimizationOptions.RemoveMetadata">
            <summary>
            Indicates whether remove metadata.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.OptimizationOptions.ImageCompressionOptions">
            <summary>
            Gets or sets the image compression options.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.OptimizationOptions.CompressContents">
            <summary>
            Indicates whether to compress page contents.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.OptimizationOptions.CompressFont">
            <summary>
            Indicates whether to compress font resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.OptimizationOptions.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Compression.ImageCompressionOptions">
            <summary>
            The class represents the image compression options.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.ImageCompressionOptions.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.ImageCompressionOptions.CompressImage">
            <summary>
            Indicates whether compress image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.ImageCompressionOptions.ImageQuality">
            <summary>
             Gets or sets the image quality.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.ImageCompressionOptions.ResizeImages">
            <summary>
            Indicates whether resize image.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Compression.ImageQuality">
            <summary>
            The image quality.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.ContentOptimizer.GenerateContentStream(System.Collections.Generic.List{Spire.Pdf.Core.Contents.Parsing.ContentInstruction})">
            <summary>
            Generate content stream.
            </summary>
            <param name="instructions">The instructions.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Compression.ContentsOptimize.ColorOperators">
            <summary>
            Color operators: CS/cs/SC/SCN/sc/scn/G/g/RG/rg/K/k
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Compression.ContentsOptimize.GraphicsStateOperators">
            <summary>
            Graphics state operators: q/Q/cm/w/J/j/M/d/ri/i/gs
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Compression.ContentsOptimize.TextOperators">
            <summary>
            Text operators
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Compression.ContentsOptimize.XObjectOperators">
            <summary>
            XObject operators: Do
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Common.OptimalFontArray.GetNextUInt32">
            <summary>
            Reads 4 bytes from the byte array
            </summary>
            <returns>Corresponding value</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Common.OptimalFontArray.GetNextUInt64">
            <summary>
            Reads 8 bytes from the byte array
            </summary>
            <returns>Corresponding value</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Common.OptimalFontArray.GetNextUInt32AsTag">
            <summary>
            Read 4 bytes from the byte array
            </summary>
            <returns>Corresponding string value</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Common.OptimalFontArray.GetNextUInt16">
            <summary>
            Read 2 bytes from the byte array
            </summary>
            <returns>Corresponding integer value</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Common.OptimalFontFile.GetTableBytes(System.Int32,System.Boolean)">
            <summary>
            Get table bytes
            </summary>
            <param name="tableID"></param>
            <param name="isTrueType"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.FontHandler.Compress(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Optimize the font data
            </summary>
            <param name="element">The pdf object.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.FontHandler.ConvertToUnembedFont(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Convert to non-embedded font.
            </summary>
            <param name="fontDictionary">The font dictionary.</param>
        </member>
        <member name="F:Spire.Pdf.Conversion.Compression.FontOptimize.IFont.TableList">
            <summary>
            Indicates the common table list
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.IFont.UpdateFontData(System.IO.MemoryStream,Spire.Pdf.Core.PdfStream)">
            <summary>
            Update the font data.
            </summary>
            <param name="fontStream"></param>
            <param name="fontFile2"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.IFont.GetTableEntry(System.String,System.Byte[])">
            <summary>
            Get the font table entry.
            </summary>
            <param name="tableName"></param>
            <param name="tableData"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.IFont.CalculateCheckSum(System.Byte[])">
            <summary>
            Calulates the check sum value.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.TrueTypeFont.Compress(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Optimize the font.
            </summary>
            <param name="dictionary">The font dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Type0Font.Compress(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Optimize the font.
            </summary>
            <param name="dictionary">The font dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Type0Font.CompressType0Font(System.IO.MemoryStream,System.Collections.Generic.Dictionary{System.Char,System.Char})">
            <summary>
            Optimize type0 font
            </summary>
            <param name="fontData"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Type0Font.GetLocalTableGlyph(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get the local table last index
            </summary>
            <param name="dictionary">The font dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Type0Font.ResetFontTables(Spire.Pdf.Conversion.Compression.FontOptimize.Common.OptimalFontFile,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Set the font tables.
            </summary>
            <param name="f2"></param>
            <param name="isSymbol"></param>
            <param name="localTableLength"></param>
            <param name="bIsLocaShort"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Type0Font.CalculateLocalTableLength(Spire.Pdf.Conversion.Compression.FontOptimize.Common.OptimalFontFile,System.Boolean,System.Int32,System.Int32@,System.Boolean@)">
            <summary>
            Calculate the local and hmtx table length.
            </summary>
            <param name="f2"></param>
            <param name="bIsLocaShort"></param>
            <param name="localTableLength"></param>
            <param name="isSkip"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.FontOptimize.Type0Font.UpdateFontName(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Graphics.TtfReader)">
            <summary>
            Update the embedded subset font Name based on the PDF specification.
            </summary>
            <param name="fontDic"></param>
            <param name="ttfReader"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.ImageOptimize.ImageHandler.Compress(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Compress image pdf stream.
            </summary>
            <param name="element">The pdf image object.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.ImageOptimize.ImageHandler.RemoveMetadata(Spire.Pdf.Core.PdfStream)">
            <summary>
            Remove metadata item.
            </summary>
            <param name="imageStream">The image pdf stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.ImageOptimize.ImageHandler.ResizeImage(Spire.Pdf.Core.PdfStream)">
            <summary>
            Resize image.
            </summary>
            <param name="imageStream">The image pdf stream.</param>
            <returns>true, when resize sucess.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.ImageOptimize.ImageHandler.CompressJpeg(Spire.Pdf.Core.PdfStream)">
            <summary>
            Compress jpeg image.
            </summary>
            <param name="imageStream">The image pdf stream.</param>
            <returns>true, if compression sucess; Otherwise, false.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.ImageOptimize.ImageHandler.CompressWithJPXDecode(Spire.Pdf.Core.PdfStream)">
            <summary>
            Compress image with JPXDecode.
            </summary>
            <param name="imageStream">The image pdf stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.ImageOptimize.ImageHandler.Decode(Spire.Pdf.Core.PdfStream)">
            <summary>
            Decode the pdfstream to image.
            </summary>
            <param name="imageStream">The image pdf stream</param>
            <returns>The result image.</returns>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.PdfCompressOptions.ImageCompressionOptions">
            <summary>
            Gets or sets the image compression options.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Compression.PdfCompressor">
            <summary>
            The pdf document compressor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Compression.PdfCompressor.m_document">
            <summary>
            The origin document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Compression.PdfCompressor.m_options">
            <summary>
            The compression options.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Compression.PdfCompressor.Options">
            <summary>
            The compression options.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.PdfCompressor.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="stream">The pdf file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.PdfCompressor.#ctor(System.String)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="filePath">The pdf file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Compression.PdfCompressor.CompressToFile(System.String)">
            <summary>
            Compress document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.DocxOptions">
            <summary>
            the pdf document convert to docx document,set the options
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.FristPageCrossReferenceTrailer">
            <summary>
            Represents first-page cross-reference table and tailer in file structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.FristPageCrossReferenceTrailer.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable.Item1">
            <summary>
            The object number of the first object in the first embedded file stream group. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable.Item2">
            <summary>
            The location of the first object in the first embedded file stream group. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable.Item3">
            <summary>
            The number of embedded file stream groups referenced by this hint table.  
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable.Item4">
            <summary>
            The number of bits needed to represent the highest object number 
            corresponding to an embedded file stream object. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable.Item5">
            <summary>
            The number of bits needed to represent the greatest number 
            of objects in an embedded file stream group. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable.Item6">
            <summary>
            The number of bits needed to represent the greatest length 
            of an embedded file stream group, in bytes.  
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable.Item7">
            <summary>
            The number of bits needed to represent the greatest number 
            of shared object references in any embedded file stream group.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.EmbeddedFileStreamHintTable.Entries">
            <summary>
            Per-page entries.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ExtendedGenericHintTable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ExtendedGenericHintTable.Item1">
            <summary>
            The object number of the first object in the group. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ExtendedGenericHintTable.Item2">
            <summary>
            The location of the first object in the group. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ExtendedGenericHintTable.Item3">
            <summary>
            The number of objects in the group. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ExtendedGenericHintTable.Item4">
            <summary>
            The length of the object group in bytes. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ExtendedGenericHintTable.Item5">
            <summary>
            The number of shared object references. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ExtendedGenericHintTable.Item6">
            <summary>
            The number of bits needed to represent the numerically greatest 
            shared object identifier used by the objects in the group. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ExtendedGenericHintTable.Item7">
            <summary>
            Starting with item 7, each of the remaining items in this table 
            is a shared object identifier—that is, an index into the shared object
            hint table (described in Section F.3.2, “Shared Object Hint Table”). 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.HintTables.GenericHintTable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.GenericHintTable.Item1">
            <summary>
            The object number of the first object in the group.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.GenericHintTable.Item2">
            <summary>
            The location of the first object in the group.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.GenericHintTable.Item3">
            <summary>
            The number of objects in the group. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.GenericHintTable.Item4">
            <summary>
            The length of the object group in bytes.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.HintTables.HintTable">
            <summary>
            The hint table base.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable">
            <summary>
            The page offset hint table provides information required for locating each page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item1">
            <summary>
            The least number of objects in a page (including the page object itself).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item2">
            <summary>
            The location of the first page’s page object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item3">
            <summary>
            The number of bits needed to represent the difference between the greatest 
            and least number of objects in a page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item4">
            <summary>
            The least length of a page in bytes. This is the least length from the beginning
            of a page object to the last byte of the last object used by that page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item5">
            <summary>
            The number of bits needed to represent the difference between the greatest
            and least length of a page, in bytes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item6">
            <summary>
            The least offset of the start of any content stream, relative to the beginning
            of its page. (See implementation note 183 in Appendix H.)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item7">
            <summary>
            The number of bits needed to represent the difference between the greatest
            and least offset to the start of the content stream. (See implementation note 183 in Appendix H.)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item8">
            <summary>
            The least content stream length. (See implementation note 184 in Appendix H.)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item9">
            <summary>
            The number of bits needed to represent the difference between the greatest
            and least content stream length. (See implementation note 184 in Appendix H.)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item10">
            <summary>
            The number of bits needed to represent the greatest number of shared object references.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item11">
            <summary>
            The number of bits needed to represent the numerically greatest shared object
            identifier used by the pages (discussed further in Table F.4, item 4).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item12">
            <summary>
            The number of bits needed to represent the numerator of the fractional position 
            for each shared object reference. For each shared object referenced from a page, 
            there is an indication of where in the page’s content stream the object is first
            referenced. That position is given as the numerator of a fraction, whose denominator 
            is specified once for the entire document (in the next item in this table). The 
            fraction is explained in more detail in Table F.4, item 5.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Item13">
            <summary>
            The denominator of the fractional position for each shared object reference.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.Entries">
            <summary>
            Page entries.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.AddEntry(System.Int32[],System.Int32)">
            <summary>
            Add page entry.
            </summary>
            <param name="values"></param>
            <param name="bits"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.AddEntry(System.Collections.Generic.List{System.Int32[]},System.Int32)">
            <summary>
            Add page entry.
            </summary>
            <param name="values"></param>
            <param name="bits"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.GetAllPageObjectsNumber(Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection,Spire.Pdf.Conversion.LinearizedPdf.RemainingPages)">
            <summary>
            Get page object number.
            </summary>
            <param name="firstPageSection"></param>
            <param name="remainingPages"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.PageOffsetHintTable.GetPagesLength(Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection,Spire.Pdf.Conversion.LinearizedPdf.RemainingPages)">
            <summary>
            Get page length.
            </summary>
            <param name="firstPageSection"></param>
            <param name="remainingPages"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable">
            <summary>
            The shared object hint table gives information required to locate shared objects.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.Item1">
            <summary>
            The object number of the first object in the shared objects section (part 8).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.Item2">
            <summary>
            The location of the first object in the shared objects section.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.Item3">
            <summary>
            The number of shared object entries for the first page (including nonshared 
            objects, as noted above).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.Item4">
            <summary>
            The number of shared object entries for the shared objects section, including
            the number of shared object entries for the first page (that is, the value of item 3).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.Item5">
            <summary>
            The number of bits needed to represent the greatest number of objects in a 
            shared object group. (See also implementation note 185 in Appendix H.)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.Item6">
            <summary>
            The least length of a shared object group in bytes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.Item7">
            <summary>
            The number of bits needed to represent the difference between the greatest
            and least length of a shared object group, in bytes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.Entries">
            <summary>
            Shared object group entries.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.SharedObjectHintTable.AddEntry(System.Int32[],System.Int32)">
            <summary>
            Add group entry.
            </summary>
            <param name="values"></param>
            <param name="bits"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item1">
            <summary>
            The object number of the first thumbnail image (that is, 
            the thumbnail image that is described by the first entry in the thumbnails section). 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item2">
            <summary>
            The location of the first thumbnail image. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item3">
            <summary>
            The number of pages that have thumbnail images. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item4">
            <summary>
            The number of bits needed to represent the greatest number of 
            consecutive pages that do not have a thumbnail image. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item5">
            <summary>
            The least length of a thumbnail image in bytes. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item6">
            <summary>
            The number of bits needed to represent the difference 
            between the greatest and least length of a thumbnail image. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item7">
            <summary>
            The least number of objects in a thumbnail image. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item8">
            <summary>
            The number of bits needed to represent the difference 
            between the greatest and least number of objects in a thumbnail image. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item9">
            <summary>
            The object number of the first object in the thumbnail shared objects section (a subsection of part 9). 
            This section includes objects (color spaces, for example) that are referenced from 
            some or all thumbnail objects and are not referenced from any other objects. 
            The thumbnail shared objects are undifferentiated; 
            there is no indication of which shared objects are referenced from any given page’s thumbnail image.  
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item10">
            <summary>
            The location of the first object in the thumbnail shared objects section. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item11">
            <summary>
            The number of thumbnail shared objects. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Item12">
            <summary>
            The length of the thumbnail shared objects section in bytes. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.Entries">
            <summary>
            Per-page entries.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.AddEntry(System.Int32[],System.Int32)">
            <summary>
            Add per-page entry.
            </summary>
            <param name="values"></param>
            <param name="bits"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.GetFristObjectInfo(System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo}})">
             <summary>
            Get the frist object info. 
             </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.GetSpacePageNumberArray(System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo}})">
             <summary>
            The number list of consecutive pages that do not have a thumbnail image. 
             </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.GetThumbLengthArray(System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo}})">
             <summary>
            The length list of a thumbnail image in bytes. 
             </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.GetThumbObjectNumberArray(System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo}})">
             <summary>
            The number list of objects in a thumbnail image. 
             </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.HintTables.ThumbnailHintTable.GetLength(System.Collections.Generic.List{Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo})">
             <summary>
            The length of objects in bytes. 
             </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.LinearizationParameterDictionary">
            <summary>
            Represents linearization parameter dictionary in file structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.LinearizationParameterDictionary.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.LinearizationParameterDictionary.AppendTo(System.IO.Stream,System.Int64,System.Int64[],System.Int64,System.Int64,System.Int64)">
            <summary>
            Write linearization parameter dictionary to file stream. 
            </summary>
            <param name="stream">The file stream.</param>
            <param name="l">The file length.</param>
            <param name="h">The hint stream position and offset.[offset1 length1 offset2 length2] (part 5)</param>
            <param name="o">The object number of frist page's page object (part 6)</param>
            <param name="e">The offset of end of frist page.</param>
            <param name="t">The offset of frist entry in main cross-reference table(part 11).</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.MainCrossReferenceTrailer">
            <summary>
            Represents main cross-reference table and tailer in file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.MainCrossReferenceTrailer.FirstEntryOffset">
            <summary>
            Represent the offset of the white-space character preceding
            the first entry of the main cross-reference table,relative to
            the beginning of the file.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.MainCrossReferenceTrailer.Object0Offset">
            <summary>
            Represent the offset of the object number 0;
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.MainCrossReferenceTrailer.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.OverflowHintStream">
            <summary>
            Represents overflow hint stream in file structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.OverflowHintStream.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument">
            <summary>
            Represents linearized document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument.#ctor(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument.m_oldObjectNums">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument.RegisterObject(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Register a new object information.
            </summary>
            <param name="obj">The object.</param>
            <returns>The object info.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument.GetObjectInfo(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Gets object information about an object.
            </summary>
            <param name="obj">The object.</param>
            <returns>The object information.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure">
            <summary>
            Represents all elements in linearized document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure.Document">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure.#ctor(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart">
            <summary>
            Represents one part in file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.DocumentStructure">
            <summary>
            Get document structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.LinearizedDocument">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.ObjectInfos">
            <summary>
            Get object information.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.Position">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.SavePdfObject(Spire.Pdf.Interfaces.IPdfPrimitive,System.Int64)">
            <summary>
            Save a pdf object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.WritePdfObject(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Write a pdf object information to the stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.WritePdfString(Spire.Pdf.Core.PdfString)">
            <summary>
            Write a pdf string information to the stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.WritePdfArray(Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Write a pdf array information to the stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.WritePdfReferenceHolder(Spire.Pdf.Primitives.PdfReferenceHolder)">
            <summary>
            Write a pdf reference information to the stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.WritePdfStream(Spire.Pdf.Core.PdfStream)">
            <summary>
            Write a pdf stream information to the stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedPart.WritePdfDictionary(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Write a pdf dictionary information to the stream.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo.Obj">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo.NewObjectNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo.NewObjectOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo.Length">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfObjectInfo.#ctor(System.Int64,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.Dictionary">
            <summary>
            Gets the dictionary of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.AllObjects">
            <summary>
            Gets all objects in the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.AnnotsObjects">
            <summary>
            Gets all objects in the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.ContentsReferenceObjects">
            <summary>
            Gets the dictionary of the page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Core.PageObject)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="pageObject">The page object.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.AddInheritableProperty(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary[])">
            <summary>
            Add inheritable property to page dictionary.
            </summary>
            <param name="dictionary">The page dictionary.</param>
            <param name="ancestors">The ancestors dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.GetAllObjects">
            <summary>
            Analyze page all objects.
            </summary>
            <param name="pageDictionary">The page dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.AnalyzeAnnots(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Analyze page annots.
            </summary>
            <param name="pageDictionary">The page dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.AnalyzeBeads(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Analyze page beads.
            </summary>
            <param name="pageDictionary">The page dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.AnalyzeResource(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Analyze page resources.
            </summary>
            <param name="pageDictionary">The page dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.FindPdfObject(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Find pdf object.
            </summary>
            <param name="record">The record.</param>
            <param name="resources">The associated resources with the content stream.</param>
            <returns>The font dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PdfPageStructure.IsImageObject(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Whether the object is image.
            </summary>
            <param name="obj">The object.</param>
            <return>Tf the object is image, true. Otherwise,false</return>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.Header">
            <summary>
            Represents header in file structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Header.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection">
            <summary>
            Represents first-page section in file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection.PageIndex">
            <summary>
            Get the page index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection.SharedObjects">
            <summary>
            Get the page index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection.AllObjects">
            <summary>
            Get all objects.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection.SharedObjectInfoGroups">
            <summary>
            Get shared object info groups.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection.OrganizePdfObjects(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive})">
            <summary>
            Analyze objects.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.PrimaryHintStream">
            <summary>
            Represents primary hint stream in file structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PrimaryHintStream.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PrimaryHintStream.Build(System.Int64,Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection,Spire.Pdf.Conversion.LinearizedPdf.RemainingPages,Spire.Pdf.Conversion.LinearizedPdf.SharedObjects,Spire.Pdf.Conversion.LinearizedPdf.OtherObjects)">
            <summary>
            Build the stream content.
            </summary>
            <param name="firstPageSection">The first page section part.</param>
            <param name="remainingPages">The remaining pages part.</param>
            <param name="sharedObjects">The shared objects part.</param>
            <param name="otherObjects">The other objects part.</param>
            <returns>The stream length.</returns> 
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PrimaryHintStream.BuildPageOffsetHintTable(Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection,Spire.Pdf.Conversion.LinearizedPdf.RemainingPages,Spire.Pdf.Conversion.LinearizedPdf.SharedObjects)">
            <summary>
            Build page offset hint table.
            </summary>
            <param name="firstPageSection">The first page section part.</param>
            <param name="remainingPages">The remaining pages part.</param>
            <returns>The table length.</returns> 
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PrimaryHintStream.BuildSharedObjectHintTable(Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection,Spire.Pdf.Conversion.LinearizedPdf.SharedObjects)">
            <summary>
            Build shared object hint table.
            </summary>
            <param name="firstPageSection">The first page section part.</param>
            <param name="sharedObjects">The shared objects part.</param>
            <returns>The table length.</returns> 
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.PrimaryHintStream.BuildThumbnailHintTable(Spire.Pdf.Conversion.LinearizedPdf.OtherObjects)">
            <summary>
            Build Thumbnail hint table.
            </summary>
            <param name="otherObjects">The other objects part.</param>
            <returns>The table length.</returns> 
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.RemainingPages">
            <summary>
            Represents remaining pages in file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.RemainingPages.AllObjects">
            <summary>
            Get all objects.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.RemainingPages.PageObjectInfosMap">
            <summary>
            Get remaining page objects info Map.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.RemainingPages.ReferenceSharedObjectsMap">
            <summary>
            Get remaining page reference shared objects Map.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.RemainingPages.PageAnnotsObjectsMap">
            <summary>
            Get remaining page annots objects Map.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.RemainingPages.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.RemainingPages.OrganizePdfObjects(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive},Spire.Pdf.Conversion.LinearizedPdf.FirstPageSection,Spire.Pdf.Conversion.LinearizedPdf.SharedObjects)">
            <summary>
            Analyze objects.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.RequiredDocumentLevelObjects">
            <summary>
            Represents document catalog and document-level objects in file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.RequiredDocumentLevelObjects.AllObjects">
            <summary>
            Get all objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.RequiredDocumentLevelObjects.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.RequiredDocumentLevelObjects.OrganizePdfObjects">
            <summary>
            Organize pdf objects.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.SharedObjects">
            <summary>
            Represents shared objects in file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.SharedObjects.AllObjects">
            <summary>
            Get all objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.SharedObjects.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.SharedObjects.AlloacteContiguousObjectNumbers">
            <summary>
            Alloacte contiguous object number.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.SharedObjects.OrganizePdfObjects(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive})">
            <summary>
            Analyze shared objects.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LinearizedPdf.OtherObjects">
            <summary>
            Represents other objects in file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.OtherObjects.AllObjects">
            <summary>
            Get all objects.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LinearizedPdf.OtherObjects.DocumentInformationObjectInfos">
            <summary>
            Get document information all dependent objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.OtherObjects.#ctor(Spire.Pdf.Conversion.LinearizedPdf.PdfDocumentStructure,Spire.Pdf.Conversion.LinearizedPdf.PdfLinearizedDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentStructure">The document structure.</param>
            <param name="linearizedDocument">The linearized Document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.OtherObjects.OrganizePdfObjects(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive})">
            <summary>
            Analyze objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.OtherObjects.UpdatePageTreeObjects(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive},Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Add pages object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.OtherObjects.RemoveInheritableProperty(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Remove pages dictionary inheritable properties
            </summary>
            <param name="pagesNode">The pages dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Utilities.CommUtilities.IsPageNode(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Whether the object is Page node.
            </summary>
            <param name="obj">The pdf object.</param>
            <return>If the object is a page node, true. Otherwise,false</return>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Utilities.CommUtilities.IsCatalog(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Whether the object is catalog.
            </summary>
            <param name="obj">The pdf object.</param>
            <return>If the object is a catalog, true. Otherwise,false</return>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Utilities.CommUtilities.UpdateDependentIndirectObjects(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive},Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Update dependent indirect objects.
            </summary>
            <param name="dependentIndirectObjects">The dependent indirect objects.</param>
            <param name="obj">A node object.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Utilities.CommUtilities.UpdateOutlinesDependentIndirectObjects(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive},Spire.Pdf.Interfaces.IPdfPrimitive,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Update outlines dependent indirect objects.
            </summary>
            <param name="dependentIndirectObjects">The dependent indirect objects.</param>
            <param name="obj">A node object.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Utilities.CommUtilities.GroupObject(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive})">
            <summary>
            Group object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Utilities.CommUtilities.Min(System.Int32[])">
            <summary>
            Get the min value from an array.
            </summary>
            <param name="array">The array.</param>
            <returns>The min value.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Utilities.CommUtilities.Max(System.Int32[])">
            <summary>
            Get the max value from an array.
            </summary>
            <param name="array">The array.</param>
            <returns>The max value.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LinearizedPdf.Utilities.CommUtilities.Max(System.Collections.Generic.List{System.Int32[]})">
            <summary>
            Get the max value from a list array.
            </summary>
            <param name="list">The list.</param>
            <returns>The max value.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer">
             <summary>
            Object cliper class
             </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer.removeLists">
            <summary>
            裁剪后需要删除的对象
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="graphicsObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer.Recognize">
            <summary>
            Clip object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer.ClipText(Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject)">
            <summary>
            对文本进行剪切
            </summary>
            <param name="elementBase"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer.ClipHorizontalLine(Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject)">
            <summary>
            对横线进行剪切
            </summary>
            <param name="elementBase"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer.ClipVerticalLine(Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject)">
            <summary>
            对竖线进行剪切
            </summary>
            <param name="elementBase"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer.ClipPath(Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject)">
            <summary>
            对Path路径进行剪切
            </summary>
            <param name="elementBase"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ClipRecognizer.ClipImage(Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject)">
            <summary>
            对图片进行剪切
            </summary>
            <param name="elementBase"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject">
            <summary>
            Curve object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.m_Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.m_Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.m_LineWidth">
            <summary>
            线宽
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.m_Color">
            <summary>
            曲线颜色
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.m_Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.m_GraphicsPath">
            <summary>
            曲线的数据
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.Width">
            <summary>
             Content width
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.Height">
            <summary>
             Content height
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.LineWidth">
            <summary>
            Line width
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.Color">
            <summary>
            line color
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.CurveObject.GraphicsPath">
            <summary>
            Curve data
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject">
            <summary>
            Graphics Object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject.m_Origin">
            <summary>
            Object start point
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject.Origin">
            <summary>
            Object start point
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectExtractor">
            <summary>
            Object extractor
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectExtractor.m_document">
            <summary>
            The origin document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectExtractor.m_PsConverter">
            <summary>
            Ps转换器
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectExtractor.m_pageSizes">
            <summary>
            页面大小
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectExtractor.#ctor(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectExtractor.GetGraphicsObjects(System.Int32)">
            <summary>
            Get the current page all object
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectExtractor.GetGraphicsObjects">
            <summary>
            Get the document all page all object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectExtractor.GetPageSizes">
            <summary>
            Get the document all page size
            </summary>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_docBase">
            <summary>
            The pdf document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.mIsNegative">
            <summary>
            Reverse y position.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor._yOffset">
            <summary>
            y value
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_ImageIndex">
            <summary>
            Image index in xlsx
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.imageObject">
            <summary>
            ImageObject
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_Objects">
            <summary>
            Save get data from ps
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_Convertor">
            <summary>
            UnitConvertor
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.element">
            <summary>
            Get object from ps 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_GraphicsPath">
            <summary>
            Get signle path from ps 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_GraphicsPathLists">
            <summary>
            Get all path from ps 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_ClipStack">
            <summary>
            clip rectangle,save to stack
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_IsNegativeClipStack">
            <summary>
            if IsNegative is true,flip clip rectangle,save to stack
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.m_Rotate">
            <summary>
            The page rotate
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.#ctor(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.GetGraphicsObjects">
            <summary>
            Get GraphicsObject from Ps model
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.IsNegative">
            <summary>
            Reverse y position.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.Clip">
            <summary>
            clip rectangle,save to stack
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.IsNegativeClip">
            <summary>
            if IsNegative is true,flip clip rectangle,save to stack
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitPageStart(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPage)">
            <summary>
            Start visit page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitPageEnd(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPage)">
            <summary>
            End visit page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitCanvasStart(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            Start visit canvas
            </summary>
            <param name="canvas"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitArcSegment(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.ApsArcSegment)">
            <summary>
            Start visit arc segment
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitImage(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsImage)">
            <summary>
            Visit image
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.GetNextObjectId">
            <summary>
            Image index in xlsx
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitCanvasEnd(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsCanvas)">
            <summary>
            End visit canvas
            </summary>
            <param name="canvas"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitGlyphs(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsGlyphs)">
            <summary>
            Visit glyphs,get text
            </summary>
            <param name="glyphs"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.GetDrawborderSize(System.Drawing.SizeF,System.Boolean)">
            <summary>
            计算描边后的字符大小
            </summary>
            <param name="size"></param>
            <param name="styleSimulations"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitPathStart(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath)">
            <summary>
            Start visit path
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitPathEnd(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath)">
            <summary>
            End visit path
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitPathFigureStart(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPathFigure)">
            <summary>
            Start visit path line
            </summary>
            <param name="pathFigure"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitPathFigureEnd(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPathFigure)">
            <summary>
            End visit path line
            </summary>
            <param name="pathFigure"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitPolyLineSegment(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPolyLineSegment)">
            <summary>
            Start visit poly line
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitPolyBezierSegment(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPolyBezierSegment)">
            <summary>
            Visit poly bezier line
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitBezierSegment(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsBezierSegment)">
            <summary>
            Visit bezier line
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObjectPsVisitor.VisitLine(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.ApsLine)">
            <summary>
            Visit line
            </summary>
            <param name="line"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject">
            <summary>
            Horizontal line object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.m_Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.m_Color">
            <summary>
            line color
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.m_EndPoint">
            <summary>
            end point
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.m_BorderStyle">
            <summary>
            Cell border line style
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.Width">
            <summary>
             Content width
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.Height">
            <summary>
            height
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.Color">
            <summary>
            line color
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.EndPoint">
            <summary>
            end point
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.HLineObject.BorderStyle">
            <summary>
            Cell border line style
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject">
            <summary>
            Image object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.m_Width">
            <summary>
            图片宽度
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.m_Height">
            <summary>
            图片高度
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.m_Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.m_Extension">
            <summary>
            Image file extension
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.m_IsClipAndScaleImage">
            <summary>
            It is clip and scale image
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.m_Matrix">
            <summary>
            gets or sets the affine matrix transformation to the local coordinate space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.m_Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.m_ClipImageRect">
            <summary>
            clip image rectangle
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.ClipImageRect">
            <summary>
            Image clip x position
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.Width">
            <summary>
             Content width
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.Height">
            <summary>
             Content height
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.Image">
            <summary>
            It is image object
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.Extension">
            <summary>
            Image file extension
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.IsClipAndScaleImage">
            <summary>
            It is clip and scale image
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.Matrix">
            <summary>
            gets or sets the affine matrix transformation to the local coordinate space.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.ImageObject.Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_logicSheetCreator">
            <summary>
            logic sheet creator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_logicSheet">
            <summary>
            逻辑sheet,是sheet表的抽象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_tableObjects">
            <summary>
            表格对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_pathObjects">
            <summary>
            path对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_hLineObjects">
            <summary>
            横线对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_vLineObjects">
            <summary>
            竖线对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_AllLineObjects">
            <summary>
            所有的线条对象(包含TableObject中的线条对象)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_imageObjects">
            <summary>
            图片对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_textObjects">
            <summary>
            文本对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_rowTextObjects">
            <summary>
            文本对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_tableRowTextObjects">
            <summary>
            从表格对象提取每一行的文本对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_paragraphsObjects">
            <summary>
            段落的对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_xlsxOptions">
            <summary>
            Pdf document to xlsx document,page content layout
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.m_size">
            <summary>
            页面大小
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.PathObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.HLineObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.ImageObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject},System.Drawing.SizeF,Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="tableObjects"></param>
            <param name="pathObjects"></param>
            <param name="hLineObjects"></param>
            <param name="vLineObjects"></param>
            <param name="imageObjects"></param>
            <param name="textObjects"></param>
            <param name="paragraphsObjects"></param>
            <param name="size"></param>
            <param name="xlsxOptions"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject},System.Drawing.SizeF,Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="inputGraphicsObjects"></param>
            <param name="size"></param>
            <param name="xlsxOptions"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetObjectToLogicSheet">
            <summary>
            set object to logicSheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetLayoutType(Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            判断布局方式
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.JudgeCoordinateInDataSegment(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment},System.Single,System.Single,System.Boolean)">
            <summary>
            以相近值起点,判断当前坐标是否在相近值的范围内
            </summary>
            <param name="dataSegments"></param>
            <param name="nearCoordinateValue">线条端点附近的列坐标</param>
            <param name="lineCoordinateValue">线条端点坐标</param>
            <param name="isLineEnd">是否是线条结束位置</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetLogicSheet">
            <summary>
            获取逻辑Sheet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetTableObjectToLogicSheet">
            <summary>
            把表格对象设置到逻辑表Sheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetTableObjectToLogicSheet(Spire.Pdf.Conversion.LogicStructure.Tables.TableObject)">
            <summary>
            把表格对象设置到逻辑表Sheet
            </summary>
            <param name="tableObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetTableRowToLogicRow(Spire.Pdf.Conversion.LogicStructure.Tables.RowObject,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow)">
            <summary>
            把表格对象中的行,设置到逻辑表中的行
            </summary>
            <param name="rowObject"></param>
            <param name="logicRow"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetTableColumnToLogicRowByLineLayout(Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow,System.Boolean,System.Boolean)">
            <summary>
            按线条布局方式,把表格对象中的列,设置到逻辑表中的列
            </summary>
            <param name="columnObject"></param>
            <param name="logicRow"></param>
            <param name="isTop"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetTableColumnBoderToLogicColumn(Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,System.Boolean,System.Boolean)">
            <summary>
            设置表格列的border到LogicColumn
            </summary>
            <param name="columnObject"></param>
            <param name="logicColumn"></param>
            <param name="isTop"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetTableColumnToLogicRowByTextLayout(Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow,System.Boolean,System.Boolean)">
            <summary>
            按文本布局方式,把表格对象中的列,设置到逻辑表中的列
            </summary>
            <param name="columnObject"></param>
            <param name="logicRow"></param>
            <param name="isTop"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetLogicColumnTopOrBottomBorder(Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,System.Boolean,System.Boolean)">
            <summary>
            表格对象中列的顶部或底部设置到逻辑表中的列
            </summary>
            <param name="columnObject"></param>
            <param name="logicColumn"></param>
            <param name="isTop"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetPathObjectToLogicSheet">
            <summary>
            设置Path对象到LogicSheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetPathObjectToLogicSheet(Spire.Pdf.Conversion.LogicStructure.Base.PathObject)">
            <summary>
            设置Path对象到LogicSheet
            </summary>
            <param name="pathObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetHLineObjectToLogicSheet">
            <summary>
            设置横线对象到LogicSheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetHLineObjectToLogicSheet(Spire.Pdf.Conversion.LogicStructure.Base.HLineObject)">
            <summary>
            设置横线对象到LogicSheet
            </summary>
            <param name="hLineObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetNewBorderObject(Spire.Pdf.Conversion.LogicStructure.Base.HLineObject)">
            <summary>
            根据线条对象创建BorderObject
            </summary>
            <param name="hLineObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetVLineObjectToLogicSheet">
            <summary>
            设置竖线对象到LogicSheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetVLineObjectToLogicSheet(Spire.Pdf.Conversion.LogicStructure.Base.VLineObject)">
            <summary>
            设置竖线对象到LogicSheet
            </summary>
            <param name="vLineObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetNewBorderObject(Spire.Pdf.Conversion.LogicStructure.Base.VLineObject)">
            <summary>
            根据线条对象创建BorderObject
            </summary>
            <param name="hLineObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetParagraphsObjectToLogicSheet">
            <summary>
            设置段落对象到LogicSheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetParagraphsObjectToLogicSheet(Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject)">
            <summary>
            设置段落对象到LogicSheet
            </summary>
            <param name="paragraphsObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetParagraphsObjectToLogicRow(Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow)">
            <summary>
            设置段落对象到LogicRow
            </summary>
            <param name="paragraphsObject"></param>
            <param name="logicRow"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetRowTextObjectToLogicSheet">
            <summary>
            按行设置文本到LogicSheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetTableRowTextObjectToLogicSheet">
            <summary>
            设置表格对象中的文本到LogicSheet
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SetTextObjectToLogicSheet(Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            设置文本对象到LogicSheet
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.MergeLogicSheetCell">
            <summary>
            判断文本是否跨列,如果跨列,把后一列的文本追加到前一列,两列中间的Border设置为null,表示处于合并状态
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.IsTableRange(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,System.Single,System.Single)">
            <summary>
            判断当前两列是否在表格对象范围内
            </summary>
            <param name="beforeColumn"></param>
            <param name="currentColumn"></param>
            <param name="rowTopY"></param>
            <param name="rowBottomY"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.AddTextObjectToLogicColumn(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn)">
            <summary>
            把前后一列的文本添加到前一列
            </summary>
            <param name="currentColumn"></param>
            <param name="beforeColumn"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.IsExistLine(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            判断是否存在线条
            </summary>
            <param name="border"></param>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.IsSignleTjText(Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn)">
            <summary>
            判断是否是一个单独的Tj文本
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetTableObjects">
            <summary>
            获取表格对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetAllLineObjects">
            <summary>
            所有的线条对象(包含TableObject中的线条对象)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetEachRowTextObjectFromTableObjects">
            <summary>
            按文本方式布局,单元格内文本存在多行多列,需要拆分为多行多列,获取表格对象中每一行的文本对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.ClearTextObjectsFromTableObject">
            <summary>
            从表格对象清空所有文本对象
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetRowTextObjects">
             <summary>
            分行,只合并紧挨着的字符和文本
             </summary>
             <param name="textObjects"></param>
             <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.SimpleMergeText(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            简单合并文本,只合并当前行紧挨着的字符和文本
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetTextObjects">
            <summary>
            获取文本对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetParagraphsObjects">
            <summary>
            获取段落对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetImageObjects">
            <summary>
            获取图片对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetHLineObjects">
            <summary>
            获取横线对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetVLineObjects">
            <summary>
            获取竖线对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetPathObjects">
            <summary>
            获取Path对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetSize">
            <summary>
            页面大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetOptions">
            <summary>
            布局参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.GetWrapText">
            <summary>
            是否支持换行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.PageObject.IsEmptySheet">
            <summary>
            是否是空sheet
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject">
            <summary>
            段落对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject.m_Rect">
            <summary>
            获取段落的矩形范围
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject.m_textObjects">
            <summary>
            当前段落包含的文本
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject.SetTextObjects(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}})">
            <summary>
            设置当前段落包含的文本
            </summary>
            <param name="textObjects"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject.Add(System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            设置当前段落包含的文本
            </summary>
            <param name="i"></param>
            <param name="textObjects"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject.GetTextObjects">
            <summary>
            获取当前段落包含的文本
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject.GetRect">
            <summary>
            获取段落的矩形范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject.GetText">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.PathObject">
            <summary>
            Path object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.m_Width">
            <summary>
            Content width
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.m_Height">
            <summary>
            Content height
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.m_LineWidth">
            <summary>
            Path line width
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.m_Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.m_GraphicsPath">
            <summary>
            fill data
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.m_FillColor">
            <summary>
            fill background color
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.m_BorderColor">
            <summary>
            border color
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.m_DashPattern">
            <summary>
            Avoid directly modifying values in the array returned by this property.
            For standard dashes it returns a static array. If you modify values in it, it will affect all pens with this pattern.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.Width">
            <summary>
             Content width
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.Height">
            <summary>
             Content height
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.LineWidth">
            <summary>
            Path line width
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.GraphicsPath">
            <summary>
            fill data
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.BackgroundColor">
            <summary>
            fill background color
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.BorderColor">
            <summary>
            Cell border color
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.PathObject.DashPattern">
            <summary>
            Avoid directly modifying values in the array returned by this property.
            For standard dashes it returns a static array. If you modify values in it, it will affect all pens with this pattern.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.Recognizer">
            <summary>
            Recognizer base class
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.Recognizer.m_inputGraphicsObjects">
            <summary>
            Input graphics objects.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.Recognizer.InputGraphicsObjects">
            <summary>
            Input graphics objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.Recognizer.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="graphicsObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.Recognizer.Clear">
            <summary>
            Clear graphicsObject
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer">
            <summary>
            StraightLine megre class
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.m_lineConnectionValue">
            <summary>
            第一根线条结束点与第二根线条开始点间距多少,就认为是相交的,设一个常数控制,合并为一根线
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.m_parallelLineSpaceingValue">
            <summary>
            两根平行线之间相隔多少,就认为是同一根线的,设一个常数控制,合并为一根线
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.m_toXlsx">
            <summary>
            only for to xlsx
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="graphicsObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.Recognize(System.Boolean)">
            <summary>
            Recognize all lines the current page,only for to xlsx
            </summary>
            <param name="toXlsx"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.Recognize">
            <summary>
            Recognize all lines the current page
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.SetLineConnectionValue(System.Single)">
            <summary>
            第一根线条结束点与第二根线条开始点间距多少,就认为是相交的,合并为一根线
            </summary>
            <param name="lineConnectionValue"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.SetParallelLineSpaceingValue(System.Single)">
            <summary>
            两根平行线之间相隔多少,就认为是同一根线的,合并为一根线
            </summary>
            <param name="parallelLineSpaceingValue"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.LinesRecognize(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            识别线条,拆出表格线
            </summary>
            <param name="graphicsObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.GetBorderStyle(System.Single[],System.Single)">
            <summary>
            获取边框样式
            </summary>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.ConvertPathToLines(System.Drawing.RectangleF,System.Drawing.Color,System.Single,System.Drawing.RectangleF)">
            <summary>
            把Path转成四根线条
            </summary>
            <param name="rect"></param>
            <param name="borderColor"></param>
            <param name="lineWidth"></param>
            <param name="clip"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeLine(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            开始合并当前页面的线条
            </summary>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeHorizontalLineByTransverse(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.HLineObject})">
            <summary>
            合并横线,按横向方向合并(多根横线y坐标值相同的情况,合并成一根或多根横线)
            </summary>
            <param name="horizontalLineLists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeHorizontalLineByPortrait(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.HLineObject})">
            <summary>
            合并横线,按纵向方向合并(多根横线存在y坐标值相近的情况,合并成一根或多根横线)
            </summary>
            <param name="newHorizontalLineLists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.JoinLine(System.Collections.Generic.Dictionary{System.Single,Spire.Pdf.Conversion.LogicStructure.Base.HLineObject})">
            <summary>
            起始点X不相同的情况下,前面一根横线结束点与当前横线起始点间距在一个常数范围内,合并成一根或多根横线
            </summary>
            <param name="xhorizontalLineLists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeSameStartPoint(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.HLineObject})">
            <summary>
            在Y相同,起始点X相同的情况下,也存在多根横线,这种情况先合并成一根横线
            </summary>
            <param name="lists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeTwoHorizontalLine(Spire.Pdf.Conversion.LogicStructure.Base.HLineObject,Spire.Pdf.Conversion.LogicStructure.Base.HLineObject)">
            <summary>
            合并两根横线为一根横线
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeClip(Spire.Pdf.Conversion.LogicStructure.Base.HLineObject,Spire.Pdf.Conversion.LogicStructure.Base.HLineObject)">
            <summary>
            合并剪切范围
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.BatchMergeHorizontalLine(System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.HLineObject}},System.Single,System.Single)">
            <summary>
            y坐标值相近的横线合并成一根或多根横线,相近有一个范围区间,yCoordinateStart开始,yCoordinateEnd结束
            </summary>
            <param name="horizontalLineDictionary"></param>
            <param name="yCoordinateStart"></param>
            <param name="yCoordinateEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.ClassifiedStatisticsByCoordinateX(System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.HLineObject}},System.Single,System.Single)">
            <summary>
            在起始点y相似或相近的情况下,按起始点X相同的线分别存入集合
            </summary>
            <param name="horizontalLineDictionary"></param>
            <param name="yCoordinateStart"></param>
            <param name="yCoordinateEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeVerticalLineByPortrait(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject})">
            <summary>
            合并竖线,按纵向方向合并(多根竖线X坐标值相同的情况,合并成一根或多根竖线)
            </summary>
            <param name="verticalLineLists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeVerticalLineByTransverse(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject})">
            <summary>
            合并竖线,按横向方向合并(多根竖线存在x坐标值相近的情况,合并成一根或多根竖线)
            </summary>
            <param name="verticalLineLists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.JoinLine(System.Collections.Generic.Dictionary{System.Single,Spire.Pdf.Conversion.LogicStructure.Base.VLineObject})">
            <summary>
            起始点Y不相同的情况下,前面一根竖线结束点与当前竖线起始点间距在一个常数范围内,合并成一根或多根竖线
            </summary>
            <param name="xverticalLineLists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeSameStartPoint(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject})">
            <summary>
            在X相同,起始点Y相同的情况下,也存在多根竖线,这种情况先合并成一根竖线
            </summary>
            <param name="lists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeTwoVerticalLine(Spire.Pdf.Conversion.LogicStructure.Base.VLineObject,Spire.Pdf.Conversion.LogicStructure.Base.VLineObject)">
            <summary>
            合并两根竖线为一根竖线
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.MergeClip(Spire.Pdf.Conversion.LogicStructure.Base.VLineObject,Spire.Pdf.Conversion.LogicStructure.Base.VLineObject)">
            <summary>
            合并剪切范围
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.BatchMergeVerticalLine(System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject}},System.Single,System.Single)">
            <summary>
            x坐标值相近的竖线合并成一根或多根竖线,相近有一个范围区间,xCoordinateStart开始,xCoordinateEnd结束
            </summary>
            <param name="verticalLineDictionary"></param>
            <param name="xCoordinateStart"></param>
            <param name="xCoordinateEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.StraightLinesRecognizer.ClassifiedStatisticsByCoordinateX(System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject}},System.Single,System.Single)">
            <summary>
            在起始点x相似或相近的情况下,按起始点y相同的竖线分别存入集合
            </summary>
            <param name="verticalLineDictionary"></param>
            <param name="xCoordinateStart"></param>
            <param name="xCoordinateEnd"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.TextObject">
            <summary>
            Text object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_LineSpacingPoints">
            <summary>
            Returns cell spacing of this font (points).
            This is a vertical distance between baselines of the two glyphs.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_Size">
            <summary>
            the text size
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_Text">
            <summary>
            the text
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_Style">
            <summary>
            the font style
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_FontSize">
            <summary>
            the font size
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_FontName">
            <summary>
            the font name
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_Color">
            <summary>
            the text color
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_SecondTextOrigin">
            <summary>
            merge text after,the second text origin laction
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_SecondTextSize">
            <summary>
            merge text after,the second text size
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_Clip">
            <summary>
            the text clip rect
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_Matrix">
            <summary>
            the affine matrix transformation to the local coordinate space
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.m_CharSizes">
            <summary>
            the size of each character
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.LineSpacingPoints">
            <summary>
            Returns cell spacing of this font (points).
            This is a vertical distance between baselines of the two glyphs.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.Size">
            <summary>
            the char size
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.Text">
            <summary>
            the text
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.Style">
            <summary>
            the font style
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.FontSize">
            <summary>
            the font size
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.FontName">
            <summary>
            the font name
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.Color">
            <summary>
            the text color
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.Clip">
            <summary>
            the text clip rect
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.Matrix">
            <summary>
            the affine matrix transformation to the local coordinate space.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.CharSizes">
            <summary>
            the size of each character
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.SecondTextOrigin">
            <summary>
            merge text after,the second text origin laction
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.SecondTextSize">
            <summary>
            merge text after,the second text size
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Base.TextObject.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject">
            <summary>
            Vertical line object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.m_Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.m_Color">
            <summary>
            line color
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.m_EndPoint">
            <summary>
            end point
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.m_BorderStyle">
            <summary>
            Cell border line style
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.Height">
            <summary>
             Content height
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.Width">
            <summary>
            width
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.Color">
            <summary>
            line color
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.EndPoint">
            <summary>
            end point
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.Clip">
            <summary>
            set clip rect
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.LogicStructure.Base.VLineObject.BorderStyle">
            <summary>
            Cell border line style
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.m_pageIndex">
            <summary>
            the page index
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.m_size">
            <summary>
            the page size
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.m_documentBase">
            <summary>
            The origin PdfDocumentBase.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.m_graphicsObject">
            <summary>
            识别为chart后剩余的对象
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject},Spire.Pdf.PdfDocumentBase,System.Int32,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="graphicsObject"></param>
            <param name="documentBase"></param>
            <param name="pageIndex"></param>
            <param name="size"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.Recognize">
            <summary>
            抽取chart的内容
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.TotalPath(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            计算当前path又包含多少个path
            </summary>
            <param name="lists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.ContainsCurve(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            判断是否包含曲线
            </summary>
            <param name="lists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.FilterChartRange(Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject,System.Collections.Generic.Dictionary{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject}})">
            <summary>
            筛选出chart的范围
            </summary>
            <param name="dataEntity"></param>
            <param name="chartRanges"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.GetOtherGraphicsObjects">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.GetObjectRect(Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject)">
            <summary>
            获得对象的范围
            </summary>
            <param name="graphicsObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Charts.ChartsRecognizer.InterceptChartFromImage(System.Collections.Generic.Dictionary{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject}},System.Int32)">
            <summary>
            从图片截取当前页面的chart的内容
            </summary>
            <param name=""></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange">
            <summary>
            Define a cross row and column merge range class,Used to merge cells
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.m_startRowIndex">
            <summary>
            开始行所引值
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.m_endRowIndex">
            <summary>
            结束行所引值
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.m_startColumnIndex">
            <summary>
            开始列所引值
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.m_endColumnIndex">
            <summary>
            结束列所引值
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.SetStartRowIndex(System.Int32)">
            <summary>
            开始行所引值
            </summary>
            <param name="startRowIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.GetStartRowIndex">
            <summary>
            开始行所引值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.SetEndRowIndex(System.Int32)">
            <summary>
            结束行所引值
            </summary>
            <param name="endRowIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.GetEndRowIndex">
            <summary>
            结束行所引值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.SetStartColumnIndex(System.Int32)">
            <summary>
            开始列所引值
            </summary>
            <param name="startColumnIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.GetStartColumnIndex">
            <summary>
            开始列所引值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.SetEndColumnIndex(System.Int32)">
            <summary>
            结束列所引值
            </summary>
            <param name="endColumnIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.GetEndColumnIndex">
            <summary>
            结束列所引值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.GetMergeCell">
            <summary>
            获取合并行列的xml字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.Contains(System.Int32,System.Int32)">
            <summary>
            当前已经合并的行列是否包含当前单元格
            </summary>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.CellMergeRange.GetRowColumnKey">
            <summary>
            Gets column name according to column index.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet">
            <summary>
            all page convert to signle sheet
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.m_pageObjects">
            <summary>
            每一页的页面对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.m_pageSizes">
            <summary>
            每一页的页面大小
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.#ctor(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Base.PageObject},System.Collections.Generic.Dictionary{System.Int32,System.Drawing.SizeF})">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="pageObjects"></param>
            <param name="pageSizes"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.Converter(System.IO.Stream)">
            <summary>
            Convert to stream
            </summary>
            <param name="ouputStream"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.MergeAllObject">
            <summary>
            合并所有页面的对象,每一页对象的Y坐标不断追加
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.UpdateTableObject(Spire.Pdf.Conversion.LogicStructure.Tables.TableObject,System.Single)">
            <summary>
            更新TableObject对象的Y坐标
            </summary>
            <param name="tableObject"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.UpdatePathObject(Spire.Pdf.Conversion.LogicStructure.Base.PathObject,System.Single)">
            <summary>
            更新PathObject对象的Y坐标
            </summary>
            <param name="pathObject"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.UpdateHLineObject(Spire.Pdf.Conversion.LogicStructure.Base.HLineObject,System.Single)">
            <summary>
            更新HLineObject对象的Y坐标
            </summary>
            <param name="hLineObject"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.UpdateVLineObject(Spire.Pdf.Conversion.LogicStructure.Base.VLineObject,System.Single)">
            <summary>
            更新VLineObject对象的Y坐标
            </summary>
            <param name="vLineObject"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.UpdateTextObject(Spire.Pdf.Conversion.LogicStructure.Base.TextObject,System.Single)">
            <summary>
            更新TextObject对象的Y坐标
            </summary>
            <param name="textObject"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.UpdateParagraphsObject(Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject,System.Single)">
            <summary>
            更新ParagraphsObject对象的Y坐标
            </summary>
            <param name="paragraphsObject"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.ConvertToSignleSheet.UpdateImageObject(Spire.Pdf.Conversion.LogicStructure.Base.ImageObject,System.Single)">
            <summary>
            更新ImageObject对象的Y坐标
            </summary>
            <param name="imageObject"></param>
            <param name="offsetY"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment">
            <summary>
            相近数值的起始,结束范围
            比如数据: -1, 10, 15, 16, 17, 18, 29, 30, 31, 48, 49, 50, 61, 62, 80
            前后相邻的数字小于5,认为是相近的数字
            处理后得到结果:
            第1段数据:m_Start=-1,m_End=-1;
            第2段数据:m_Start=10,m_End=10;
            第3段数据:m_Start=15,m_End=18;
            第4段数据:m_Start=29,m_End=31;
            第5段数据:m_Start=48,m_End=50;
            第6段数据:m_Start=61,m_End=62;
            第7段数据:m_Start=80,m_End=80;
            这样每一段范围数字处理成同一行,或同一列
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.m_Parameter">
            <summary>
            前后间隔某一个值认为是相近的数字
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.m_Start">
            <summary>
            相近数值的开始范围
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.m_End">
            <summary>
            相近数值的结束范围
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.SetStart(System.Single)">
            <summary>
            设置相近数值的开始范围
            </summary>
            <param name="start"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.SetEnd(System.Single)">
            <summary>
            设置相近数值的结束范围
            </summary>
            <param name="end"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.SetParameter(System.Single)">
            <summary>
            前后间隔某一个值认为是相近的数字
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.GetStart">
            <summary>
            获取相近数值的开始范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.GetEnd">
            <summary>
            获取相近数值的结束范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment.GetParameter">
            <summary>
            前后间隔某一个值认为是相近的数字
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow">
            <summary>
            单元格横向起点,结束点,或两点之间距离;单元格纵向起点,结束点,或两点之间距离
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.m_RowTopY">
            <summary>
            当前行的Y坐标起始点
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.m_RowBottomY">
            <summary>
            当前行的Y坐标结束点
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.m_RowIndex">
            <summary>
            当前行的所引,1开始
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.m_Columns">
            <summary>
            当前行包含的列
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.#ctor(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="rowTopY"></param>
            <param name="rowBottomY"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.GetRowTopY">
            <summary>
            Get y coordinate point for row top 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.SetRowTopY(System.Single)">
            <summary>
            Set y coordinate point for row top 
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.GetRowBottomY">
            <summary>
            Get y coordinate point for row bottom 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.SetRowBottomY(System.Single)">
            <summary>
            Set y coordinate point for row bottom 
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.GetRowIndex">
            <summary>
            Get row index
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.SetRowIndex(System.Int32)">
            <summary>
            Set row index
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.AddColumn(System.Int32)">
            <summary>
            Add new Column
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.SetColumn(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn})">
            <summary>
            
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.GetColumns">
            <summary>
            Get all Columns
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.GetColumn(System.Int32)">
            <summary>
            Get logicColumn by columnIndex
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.GetRowHeight">
            <summary>
            Get row height
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow.IsEmpty">
            <summary>
            当前行内容是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn">
            <summary>
            单元格横向起点,结束点,或两点之间距离;单元格纵向起点,结束点,或两点之间距离
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_ColumnLeftX">
            <summary>
            当前列的左边的X起始点
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_ColumnRightX">
            <summary>
            当前列的右边的X结束点
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_RowIndex">
            <summary>
            当前列所在行的索引值,1开始
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_ColumnIndex">
            <summary>
            当前列的索引值,0开始
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_Top">
            <summary>
            当前列的顶部边框
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_Bottom">
            <summary>
            当前列的底部边框
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_Left">
            <summary>
            当前列的左边框
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_Right">
            <summary>
            当前列的右边框
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_BgColor">
            <summary>
            当前列的背景色
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_textObjects">
            <summary>
            当前列的text对象集合
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.m_paragraphsObject">
            <summary>
            当前列的Paragraphs对象
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetColumnLeftX(System.Single)">
            <summary>
            Set x point to the left of the colume
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetColumnLeftX">
            <summary>
            Get x point to the left of the colume
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetColumnRightX(System.Single)">
            <summary>
            Set x point to the right of the colume
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetColumnRightX">
            <summary>
            Get x point to the right of the colume
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetRowIndex(System.Int32)">
            <summary>
            Set row Index 
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetRowIndex">
            <summary>
            Get row Index 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetColumnIndex(System.Int32)">
            <summary>
            Set Column Index 
            </summary>
            <param name="columnIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetColumnIndex">
            <summary>
            Get Column Index 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetTop">
            <summary>
            Get the top border
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetTop(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            Set the top border
            </summary>
            <param name="top"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetBottom">
            <summary>
            Get the bottom border
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetBottom(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            Set the bottom border
            </summary>
            <param name="bottom"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetLeft">
            <summary>
            Get the left border
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetLeft(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            Set the left border
            </summary>
            <param name="left"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetRight">
            <summary>
            Get the right border
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetRight(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            Set the right border
            </summary>
            <param name="right"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetBgColor">
            <summary>
            Get the background color
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetBgColor(System.Drawing.Color)">
            <summary>
            Set the background color
            </summary>
            <param name="bgColor"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetTextObjects(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            Add text object to column
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetTextObject(Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            Add text object to column
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.SetParagraphsObject(Spire.Pdf.Conversion.LogicStructure.Base.ParagraphsObject)">
            <summary>
            Add paragraphs object to column
            </summary>
            <param name="paragraphsObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetTextObjects">
            <summary>
            Get all graphics object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetParagraphsObject">
            <summary>
            Get paragraphs object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetColumnWidth">
            <summary>
            Get column width
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetColumnTextWidth">
            <summary>
            Get column text width
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetRightTextEndXCoordinate">
            <summary>
            获取当前列最右边文本的结束X坐标点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetLeftTextXCoordinate">
            <summary>
            获取当前列最左边文本的X坐标点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetTextMaxFontSize">
            <summary>
            获取当前列文本的最大fontSize
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.GetText">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn.IsEmpty">
            <summary>
            当前列内容是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.m_allLineXOrdinates">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.m_allLineYOrdinates">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.m_logicRows">
            <summary>
            当前表格所有行
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.m_LogicColumns">
            <summary>
            当前表格所有行
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.#ctor(System.Collections.Generic.List{System.Single},System.Collections.Generic.List{System.Single})">
            <summary>
            
            </summary>
            <param name="allLineXOrdinates"></param>
            <param name="allLineYOrdinates"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.AddLogicRow(System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow)">
            <summary>
            
            </summary>
            <param name="rowIndex"></param>
            <param name="logicRow"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetLogicRows">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetNewLogicColumns">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetLogicColumns">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetFirstRowAllLogicColumns">
            <summary>
            获取第一行的所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.SetLogicColumns(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn})">
            <summary>
            
            </summary>
            <param name="logicColumns"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetLogicRow(System.Int32)">
            <summary>
            
            </summary>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetLogicColumn(System.Int32)">
            <summary>
            
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetMaxRowIndex">
            <summary>
            最大行索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetMaxColumnIndex">
            <summary>
            最大列索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.GetRect">
            <summary>
            LogicSheet的范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheet.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator">
            <summary>
            logic sheet creator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.m_pageObject">
            <summary>
            页面对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.m_dataSegmentsX">
            <summary>
            线条X坐标点相近数值的起始,结束范围
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.m_dataSegmentsY">
            <summary>
            线条Y坐标点相近数值的起始,结束范围
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.#ctor(Spire.Pdf.Conversion.LogicStructure.Base.PageObject)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="pageObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.CreateLogicSheet">
            <summary>
            创建逻辑sheet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetDataSegmentsX">
            <summary>
            线条X坐标点相近数值的起始,结束范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetDataSegmentsY">
            <summary>
            线条Y坐标点相近数值的起始,结束范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetAllColumnsXCoordinates(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn})">
            <summary>
            获取所有列的X坐标
            </summary>
            <param name="columnDictionarys"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetAllRowsYCoordinates(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow})">
            <summary>
            获取所有行的Y坐标
            </summary>
            <param name="rowDictionarys"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetXCoordinatesByLineLayout">
            <summary>
            按线条方式布局,获取文本,线条的X坐标位置,包含表格线条,path线条和单个线条
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetYCoordinatesByLineLayout">
            <summary>
            按线条方式布局,获取文本,线条的Y坐标位置,包含表格线条,path线条和单个线条
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetXCoordinatesByTextLayout">
            <summary>
            按文本方式布局,获取文本,线条的X坐标位置,包含表格线条,path线条和单个线条
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetYCoordinatesByTextLayout">
            <summary>
            按文本方式布局,获取文本,线条的Y坐标位置,包含表格线条,path线条和单个线条
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetTableObjectXCoordinates">
            <summary>
            所有表格线的横坐标值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetPathObjectXCoordinates">
            <summary>
            所有path线条的横坐标值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetAllLineObjectXCoordinates">
            <summary>
            所有线条的横坐标值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetTableObjectYCoordinates">
            <summary>
            所有表格线的纵坐标值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetPathObjectYCoordinates">
            <summary>
            所有path线条的纵坐标值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetAllLineObjectYCoordinates">
            <summary>
            所有线条的Y坐标值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetLogicColumns(System.Collections.Generic.List{System.Single})">
            <summary>
            创建逻辑列
            </summary>
            <param name="tableXCoordinates"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddPartXCoordinateToLogicColumns(System.Collections.Generic.List{System.Single},System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn},System.Single)">
            <summary>
            把部分对象的X坐标值加入逻辑列,进行布局
            </summary>
            <param name="xCoordinates"></param>
            <param name="columnDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddSignleXCoordinateToLogicColumns(System.Single,System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn},System.Single)">
            <summary>
            把对象的X坐标值加入逻辑列,进行布局
            </summary>
            <param name="x"></param>
            <param name="columnDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetLogicRows(System.Collections.Generic.List{System.Single})">
            <summary>
            创建逻辑行
            </summary>
            <param name="tableYCoordinates"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddPartYCoordinateToLogicRows(System.Collections.Generic.List{System.Single},System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow},System.Single)">
            <summary>
            把对象的Y坐标值加入逻辑行,进行布局
            </summary>
            <param name="yCoordinates"></param>
            <param name="rowDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddSignleYCoordinateToLogicRows(System.Single,System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow},System.Single)">
            <summary>
            把对象的Y坐标值加入逻辑行,进行布局
            </summary>
            <param name="y"></param>
            <param name="rowDictionarys"></param>
            <param name=""></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddLineXCoordinatesToLogicColumns(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn},System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            把HLineObject VLineObject PathObject对象的X坐标值加入逻辑列
            </summary>
            <param name="columnDictionarys"></param>
            <param name="tableXCoordinates"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddLineYCoordinatesToLogicRows(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow},System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            把HLineObject VLineObject PathObject对象的Y坐标值加入逻辑行
            </summary>
            <param name="rowDictionarys"></param>
            <param name="tableYCoordinates"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddAllTextXCoordinatesToLogicColumns(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn},System.Single)">
            <summary>
            把所有文本对象的X坐标值加入逻辑列
            </summary>
            <param name="columnDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddTableTextObjectXCoordinatesToLogicColumns(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn},System.Single)">
            <summary>
            把表格对象中的TextObject对象的X坐标值加入逻辑列
            </summary>
            <param name="columnDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddTextObjectXCoordinatesToLogicColumns(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn},System.Single)">
            <summary>
            把TextObject对象的X坐标值加入逻辑列
            </summary>
            <param name="columnDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddAllTextYCoordinatesToLogicRows(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow},System.Single)">
            <summary>
            把所有文本对象的Y坐标值加入逻辑行
            </summary>
            <param name="rowDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddTableTextObjectYCoordinatesToLogicRows(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow},System.Single)">
            <summary>
            把表格对象中的TextObject对象的Y坐标值加入逻辑行
            </summary>
            <param name="rowDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetRowObjectTextYCoordinates(Spire.Pdf.Conversion.LogicStructure.Tables.RowObject,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}},System.Single)">
            <summary>
            获取表格对象每一行文本的Y坐标
            </summary>
            <param name="rowObject"></param>
            <param name="eachRowTextObjects"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetTextYCoordinates(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}},System.Single)">
            <summary>
            获取每一行文本的Y坐标
            </summary>
            <param name="eachRowTextObjects"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.AddTextObjectYCoordinatesToLogicRows(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicRow},System.Single)">
            <summary>
            把TextObject对象的Y坐标值加入逻辑行
            </summary>
            <param name="rowDictionarys"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetTableObjectOtherArea(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject})">
            <summary>
            获取表格对象以外的区域
            </summary>
            <param name="tableObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetTableNearXCoordinates(System.Collections.Generic.List{System.Single})">
            <summary>
            当PDF所有页面的表格转到一个sheet时,表格X坐标点太多会生成很多列,对于相近的XX坐标做个优化
            </summary>
            <param name="xCoordinates"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetLineXCoordinatesNear(System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            当PDF所有页面的线条转到一个sheet时,线条X坐标点太多会生成很多列,对于相近的XX坐标做个优化
            </summary>
            <param name="xCoordinates"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetLineCoordinatesNear(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Layout.DataSegment})">
            <summary>
            获取线条坐标点相近数值的起始值
            </summary>
            <param name="allLineXCoordinates"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetTableTopTextYCoordinates(System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            获取表格顶部部分文本的X的坐标值
            </summary>
            <param name="textYCoordinates"></param>
            <param name="tableTopMax"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetTableBottomTextYCoordinates(System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            获取表格底部部分文本的X的坐标值
            </summary>
            <param name="textYCoordinates"></param>
            <param name="tableBottomMin"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.SubsectionByXCoordinates(System.Collections.Generic.List{System.Single},System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Conversion.LogicStructure.Layout.LogicColumn})">
            <summary>
            把X坐标按表格列分段
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.DeduplicationXCoordinates(System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            如果X坐标位置靠得很近,消除重复项
            </summary>
            <param name="textXCoordinates">坐标点</param>
            <param name="parameter">小于等于某个值,认为是重复的</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.NextIndexInXCoordinates(System.Int32,System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            下一个数字减上一个数字大于parameter值的索引
            </summary>
            <param name="srcIndex"></param>
            <param name="srcLists">坐标点</param>
            <param name="parameter">小于等于某个值,认为是重复的</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.DeduplicationYCoordinates(System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            如果Y坐标位置靠得很近,消除重复项
            </summary>
            <param name="textYCoordinates"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.NextIndexInYCoordinates(System.Int32,System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            下一个数字减上一个数字大于parameter值的索引
            </summary>
            <param name="srcIndex"></param>
            <param name="srcLists"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Layout.LogicSheetCreator.GetRowTextObjectRect(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            获取当前集合中所有文本的矩形范围
            </summary>
            <param name="lists"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject">
            <summary>
            Border object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject.m_lineWidth">
            <summary>
            单元格Border线宽
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject.m_color">
            <summary>
            单元格Border颜色
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject.m_BorderStyle">
            <summary>
            Cell border line style
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject.GetLineWidth">
            <summary>
            Get border width
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject.SetLineWidth(System.Single)">
            <summary>
            Set border width
            </summary>
            <param name="lineWidth"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject.SetBorderStyle(Spire.Pdf.General.Excel.BorderStyle)">
            <summary>
             Set border style
            </summary>
            <param name="borderStyle"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject.GetColor">
            <summary>
            Get border color
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject.SetColor(System.Drawing.Color)">
            <summary>
            Set border color
            </summary>
            <param name="color"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject">
            <summary>
            Column object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_ColumnLeftX">
            <summary>
            当前列的左边的X起始点
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_ColumnRightX">
            <summary>
            当前列的右边的X结束点
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_RowIndex">
            <summary>
            当前列所在行的索引值,1开始
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_ColumnIndex">
            <summary>
            当前列的索引值,0开始
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_Top">
            <summary>
            当前列的顶部边框
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_Bottom">
            <summary>
            当前列的底部边框
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_Left">
            <summary>
            当前列的左边框
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_Right">
            <summary>
            当前列的右边框
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.m_BgColor">
            <summary>
            当前列的背景色
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.textObjects">
            <summary>
            当前列的文本集合
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.SetColumnLeftX(System.Single)">
            <summary>
            Set x point to the left of the colume
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetColumnLeftX">
            <summary>
            Get x point to the left of the colume
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.SetColumnRightX(System.Single)">
            <summary>
            Set x point to the right of the colume
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetColumnRightX">
            <summary>
            Get x point to the right of the colume
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.SetRowIndex(System.Int32)">
            <summary>
            Set row Index 
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetRowIndex">
            <summary>
            Get row Index 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.SetColumnIndex(System.Int32)">
            <summary>
            Set Column Index 
            </summary>
            <param name="columnIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetColumnIndex">
            <summary>
            Get Column Index 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetTop">
            <summary>
            Get the top border
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.SetTop(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            Set the top border
            </summary>
            <param name="top"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetBottom">
            <summary>
            Get the bottom border
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.SetBottom(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            Set the bottom border
            </summary>
            <param name="bottom"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetLeft">
            <summary>
            Get the left border
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.SetLeft(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            Set the left border
            </summary>
            <param name="left"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetRight">
            <summary>
            Get the right border
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.SetRight(Spire.Pdf.Conversion.LogicStructure.Tables.BorderObject)">
            <summary>
            Set the right border
            </summary>
            <param name="right"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetBgColor">
            <summary>
            Get the background color
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.AddTextObject(Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            Add text object to column
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.AddPathObject(Spire.Pdf.Conversion.LogicStructure.Base.PathObject)">
            <summary>
            Add path object to column
            </summary>
            <param name="pathObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.AddBackgroundColor(System.Drawing.Color)">
            <summary>
            Add background color to column
            </summary>
            <param name="pathObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetTextObjects">
            <summary>
            Get all text object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.GetColumnWidth">
            <summary>
            Get column width
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.ColumnObject.MergeText">
            <summary>
            Merge text
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject">
            <summary>
            Row object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.m_RowTopY">
            <summary>
            当前行的Y坐标起始点
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.m_RowBottomY">
            <summary>
            当前行的Y坐标结束点
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.m_RowIndex">
            <summary>
            当前行的所引,1开始
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.m_Columns">
            <summary>
            当前行包含的列
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.GetRowTopY">
            <summary>
            Get y coordinate point for row top 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.SetRowTopY(System.Single)">
            <summary>
            Set y coordinate point for row top 
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.GetRowBottomY">
            <summary>
            Get y coordinate point for row bottom 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.SetRowBottomY(System.Single)">
            <summary>
            Set y coordinate point for row bottom 
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.GetRowIndex">
            <summary>
            Get row index
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.SetRowIndex(System.Int32)">
            <summary>
            Set row index
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.AddColumn(System.Int32)">
            <summary>
            Add new Column
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.GetColumns">
            <summary>
            Get all Columns
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.RowObject.GetRowHeight">
            <summary>
            Get row height
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject">
            <summary>
            Table Object
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.m_lineMinWidth">
            <summary>
            线条最小宽度
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.m_HorizontalLineObjects">
            <summary>
            存放当前表格的横线对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.m_VerticalLineObjects">
            <summary>
            存放当前表格的竖线对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.m_PathObjects">
            <summary>
            存放当前表格的Path对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.m_Rows">
            <summary>
            当前表格所有行
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.m_TableRect">
            <summary>
            当前表格矩形区域
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.m_TextObjects">
            <summary>
            存放当前表格的文本对象
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.AddHorizontalLine(Spire.Pdf.Conversion.LogicStructure.Base.HLineObject)">
            <summary>
            Add horizontal Lines in the current table
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetHorizontalLines">
            <summary>
            Return all horizontal Lines in the current table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.AddVerticalLine(Spire.Pdf.Conversion.LogicStructure.Base.VLineObject)">
            <summary>
            Add vertical Lines in the current table
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetVerticalLines">
            <summary>
            Return all vertical Lines in the current table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.AddPathObject(Spire.Pdf.Conversion.LogicStructure.Base.PathObject)">
            <summary>
            Add pathObject in the current table
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetPathObjects">
            <summary>
            Return all pathObject in the current table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.Contains(Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject)">
            <summary>
            Whether to contains obj in the current table?
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetTableRect">
            <summary>
            Get the table Rect
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetOtherGraphicsObjects">
            <summary>
            与表格相交,但是属于表格范围外部的对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetRows">
            <summary>
            Get all rows
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.CreateRows">
            <summary>
            返回每一行的起始点,结束点,高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.CreateColumns">
            <summary>
            返回每一列的起始点,结束点,宽度
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.SetLineToColumnObject(Spire.Pdf.Conversion.LogicStructure.Tables.RowObject,Spire.Pdf.Conversion.LogicStructure.Base.HLineObject,System.Boolean)">
            <summary>
            设置横线到列对象
            </summary>
            <param name="rowObject"></param>
            <param name="horizontalLine"></param>
            <param name="isTop"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.SetLineToColumnObject(Spire.Pdf.Conversion.LogicStructure.Tables.RowObject,Spire.Pdf.Conversion.LogicStructure.Base.VLineObject)">
            <summary>
            设置竖线到列对象
            </summary>
            <param name="rowObject"></param>
            <param name="verticalLine"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetAllHLineRect">
            <summary>
            当前表格所有横线的矩形范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.FillTextObject(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            Fill text into table
            </summary>
            <param name="textObjects"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.FillTextObject(Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            Fill text into table
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.FindColumnObject(Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            Which column is the text in the table
            </summary>
            <param name="textObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.FindColumnObject(Spire.Pdf.Conversion.LogicStructure.Tables.RowObject,Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            Which column is the text in the table
            </summary>
            <param name="rowObject"></param>
            <param name="textObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.FindColumnObject(Spire.Pdf.Conversion.LogicStructure.Tables.RowObject,Spire.Pdf.Conversion.LogicStructure.Base.PathObject)">
            <summary>
            Which column is the path in the table
            </summary>
            <param name="rowObject"></param>
            <param name="pathObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.MergeCell">
            <summary>
            Merge cell
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetColumnObject(System.Int32,System.Int32)">
            <summary>
            根据行列所引查找对象
            </summary>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetColumnCount">
            <summary>
            获取总列数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.GetAllTextObjects">
            <summary>
            返回表格内所有文本对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TableObject.ClearAllTextObjects">
            <summary>
            返回表格内所有文本对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer">
            <summary>
            Tables recognizer 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.m_lineConnectionValue">
            <summary>
            横线与竖线连接处,间距小于某个值,认为是相交的
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.tableObjects">
            <summary>
            表格对象集合
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="graphicsObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.Recognize(System.Boolean)">
            <summary>
            Recognize table object
            </summary>
            <param name="isMergeCell"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.GetOtherGraphicsObjects">
            <summary>
            Get other graphics object than table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.SetLineConnectionValue(System.Single)">
            <summary>
            横线与竖线连接处,间距小于某个值,认为是相交的
            </summary>
            <param name="lineConnectionValue"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.GetAllHLineObjects">
            <summary>
            获取所有存在相交的横线
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.GetAllVLineObjects">
            <summary>
            获取所有存在相交的竖线
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.GetAllTextObjects">
            <summary>
            获取所有的文本对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.GetAllPathObjects">
            <summary>
            获取所有的Path对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.GetTableObjects(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.HLineObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject})">
            <summary>
            获取表格对象
            </summary>
            <param name="hLineObjects"></param>
            <param name="vLineObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.GetTableObjectsAnalysisLines(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.HLineObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject})">
            <summary>
            分析线条,得到表格对象
            </summary>
            <param name="hLineObjects"></param>
            <param name="vLineObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.MergeCrossTable(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject})">
            <summary>
            合并成一个表格
            </summary>
            <param name="tableObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.MergeCrossTable(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject},System.Boolean@)">
            <summary>
            合并成一个表格
            </summary>
            <param name="tableObjects"></param>
            <param name="hasCross"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.JudgeCrossTable(System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject})">
            <summary>
            是否存在交叉
            </summary>
            <param name="start"></param>
            <param name="tableObjects"></param>
            <param name="removeTableObjects"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.IsCrossLine(Spire.Pdf.Conversion.LogicStructure.Base.VLineObject,Spire.Pdf.Conversion.LogicStructure.Base.HLineObject)">
            <summary>
            竖线与横线是否交叉
            </summary>
            <param name="verticalLine"></param>
            <param name="horizontalLine"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.IsLineCrossTable(Spire.Pdf.Conversion.LogicStructure.Base.HLineObject,Spire.Pdf.Conversion.LogicStructure.Tables.TableObject)">
            <summary>
            横线是否与表格相交
            </summary>
            <param name="horizontalLine"></param>
            <param name="tableObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.IsLineCrossTable(Spire.Pdf.Conversion.LogicStructure.Base.VLineObject,Spire.Pdf.Conversion.LogicStructure.Tables.TableObject)">
            <summary>
            竖线是否与表格相交
            </summary>
            <param name="verticalLine"></param>
            <param name="tableObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.IsTable(Spire.Pdf.Conversion.LogicStructure.Tables.TableObject)">
            <summary>
            判断是否是一个表格
            </summary>
            <param name="tableObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.TableObjectSort(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject})">
            <summary>
            处理表格顺序,先按表格左上角Y坐标从上到下,再按表格左上角X坐标从左到右排序
            </summary>
            <param name="tableObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.TableHorizontalSort(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject})">
            <summary>
            按表格左上角X坐标从左到右排序
            </summary>
            <param name="tableObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.FillTextObject(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            把文本填入表格
            </summary>
            <param name="tableObjects"></param>
            <param name="textObjects"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.FillTextObject(Spire.Pdf.Conversion.LogicStructure.Tables.TableObject,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            把文本填入表格
            </summary>
            <param name="tableObject"></param>
            <param name="textObjects"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.FillPathObject(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject},System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.PathObject})">
            <summary>
            把path填入表格
            </summary>
            <param name="tableObjects"></param>
            <param name="pathObjects"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.FillPathObject(Spire.Pdf.Conversion.LogicStructure.Tables.TableObject,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.PathObject})">
            <summary>
            把path填入表格
            </summary>
            <param name="tableObject"></param>
            <param name="pathObjects"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Tables.TablesRecognizer.MergeCell(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject})">
            <summary>
            合并单元格
            </summary>
            <param name="tableObjects"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Texts.ParagraphsRecognizer">
            <summary>
            段落识别
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.ParagraphsRecognizer.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject})">
            <summary>
            
            </summary>
            <param name="graphicsObject"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.ParagraphsRecognizer.Recognize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.ParagraphsRecognizer.GetOtherGraphicsObjects">
            <summary>
            Get other graphics object than table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.ParagraphsRecognizer.GetRowMinYOrdinates(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            获取当前行,文本Y坐标最小的值
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.ParagraphsRecognizer.GetRowMaxHeight(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            获取当前行,文本高度最大的值
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer">
            <summary>
            text recognizer
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.hLinesDictionary">
            <summary>
            存放当前页面所有的线条(横线)对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.vLinesDictionary">
            <summary>
            存放当前页面所有的线条(竖线)对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.m_Separator">
            <summary>
            串联字符串数组的所有元素,其中在每个元素之间使用指定的分隔符.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.m_NewlineChar">
            <summary>
            串联每一行,其中在每一行之间使用指定的分隔符.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.#ctor(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject},System.String,System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="graphicsObject">graphicsObject</param>
            <param name="separatorChar">separatorChar</param>
            <param name="newlineChar">newlineChar</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.Recognize">
            <summary>
            Recognize text,简单识别,当前行紧挨着的字符和文本已经被合并了,进一步把每一行的多个文本进行合并
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.SimpleRecognizeText">
            <summary>
            简单识别,只合并当前行紧挨着的字符和文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetEachRowTextObjects">
            <summary>
            获取每一行的文本对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.FilterRotateText(Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            过滤掉不需要显示的文本(旋转文本)
            </summary>
            <param name="xlsxOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.FilterOverlapText">
            <summary>
            过滤掉重叠文本
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetAllHLineObjects">
            <summary>
            获取所有的横线
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetAllVLineObjects">
            <summary>
            获取所有的竖线
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetAllTextObjects">
            <summary>
            获取所有文本对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetAllOtherObjects">
            <summary>
            获取除文本对象以外的所有对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetSegmentTextObjectsByXCoordinate(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject},System.Single,System.Single)">
            <summary>
            按X方向,获取x1和x2之间所有的文本对象
            </summary>
            <param name="textObjects"></param>
            <param name="x1"></param>
            <param name="x2"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetSegmentTextObjectsByYCoordinate(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject},System.Single,System.Single)">
            <summary>
            按Y方向,获取y1和y2之间所有的文本对象
            </summary>
            <param name="textObjects"></param>
            <param name="y1"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.ConvertToLists(System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}})">
            <summary>
            把字典转换成集合
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetTextObjectsByXCoordinate(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            把集合中的文本对象按文本坐标X值重新组织
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetTextObjectsByYCoordinate(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            把集合中的文本对象按文本坐标Y值重新组织
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetEachRowTextObjects(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            分别获取每一行的文本对象
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetEachRowTextObjectsBySegment(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            按横线分段后,分别获取每一行的文本对象
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.AddDictionaryToDictionary(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}},System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}})">
            <summary>
            把srcdictionary字典并入到destdictionary字典
            </summary>
            <param name="srcdictionary"></param>
            <param name="destdictionary"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.AddTextObjectsToDictionary(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject},System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}})">
            <summary>
            把集合textObjects并入到destdictionary字典
            </summary>
            <param name="textObjects"></param>
            <param name="destdictionary"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetDictionaryMaxKey(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}})">
            <summary>
            获取字典的最大key
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetTextMinFontSize(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.GetTextMaxHeight(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            获取集合中文本最大的高度
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.MergeCurrentRowOneByOneCharacter(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            把紧挨着的字符和文本进行合并
            </summary>
            <param name="texts"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.MergeOverlapText(System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}})">
            <summary>
            在同一行,起始点X相同的情况下,也存在重叠文本,合并成一个文本
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.MergeOverlapText(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            重叠文本,合并成一个文本
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.MergeTwoTextObject(Spire.Pdf.Conversion.LogicStructure.Base.TextObject,Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            合并两个文本,第二个文本对象合并到第一个文本对象
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.MergeCurrentRowText(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            拼接前后两段字符串
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.CheckTextBetweenExistLine(Spire.Pdf.Conversion.LogicStructure.Base.TextObject,Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            判断两个文本之间是否有线条,存在线条返回true,不存在线条返回false
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.CheckLineCrossText(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.VLineObject},Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            判断竖线是否从两个文本之间穿过
            </summary>
            <param name="lineObjects"></param>
            <param name="first"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.IsExistHLine(System.Single)">
            <summary>
            y位置处是否有横线
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.FilterOverlapText(System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject}})">
            <summary>
            在同一行,起始点X相同的情况下,也存在重叠文本,合并成一个文本
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.SelectAppropriateTextObject(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            重叠文本中选择一个合适的文本
            </summary>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.FilterOverlapText(System.Collections.Generic.Dictionary{System.Single,Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            X坐标大概重叠的文本
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Texts.TextsRecognizer.LastPart(System.Single,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.TextObject})">
            <summary>
            X坐标相似,最后一段文本
            </summary>
            <param name="x"></param>
            <param name="textObjects"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities">
            <summary>
            Common method
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.ColumnTextRepetitionParameter">
            <summary>
            在布局中多个文本靠得很近,会造成重复性的多列,设一个常数控制
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.RowTextRepetitionParameter">
            <summary>
            在布局中多个文本靠得很近,会造成重复性的多行,设一个常数控制
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.ColumnLineRepetitionParameter">
            <summary>
            在布局中多个线条靠得很近,会造成重复性的多列,设一个常数控制
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.RowLineRepetitionParameter">
            <summary>
            在布局中多个线条靠得很近,会造成重复性的多行,设一个常数控制
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.SpaceWidth">
            <summary>
            字体为Arial,大小为1的情况下,空格宽度大约为0.277F,单位point
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.SpaceHeight">
            <summary>
            字体为Arial,大小为1的情况下,空格高度大约为1.15F,单位point
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.m_UnitConvertor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.GetFontName(System.String)">
            <summary>
            Get font name
            </summary>
            <param name="familyName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.IsDigit(System.String)">
            <summary>
            Check whether it is number
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.IsBezierCurves(System.Drawing.PointF[])">
            <summary>
            判断是否是贝塞儿曲线
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.IsToMultipleSheet(Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            是否转到多个sheet
            </summary>
            <param name="xlsxOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.SortDes(System.Collections.Generic.List{System.Single})">
            <summary>
            Descending sort
            </summary>
            <param name="lists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.SortDes(System.Collections.Generic.List{System.Int32})">
            <summary>
            Descending sort
            </summary>
            <param name="lists"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.GetSegment(System.Collections.ArrayList,System.Single)">
            <summary>
            根据number相近值的范围进行分段
            </summary>
            <param name="arrayList"></param>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.GetSegment(System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            根据number相近值的范围进行分段
            </summary>
            <param name="srcData"></param>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.ApplyLeftToRightMark(System.String)">
            <summary>
            添加从左往右标识.
            </summary>
            <param name="cellValue"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.CheckCurrentRow(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            判断是否在当前行
            </summary>
            <param name="bottomY"></param>
            <param name="topY"></param>
            <param name="textY"></param>
            <param name="fontsize"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.CheckCurrentColumn(System.Single,System.Single,Spire.Pdf.Conversion.LogicStructure.Base.TextObject)">
            <summary>
            判断是否在当前列
            </summary>
            <param name="leftX"></param>
            <param name="rightX"></param>
            <param name="textObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.CompareColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            比较颜色
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.ConvertPsPathToRectangle(Spire.Pdf.General.Paper.Drawing.Rendering.Ps.PsPath)">
            <summary>
            Convert PsPath to RectangleF
            </summary>
            <param name="psPath"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.IsValidPoints(System.Drawing.PointF[])">
            <summary>
            PDF-based ISO standards require that integer values in a PDF do not exceed the range of integer values in 32 bit systems.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.ComputeArc(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Double,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="radiusX"></param>
            <param name="radiusY"></param>
            <param name="rotationAngle"></param>
            <param name="isLargeArc"></param>
            <param name="isCounterClockwise"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.GetArcAngle(System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Double@,System.Double@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="isLargeArc"></param>
            <param name="isCounterClockwise"></param>
            <param name="cosArcAngle"></param>
            <param name="sinArcAngle"></param>
            <param name="lines"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.GetBezierDistance(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dot"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.IsLineLayout(Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.IsConvertToMultipleSheet(Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            是否转到多个sheet
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.IsShowOverlapText(Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            是否显示重叠文本
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.PointToPixel(System.Single)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.PixelToPoint(System.Single)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.GetCeilingFromPointToPixel(System.Single)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.ExcuteClipImage(Spire.Pdf.Conversion.LogicStructure.Base.ImageObject)">
            <summary>
            对图片只做剪切,不缩放图片,把剪贴范围的比例缩放到和原始图片比例一致,再剪贴图片,这样避免图片模糊
            </summary>
            <param name="imageObject"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.SetImageClipRect(Spire.Pdf.Conversion.LogicStructure.Base.ImageObject)">
            <summary>
            设置图片在原文档原始的剪切范围,起始,结束位置,高宽
            </summary>
            <param name="imageEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.LogicStructure.Utilities.CommUtilities.ExcuteClipAndScaleImage(Spire.Pdf.Conversion.LogicStructure.Base.ImageObject)">
            <summary>
            对图片做剪切,先把图片比列缩放到和剪贴范围的比例(100%)一致,再剪贴图片,图片会存在模糊情况
            </summary>
            <param name="imageObject"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.OfdConverter">
            <summary>
            This class provides support for converting ofd into pdf or image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.OfdConverter.PageCount">
            <summary>
            Gets the document page count.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.OfdConverter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="filename">The path to source ofd file.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.OfdConverter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="fileStream">The ofd file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.OfdConverter.ToPdf(System.String)">
            <summary>
            Save ofd document to pdf.
            </summary>
            <param name="filename">A relative or absolute path for the file.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.OfdConverter.ToPdf(System.IO.Stream)">
            <summary>
            Save ofd document to pdf.
            </summary>
            <param name="stream">The pdf file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.OfdConverter.ToImage(System.Int32)">
            <summary>
            Saves OFD document page as image
            </summary>
            <param name="pageIndex">Page index</param>
            <returns>Returns page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.OfdConverter.ToImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Saves OFD document page as image
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="dpiX">Pictures X resolution</param>
            <param name="dpiY">Pictures Y resolution</param>
            <returns>Returns page as Image</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.OfdOptions">
            <summary>
            The option for pdf to ofd.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.OfdOptions.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.OfdOptions.UseTempFileStorage">
            <summary>
            Gets or sets whether to save to temporary files.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.PdfEmbeddedFontConverter">
            <summary>
            The embedded font conveter.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfEmbeddedFontConverter.m_document">
            <summary>
            The origin document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfEmbeddedFontConverter.#ctor(System.IO.Stream)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="stream">The pdf file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfEmbeddedFontConverter.#ctor(System.String)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="filePath">The pdf file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfEmbeddedFontConverter.ToEmbeddedFontDocument(System.String)">
            <summary>
            Convert to embedded font document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfEmbeddedFontConverter.ToEmbeddedFontDocument(System.IO.Stream)">
            <summary>
            Convert to embedded font document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="F:Spire.Pdf.Conversion.EmdeddedFont.PdfEmbeddedFontProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.EmdeddedFont.PdfEmbeddedFontProvider.#ctor">
            <summary>
            Construct an new provider
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.EmdeddedFont.PdfEmbeddedFontProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.EmdeddedFont.PdfEmbeddedFontProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.EmdeddedFont.PdfEmbeddedFontProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.EmdeddedFont.PdfEmbeddedFontProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.PdfToDocConverter">
            <summary>
            This class provides support for converting PDF into an XPS Document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.#ctor(System.IO.Stream)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="stream">The pdf file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.#ctor(System.String)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="filePath">The pdf file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.ConvertToWord(Spire.Pdf.PdfDocumentBase,System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Converts a range of the pdf document to word.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="stream">The word stream.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">the end index.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.ConvertToWord(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Converts the specified pdf document to word.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="stream">The word stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.SaveToDocx(System.IO.Stream)">
            <summary>
            Convert to doc/docx document.
            </summary>
            <param name="fileStream">The out file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.SaveToDocx(System.IO.Stream,System.Boolean)">
            <summary>
            Convert to doc/docx document.
            </summary>
            <param name="fileStream">The out file stream.</param>
            <param name="isDocx">Is docs or doc.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.SaveToDocx(System.String)">
            <summary>
            Convert to doc/docx document.
            </summary>
            <param name="filename">The out file name.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.SaveToDocx(System.String,System.Boolean)">
            <summary>
            Convert to doc/docx document.
            </summary>
            <param name="filename">The out file name.</param>
            <param name="isDocx">Is docs or doc.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.CreateDocument(Spire.Pdf.General.Paper.Base.DocumentInfo,System.Boolean,System.Boolean)">
            <summary>
            Creates the PDF document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.AddDocumentProperties(Spire.Pdf.PdfDocumentInformation)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToDocConverter.DrawToWord(Spire.Pdf.PdfDocumentBase,System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Draws to PDF.
            </summary>
            <param name="images">The images.</param>
            <returns>The PdfNewDocument.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToExcelConverter.ConvertToExcel(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Convert pdf document to excel.
            </summary>
            <param name="document">The pdf document.</param>
            <param name="ouputStream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToExcelConverter.ConvertToExcel(Spire.Pdf.PdfDocumentBase,System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Convert pdf document to excel.
            </summary>
            <param name="documentBase">The pdf documentBase.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="ouputStream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToExcelConverter.GetRecognizeObjects(Spire.Pdf.PdfDocumentBase,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Base.GraphicsObject}},System.Collections.Generic.Dictionary{System.Int32,System.Drawing.SizeF})">
            <summary>
            Get Recognize Objects
            </summary>
            <param name="documentBase"></param>
            <param name="pageContents"></param>
            <param name="pageSizes"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToLinearizedPdfConverter.m_document">
            <summary>
            The origin document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToLinearizedPdfConverter.#ctor(System.IO.Stream)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="stream">The pdf file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToLinearizedPdfConverter.#ctor(System.String)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="filePath">The pdf file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToLinearizedPdfConverter.ToLinearizedPdf(System.String)">
            <summary>
            Convert to linearized pdf document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToLinearizedPdfConverter.ToLinearizedPdf(System.IO.Stream)">
            <summary>
            Convert to linearized pdf document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001ColorSpaceBuilder.#ctor(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="targetColorSpace"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider">
            <summary>
            The Pdf/X1A:2001 standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.m_colorCmykBuilder">
            <summary>
            the text color builder
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.m_imageCmykBuilder">
            <summary>
            the image color builder
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.m_transparencyBuilder">
            <summary>
            The transparency builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfX.PdfX1A2001Provider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider">
            <summary>
            The Pdf/A1A standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.m_options">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.m_transparencyBuilder">
            <summary>
            The transparency builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1AProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider">
            <summary>
            The Pdf/A1B standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.m_options">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.m_transparencyBuilder">
            <summary>
            The transparency builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA1BProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider">
            <summary>
            The Pdf/A2A standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider.m_options">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2AProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider">
            <summary>
            The Pdf/A2B standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider.m_options">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2BProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider">
            <summary>
            The Pdf/A2U standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider.m_options">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA2UProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider">
            <summary>
            The Pdf/A3A standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider.m_options">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3AProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider">
            <summary>
            The Pdf/A3B standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider.m_options">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3BProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider">
            <summary>
            The Pdf/A3U standard provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider.m_options">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider.m_embeddedFontBuilder">
            <summary>
            The embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider.m_colorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider.#ctor(Spire.Pdf.Conversion.Standards.PdfStandardOptions)">
            <summary>
            Construct a new provider
            </summary>
            <param name="options">The pdf standard options.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.PdfA.PdfA3UProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.PdfStandardOptions">
            <summary>
            The pdf standard options.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Standards.PdfStandardOptions.ForceConvert">
            <summary>
            Force convert.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder">
            <summary>
            Other image color modes convert to cmyk mode
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.HandleInstruction(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle image instructions current resources,rgb color to cmyk color for image
            </summary>
            <param name="instructions"></param>
            <param name="resources"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.HandleInstruction(Spire.Pdf.Core.Contents.PdfRecord,System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle image instructions current resources,rgb color to cmyk color for image
            </summary>
            <param name="instruction"></param>
            <param name="records"></param>
            <param name="resources"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.IsImageDictionary(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Check if it is a image resource
            </summary>
            <param name="resourceDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.ContainsImageMask(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            It is contains mask image resource
            </summary>
            <param name="resourceDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.ContainsImageSMask(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            It is contains smask image resource
            </summary>
            <param name="resourceDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.ConvertToCmyk(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Converter image data to cmyk mode
            </summary>
            <param name="imageDictionary"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.CreateInlineImageDictionary(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Create inline image to new dictionary
            </summary>
            <param name="instruction"></param>
            <param name="resources"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.CreateImageDictionary(Spire.Pdf.Primitives.PdfDictionary,System.String,System.Int32)">
            <summary>
            Creates a new image dictionary,by the specified image dictionary
            </summary>
            <param name="imageDictionary"></param>
            <param name="colorSpace"></param>
            <param name="bitsPerComponent"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.AddResources(System.String,Spire.Pdf.Primitives.PdfDictionary,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            add image dictionary to resources,by specified resource name
            </summary>
            <param name="imageResourceName"></param>
            <param name="imageDictionary"></param>
            <param name="resources"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.FindImageResource(System.String,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Find resource by specified resource name
            </summary>
            <param name="resourceName">The resource name.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The image dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.GenerateImageSamplesWithCMYK(System.Byte[],System.Int32,System.Int32,Spire.Pdf.Conversion.Comm.PdfColorSpace)">
            <summary>
            Convert image color space to cmyk color space.
            </summary>
            <param name="imageSamples">The image samples.</param>
            <param name="width">The image width. Byte boundaries are ignored, except that each row of sample data must begin on a byte boundary.
            If the number of data bits per row is not a multiple of 8, the end of the row is padded with extra bits to fill out the last byte</param>
            <param name="bitsPerComponent">The number of bits used to represent each color component.</param>
            <param name="colorSpace">The color space.</param>
            <returns>
            The image samples with cmyk color space and bitsPerComponent is 8.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKImageBuilder.Map(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Map value form source to target range.
            </summary>
            <param name="sourceValue">The source value.</param>
            <param name="sourceMinValue">The source min value.</param>
            <param name="sourceMaxValue">The source max value.</param>
            <param name="targetMinValue">The target min value.</param>
            <param name="targetMaxValue">The target max value.</param>
            <returns>The target value.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils">
            <summary>
            Document utils.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RepairDocumentPageTree(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Repair document page tree.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RepairDocumentEmbeddedFiles(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Repair document embedded files.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentEmbeddedFiles(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document embedded files.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentJavaScriptActions(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document JavaScript actions.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.removeDocumentBookmarkActions(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document bookmark actions.
            </summary>
            <param name="context">The pdf standard excuting context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentPermissions(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document permissions.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentOutlines(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document outlines.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentAA(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document catalog "AA" entry.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentOpenAction(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document openAction.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentNames(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document Names.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentSpiderInfo(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document spiderInfo.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentStructTreeRoot(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document structTreeRoot.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.RemoveDocumentAcroFormNeedAppearances(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove document needAppearances.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.AddDefaultRGBOutputIntents(Spire.Pdf.Conversion.Comm.PdfProcessContext,System.Boolean)">
            <summary>
            Add default RGB profile outputIntents if catalog has no outputIntents.
            </summary>
            <param name="context">The pdf processing context.</param>
            <param name="force">
            true, if exist outputIntents, replace with default RGB OutputIntents.
            false, if exist outputIntents, return.
            </param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.AddDefaultCMYKOutputIntents(Spire.Pdf.Conversion.Comm.PdfProcessContext,System.Boolean)">
            <summary>
            Create default CMYK profile outputIntents.
            </summary>
            <param name="catalog">The document catalog.</param>
            <param name="context">The pdf processing context.</param>
            <param name="force">
            true, if exist outputIntents, replace with default CMYK OutputIntents.
            false, if exist outputIntents, return.
            </param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfDocumentUtils.CreateOutputIntent(System.String,System.String,System.String,System.Int32)">
            <summary>
            Create output intent dictionary describing the color characteristics of output devices.
            </summary>
            <param name="subType">The output intent subtype</param>
            <param name="iccProfileInfo">
            A human-readable text string containing additional information or comments 
            about the intended target device or production condition.</param>
            <param name="iccProfileResource">The icc profile resource name.</param>
            <param name="iccProfileNumOfComponents">The number of color components in the color space described by the ICC profile.</param>
            <returns>The output intent dictionary.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfAnnotationsUtils">
            <summary>
            Annotations utils.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfAnnotationsUtils.ApplyStandard(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext,System.Collections.Generic.List{System.String})">
            <summary>
            Apply standard to annotations.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
            <param name="permittedAnnotationTypes">Permitted annotation type list.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfAnnotationsUtils.GetFieldType(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get field type
            </summary>
            <param name="annot"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfAnnotationsUtils.SetPdfStream(Spire.Pdf.Core.PdfStream)">
            <summary>
            Set pdfstream property
            </summary>
            <param name="pdfStream"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder">
            <summary>
            Other color modes convert to cmyk mode
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder.m_strokingColorSpaceStack">
            <summary>
            Stroking color space stack.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder.m_nonstrokingColorSpaceStack">
            <summary>
            Nonstroking color space stack.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder.m_currentStrokingColorSpace">
            <summary>
            Current stroking color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder.m_currentNonstrokingColorSpace">
            <summary>
            Current nonstroking color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder.HandleInstruction(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle color space instructions in content stream.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder.HandleInstruction(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle color space/color instructions in content stream.
            </summary>
            <param name="instruction">The instruction.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder.ParseColorOperands(System.String[],Spire.Pdf.Conversion.Comm.PdfColorSpace)">
            <summary>
            Parse color operands in instruction.
            </summary>
            <param name="operands">The color operands.</param>
            <param name="colorSpace">The color space.</param>
            <returns>The color components.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfCMYKColorSpaceBuilder.ToCMYKColorOperands(System.Single[])">
            <summary>
            Convert cmyk components to operands in instruction.
            </summary>
            <param name="cmykComponents">The cmyk components</param>
            <returns>The color operands in instruction</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfFileStructureUtils">
            <summary>
            File structure utils.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfFontsUtils">
            <summary>
            Fonts utils.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfGraphicsUtils">
            <summary>
            Graphics utils.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfGraphicsUtils.RemoveJpeg2000Filter(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove jpeg2000 filter.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfGraphicsUtils.ApplyStandardWithOptionalContentGroup(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Apply standard to optional content group.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfGraphicsUtils.RemoveOptionalContentGroup(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove optional content group.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfGraphicsUtils.RemoveProhibitedEntriesWithImage(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove prohibited entries with Image.
            An Image dictionary shall not contain the "Alternates" key or the "OPI" key.
            If an image dictionary contains the "Interpolate" key, its value shall be false.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfGraphicsUtils.RemoveResourcesColorSpace(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            remove color space in the resources
            </summary>
            <param name="element"></param>
            <param name="context"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfInteractiveFormsUtils">
            <summary>
            Interactive forms utils.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfInteractiveFormsUtils.AddEmptyAPWithField(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Add empty AP dictionary if field has no ap.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfInteractiveFormsUtils.RemoveSignatureFieldValue(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove signature field value.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfLogicalStructureUtils">
            <summary>
            Logical structure utils.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfLogicalStructureUtils.IndicateTaggedPDF(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Indicates that the file conforms to the tagged PDF conventions.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfLogicalStructureUtils.CreateStructTreeRoot(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Create struct tree root.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfLogicalStructureUtils.FindPageObjects(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Find all page objects.
            </summary>
            <param name="pageTree">The page tree.</param>
            <returns>All page objects.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfLogicalStructureUtils.ProcessPageBox(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Process page box(MediaBox,TrimBox)
            </summary>
            <param name="element"></param>
            <param name="context"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfLogicalStructureUtils.RemovePageStructParents(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Only remove structParents from current page dictionary
            </summary>
            <param name="element"></param>
            <param name="context"></param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils">
            <summary>
            Pdf metadata utils.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.PREDEFINED_PROPERTIES">
            <summary>
            Predefined properties in document info.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.Serialize(Spire.Xmp.IXmpMeta,System.IO.Stream)">
            <summary>Serializes an XMPMeta object as RDF into an OutputStream.</summary>
            <param name="xmp">a metadata object</param>
            <param name="stream">an OutputStream to write the serialized RDF to.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.RemoveCustomProperties(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove custom properties.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.GenerateStandardMetadata(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Generate standard metadata.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.GenerateStandardMetadata">
            <summary>
            Generate default standard metadata.
            </summary>
            <returns>The default standard metadata.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.GenerateStandardMetadata(Spire.Pdf.Core.PdfStream@)">
            <summary>
            Generate standard metadata.
            </summary>
            <param name="data">The origin metadata.</param>
            <returns>The default standard metadata..</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.CloneProperties(System.String,Spire.Xmp.IXmpMeta,Spire.Xmp.IXmpMeta)">
            <summary>
            Clone properties.
            </summary>
            <param name="schemaNs">The namespace URI.</param>
            <param name="originXmpMeta">The origin metadata.</param>
            <param name="targetXmpMeta">The target metadata.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.EnsureEquivalentWithDocumentInfo(Spire.Pdf.Core.PdfStream,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Ensure document information dictionary entries and 
            their analogous XMP properties shall be equivalent.
            </summary>
            <param name="metadata">The metadata stream.</param>
            <param name="info">The document information dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfMetadataUtils.ToISO8601String(System.String)">
            <summary>
            Get the date of ISO8601 format.
            </summary>
            <param name="pdfDate">the date in the format D:YYYYMMDDHHmmSSOHH'mm'</param>
            <returns>the date  in the format yyyy-MM-ddTHH:mm:sszzz</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Standards.Utils.PdfTransparencyUtils">
            <summary>
            Transparency utils.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfTransparencyUtils.RemoveTransparencyGroup(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Remove transparency group.
            A "Group" object with an "S" key with a value of Transparency
            shall not be included in a form XObject.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfTransparencyUtils.RemoveGraphicsStateTransparency(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Remove graphics state transparency.
            </summary>
            <param name="resource">The associated resources with the The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfTransparencyUtils.RemoveSMask(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Remove SMask.
            </summary>
            <param name="resource">The associated resources with the The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Standards.Utils.PdfTransparencyUtils.RemoveImageSMask(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Remove image SMask.
            </summary>
            <param name="resource">The associated resources with the The content stream.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfColorSpace">
            <summary>
            Pdf color space class
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfColorSpace.CreateICCProfile(System.String,System.Int32)">
            <summary>
            Create ICC profile stream.
            </summary>
            <param name="resource">The icc profile resource name.</param>
            <param name="numOfComponents">The number of color components in the color space described by the ICC profile.</param>
            <returns>The ICC profile stream.</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Conversion.Comm.PdfColorSpace.RGBToCMYK(System.Single,System.Single,System.Single)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Conversion.Comm.PdfColorSpace.Min(System.Single[])">
            <summary>
            Get min value.
            </summary>
            <param name="values">The values.</param>
            <returns>The min value.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfColorSpace.Create(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Create color space.
            If can't parse the colorSpaceObj, then return a PdfNotSupportedColorSpace instance.
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <returns>The color space.</returns>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfColorSpace.SupportCMYKConversion">
            <summary>
            Whether support conversion to cmyk color.
            </summary>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfColorSpace.ConvertToCMYK(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfColorSpace.SupportGrayConversion">
            <summary>
            Whether support conversion to Gray color.
            </summary>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfColorSpace.ConvertToGray(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfNotSupportedColorSpace">
            <summary>
            Not support color space.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace">
            <summary>
            DeviceGray color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace.SupportCMYKConversion">
            <summary>
            Whether support conversion to cmyk color.
            </summary>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace.ConvertToCMYK(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace.SupportGrayConversion">
            <summary>
            Whether support conversion to Gray color.
            </summary>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceGrayColorSpace.ConvertToGray(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace">
            <summary>
            DeviceRGB color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace.SupportCMYKConversion">
            <summary>
            Whether support conversion to cmyk color.
            </summary>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace.ConvertToCMYK(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace.SupportGrayConversion">
            <summary>
            Whether support conversion to Gray color.
            </summary>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceRGBColorSpace.ConvertToGray(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace">
            <summary>
            DeviceCMYK color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace.SupportCMYKConversion">
            <summary>
            Whether support conversion to cmyk color.
            </summary>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace.ConvertToCMYK(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace.SupportGrayConversion">
            <summary>
            Whether support conversion to Gray color.
            </summary>
            <returns>True,supported; Otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceCMYKColorSpace.ConvertToGray(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfCalGrayColorSpace">
            <summary>
            CalGray color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfCalGrayColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfCalRGBColorSpace">
            <summary>
            CalRGB color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfCalRGBColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfLabColorSpace">
            <summary>
            Lab color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfLabColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfICCBasedColorSpace">
            <summary>
            ICCBased color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfICCBasedColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfICCBasedColorSpace.m_AlternateColorSpace">
            <summary>
            color space colorspace by alternate
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfICCBasedColorSpace.#ctor">
            <summary>
            Constructors
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfICCBasedColorSpace.#ctor(Spire.Pdf.Conversion.Comm.PdfColorSpace)">
            <summary>
            Constructors
            </summary>
            <param name="baseColorSpace">PdfColorSpace alternateColorSpace</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfICCBasedColorSpace.SupportCMYKConversion">
            <summary>
            Is conversion to cmyk supported
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfPatternColorSpace">
            <summary>
            Pattern color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfPatternColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace">
            <summary>
            Indexed color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.ReadColorTable(Spire.Pdf.Conversion.Comm.PdfColorSpace,System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Read color table.
            </summary>
            <param name="baseColorSpace">the base color space.</param>
            <param name="hival">specifies the maximum valid index value.</param>
            <param name="lookupObj">the color table obj.</param>
            <returns>the color table bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.ReadColorTable(Spire.Pdf.Conversion.Comm.PdfColorSpace,System.Int32,System.Byte[])">
            <summary>
            Read color table.
            </summary>
            <param name="baseColorSpace">the base color space.</param>
            <param name="hival">specifies the maximum valid index value.</param>
            <param name="lookupBytes">the color table bytes.</param>
            <returns>the color table.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.Map(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Map value form source to target range.
            </summary>
            <param name="sourceValue">The source value.</param>
            <param name="sourceMinValue">The source min value.</param>
            <param name="sourceMaxValue">The source max value.</param>
            <param name="targetMinValue">The target min value.</param>
            <param name="targetMaxValue">The target max value.</param>
            <returns>The target value.</returns>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.m_baseColorSpace">
            <summary>
            the base color space in which the values in the color table are to be interpreted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.m_hival">
            <summary>
            specifies the maximum valid index value 
            which the color table is to be indexed by integers in the range 0 to hival.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.m_lookup">
            <summary>
            the color table which provides the mapping between index values and 
            the corresponding colors in the base color space.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.ComponentsNum">
            <summary>
            The components num.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.MinComponentValues">
            <summary>
            the maximum value in the range for component.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.MaxComponentValues">
            <summary>
            the minimum value in the range for component.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.#ctor(Spire.Pdf.Conversion.Comm.PdfColorSpace,System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Single[]})">
            <summary>
            Constructors
            </summary>
            <param name="baseColorSpace">PdfColorSpace baseColorSpace</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.SupportCMYKConversion">
            <summary>
            Is conversion to cmyk supported
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfIndexedColorSpace.ConvertToCMYK(System.Single[])">
            <summary>
            Convert to cmyk color.
            </summary>
            <param name="components">The color components.</param>
            <returns>The cmyk color components.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfSeparationColorSpace">
            <summary>
            Separation color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfSeparationColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfDeviceNColorSpace">
            <summary>
            DeviceN color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceNColorSpace.TryParse(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfColorSpace@)">
            <summary>
            Try to parse color space. 
            </summary>
            <param name="colorSpaceObj">The color space IPdfPrimitive Obj.</param>
            <param name="colorSpace">The color space.</param>
            <returns>True if success to parse; otherwise,False.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder">
            <summary>
            The device independent color space builder.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.Gray_ICCProfile">
            <summary>
            The ICC profile for DeviceGray.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.RGB_ICCProfile">
            <summary>
            The ICC profile for DeviceRGB.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.CMYK_ICCProfile">
            <summary>
            The ICC profile for DeviceCMYK.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.HandleInstruction(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle color space instructions in content stream.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.HandleDeviceColorSpaceInstruction(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle device color space which associated to instructions.
            </summary>
            <param name="instruction">The instruction.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.HandleDeviceColorSpaceResources(Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle device color space which associated to resources.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.HandleColorSpaceResources(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Handle device color space which associated to "ColorSpace" resources.
            </summary>
            <param name="colorSpaceResources">The associated "ColorSpace" resources with the The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.HandleXObjectResources(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Handle device color space which associated to "XObject" resources.
            </summary>
            <param name="xObjectResources">The associated "XObject" resources with the The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.AddICCBasedColorSpaceResource(System.String,Spire.Pdf.Primitives.PdfArray,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Add ICCBased color space resource.
            </summary>
            <param name="name">The resource name.</param>
            <param name="iccBasedColorSpace">The ICCBased color space.</param>
            <param name="resources">The associated resources with the The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.TryConvertDeviceColorSpace(Spire.Pdf.Primitives.PdfArray,Spire.Pdf.Primitives.PdfArray@)">
            <summary>
            Convert color space to device-independent.
            </summary>
            <param name="colorSpace">The color space.</param>
            <param name="outDeviceIndependentColorSpace">The device-independent color space</param>
            <returns>
            If the color space is device color space or exist device color space,
            then convert to device-independent color space, return true.
            Otherwise,return false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.TryConvertDeviceColorSpace(Spire.Pdf.Primitives.PdfName,Spire.Pdf.Primitives.PdfArray@)">
            <summary>
            Convert color space to device-independent.
            </summary>
            <param name="colorSpace">The color space.</param>
            <param name="outDeviceIndependentColorSpace">The device-independent color space</param>
            <returns>
            If the color space is device color space or exist device color space,
            then convert to device-independent color space, return true.
            Otherwise,return false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.CreateDeviceCMYK_ICCBasedColorSpace">
            <summary>
            Create the ICCBased color space for DeviceCMYK.
            </summary>
            <returns>The ICCBased color space for DeviceCMYK.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.CreateDeviceRGB_ICCBasedColorSpace">
            <summary>
            Create the ICCBased color space for DeviceRGB.
            </summary>
            <returns>The ICCBased color space for DeviceRGB.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfDeviceIndependentColorSpaceBuilder.CreateDeviceGray_ICCBasedColorSpace">
            <summary>
            Create the ICCBased color space for DeviceGray.
            </summary>
            <returns>The ICCBased color space for DeviceGray.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder">
            <summary>
            The pdf embedded font builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_currentFontDictionary">
            <summary>
            Current font dictionary.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_fontDictionaryStack">
            <summary>
            Font dictionary stack.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_currentFontStructure">
            <summary>
            Current font structure.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_fontStructureStack">
            <summary>
            Font structure stack.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_fontDictionaryToFontStructuresMapping">
            <summary>
            Key: The font dictionary, Value: The font structure.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_fontStructureToEmbedTTFontMapping">
            <summary>
            Key: The font structure., Value: The ttf font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_fontStructureToCharcodeUnicodeMapping">
            <summary>
            Key: The font structure., Value: The char code to unicode mapping.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_twWordSpaceStack">
            <summary>
            Tw WordSpace stack.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.m_tfFontSizeStack">
            <summary>
            Tf FontSize stack.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.HandleInstruction(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle color space instructions in content stream.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.HandleInstruction(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle text instructions in content stream.
            </summary>
            <param name="instruction">The instruction.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.BuildFontStructure(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Build font structure
            </summary>
            <param name="fontDictionary">The font dictionary.</param>
            <returns>The font structure.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.FindPdfDictionary(System.String,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Find font dictionary.
            </summary>
            <param name="fontResourceName">The font resource name.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The font dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.BuildEmbedTTFont(Spire.Pdf.General.Paper.Font.TTF.TTFFont)">
            <summary>
            Build embed truetype font.
            </summary>
            <param name="font">The origin font.</param>
            <returns>The embed truetype font.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.ConvertOriginBytesToLiteralBytes(System.Byte[])">
            <summary>
            Convert origin bytes to literal string bytes.
            Diffrence between literal string bytes and origin bytes,
            the literal string bytes has existed escape characters.
            </summary>
            <param name="originBytes">The origin bytes which is the encoded bytes or the encrypted bytes.</param>
            <returns>The literal string bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.GenerateCIDSet(System.Collections.Generic.Dictionary{System.Int32,System.Char})">
            <summary>
            Generate "CIDSet" dictionary entry.
            </summary>
            <param name="toUnicode">The char code to unicode mapping.</param>
            <returns>The CIDSet pdf stream.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.GenerateToUnicodeCMap(System.Collections.Generic.Dictionary{System.Int32,System.Char})">
            <summary>
            Generate "ToUnicode" dictionary entry.
            </summary>
            <param name="toUnicode">The char code to unicode mapping.</param>
            <returns>The cmap pdf stream.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.GenerateDW(System.Collections.Generic.Dictionary{System.Int32,System.Char},Spire.Pdf.Graphics.TtfReader)">
            <summary>
            Generate "DW" dictionary entry.
            </summary>
            <param name="toUnicode">The char code to unicode mapping.</param>
            <param name="ttfReader">The font program reader.</param>
            <returns>The pdf array.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.CheckFont(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Check font dictionary.
            </summary>
            <param name="fontDictionary">The font dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.CheckSimpleFont(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Check Simple font.
            </summary>
            <param name="fontDictionary">The font dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.CreateFontSubsetTag">
            <summary>
            Create font subset tag.
            </summary>
            <returns>The font subset tag</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfEmbeddedFontBuilder.IsFontSubset(System.String)">
            <summary>
            Whether is font subset. 
            </summary>
            <param name="fontName">The PostScript name of the font.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfImageXObject.Width">
            <summary>
            Image width.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfImageXObject.Height">
            <summary>
            Image Height.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfImageXObject.ColorSpace">
            <summary>
            The color space in the image dictionary.
            Note: It may not represent the actually color space of the image When the color space
            of the image data is not equal to the color space item in the dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfImageXObject.SMask">
            <summary>
            Get softmask image from image dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfImageXObject.Mask">
            <summary>
            Get mask image from image dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfImageXObject.ImageMask">
            <summary>
            Gets image mask.
            </summary>        
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfImageXObject.Decode">
            <summary>
            The decode in the image dictionary.
            Note: It may not represent the actually decode of the image When the color space
            of the image data is not equal to the color space item in the dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfImageXObject.Matte">
            <summary>
            Get Matte from image dictionary, pdf937 for SMask image.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.#ctor(Spire.Pdf.Core.PdfStream,System.Boolean)">
            <summary>
            Constructors
            </summary>
            <param name="imageStream">Image stream</param>
            <param name="isInlineImage">The image is an inline image or not.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.DecodeSampleData(Spire.Pdf.Interfaces.IPdfPrimitive@,System.Single[]@,System.Int32@)">
            <summary>
            Decode sample data which is represented as a sequence of bytes.
            </summary>
            <param name="colorSpace">The image color space.</param>
            <param name="decode">The image decode.</param>
            <param name="bitsPerComponent">The number of bits used to represent each color component.</param>
            <returns>The sample data which is represented as a sequence of bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.DecodeImageComponents(System.Int32,System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive@,System.Single[]@,System.Int32@)">
            <summary>
            Decode image components with the row range.
            </summary>
            <param name="rowStartIndex">The start row index</param>
            <param name="rowEndIndex">The end row index.</param>
            <param name="colorSpace">The color space of image components.</param>
            <param name="decode">The decode of image components.</param>
            <param name="bitsPerComponent">The number of bits used to represent each color component.</param>
            <returns>The image color components.</returns>
            <remarks>
            Sample data is represented as a stream of bytes, interpreted as 8-bit unsigned integers in the range 0 to 255. 
            The bytes constitute a continuous bit stream, with the high-order bit of each byte first. This bit stream, in turn, 
            is divided into units of n bits each, where n is the number of bits per component. Each unit encodes a color component value, 
            given with high-order bit first; units of 16 bits are given with the most significant byte first. Byte boundaries are ignored, 
            except that each row of sample data must begin on a byte boundary. If the number of data bits per row is not a multiple of 8, 
            the end of the row is padded with extra bits to fill out the last byte.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.DecodeColorSpaceComponents(System.Int32,System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive@,System.Int32@)">
            <summary>
            Decode image components with the row range.
            </summary>
            <param name="rowStartIndex">The start row index</param>
            <param name="rowEndIndex">The end row index.</param>
            <param name="colorSpace">The color space of color components.</param>
            <param name="bitsPerComponent">The number of bits used to represent each color component.</param>
            <returns>The image color components.</returns>
            <remarks>
            Sample data is represented as a stream of bytes, interpreted as 8-bit unsigned integers in the range 0 to 255. 
            The bytes constitute a continuous bit stream, with the high-order bit of each byte first. This bit stream, in turn, 
            is divided into units of n bits each, where n is the number of bits per component. Each unit encodes a color component value, 
            given with high-order bit first; units of 16 bits are given with the most significant byte first. Byte boundaries are ignored, 
            except that each row of sample data must begin on a byte boundary. If the number of data bits per row is not a multiple of 8, 
            the end of the row is padded with extra bits to fill out the last byte.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.EncodeImageComponents(System.UInt16[],System.Int32,System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive,System.Int32)">
            <summary>
            Encode image components.
            </summary>
            <param name="components">The image components.</param>
            <param name="width">The image width.</param>
            <param name="height">The image height.</param>
            <param name="colorSpace">The image color space.</param>
            <param name="bitsPerComponent">The number of bits used to represent each color component.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.EncodeColorSpaceComponents(System.Single[],System.Int32,System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive,System.Int32)">
            <summary>
            Encode color space components.
            </summary>
            <param name="components">The image components.</param>
            <param name="width">The image width.</param>
            <param name="height">The image height.</param>
            <param name="colorSpace">The image color space.</param>
            <param name="bitsPerComponent">The number of bits used to represent each color component.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.DecodeImage">
            <summary>
            Decode image
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.GetDefaultDecode(Spire.Pdf.Interfaces.IPdfPrimitive,System.Int32)">
            <summary>
            Get the default Decode arrays for use with the various color spaces.
            The image’s Decode array specifies a linear mapping of each integer component value 
            to a number that would be appropriate as a component value in the image’s color space.
            </summary>
            <param name="colorSpace">The coloe space.</param>
            <param name="bitsPerComponent">The number of bits used to represent each color component.</param>
            <returns>The default decode arrays.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.Map(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Map value form source to target range.
            </summary>
            <param name="sourceValue">The source value.</param>
            <param name="sourceMinValue">The source min value.</param>
            <param name="sourceMaxValue">The source max value.</param>
            <param name="targetMinValue">The target min value.</param>
            <param name="targetMaxValue">The target max value.</param>
            <returns>The target value.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.ScaleImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Scale image.
            </summary>
            <param name="bitmap">The image.</param>
            <param name="targetWidth">The result image width.</param>
            <param name="targetHeight">The result image height.</param>
            <returns>The result image.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.MapColor(System.Single[])">
            <summary>
            Map rgb components to color
            </summary>
            <param name="rgb">The rgb color components.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.ApplyMask(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Combine source image with mask image.
            </summary>        /// <param name="source">Source image.</param>
            <param name="mask">Mask image.</param>
            <returns>The result image.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfImageXObject.ApplySMask(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Combine source image with smask image.
            </summary>
            <param name="source">Source image.</param>
            <param name="smask">SMask image.</param>
            <returns>The result image.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfProcessContext">
            <summary>
            The pdf document process context.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfProcessContext.m_fileStructure">
            <summary>
            The file structure.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfProcessContext.m_fileInfo">
            <summary>
            The file info.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfProcessContext.m_violationMessages">
            <summary>
            The violation message.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfProcessContext.m_stack">
            <summary>
            The current stack.  
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfProcessContext.m_contentStreamResourcesMappings">
            <summary>
            Content stream and Resources mappings.
            Reference 3.7.2 Resource Dictionaries.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfProcessContext.FileStructure">
            <summary>
            The file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.Comm.PdfProcessContext.FileInfo">
            <summary>
            The file info.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.#ctor(Spire.Pdf.IO.PdfCrossTable,Spire.Pdf.PdfFileInfo)">
            <summary>
            Construct a new processing context.
            </summary>
            <param name="fileStructure">The file structure.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.Push(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Push the current pdf element.
            </summary>
            <param name="element">The current pdf element.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.Pop">
            <summary>
            Pop the current pdf element.
            </summary>
            <returns>The current pdf element</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.GetStack">
            <summary>
            Get the stack of context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.GetContentStreamAndResources">
            <summary>
            Get content stream and Resources.
            </summary>
            <returns>Content stream and Resources mappings.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ContructContentStreamsResourcesMappings">
            <summary>
            Construct resources which is associated with a content stream.
            Reference 3.7.2 Resource Dictionaries.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.AddViolationMessage(System.String)">
            <summary>
            Add violation message.
            </summary>
            <param name="message">The violation message.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.CloneDocument(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Clone document.
            </summary>
            <param name="document">The origin document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.Clone(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.IO.PdfCrossTable,System.Collections.Generic.Dictionary{Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfReferenceHolder})">
            <summary>
            Clone pdf element.
            </summary>
            <param name="element">The origin pdf element.</param>
            <param name="fileStructure">The origin file structure.</param>
            <param name="mainObjectsMap">The main objects map.</param>
            <returns>new pdf element.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfString(Spire.Pdf.Core.PdfString)">
            <summary>
            Clone pdf string.
            </summary>
            <param name="element">The origin pdf string.</param>
            <returns>new pdf string.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfNumber(Spire.Pdf.Primitives.PdfNumber)">
            <summary>
            Clone pdf number.
            </summary>
            <param name="element">The origin pdf number.</param>
            <returns>new pdf number.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfBoolean(Spire.Pdf.Primitives.PdfBoolean)">
            <summary>
            Clone pdf boolean.
            </summary>
            <param name="element">The origin pdf boolean.</param>
            <returns>new pdf boolean.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfName(Spire.Pdf.Primitives.PdfName)">
            <summary>
            Clone pdf name.
            </summary>
            <param name="element">The origin pdf name.</param>
            <returns>new pdf name.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfNull(Spire.Pdf.Primitives.PdfNull)">
            <summary>
            Clone pdf null.
            </summary>
            <param name="element">The origin pdf null.</param>
            <returns>new pdf null.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfArray(Spire.Pdf.Primitives.PdfArray,Spire.Pdf.IO.PdfCrossTable,System.Collections.Generic.Dictionary{Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfReferenceHolder})">
            <summary>
            Clone pdf array.
            </summary>
            <param name="element">The origin pdf array.</param>
            <param name="fileStructure">The origin file structure.</param>
            <param name="mainObjectsMap">The main objects map.</param>
            <returns>new pdf array.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfDictionary(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable,System.Collections.Generic.Dictionary{Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfReferenceHolder})">
            <summary>
            Clone pdf dictionary.
            </summary>
            <param name="element">The origin pdf dictionary.</param>
            <param name="fileStructure">The origin file structure.</param>
            <param name="mainObjectsMap">The main objects map.</param>
            <returns>new pdf dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfStream(Spire.Pdf.Core.PdfStream,Spire.Pdf.IO.PdfCrossTable,System.Collections.Generic.Dictionary{Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfReferenceHolder})">
            <summary>
            Clone pdf stream.
            </summary>
            <param name="element">The origin pdf stream.</param>
            <param name="fileStructure">The origin file structure.</param>
            <param name="mainObjectsMap">The main objects map.</param>
            <returns>new pdf stream.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessContext.ClonePdfReferenceHolder(Spire.Pdf.Primitives.PdfReferenceHolder,Spire.Pdf.IO.PdfCrossTable,System.Collections.Generic.Dictionary{Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfReferenceHolder})">
            <summary>
            Clone pdf reference.
            </summary>
            <param name="element">The origin pdf reference.</param>
            <param name="fileStructure">The origin file structure.</param>
            <param name="mainObjectsMap">The main objects map.</param>
            <returns>new pdf reference.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfProcessor">
            <summary>
            The pdf document processor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Comm.PdfProcessor.m_provider">
            <summary>
            The pdf process provider.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.#ctor(Spire.Pdf.Conversion.Comm.PdfProcessProvider)">
            <summary>
            Construct a new excutor.
            </summary>
            <param name="provider">The pdf process provider.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.Generate(Spire.Pdf.PdfDocumentBase,System.String)">
            <summary>
            Generate the pdf standard document.
            </summary>
            <param name="document">The origin document.</param>
            <param name="outFilePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.Generate(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Generate the pdf standard document.
            </summary>
            <param name="document">The origin document.</param>
            <param name="outStream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.Process(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Process the pdf document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.VisitElement(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext,System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive})">
            <summary>
            Visit elemet and excute rules on the pdf element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
            <param name="mainObjectList">The main object list.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.HandleContentStreamResources(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.GenerateContentStream(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream)">
            <summary>
            Generate content stream.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.SetDocumentInfo(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Set document info.
            </summary>
            <param name="document">The pdf document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessor.CreateFileIdentifiers">
            <summary>
            Create file identifiers.
            </summary>
            <returns>The file identifiers.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfProcessProvider">
            <summary>
            The pdf process provider base class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessProvider.OnElementVisited(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessProvider.HandleContentStreamResources(Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfProcessProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Comm.PdfTransparencyBuilder">
            <summary>
            The pdf transparency builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfTransparencyBuilder.IsContainFullTransparency(System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Remove graphics state transparency.
            </summary>
            <param name="resource">The associated resources with the The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfTransparencyBuilder.FindPdfDictionary(System.String,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Find font dictionary.
            </summary>
            <param name="fontResourceName">The font resource name.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The font dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Comm.PdfTransparencyBuilder.HandleInstruction(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle graphics state transparency operate.
            </summary>
            <param name="resource">The associated resources with the The content stream.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.PdfColorSpaceBuilder">
            <summary>
            Convert color space to target color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfColorSpaceBuilder.m_targetColorSpace">
            <summary>
            Target color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfColorSpaceBuilder.m_strokingColorSpaceStack">
            <summary>
            Stroking color space stack.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfColorSpaceBuilder.m_nonstrokingColorSpaceStack">
            <summary>
            Nonstroking color space stack.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfColorSpaceBuilder.m_currentStrokingColorSpace">
            <summary>
            Current stroking color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfColorSpaceBuilder.m_currentNonstrokingColorSpace">
            <summary>
            Current nonstroking color space.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfColorSpaceBuilder.TargetColorSpace">
            <summary>
            Target color space.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.#ctor(Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="targetColorSpace"></param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.HandleInstruction(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle color space instructions in content stream.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.HandleInstruction(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Handle color space/color instructions in content stream.
            </summary>
            <param name="instruction">The instruction.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.ParseColorSpace(System.String,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Parse color space operands in instruction.
            </summary>
            <param name="colorSpaceName"></param>
            <param name="resources"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.ToTargetColorSpaceOperand">
            <summary>
            Convert target color space to operand in instruction.
            </summary>
            <returns>The color space operand.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.ParseColorOperands(System.String[],Spire.Pdf.ColorSpaces.PdfColorSpace)">
            <summary>
            Parse color operands in instruction.
            </summary>
            <param name="operands">The color operands.</param>
            <param name="colorSpace">The color space.</param>
            <returns>The color components.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.ToColorOperands(System.Single[])">
            <summary>
            Convert color components to operands in instruction.
            </summary>
            <param name="components">The color components</param>
            <returns>The color operands in instruction</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.HandleResources(Spire.Pdf.Core.PdfStream,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Handle resources.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="resource">The associated resources with the The content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.HandleImageResources(Spire.Pdf.Core.PdfStream,System.Boolean)">
            <summary>
            Handle image resources.
            </summary>
            <param name="imageStream">
            The associated image resources with the The content stream.
            </param>
            <param name="isInlineImage">The image is an inline image or not.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.SupportConversionImage(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Whether the image supports conversion.  Temp!!!
            </summary>
            <param name="imageDictionary">The image dictionary. </param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfColorSpaceBuilder.HandleShadingResources(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Handle image resources.
            </summary>
            <param name="shadingDictionary">
            The shading resources with the The content stream.
            </param>
        </member>
        <member name="T:Spire.Pdf.Conversion.Gray.PdfGrayProvider">
            <summary>
            The gray color space provider.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.Gray.PdfGrayProvider.m_colorSpaceBuilder">
            <summary>
            The color space builder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Gray.PdfGrayProvider.#ctor">
            <summary>
            Construct an new provider
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.Gray.PdfGrayProvider.OnDocumentVisiting(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Gray.PdfGrayProvider.OnElementVisiting(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute before visit the element.
            </summary>
            <param name="element">The pdf element.</param>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.Gray.PdfGrayProvider.HandleContentStreamResources(System.Collections.Generic.List{Spire.Pdf.Core.Contents.PdfRecord},Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Handle content stream and resources.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="contentStream">The content stream.</param>
            <param name="resources">The associated resources with the The content stream.</param>
            <param name="context">The pdf processing context.</param>
            <returns>The new instructions.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.Gray.PdfGrayProvider.OnDocumentVisited(Spire.Pdf.Conversion.Comm.PdfProcessContext)">
            <summary>
            Excute after visit the document.
            </summary>
            <param name="context">The pdf processing context.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.PdfGrayConverter">
            <summary>
            The gray pdf conveter.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfGrayConverter.m_document">
            <summary>
            The origin document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfGrayConverter.#ctor(System.IO.Stream)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="stream">The pdf file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfGrayConverter.#ctor(System.String)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="filePath">The pdf file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfGrayConverter.ToGrayPdf(System.String)">
            <summary>
            Convert to gray pdf document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfGrayConverter.ToGrayPdf(System.IO.Stream)">
            <summary>
            Convert to gray pdf document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.PdfStandardsConverter">
            <summary>
            The pdf standard conveter.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfStandardsConverter.m_document">
            <summary>
            The origin document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.#ctor(System.IO.Stream)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="stream">The pdf file stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.#ctor(System.String)">
            <summary>
            Construct a new converter.
            </summary>
            <param name="filePath">The pdf file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA1B(System.String)">
            <summary>
            Convert to pdf/a1b standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA1B(System.IO.Stream)">
            <summary>
            Convert to pdf/a1b standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA1A(System.String)">
            <summary>
            Convert to pdf/a1a standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA1A(System.IO.Stream)">
            <summary>
            Convert to pdf/a1b standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA2B(System.String)">
            <summary>
            Convert to pdf/a2b standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA2B(System.IO.Stream)">
            <summary>
            Convert to pdf/a2b standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA2U(System.String)">
            <summary>
            Convert to pdf/a2u standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA2U(System.IO.Stream)">
            <summary>
            Convert to pdf/a2u standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA2A(System.String)">
            <summary>
            Convert to pdf/a2a standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA2A(System.IO.Stream)">
            <summary>
            Convert to pdf/a2a standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA3B(System.String)">
            <summary>
            Convert to pdf/a3b standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA3B(System.IO.Stream)">
            <summary>
            Convert to pdf/a3b standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA3U(System.String)">
            <summary>
            Convert to pdf/a3u standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA3U(System.IO.Stream)">
            <summary>
            Convert to pdf/a3u standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA3A(System.String)">
            <summary>
            Convert to pdf/a2a standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfA3A(System.IO.Stream)">
            <summary>
            Convert to pdf/a3a standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfX1A2001(System.String)">
            <summary>
            Convert to pdf/x1a2001 standard document.
            </summary>
            <param name="filePath">The out file path.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.ToPdfX1A2001(System.IO.Stream)">
            <summary>
            Convert to pdf/x1a2001 standard document.
            </summary>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfStandardsConverter.FlattenForm">
            <summary>
            Flatten form.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.PdfToOfdConverter">
            <summary>
            This class provides support for converting PDF into an OFD Document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToOfdConverter.ConvertToOfd(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Converts the specified PdfDocument to Ofd.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="stream">The ofd stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToOfdConverter.ConvertToOfd(Spire.Pdf.PdfDocumentBase,System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Converts a range page of the PdfDocument to Ofd.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="stream">The ofd stream.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToOfdConverter.CreateDocumentProperties(Spire.Pdf.PdfDocumentInformation)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.XlsxLineLayoutOptions">
            <summary>
            Pdf to excel,the options use line layout
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.XlsxLineLayoutOptions.m_ConvertToMultipleSheet">
             <summary>
            If the parameter is true,all pages converted to multiple sheet.
             </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.XlsxLineLayoutOptions.m_RotatedText">
            <summary>
            whether show rotated text
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.XlsxLineLayoutOptions.m_SplitCell">
            <summary>
            In PDF document table,there are multiple lines of text in the cell.Whether it is split into multiple lines.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.XlsxLineLayoutOptions.m_WrapText">
            <summary>
            This value is true if you wrap the text of an object in Microsoft Excel
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.XlsxLineLayoutOptions.m_OverlapText">
            <summary>
            If you wan to display overlapping text,set the parameter to true
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.XlsxLineLayoutOptions.ConvertToMultipleSheet">
            <summary>
            If the parameter is true,all pages converted to multiple sheet.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.XlsxLineLayoutOptions.RotatedText">
            <summary>
            whether show rotated text
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.XlsxLineLayoutOptions.SplitCell">
            <summary>
            In PDF document table,there are multiple lines of text in the cell.Whether it is split into multiple lines.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.XlsxLineLayoutOptions.WrapText">
            <summary>
            This value is true if you wrap the text of an object in Microsoft Excel
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.XlsxLineLayoutOptions.OverlapText">
            <summary>
            If you wan to display overlapping text,set the parameter to true
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.XlsxLineLayoutOptions.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.XlsxLineLayoutOptions.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="convertToMultipleSheet">the pdf document conver to multiple sheet,the default is true</param>
            <param name="rotatedText">whether show rotated text,the default is true</param>
            <param name="splitCell">In PDF document table,there are multiple lines of text in the cell.Whether it is split into multiple lines.the default is true</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.XlsxLineLayoutOptions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="convertToMultipleSheet">the pdf document conver to multiple sheet,the default is true</param>
            <param name="rotatedText">whether show rotated text,the default is true</param>
            <param name="splitCell">In PDF document table,there are multiple lines of text in the cell.Whether it is split into multiple lines.the default is true</param>
            <param name="warpText">This value is true if you wrap the text of an object in Microsoft Excel</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.XlsxLineLayoutOptions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="convertToMultipleSheet">the pdf document conver to multiple sheet,the default is true</param>
            <param name="rotatedText">whether show rotated text,the default is true</param>
            <param name="splitCell">In PDF document table,there are multiple lines of text in the cell.Whether it is split into multiple lines.the default is true</param>
            <param name="warpText">This value is true if you wrap the text of an object in Microsoft Excel</param>
            <param name="overlapText">If you wan to display overlapping text,set the parameter to true</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.XlsxOptions">
            <summary>
            the pdf document convert to xlsx document,set the options
            </summary>
        </member>
        <member name="T:Spire.Pdf.Conversion.XlsxTextLayoutOptions">
            <summary>
            Pdf to excel,the options use text layout
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.XlsxTextLayoutOptions.m_ConvertToMultipleSheet">
             <summary>
            If the parameter is true,all pages converted to multiple sheet.
             </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.XlsxTextLayoutOptions.m_RotatedText">
            <summary>
            whether show rotated text
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.XlsxTextLayoutOptions.m_OverlapText">
            <summary>
            If you wan to display overlapping text,set the parameter to true
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.XlsxTextLayoutOptions.ConvertToMultipleSheet">
            <summary>
            If the parameter is true,all pages converted to multiple sheet.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.XlsxTextLayoutOptions.RotatedText">
            <summary>
            whether show rotated text
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.XlsxTextLayoutOptions.OverlapText">
            <summary>
            If you wan to display overlapping text,set the parameter to true
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.XlsxTextLayoutOptions.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.XlsxTextLayoutOptions.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="convertToMultipleSheet">the pdf document conver to multiple sheet,the default is true</param>
            <param name="rotatedText">whether show rotated text,the default is true</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.XlsxTextLayoutOptions.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="convertToMultipleSheet">the pdf document conver to multiple sheet,the default is true</param>
            <param name="rotatedText">whether show rotated text,the default is true</param>
            <param name="overlapText">If you wan to display overlapping text,set the parameter to true</param>
        </member>
        <member name="T:Spire.Pdf.Conversion.PclToPDFConverter">
            <summary>
            This class provides support for converting PDF into an XPS Document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PclToPDFConverter.SubsetFont(Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFont,Spire.Pdf.General.Paper.Base.SortedIntegerList,System.IO.Stream,System.Boolean)">
            <summary>
            
            </summary>
            <param name="font"></param>
            <param name="usedGlyphs"></param>
            <param name="stream"></param>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_licenseProtector">
            <summary>
            The license protected.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_document">
            <summary>
            The pdf document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_zoomFactor">
            <summary>
            The zoom factor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_supportEastAsianFont">
            <summary>
            Whether support east asian font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_isDisposeFont">
            <summary>
            Whether to dispose font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_renderEmbedAsTTF">
            <summary>
            Whether to render enmbed font as ttf.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_ColorSpaceImage">
            <summary>
            Whether is the colorspace image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_isNewPage">
            <summary>
            Whether is a new page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_rotate">
            <summary>
            The pdf page tatal rotate angle(pageRotate + userRotate).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_isDrawPageAnnotation">
            <summary>
            Whether to draw annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_isDrawPageContent">
            <summary>
            Whether to draw page content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_isHighLight">
            <summary>
            Whether is hight light.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.m_annotatonDictionary">
            <summary>
            The annotation dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.ZoomFactor">
            <summary>
            Image zoom factor.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.SupportEastAsianFont">
            <summary>
            Support east asian font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.IsDisposeFont">
            <summary>
            Dispose font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.RenderEmbedAsTTF">
            <summary>
            Render embed font as ttf.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.ColorSpaceImage">
            <summary>
            Colorspace image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.IsNewPage">
            <summary>
            whether is a new page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.IsPrint">
            <summary>
            Gets or sets.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.Rotate">
            <summary>
            The pdf page tatal rotate angle(pageRotate + userRotate).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.IsDrawPageAnnotation">
            <summary>
            Draw annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.IsDrawPageContent">
            <summary>
            Draw page content.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.IsHighLight">
            <summary>
            Hightlight.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToImageConverter.AnnotationDictionary">
            <summary>
            The annotation dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.#ctor(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="document">The pdf document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.CreateBitmap(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create empty bitmap.
            </summary>
            <param name="width">The width in pixels.</param>
            <param name="height">The height in pixels.</param>
            <param name="dpiX">The horizontal resolution in dots per inch.</param>
            <param name="dpiY">The vertical resolution in dots per inch.</param>
            <returns>A System.Drawing.Imaging.Bitmap.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.CreateMetafile(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create empty metafile.
            </summary>
            <param name="width">The width in pixels.</param>
            <param name="height">The height in pixels.</param>
            <param name="dpiX">
            The horizontal resolution in dots per inch.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <param name="dpiY">
            The vertical resolution in dots per inch.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <returns>A System.Drawing.Imaging.Metafile which's format is System.Drawing.Imaging.EmfType.EmfPlusDual.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.CreateMetafile(System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create empty metafile.
            </summary>
            <param name="stream">A System.IO.Stream that contains the data for this System.Drawing.Imaging.Metafile.</param>
            <param name="width">The width in pixels.</param>
            <param name="height">The height in pixels.</param>
            <param name="dpiX">
            The horizontal resolution in dots per inch.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <param name="dpiY">
            The vertical resolution in dots per inch.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <returns>A System.Drawing.Imaging.Metafile which's format is System.Drawing.Imaging.EmfType.EmfPlusDual.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.ConvertToMetafileByPsMode(Spire.Pdf.PdfDocumentBase,System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert pdf page to bitmap by ps mode.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="dpiX">The horizontal resolution in dots per inch.</param>
            <param name="dpiY">The vertical resolution in dots per inch.</param>
            <returns>
            A System.Drawing.Bitmap. 
            If the page is restricted,return null.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.ConvertToBitmap(System.Int32,System.Int32,System.Int32)">
            <summary>
             Convert pdf page to bitmap.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="dpiX">The horizontal resolution in dots per inch.</param>
            <param name="dpiY">The vertical resolution in dots per inch.</param>
            <returns>
            A System.Drawing.Bitmap. 
            If the page is restricted,return null.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.ConvertToMetafile(System.Int32,System.Int32,System.Int32)">
            <summary>
             Convert pdf page to metafile.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="dpiX">
            The horizontal resolution in dots per inch.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <param name="dpiY">
            The vertical resolution in dots per inch.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <returns>
            A System.Drawing.Imaging.Metafile which's format is System.Drawing.Imaging.EmfType.EmfPlusDual.
            If the page is restricted,return null.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.ConvertToMetafileStream(System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert pdf page to metafile.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="dpiX">
            The horizontal resolution in dots per inch.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <param name="dpiY">
            The vertical resolution in dots per inch.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <returns>
            A System.IO.Stream that contains the data of a System.Drawing.Imaging.Metafile 
            which's format is System.Drawing.Imaging.EmfType.EmfPlusDual.
            If the page is restricted,return null.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.ConvertToBitmapByPsMode(System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert pdf page to bitmap by ps mode.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="dpiX">The horizontal resolution in dots per inch.</param>
            <param name="dpiY">The vertical resolution in dots per inch.</param>
            <returns>
            A System.Drawing.Bitmap. 
            If the page is restricted,return null.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.GetPageScale(Spire.Pdf.General.Render.Page)">
            <summary>
            Get the scale.
            </summary>
            <param name="page">The page</param>
            <returns>The scale value</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.RenderBlendModeImage(System.Drawing.Graphics,System.Int32,Spire.Pdf.General.Render.Page)">
            <summary>
            Render pdf multiply color page to image.
            </summary>
            <param name="graphics">The System.Drawing.Graphics graphics.</param>
            <param name="pageIndex">The page index.</param>
            <param name="page">The Spire.Pdf.General.Render.Page.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.RenderImage(System.Drawing.Graphics,Spire.Pdf.General.Render.Page,Spire.Pdf.General.Render.PdfElement.PdfPageResources,Spire.Pdf.Core.Contents.PdfRecordCollection,System.Drawing.Image)">
            <summary>
            Render pdf page to image.
            </summary>
            <param name="graphics">The SSystem.Drawing.Graphics graphics.</param>
            <param name="page">The Spire.Pdf.General.Render.Page.</param>
            <param name="resources">The resources,Spire.Pdf.General.Render.PdfElement.PdfPageResources resources.</param>
            <param name="recordCollection">The Spire.Pdf.General.Render.PdfElement.PdfRecordCollection</param>
            <param name="image">The System.Drawing.Image</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.FillRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,Spire.Pdf.General.Render.Page)">
            <summary>
            Fill rectangle.
            </summary>
            <param name="g">The graphics</param>
            <param name="bounds">The rectanlgef</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.GetPageIndex(Spire.Pdf.General.Render.Page)">
            <summary>
            Get the page index
            </summary>
            <param name="page">The page</param>
            <returns>The page index</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToImageConverter.disposed">
            <summary>
            Specify whether to had released resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">True,Releases all resources;False,Releases unmanaged resources.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToImageConverter.Clear">
            <summary>
            disposed is false ,Releases all resources
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToPostScriptConverter.ConvertToPostScript(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Convert pdf document to postscript.
            </summary>
            <param name="document">The pdf document.</param>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToPostScriptConverter.ConvertToPostScript(Spire.Pdf.PdfDocumentBase,System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Convert pdf document to postscript.
            </summary>
            <param name="document">The pdf document.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToPostScriptConverter.AddDocumentProperties(Spire.Pdf.PdfDocumentInformation)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToPclConverter.ConvertToPcl(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Convert pdf document to pcl.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToPclConverter.ConvertToPcl(Spire.Pdf.PdfDocumentBase,System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Convert pdf document to pcl.
            </summary>
            <param name="document">The pdf document.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The out stream.</param>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToHtmlConverter.m_PdfToHtmlParameter">
            <summary>
            Pdf to Html, Set Parameter
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToHtmlConverter.PdfToHtmlParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToPsConverter.m_licenseProtector">
            <summary>
            The license protected.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToPsConverter.m_document">
            <summary>
            The pdf document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Conversion.PdfToPsConverter.m_fontCache">
            <summary>
            The font cache.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Conversion.PdfToPsConverter.ConvertFontsToUnicodeTtf">
            <summary>
            ???
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToPsConverter.#ctor(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="document">The pdf document.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToPsConverter.SaveAsPsPage(System.Int32)">
            <summary>
            Convert pdf page to a PsPage.
            </summary>
            <param name="pageIndex">The page index.</param>
            <returns>A PsPage. If the page is restricted,return null.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToSvgConverter.ConvertToSvgList(Spire.Pdf.PdfDocumentBase,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Convert a range page of the document to svg.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="mainOutFile">Main out file.</param>
            <param name="svgFileHeader">Is svg file header.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <returns>A list of byte.</returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToSvgConverter.ConvertToSvgList(Spire.Pdf.PdfDocumentBase,System.String,System.Boolean)">
            <summary>
            Convert the document to svg.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="mainOutFile">Main out file.</param>
            <param name="svgFileHeader">Is svg file header.</param>
            <returns>A list of byte.</returns>
        </member>
        <member name="T:Spire.Pdf.Conversion.PdfToXPSConverter">
            <summary>
            This class provides support for converting PDF into an XPS Document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToXPSConverter.ConvertToXPS(Spire.Pdf.PdfDocumentBase,System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Converts a range page of the PdfDocument to Xps.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="stream">The xps stream.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToXPSConverter.ConvertToXPS(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Converts the specified PdfDocument to Xps.
            </summary>
            <param name="pdfDocument">The pdf document.</param>
            <param name="stream">The xps stream.</param>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToXPSConverter.CreateDocument(Spire.Pdf.General.Paper.Base.DocumentInfo)">
            <summary>
            Creates the PDF document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Conversion.PdfToXPSConverter.AddDocumentProperties(Spire.Pdf.PdfDocumentInformation)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.OperatorConstants.BeginImage">
            <summary>
            Begin an inline image object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.OperatorConstants.ImageData">
            <summary>
            Begin the image data for an inline image object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.OperatorConstants.EndImage">
            <summary>
            End an inline image object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.ContentContext">
            <summary>
            Context for process.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentContext.m_resourcesStack">
            <summary>
            A stack containing resources.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentContext.m_graphicsStateStack">
            <summary>
            A stack containing graphics state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentContext.m_markedContentElementStack">
            <summary>
            A stack containing marked content element.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentContext.m_currentPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentContext.m_textLineMatrix">
            <summary>
            A text line matrix, Tlm , which captures the value of Tm at the beginning of a line of text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Contents.Parsing.ContentInstruction.UseCompactFormatFlag">
            <summary>
            Gets or sets a value indicating whether save in compact Format.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentInstruction.Save(Spire.Pdf.Interfaces.IPdfWriter)">
            <summary>
            insert PdfRecord (Operation record).
            </summary>
            <param name="record">PdfRecord to be inserted.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentLexer.IsWhiteSpace(System.Char)">
            <summary>
            Checks whether a character is a whitespace. Currently checks on the following: '0', '9', '10', '12', '13', '32'.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentLexer.IsDelimiter(System.Char)">
            <summary>
            
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentLexer.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentLexer.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentLexer.disposed">
            <summary>
            Specify whether to had released resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentLexer.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">True,Releases all resources;False,Releases unmanaged resources.</param>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentOperator.O_BeginInlineImage">
            <summary>
            Begin an inline image object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentOperator.O_BeginInlineImageData">
            <summary>
            Begin the image data for an inline image object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentOperator.O_EndInlineImage">
            <summary>
            End an inline image object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.ContentParser">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentParser.Parse">
            <summary>
            Parse a instruction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentParser.ReadObject">
            <summary>Reads a pdf object.</summary>
            <returns>the pdf object</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentParser.ReadDictionary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentParser.ReadArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentParser.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentParser.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentParser.disposed">
            <summary>
            Specify whether to had released resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ContentParser.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">True,Releases all resources;False,Releases unmanaged resources.</param>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.ContentProcessor">
            <summary>
            Processor for a PDF content stream.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentProcessor.m_supportedOperators">
            <summary>
            A map with all supported operators (PDF syntax).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ContentProcessor.m_context">
            <summary>
            The processing context.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.GraphicsState">
            <summary>
            The graphics state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.GraphicsState.m_dictionary">
            <summary>
            Store the graphics state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.GraphicsState.m_ctm">
            <summary>
            The current transformation matrix, which maps positions from user coordinates to device coordinates.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.GraphicsState.m_clip">
            <summary>
            The current clipping path, which defines the boundary against which all output is to be cropped.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.InlineImageUtils.EntryAbbreviationMap">
            <summary>
            Map between key abbreviations allowed in dictionary of inline images and their
            equivalent image dictionary keys
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.InlineImageUtils.ColorSpaceAbbreviationMap">
            <summary>Map between value abbreviations allowed in dictionary of inline images for COLORSPACE</summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.InlineImageUtils.FilterAbbreviationMap">
            <summary>Map between value abbreviations allowed in dictionary of inline images for FILTER</summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.InlineImageUtils.ReadInlineImageDictionary(Spire.Pdf.Core.PdfStream,Spire.Pdf.Core.Contents.Parsing.ContentParser)">
            <summary>Parses the next inline image dictionary from the parser.</summary>
            <param name="inlineImage">The inline image</param>
            <param name="parser"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.InlineImageUtils.GetAlternateValue(Spire.Pdf.Primitives.PdfName,Spire.Pdf.Interfaces.IPdfPrimitive,System.Collections.Generic.Dictionary{Spire.Pdf.Primitives.PdfName,Spire.Pdf.Primitives.PdfName},System.Collections.Generic.Dictionary{Spire.Pdf.Primitives.PdfName,Spire.Pdf.Primitives.PdfName})">
            <summary>Transforms value abbreviations into their corresponding real value</summary>
            <param name="key">the key that the value is for</param>
            <param name="value">the value that might be an abbreviation</param>
            <returns>
            if value is an allowed abbreviation for the key, the expanded value for that abbreviation.  Otherwise, value is returned without modification
            </returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.InlineImageUtils.ReadInlineImageSamples(Spire.Pdf.Core.PdfStream,Spire.Pdf.Core.Contents.Parsing.ContentParser,Spire.Pdf.Core.Contents.Parsing.IResourcesContainer)">
            <summary>
            Parses the samples of the image from the underlying content parser, accounting for filters
            The parser must be positioned immediately after the ID operator that ends the inline image's dictionary.
            </summary>
            <remarks>
            Parses the samples of the image from the underlying content parser, accounting for filters
            The parser must be positioned immediately after the ID operator that ends the inline image's dictionary.
            The parser will be left positioned immediately following the EI operator.
            <b>Note:</b>This implementation does not actually apply the filters at this time
            </remarks>
            <param name="inlineImage">The inline image</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.InlineImageUtils.ComputeSampleDataNum(Spire.Pdf.Core.PdfStream,Spire.Pdf.Core.Contents.Parsing.IResourcesContainer)">
            <summary>
            
            </summary>
            <param name="inlineImage"></param>
            <param name="resourcesContainer"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.InlineImageUtils.GetColorSpaceComponentsNum(Spire.Pdf.Primitives.PdfName,Spire.Pdf.Core.Contents.Parsing.IResourcesContainer)">
            <param name="colorSpaceName">
            the name of the color space. If null, a bi-tonal (black and white) color space is assumed.
            </param>
            <returns>the components per pixel for the specified color space</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.MoveTo(System.Single,System.Single)">
            <summary>
            Begin a new subpath by moving the current point to coordinates (x, y), omitting any connecting line segment. 
            If the previous path construction operator in the current path was also m, the new moverrides it; no vestige 
            of the previous m operation remains in the path.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.LineTo(System.Single,System.Single)">
            <summary>
            Append a straight line segment from the current point to the point (x, y). The new current point is (x, y).
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.CurveC(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bézier curve to the current path. The curve extends from the current point to the point (x3 , y3 ), 
            using (x1 , y1 ) and (x2 , y2 ) as the Bézier control points (see “Cubic Bézier Curves,” below). 
            The new current point is (x3 , y3 ).
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="x3">The x3.</param>
            <param name="y3">The y3.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.CurveV(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bézier curve to the current path. The curve extends from the current point to the point (x3 , y3 ), 
            using the current point and (x2 , y2 ) as the Bézier control points (see “Cubic Bézier Curves,” below). 
            The new current point is (x3 , y3 ).
            </summary>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="x3">The x3.</param>
            <param name="y3">The y3.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.CurveY(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bézier curve to the current path. The curve extends from the current point to the point (x3 , y3 ), 
            using (x1 , y1 ) and (x3 , y3 ) as the Bézier control points (see “Cubic Bézier Curves,” below). 
            The new current point is (x3 , y3 ).
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x3">The x3.</param>
            <param name="y3">The y3.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.Transform(Spire.Pdf.Core.Contents.Parsing.Matrix)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.BeginSubPath">
            <summary>
            Begin a new subpath.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.CloseSubPath">
            <summary>
            Close the current subpath.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IPath.Reset">
            <summary>
            Reset the path.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IRegion.IntersectWinding(Spire.Pdf.Core.Contents.Parsing.IPath)">
            <summary>
            Modify the clipping Region by intersecting it with the path using the nonzero winding number rule.
            </summary>
            <param name="path">the path.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IRegion.IntersectAlternate(Spire.Pdf.Core.Contents.Parsing.IPath)">
            <summary>
            Modify the clipping path by intersecting it with the path using the even-odd number rule.
            </summary>
            <param name="path">the path.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IRegion.Clone">
            <summary>
            Clone the region.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.IResourcesContainer">
            <summary>
            The interface present the resources for content stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IResourcesContainer.GetResources(System.String)">
            <summary>
            Get the resources.
            </summary>
            <param name="type">The resource type.</param>
            <returns>The resources.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IResourcesContainer.GetResource(System.String,System.String)">
            <summary>
            Get the resource.
            </summary>
            <param name="name">The resource name.</param>
            <param name="type">The resource type.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IResourcesContainer.SetResource(Spire.Pdf.Interfaces.IPdfPrimitive,System.String,System.String)">
            <summary>
            Set a resource.
            </summary>
            <param name="value">the resource value.</param>
            <param name="name">the resource name.</param>
            <param name="type">The resource type.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.IResourcesContainer.RemoveResource(System.String,System.String)">
            <summary>
            Set the resource.
            </summary>
            <param name="name">the resource name.</param>
            <param name="type">The resource type.</param>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.MarkedContentElement.m_tag">
            <summary>The tag.</summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.MarkedContentElement.m_properties">
            <summary>The properties.</summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.MarkedContentElement.#ctor(Spire.Pdf.Primitives.PdfName,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            
            </summary>
            <param name="tag"></param>
            <param name="properties"></param>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.Matrix">
            <summary>
            Represent the matrix
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Contents.Parsing.Matrix.OffsetX">
            <summary>
            Gets the x translation value (the dx value, or the element in the third row and first column).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Contents.Parsing.Matrix.OffsetY">
            <summary>
            Gets the x translation value (the dx value, or the element in the third row and second column).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Contents.Parsing.Matrix.Elements">
            <summary>
            Gets an array of floating-point values that represents the elements.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.#ctor">
            <summary>
            Construct a instance as the identity matrix.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.#ctor(System.Single[])">
            <summary>
            Construct a instance as the identity matrix.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Construct a instance as the identity matrix.
            </summary>
            <param name="m11">The value in the first row and first column.</param>
            <param name="m12">The value in the first row and second column.</param>
            <param name="m21">The value in the second row and first column.</param>
            <param name="m22">The value in the second row and second column.</param>
            <param name="dx">The value in the third row and first column.</param>
            <param name="dy">The value in the third row and second column.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Multiply(Spire.Pdf.Core.Contents.Parsing.Matrix)">
            <summary>
            Prepend the specified matrix.
            </summary>
            <param name="matrix">Matrix is to be multiplied.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Multiply(Spire.Pdf.Core.Contents.Parsing.Matrix,Spire.Pdf.Core.Contents.Parsing.MatrixOrder)">
            <summary>
            Apply the specified matrix by the specified order.
            </summary>
            <param name="matrix">Matrix is to be multiplied.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Translate(System.Single,System.Single)">
            <summary>
            Prepend the specified translation vector (offsetX and offsetY).
            </summary>
            <param name="offsetX">The x value by which to translate.</param>
            <param name="offsetY">The y value by which to translate.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Translate(System.Single,System.Single,Spire.Pdf.Core.Contents.Parsing.MatrixOrder)">
            <summary>
            Apply the specified translation vector (offsetX and offsetY) by the specified order.
            </summary>
            <param name="offsetX">The x value by which to translate.</param>
            <param name="offsetY">The y value by which to translate.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Scale(System.Single,System.Single)">
            <summary>
            Prepend the specified scale vector (scaleX and scaleY).
            </summary>
            <param name="scaleX">The value by which to scale in the x-axis direction.</param>
            <param name="scaleY">The value by which to scale in the y-axis direction.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Scale(System.Single,System.Single,Spire.Pdf.Core.Contents.Parsing.MatrixOrder)">
            <summary>
            Apply the specified scale vector (scaleX and scaleY) by the specified order.
            </summary>
            <param name="scaleX">The value by which to scale in the x-axis direction.</param>
            <param name="scaleY">The value by which to scale in the y-axis direction.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Rotate(System.Single)">
            <summary>
            Prepend a clockwise rotation(angle) around the origin.
            </summary>
            <param name="angle">The angle of the rotation, in degrees.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Rotate(System.Single,Spire.Pdf.Core.Contents.Parsing.MatrixOrder)">
            <summary>
            Apply a clockwise rotation(angle) around the origin by the specified order.
            </summary>
            <param name="angle">The angle of the rotation, in degrees.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Skew(System.Single,System.Single)">
            <summary>
            Prepend the specified skew angles(angleX angleY).
            </summary>
            <param name="angleX">The horizontal skew angle, in degrees.</param>
            <param name="angleY">The vertical skew angle, in degrees.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Skew(System.Single,System.Single,Spire.Pdf.Core.Contents.Parsing.MatrixOrder)">
            <summary>
            Prepend the specified skew angles(angleX angleY) by the specified order.
            </summary>
            <param name="angleX">The horizontal skew angle, in degrees.</param>
            <param name="angleY">The vertical skew angle, in degrees.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Shear(System.Single,System.Single)">
            <summary>
            Prepend the specified Shear vector (shearX and shearY).
            </summary>
            <param name="shearX">The horizontal shear factor.</param>
            <param name="shearY">The vertical shear factor.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Shear(System.Single,System.Single,Spire.Pdf.Core.Contents.Parsing.MatrixOrder)">
            <summary>
            Apply the specified Shear vector (shearX and shearY) by the specified order.
            </summary>
            <param name="shearX">The horizontal shear factor.</param>
            <param name="shearY">The vertical shear factor.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.Multiply(Spire.Pdf.Core.Contents.Parsing.Matrix,Spire.Pdf.Core.Contents.Parsing.Matrix)">
            <summary>
            Matrix1 multiply matrix2 to this.
            </summary>
            <param name="matrix1">first matrix.</param>
            <param name="matrix2">second matrix.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.DegreeToRadian(System.Double)">
            <summary>
            Converts degree to radian.
            </summary>
            <param name="degree">The degree</param>
            <returns>The radian</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Matrix.RadianToDegree(System.Double)">
            <summary>
            Converts radian to degree.
            </summary>
            <param name="radian">The radian</param>
            <returns>The degree</returns>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.MatrixOrder">
            <summary>
            Represent the applying order to matrix.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.MatrixOrder.Prepend">
            <summary>
            The new operation is applied before the old operation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.MatrixOrder.Append">
            <summary>
            The new operation is applied after the old operation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.Resource">
            <summary>
            The class present an resource.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.Resource.m_resourcesDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.Resource.m_resourceType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.Resource.m_resourceName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Resource.#ctor(System.String,System.String,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            
            </summary>
            <param name="resourceName"></param>
            <param name="resourceType"></param>
            <param name="resourcesDictionary"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Resource.GetValue">
            <summary>
            Get the resource value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Resource.GetDigestValue">
            <summary>
            Get the resource digest value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Resource.Replace(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Replace the resource value with new value.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.Resource.Remove">
            <summary>
            Remove the resource.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer">
            <summary>
            The class present the resources for content stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Construct a new resources container.
            </summary>
            <param name="resourcesDictionary">The resources dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.#ctor(System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            tmp code
            </summary>
            <param name="resourcesDictionaryList"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.GetResources(System.String)">
            <summary>
            Get the resources.
            </summary>
            <param name="type">The resource type.</param>
            <returns>The resources.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.GetResource(System.String,System.String)">
            <summary>
            Get the resource.
            </summary>
            <param name="name">The resource name.</param>
            <param name="type">The resource type.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.SetResource(Spire.Pdf.Interfaces.IPdfPrimitive,System.String,System.String)">
            <summary>
            Set an resource.
            </summary>
            <param name="value">the resource value.</param>
            <param name="name">the resource name.</param>
            <param name="type">The resource type.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.RemoveResource(System.String,System.String)">
            <summary>
            Set the resource.
            </summary>
            <param name="name">the resource name.</param>
            <param name="type">The resource type.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.disposed">
            <summary>
            Specify whether to had released resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.Parsing.ResourcesContainer.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">True,Releases all resources;False,Releases unmanaged resources.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.WriteRecord(Spire.Pdf.Core.Contents.PdfRecord)">
            <summary>
            insert PdfRecord (Operation record).
            </summary>
            <param name="record">PdfRecord to be inserted.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.StringToByte(System.String)">
            <summary>
            Convert string to a byte array.
            </summary>
            <param name="stringData">String data</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.ShowNextLineTextWithSpacings(System.Single,System.Single,System.String,System.Boolean)">
            <summary>
            Shows the text on the next line and sets word and character spacings.
            </summary>
            <param name="wordSpacing">The word spacing.</param>
            <param name="charSpacing">The char spacing.</param>
            <param name="text">The text.</param>
            <param name="hex">if set to <c>true</c> the text should be in hex.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.ShowNextLineTextWithSpacings(System.Single,System.Single,Spire.Pdf.Core.PdfString)">
            <summary>
            Shows the text on the next line and sets word and character spacings.
            </summary>
            <param name="wordSpacing">The word spacing.</param>
            <param name="charSpacing">The char spacing.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.BeginText">
            <summary>
            Begins text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.EndText">
            <summary>
            Ends text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.BeginMarkupSequence(System.String)">
            <summary>
            Begins start markup sequence text.
            </summary>
            <param name="name">The name of the markup sequence.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.BeginMarkupSequence(Spire.Pdf.Primitives.PdfName)">
            <summary>
            Begins start markup sequence text.
            </summary>
            <param name="name">The name of the markup sequence.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.EndMarkupSequence">
            <summary>
            Ends markup sequence text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.WriteComment(System.String)">
            <summary>
            Writes comment to the file.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.SetGrayColorForStroking(System.String)">
            <summary>
            1 G ,Pen Color
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.SetGrayColorForNonstroking(System.String)">
            <summary>
             1 g ,Pen Color
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.SetRGBColor(System.String)">
            <summary>
            Set the rgb color
            </summary>
            <param name="color">The color</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.SetBorderWidth(System.String)">
            <summary>
            Set the border width.
            </summary>
            <param name="width">The width</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.WriteText(System.Byte[],System.Boolean)">
            <summary>
            Writes the text.
            </summary>
            <param name="text">The text.</param>
            <param name="hex">if set to <c>true</c> the text is in hex.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.WriteText(System.String)">
            <summary>
            Writes the text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.WriteText(System.String,System.Boolean)">
            <summary>
            Writes the text.
            </summary>
            <param name="text">The text.</param>
            <param name="hex">if set to <c>true</c> the text is in hex.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.Write(System.String)">
            <summary>
            Writes the specified text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfStreamWriter.Write(System.Byte[])">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.ContentLexer.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.ContentLexer.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.ContentLexer.disposed">
            <summary>
            Specify whether to had released resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.ContentLexer.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">True,Releases all resources;False,Releases unmanaged resources.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.ContentParser.ReadBIData(System.Collections.Generic.List{System.Byte},System.Char,System.Char,System.Int32@)">
            <summary>
            read bi data
            </summary>
            <param name="eiBytes"></param>
            <param name="ch2"></param>
            <param name="nextChar"></param>
            <param name="endPosition"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.ContentParser.ParseInlineImage">
             <summary>
             Parse an inline image.  An inline image starts with BI (already
             read, contains a dictionary until ID, and then image data until
             EI.
             </summary>
            
        </member>
        <member name="M:Spire.Pdf.Core.Contents.ContentParser.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.ContentParser.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Contents.ContentParser.disposed">
            <summary>
            Specify whether to had released resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.ContentParser.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">True,Releases all resources;False,Releases unmanaged resources.</param>
        </member>
        <member name="P:Spire.Pdf.Core.Contents.PdfRecord.UseCompactFormatFlag">
            <summary>
            Gets or sets a value indicating whether save in compact Format.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfRecord.TrimRecordOperands">
            <summary>
            Trim the record operands.
            </summary>
            <param name="record">The record</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.Contents.PdfRecord.TrimOperand(System.String)">
            <summary>
            Trim the operand.
            </summary>
            <param name="operand"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Core.DataStructures.NameTree">
            <summary>
            A number tree is similar to a name tree, except that its keys are integers 
            instead of strings and are sorted in ascending numerical order.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.DataStructures.NameTree.m_root">
            <summary>
            The root node.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.Find(System.String,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Find key's value.
            </summary>
            <param name="key">The key.</param>
            <param name="node">The node.</param>
            <returns>The value</returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.Remove(System.String,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Remove key/value.
            </summary>
            <param name="key">The key.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.Add(System.String,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Add key/value to node.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.AddToKids(System.String,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfArray,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Add key/value to kids.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="kids">The kids.</param>
            <param name="limits">The limits.</param>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.AddToNames(System.String,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Add key/value to nums.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="nums">The nums.</param>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.NewLeafNode(System.String,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Core.PdfString,Spire.Pdf.Core.PdfString)">
            <summary>
            Create new leaf node and add key/value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="leastKey">The least key in limits.</param>
            <param name="greatestKey">The greatest key in limits.</param>
            <returns>The leaf node.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.BetweenLimits(System.String,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            check key is between limits.
            </summary>
            <param name="key">The key.</param>
            <param name="limits">The limits.</param>
            <returns>
            true/false
            if limits is null, represent no limits,so  return true.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.LessThanLimits(System.String,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            check key is less than the least value in limits.
            </summary>
            <param name="key">The key.</param>
            <param name="limits">The limits.</param>
            <returns>
            true/false
            if limits is null, represent no limits,so  return false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.LargeThanLimits(System.String,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            check key is large than greatest value in limits.
            </summary>
            <param name="key">The key.</param>
            <param name="limits">The limits.</param>
            <returns>
            true/false
            if limits is null, represent no limits,so  return false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NameTree.GenerateSortedList(Spire.Pdf.Primitives.PdfDictionary,System.Collections.Generic.SortedList{System.String,Spire.Pdf.Interfaces.IPdfPrimitive}@)">
            <summary>
            Generate 
            </summary>
            <param name="node">The node.</param>
            <param name="sortedList">The list which keys are sorted in ascending numerical order.</param>
        </member>
        <member name="T:Spire.Pdf.Core.DataStructures.NumberTree">
            <summary>
            A number tree is similar to a name tree, except that its keys are integers 
            instead of strings and are sorted in ascending numerical order.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.DataStructures.NumberTree.m_root">
            <summary>
            The root node.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.Find(System.Int32,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Find key's value.
            </summary>
            <param name="key">The key.</param>
            <param name="node">The node.</param>
            <returns>The value</returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.Remove(System.Int32,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Remove key/value.
            </summary>
            <param name="key">The key.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.Add(System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Add key/value to node.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.AddToKids(System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfArray,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Add key/value to kids.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="kids">The kids.</param>
            <param name="limits">The limits.</param>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.AddToNums(System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Add key/value to nums.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="nums">The nums.</param>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.NewLeafNode(System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Primitives.PdfNumber,Spire.Pdf.Primitives.PdfNumber)">
            <summary>
            Create new leaf node and add key/value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="leastKey">The least key in limits.</param>
            <param name="greatestKey">The greatest key in limits.</param>
            <returns>The leaf node.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.BetweenLimits(System.Int32,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            check key is between limits.
            </summary>
            <param name="key">The key.</param>
            <param name="limits">The limits.</param>
            <returns>
            true/false
            if limits is null, represent no limits,so  return true.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.LessThanLimits(System.Int32,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            check key is less than the least value in limits.
            </summary>
            <param name="key">The key.</param>
            <param name="limits">The limits.</param>
            <returns>
            true/false
            if limits is null, represent no limits,so  return false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.LargeThanLimits(System.Int32,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            check key is large than greatest value in limits.
            </summary>
            <param name="key">The key.</param>
            <param name="limits">The limits.</param>
            <returns>
            true/false
            if limits is null, represent no limits,so  return false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Core.DataStructures.NumberTree.GenerateSortedList(Spire.Pdf.Primitives.PdfDictionary,System.Collections.Generic.SortedList{System.Int32,Spire.Pdf.Interfaces.IPdfPrimitive}@)">
            <summary>
            Generate 
            </summary>
            <param name="node">The node.</param>
            <param name="sortedList">The list which keys are sorted in ascending numerical order.</param>
        </member>
        <member name="T:Spire.Pdf.Core.DataStructures.PdfRectangle">
            <summary>
            Rectangles are used to describe locations on a page and 
            bounding boxes for a variety of objects.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.DataStructures.PdfRectangle.LowerLeftX">
            <summary>
            The lower-left x.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.DataStructures.PdfRectangle.LowerLeftY">
            <summary>
            The lower-left y.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.DataStructures.PdfRectangle.UpperRightX">
            <summary>
            The upper-right x.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.DataStructures.PdfRectangle.UpperRightY">
            <summary>
            The upper-right y.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.ASCII85Filter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decodes data.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.ASCII85Filter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.ASCIIHexFilter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decode data.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.ASCIIHexFilter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.CCITTFaxFilter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decode data.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.CCITTFaxFilter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="T:Spire.Pdf.Core.Filters.Compression.ASCIIHexDecode">
            <summary>
            Implements the ASCIIHexDecode filter.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.Compression.ASCIIHexDecode.Encode(System.Byte[])">
            <summary>
            Encodes the specified data.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.Compression.ASCIIHexDecode.Decode(System.Byte[])">
            <summary>
            Decodes the specified data.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.Compression.ASCIIHexDecode.Decompress(System.IO.Stream)">
            <summary>
            Decompresses stream data.
            </summary>
            <param name="inputStream">Stream data to be decompressed.</param>
            <returns>Decompressed stream data.</returns>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.Compression.CompressionType.None">
            <summary>
            No compression.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.Compression.CompressionType.Zlib">
            <summary>
            Compresses data using the zlib or deflate compression method,
            reproducing the original text or binary data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.Compression.CompressionType.LZW">
            <summary>
            Compresses data using the LZW compression method, reproducing
            the original text or binary data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.Compression.CompressionType.ASCII85">
            <summary>
            Compresses data using the ASCII85 compression method, reproducing
            the original text or binary data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.Compression.CompressionType.ASCIIHex">
            <summary>
            Compresses data using the ASCIIHex compression method, reproducing
            the original text or binary data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.Compression.CompressionType.RunLength">
            <summary>
            Compresses data using the RunLength compression method, reproducing
            the original text or binary data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.Compression.StreamFilters.DCTDecode">
            <summary>
            Decompresses data encoded using a DCT (discrete cosine transform)
            technique based on the JPEG standard, reproducing image sample
            data that approximates the original data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.Compression.StreamFilters.FlateDecode">
            <summary>
            Decompresses data encoded using the zlib / deflate
            compression method, reproducing the original text or binary
            data.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.DCTFilter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decode data.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.DCTFilter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="T:Spire.Pdf.Core.Filters.DCTFilter.DecompressorToJpeg">
            <summary>
            inner class, implementation of jpeg image decoding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.DCTFilter.DecompressorToJpeg.m_pixels">
            <summary>
            image pixel data
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Filters.DCTFilter.DecompressorToJpeg.m_parameters">
            <summary>
            parameters of image for decompression
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.DCTFilter.DecompressorToJpeg.#ctor">
            <summary>
            Construct a new decoder object
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.DCTFilter.DecompressorToJpeg.Output">
            <summary>
            Strean with decompressed data
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.DCTFilter.DecompressorToJpeg.Pixels">
            <summary>
            image pixel data
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.DCTFilter.DecompressorToJpeg.Parameters">
            <summary>
            parameters of image for decompression
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.DCTFilter.DecompressorToJpeg.SetImageAttributes(Spire.Pdf.General.Render.Decode.Jpeg.LoadedImageAttributes)">
            <summary>
            parameters of image for decompression
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.Filter.Stream">
            <summary>
            The Stream.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.Filter.Tags">
            <summary>
            The attached tags.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.Filter.ColorSpace">
            <summary>
            Image color space
            Note: Ignore if is not image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.Filter.Width">
            <summary>
            Image width.
            Note: Ignore if is not image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.Filter.Height">
            <summary>
            Image height.
            Note: Ignore if is not image.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.FlateFilter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decode data encoded using the zlib/deflate compression method.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.FlateFilter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data using the zlib/deflate compression method.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.JBIG2Filter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decode data.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.JBIG2Filter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.JPXFilter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decode data.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.JPXFilter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.LZWFilter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decode data.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.LZWFilter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.RunLengthFilter.Decode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Decode data.
            </summary>
            <param name="encodedData">The encoded data with the parameter dictionary.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The original data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.RunLengthFilter.Encode(System.Byte[],Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode data.
            </summary>
            <param name="originalData">The original data.</param>
            <param name="m_decodeParm">The decode parameter dictionary.</param>
            <returns>The encoded data with the parameter dictionary.</returns>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.StreamDecoder.Stream">
            <summary>
            The Stream.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.StreamDecoder.Tags">
            <summary>
            The attached tags.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.StreamDecoder.ColorSpace">
            <summary>
            Image color space
            Note: Ignore if is not image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.StreamDecoder.Width">
            <summary>
            Image width.
            Note: Ignore if is not image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.StreamDecoder.Height">
            <summary>
            Image height.
            Note: Ignore if is not image.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.StreamDecoder.#ctor(Spire.Pdf.Core.PdfStream)">
            <summary>
            Initialize the new instance of the class.
            </summary>
            <param name="stream">The pdf stream.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.StreamDecoder.Decode">
            <summary>
            Get decoded data.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.StreamDecoder.Decode(System.Byte[],System.String,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
             Get decoded data.
            </summary>
            <param name="encodedData">The encoded data.</param>
            <param name="filterName">The filter name.</param>
            <param name="decodeParm">The decode parameter dictionary.</param>
        </member>
        <member name="P:Spire.Pdf.Core.Filters.StreamEncoder.Stream">
            <summary>
            The Stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Filters.StreamEncoder.Encode(System.Byte[],System.String,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Encode stream data.
            </summary>
            <param name="filterName">
            The name of a filter to be applied in processing the stream data.
            </param>
            <param name="decodeParm">
            The parameter dictionary used by the filter specified by Filter.
            </param>
        </member>
        <member name="T:Spire.Pdf.Core.WhiteSpaces">
            <summary>
            Present White-space characters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.WhiteSpaces.CarriageReturn">
            <summary>
            The carriage return (CR).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.WhiteSpaces.LineFeed">
            <summary>
            The line feed (LF).
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.Keywords">
            <summary>
            Present keywords.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.Version">
            <summary>
            Pdf version.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.PdfString">
            <summary>
            Implements PDF string object.
            1.Text String:
            Used for human-readable characters,such as text annotations,bookmark
            names,article names and document information.Thes strings are encode-
            d using either PDFDocEncoding or UTF-16BE with a leading byte-order 
            marker.
            2.PDFDoc String:
            Used for characters and glyphs that are represented in a single byte,
            using PDFDocEncoding.This type,which reflects a more specific encoding
            than the text string type.
            3.ASCII String:
            Used for characters that are represented in a single byte using ASCII 
            encoding.Because 7-bit U.S. ASCII is a strict subset of PDFDocEncoding,
            this value may also be considered to be in that encoding.
            4.Byte String:
            Used for binary data represented as a series of 8-bit bytes,where each
            byte can be any value representable in 8 bits. The string may represent
            characters or glyphs but the encoding is not known. The bytes of the st-
            ring may not represent characters. This type is used for data such as 
            MD5 hash values,signature certificates and Web Capture identification values.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PdfString.TEXT_AUTO_ENCODING">
            <summary>
            Auto encoding by the characters set.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PdfString.TEXT_ASCII_ENCODING">
            <summary>
            ASCII encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PdfString.TEXT_PDFDOC_ENCODING">
            <summary>
            PDFDoc encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PdfString.TEXT_UTF16BE_ENCODING">
            <summary>
            UTF16 big endian encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PdfString.m_writtenBytes">
            <summary>
            The written byte sequence of the string.
            If written way is Literal,the byte sequence include escape characters.
            If written way is Hexadecimal,each pair bytes in the byte sequence define one byte of string.
            !!!Note:Must be not null.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.PdfString.HexadecimalWriting">
            <summary>
            String be written in hexadecimal form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.PdfString.Text">
            <summary>
            The character strings that are encoded
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.PdfString.Bytes">
            <summary>
            A series of bytes—unsigned integer values in the range 0 to 255.
            Don't include escape characters or hexadecimal defined.
            !!!Note:if null,not generate from written bytes or set new value. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.#ctor">
            <summary>
            Construct string.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.#ctor(System.Byte[])">
            <summary>
            Construct string.
            </summary>
            <param name="bytes">A bytes sequence.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Construct string.
            </summary>
            <param name="bytes">A bytes sequence.</param>
            <param name="hexadecimalWriting">String be written in hexadecimal form.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.#ctor(System.String,System.String)">
            <summary>
            Construct string.
            </summary>
            <param name="text">A characters string.</param>
            <param name="encoding">The encoding which the characters string are encoded.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.#ctor(System.Nullable{System.DateTime})">
            <summary>
            Construct string.
            </summary>
            <param name="date">A date.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.IsEmpty">
            <summary>
            Whether is empty string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.GetBytes">
            <summary>
            Get bytes.
            </summary>
            <returns>A bytes sequence.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.SetBytes(System.Byte[],System.Boolean)">
            <summary>
            Set bytes.
            </summary>
            <param name="bytes">A bytes sequence.</param>
            <param name="hexadecimalWriting">String be written in hexadecimal form.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.SetBytes(System.Byte[])">
            <summary>
            Set bytes.
            </summary>
            <param name="bytes">A bytes sequence.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.GetText">
            <summary>
            Get text.
            </summary>
            <returns>A characters string.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.SetText(System.String,System.String)">
            <summary>
            Set text.
            </summary>
            <param name="text">A characters string.</param>
            <param name="encoding">The encoding which the characters string are encoded.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.GetDate">
            <summary>
            Get a date.
            </summary>
            <returns>a date</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.SetDate(System.Nullable{System.DateTime})">
            <summary>
            Set a date which is an ASCII string of the form (D:YYYYMMDDHHmmSSOHH'mm').
            </summary>
            <param name="date">A date.</param>
        </member>
        <member name="P:Spire.Pdf.Core.PdfString.Position">
            <summary>
            Gets or sets the integer value of the specified object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PdfString.m_encryptor">
            <summary>
            The encryptor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PdfString.m_currObjNumber">
            <summary>
            The obj number.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.Decrypt(Spire.Pdf.Security.PdfEncryptor,System.Int64)">
            <summary>
            Decrypts the specified encryptor.
            </summary>
            <param name="encryptor">The encryptor.</param>
            <param name="currObjNumber">The current object number.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.EncodeLiteralBytes(System.Byte[],Spire.Pdf.Security.PdfEncryptor,System.Int64,System.Boolean)">
            <summary>
            Encode the literal string bytes.
            the literal string bytes has existed escape characters.
            </summary>
            <param name="bytes">The origin bytes which is the encoded bytes or the encrypted bytes.</param>
            <param name="encryptor">The encryptor.</param>
            <param name="currObjNumber">The current object number.</param>
            <param name="withMark">With "(" ..")"</param>
            <returns>The literal string bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.EncodeLiteralBytes(System.Byte[],System.Boolean)">
            <summary>
            Encode the literal string bytes.
            the literal string bytes has existed escape characters.
            </summary>
            <param name="bytes">The origin bytes which is the encoded bytes or the encrypted bytes.</param>
            <param name="withMark">With "(" ..")"</param>
            <returns>The literal string bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.EncodeLiteralString(System.Byte[],System.Boolean)">
            <summary>
            Encode the literal string bytes.
            the literal string bytes has existed escape characters.
            </summary>
            <param name="bytes">The origin bytes which is the encoded bytes or the encrypted bytes.</param>
            <param name="withMark">With "(" ..")"</param>
            <returns>The literal string bytes.</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Core.PdfString.EncodeHexadecimalBytes(System.Byte[],Spire.Pdf.Security.PdfEncryptor,System.Int64,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.Core.PdfString.EncodeHexadecimalBytes(System.Byte[],System.Boolean)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.Core.PdfString.EncodeHexadecimalString(System.Byte[],System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Core.PdfString.DecodeLiteralBytes(System.Byte[],Spire.Pdf.Security.PdfEncryptor,System.Int64)">
            <summary>
            Decode the literal string bytes.
            the literal string bytes has existed escape characters.
            </summary>
            <param name="bytes">The literal string bytes.</param>
            <param name="encryptor">The encryptor.</param>
            <param name="currObjNumber">The current object number.</param>
            <returns>The origin bytes which is the encoded bytes or the encrypted bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.DecodeLiteralBytes(System.Byte[])">
            <summary>
            Decode the literal string bytes.
            the literal string bytes has existed escape characters.
            </summary>
            <param name="bytes">The literal string bytes.</param>
            <returns>The origin bytes which is the encoded bytes or the encrypted bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.DecodeHexadecimalBytes(System.Byte[],Spire.Pdf.Security.PdfEncryptor,System.Int64)">
            <summary>
            Decode the hexadecimal string bytes.
            the hexadecimal string bytes define a byte by each pair of  hexadecimal digits.
            </summary>
            <param name="bytes">The hexadecimal string bytes.</param>
            <param name="encryptor">The encryptor.</param>
            <param name="currObjNumber">The current object number.</param>
            <returns>The origin bytes which is the encoded bytes or the encrypted bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.DecodeHexadecimalBytes(System.Byte[])">
            <summary>
            Decode the hexadecimal string bytes.
            the hexadecimal string bytes define a byte by each pair of  hexadecimal digits.
            </summary>
            <param name="bytes">The hexadecimal string bytes.</param>
            <returns>The origin bytes which is the encoded bytes or the encrypted bytes.</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Core.PdfString.Parse(System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Core.PdfString.StringToByte(System.String)">
            <summary>
            Convert a char sequence to a byte sequence(one byte to one char).
            </summary>
            <param name="s">The string which one char represent one byte.</param>
            <returns>The byte sequence.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.ByteToString(System.Byte[])">
            <summary>
            Convert a byte sequence to a char sequence(one byte to one char).
            </summary>
            <param name="bytes">The byte sequence.</param>
            <returns>The string which one char represent one byte.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfString.ByteToString(System.Byte[],System.Int32)">
            <summary>
            Convert a byte sequence to a char sequence(one byte to one char).
            </summary>
            <param name="bytes">The byte sequence.</param>
            <param name="length">byte range:0 length.</param>
            <returns>The string which one char represent one byte.</returns>
        </member>
        <member name="T:Spire.Pdf.Core.PDFDocEncoding">
            <summary>
            Encoding for text strings in a PDF document outside the document's
            content streams
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PDFDocEncoding.ToUnicodeCodePoint">
            <summary>
            Map to unicode code point.
            Note: 0 which not first element represent undefined code point in PDFDocEncoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PDFDocEncoding.ToUnicodeChar">
            <summary>
            Map to unicode char.
            Note: '\0' which not first element represent undefined code point in PDFDocEncoding.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PDFDocEncoding.GetString(System.Byte[])">
            <summary>
            Decode all the bytes in the specified byte array into a string.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <returns>A string containing the results of decoding the specified sequence of bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PDFDocEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decode all the bytes in the specified byte array into a string.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>A string containing the results of decoding the specified sequence of bytes.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PDFDocEncoding.GetBytes(System.String)">
            <summary>
            Get bytes.
            </summary>
            <param name="s">A string.</param>
            <returns>The encoded bytes using PDFDocEncoding.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PDFDocEncoding.OutOfCharacterSet(System.String)">
            <summary>
            Check whether exist character which are not represented in a single byte using PDFDocEncoding.
            </summary>
            <param name="s">A string.</param>
            <returns>
            true,exist character which is out of character set;
            otherwise, false.
            </returns>
        </member>
        <member name="P:Spire.Pdf.Core.PdfStream.Filters">
            <summary>
            The filter array to be applied in processing the stream data.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.PdfStream.DecodeParms">
            <summary>
            The parameter dictionary array used by the filters specified by Filter.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the class.
            <param name="data">The data of the stream.</param>
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.#ctor(Spire.Pdf.Primitives.PdfDictionary,System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="data">The data of the stream.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.Parse(Spire.Pdf.Primitives.PdfDictionary,System.Byte[])">
            <summary>
            Initializes a compressed pdfstream.
            </summary>
            <param name="dictionary">The dictionary of the stream.</param>
            <param name="data">The data of the stream.</param>
            <returns>The pdfstream</returns>>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.GetEncodedStream">
            <summary>
            Get the encoded stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.GetDecodedData">
            <summary>
            Get decoded data.
            </summary>
            <returns>The decoded data.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.SetEncodedData(System.Byte[],System.String[],Spire.Pdf.Primitives.PdfDictionary[])">
            <summary>
            Set encoded data.
            </summary>
            <param name="encodeData">The new encode data.</param>
            <param name="filters">The filetrs of the encoded data.</param>
            <param name="decodeParmsArray">The decodeParmsArray of the filters.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.PrepareStreamWriter">
            <summary>
            Generate a stream writer.
            If the stream is compressed, decompress it frist.
            </summary>
            <returns>A writer of the stream.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.ForbidFilterItem">
            <summary>
            Forbidden filter item used in the stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.Clone(Spire.Pdf.Core.PdfStream)">
            <summary>
            Clone pdfStream.
            </summary>
            <param name="sourceStream">The source pdf stream.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.AddFilter(System.String[],Spire.Pdf.Primitives.PdfDictionary[])">
            <summary>
            Add filters to the stream.
            </summary>
            <param name="filters">The filetrs of the encoded data.</param>
            <param name="decodeParmsArray">The decodeParmsArray of the filters.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.AddFilter(System.String,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Add a filter to the stream.
            </summary>
            <param name="filterName">The filter name.</param>
            <param name="decodeParms">The decode parms.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.Clear">
            <summary>
            Clear the stream data.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.Save(Spire.Pdf.Interfaces.IPdfWriter)">
            <summary>
            Saves the object using the specified writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:Spire.Pdf.Core.PdfStream.WasEncrypted">
            <summary>
            Gets a value indicating whether the object was encrypted.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.PdfStream.Decrypted">
            <summary>
            Gets a value indicating whether this  is decrypted.
            </summary>
            <value><c>true</c> if decrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.Decrypt(Spire.Pdf.Security.PdfEncryptor,System.Int64)">
            <summary>
            Decrypts the data using the specified encryptor.
            </summary>
            <param name="encryptor">The encryptor.</param>
            <param name="currObjNumber">The current object number.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PdfStream.EncryptContent(System.Byte[],Spire.Pdf.Interfaces.IPdfWriter)">
            <summary>
            Encrypts the stream content.
            </summary>
            <param name="data">The data.</param>
            <param name="writer">The writer.</param>
            <returns>The encrypted content.</returns>
        </member>
        <member name="P:Spire.Pdf.Core.PdfStream.ImageFormat">
            <summary>
            Image Format
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.PageTree">
            <summary>
            Represents page tree.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.PageTreeNode">
            <summary>
            Represents page tree node.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Core.PageObject">
            <summary>
            Represents page leaf node.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PageObject.m_dictionary">
            <summary>
            The dictionary.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.PageObject.m_ancestors">
            <summary>
            The ancestors in the hierarchy.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PageObject.#ctor">
            <summary>
            Initialize a new instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.PageObject.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary[])">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="ancestors">The ancestors in the hierarchy.</param>
        </member>
        <member name="M:Spire.Pdf.Core.PageObject.GetProperty(System.String,System.Boolean)">
            <summary>
            Get property.
            </summary>
            <param name="key">The key.</param>
            <param name="inheritable">Inheritable.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.PageObject.SetProperty(System.String,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Set property.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Spire.Pdf.Core.Functions.FunctionObject">
            <summary>
            Implements the base class for all functions.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Functions.FunctionObject.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Core.Functions.Type2Function">
            <summary>
            Implements Type 2 (Exponential Interpolation) Functions.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Functions.Type2Function.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="Init">init</param>
        </member>
        <member name="P:Spire.Pdf.Core.Functions.Type2Function.C0">
            <summary>
            Gets or sets the function result when x = 0.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Functions.Type2Function.C1">
            <summary>
            Gets or sets the function result when x = 1.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Core.Functions.Type2Function.Exponent">
            <summary>
            Gets or sets the Exponent.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.CultureInfoUtils.TryParse(System.String,System.Single@)">
            <summary>
            Parse string to float.
            </summary>
            <param name="value">The string to parse.</param>
            <param name="result">The float value.</param>
            <returns>Parse true or false.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.CultureInfoUtils.ToString(System.Single,System.String)">
            <summary>
            Float to string.
            </summary>
            <param name="value">The float.</param>
            <param name="format"> The format.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.CultureInfoUtils.ToString(System.Single)">
            <summary>
            Float to string.
            </summary>
            <param name="value">The float.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.CultureInfoUtils.Parse(System.String[])">
            <summary>
            String array to float array.
            </summary>
            <param name="value">The string array.</param>
            <returns>The float array.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.CultureInfoUtils.ToString(System.Single[],System.String)">
            <summary>
            Float array to string.
            </summary>
            <param name="value">The float array.</param>
            <param name="split">The float array.</param>
            <returns>The result string.</returns>
        </member>
        <member name="F:Spire.Pdf.Core.Utilities.ObjectDigest.m_digestMethod">
            <summary>
            The document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Core.Utilities.ObjectDigest.m_visitedObjects">
            <summary>
            The objects that has already been visited.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.#ctor(Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.GetDigestValue">
            <summary>
            Get digest value.
            </summary>
            <returns>The digest value.</returns>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestObject(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestNullObject(Spire.Pdf.Primitives.PdfNull)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestNumberObject(Spire.Pdf.Primitives.PdfNumber)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestBooleanObject(Spire.Pdf.Primitives.PdfBoolean)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestNameObject(Spire.Pdf.Primitives.PdfName)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestStringObject(Spire.Pdf.Core.PdfString)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestDictionaryObject(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestArrayObject(Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestStreamObject(Spire.Pdf.Core.PdfStream)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestDictionaryKeyValuePair(Spire.Pdf.Primitives.PdfDictionary,System.String)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
            <param name="key"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.DigestDictionaryEntryValue(Spire.Pdf.Primitives.PdfDictionary,System.String)">
            <summary>
            Digest the Pdf object.
            </summary>
            <param name="obj">The object to digest.</param>
            <param name="key"></param>
        </member>
        <member name="M:Spire.Pdf.Core.Utilities.ObjectDigest.Equal(System.Byte[],System.Byte[])">
            <summary>
            Compare bytes.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfCatalogAdditionalActions">
            <summary>
            Represents action in the PDF.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Actions.PdfCatalogAdditionalActions.WC">
            <summary>
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfFormFieldAdditionalActions">
            <summary>
            Represents action in the PDF.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Actions.PdfFormFieldAdditionalActions.K">
            <summary>
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfPageAdditionalActions">
            <summary>
            Represents action in the PDF.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Actions.PdfPageAdditionalActions.O">
            <summary>
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfAnnotationAdditionalActions">
            <summary>
            Represents action in the PDF.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Actions.PdfAnnotationAdditionalActions.E">
            <summary>
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfGoToEAction">
            <summary>
            Represents GoToE action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfGoTo3DViewAction">
            <summary>
            Represents GoTo3DView action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfTransAction">
            <summary>
            Represents Trans action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfRenditionAction">
            <summary>
            Represents Rendition action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfSetOCGStateAction">
            <summary>
            Represents SetOCGState action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfJavaScriptAction">
            <summary>
            Represents JavaScript action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfImportDataAction">
            <summary>
            Represents ImportData action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfResetFormAction">
            <summary>
            Represents ResetForm action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfSubmitFormAction">
            <summary>
            Represents SubmitForm action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfNamedAction">
            <summary>
            Represents Named action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfSoundAction">
            <summary>
            Represents Sound action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfMovieAction">
            <summary>
            Represents Movie action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfHideAction">
            <summary>
            Represents Hide action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfURIAction">
            <summary>
            Represents URI action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfThreadAction">
            <summary>
            Represents Thread action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfLaunchAction">
            <summary>
            Represents Launch action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfGoToRAction">
            <summary>
            Represents GoToR action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfGoToAction">
            <summary>
            Represents GoTo action in the PDF.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Actions.PdfAction">
            <summary>
            Represents action in the PDF.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Actions.PdfAction.NextAction">
            <summary>
            Gets or sets the next action to be performed after the action.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder">
            <summary>
            Represents the class for build annotation ap objects.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.Enter">
            <summary>
            The enter character.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.NewLine">
            <summary>
            The new line character.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.Space">
            <summary>
            The space character.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.m_appearanceStringBuilder">
            <summary>
            The appearance string builder.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.m_normalStream">
            <summary>
            The normal stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.#ctor">
            <summary>
            Constructors an instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.Initialize">
            <summary>
            Initialize object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.Build">
            <summary>
            Build an object.
            </summary>
            <returns>The dictionary</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.SetProperty(System.String,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Set the property.
            </summary>
            <param name="key">The key</param>
            <param name="value">The value</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.StrokingPath(System.Drawing.PointF[])">
            <summary>
            Draw path and stroking .
            </summary>
            <param name="points">The path data.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.AddPath(System.Drawing.PointF[])">
            <summary>
            Add path data.
            </summary>
            <param name="points">The points data</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.Append(System.String)">
            <summary>
            Append data.
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.MoveTo(System.Single,System.Single)">
            <summary>
            Move to anthor point
            </summary>
            <param name="x">The point x</param>
            <param name="y">The point y</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.LineTo(System.Single,System.Single)">
            <summary>
            Line to anthor point.
            </summary>
            <param name="x">The point x</param>
            <param name="y">The point y</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.Stroking">
            <summary>
            Stroking path.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.Fill">
            <summary>
            Fill path.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.AppendSpace">
            <summary>
            Append space character.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.AppendNewLine">
            <summary>
            Append a new line character.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.StoreState">
            <summary>
            Store state.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.ReStoreState">
            <summary>
            Restore state.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder.End">
            <summary>
            end build.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.Pdf3DAnnotation">
            <summary>
            Represents 3D annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.Pdf3DAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.Pdf3DAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfWatermarkAnnotation">
            <summary>
            Represents Watermark annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfWatermarkAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfWatermarkAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfTrapNetAnnotation">
            <summary>
            Represents TrapNet annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfTrapNetAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfTrapNetAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfPrinterMarkAnnotation">
            <summary>
            Represents PrinterMark annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfPrinterMarkAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfPrinterMarkAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfScreenAnnotation">
            <summary>
            Represents Screen annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfScreenAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfScreenAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfMovieAnnotation">
            <summary>
            Represents Movie annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfMovieAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfMovieAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfSoundAnnotation">
            <summary>
            Represents Sound annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfSoundAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfSoundAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfFileAttachmentAnnotation">
            <summary>
            Represents FileAttachment annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfFileAttachmentAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfFileAttachmentAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfPopupAnnotation">
            <summary>
            Represents Popup annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfPopupAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfPopupAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfInkAnnotation">
            <summary>
            Represents Ink annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfInkAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfInkAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfCaretAnnotation">
            <summary>
            Represents Caret annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfCaretAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfCaretAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfStampAnnotation">
            <summary>
            Represents Stamp annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfStampAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfStampAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfStrikeOutAnnotation">
            <summary>
            Represents StrikeOut annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfStrikeOutAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfStrikeOutAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfSquigglyAnnotation">
            <summary>
            Represents Squiggly annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfSquigglyAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfSquigglyAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfUnderlineAnnotation">
            <summary>
            Represents Underline annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfUnderlineAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfUnderlineAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfHighlightAnnotation">
            <summary>
            Represents Highlight annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfHighlightAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfHighlightAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfPolyLineAnnotation">
            <summary>
            Represents polyline annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfPolyLineAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfPolyLineAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfPolygonAnnotation">
            <summary>
            Represents polygon annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfPolygonAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfPolygonAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfCircleAnnotation">
            <summary>
            Represents circle annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfCircleAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfCircleAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfSquareAnnotation">
            <summary>
            Represents square annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfSquareAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfSquareAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfLineAnnotation">
            <summary>
            Represents line annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfLineAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfLineAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfFreeTextAnnotation">
            <summary>
            Represents free text annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfFreeTextAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfFreeTextAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfLinkAnnotation">
            <summary>
            Represents link annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfLinkAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfLinkAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfTextAnnotation">
            <summary>
            Represents text annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfTextAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfTextAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfAnnotation">
            <summary>
            Represents annotation in the PDF.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Annotations.PdfAnnotation.Flags_Hidden">
            <summary>
            If set, do not display or print the annotation or allow it to interact with the user, 
            regardless of its annotation type or whether an annotation handler is available. 
            In cases where screen space is limited, the ability to hide and show annotations 
            selectively can be used in combination with appearance streams to 
            display auxiliary pop-up information similar in function to online help systems. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Annotations.PdfAnnotation.Dictionary">
            <summary>
            The annotation dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Annotations.PdfAnnotation.Flags">
            <summary>
            an unsigned 32-bit integer containing flags specifying various characteristics.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Annotations.PdfWidgetAnnotation">
            <summary>
            Represents widget annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfWidgetAnnotation.#ctor(Spire.Pdf.Core.DataStructures.PdfRectangle)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="rect">
            The annotation rectangle, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Annotations.PdfWidgetAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfAnnotationDetector.Added">
            <summary>
            The added annotations.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfAnnotationDetector.Updated">
            <summary>
            The updated annotations.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfAnnotationDetector.Deleted">
            <summary>
            The deleted annotations.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfAnnotationDetector.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfAnnotationDetector.DetectChanges">
            <summary>
            Detect changes.
            </summary>
            <returns>Whether is changed.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfAnnotationDetector.GetPageAnnotations(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.Core.PageObject)">
            <summary>
            Get page annotations except widget annotation.
            </summary>
            <param name="document">The document.</param>
            <param name="pageObject">The page object.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfDocumentDetector.Changed">
            <summary>
            The document changed.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfDocumentDetector.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfDocumentDetector.DetectChanges(System.Boolean)">
            <summary>
            Detect changes.
            </summary>
            <returns>Whether is changed.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfDocumentDetector.DigestDocument(Spire.Pdf.PdfDocumentWidget,System.Boolean)">
            <summary>
            Digest document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.m_signingWidgetAnnotToFieldMap">
            <summary>
            Widget annotation to Form field Mapping in signing document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.m_currentWidgetAnnotToFieldMap">
            <summary>
            Widget annotation to Form field Mapping in current document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.Added">
            <summary>
            The added annotations.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.Updated">
            <summary>
            The updated annotations.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.Deleted">
            <summary>
            The deleted annotations.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.DetectChanges(System.Boolean,System.Boolean)">
            <summary>
            Detect changes.
            </summary>
            <returns>Whether is changed.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.GetPageWidgetAnnotations(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.Core.PageObject)">
            <summary>
            Get page widget annotations.
            </summary>
            <param name="document">The document.</param>
            <param name="pageObject">The page object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfFormFieldDetector.DigestFormField(Spire.Pdf.Interactive.Forms.FieldHierarchy,Spire.Pdf.Primitives.PdfDictionary,System.Boolean)">
            <summary>
            Hashes the form field.
            </summary>
            <param name="fieldHierarchy"></param>
            <param name="widgetAnnotationDictionary"></param>
            <param name="allowFillingInForms"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPagesDetector.Added">
            <summary>
            The added pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPagesDetector.Updated">
            <summary>
            The updated pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPagesDetector.Deleted">
            <summary>
            The deleted pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPagesDetector.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPagesDetector.DetectChanges">
            <summary>
            Detect changes.
            </summary>
            <returns>Whether is changed.</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfOrdinaryValidator">
            <summary>
            The pdf digital signature validator.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfOrdinaryValidator.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfOrdinaryValidator.Validate">
            <summary>
            Validate the signature of document.
            </summary>
            <returns>Whether the signature is validated.</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfIdentityValidator">
            <summary>
            The pdf digital signature validator.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfIdentityValidator.m_data">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfIdentityValidator.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfIdentityValidator.Validate">
            <summary>
            Validate the signature of document.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfFieldMDPValidator">
            <summary>
            The pdf digital signature validator.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfFieldMDPValidator.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Pdf.Primitives.PdfDictionary,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfFieldMDPValidator.Validate">
            <summary>
            Validate the signature of document.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfDetector.SigningDocument">
            <summary>
            The signing document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfDetector.CurrentDocument">
            <summary>
            The current document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfDetector.DigestMethod">
            <summary>
            The digest method.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfDetector.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfDetector.IsIncrementalUpdated(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Whether currentObject is incremental updated of signingObject.
            </summary>
            <param name="signingObject">The signing object.</param>
            <param name="currentObject">The current object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfDetector.Equal(System.Byte[],System.Byte[])">
            <summary>
            Compare bytes.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfURValidator">
            <summary>
            The pdf digital signature validator.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfURValidator.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Pdf.Primitives.PdfDictionary,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfURValidator.Validate">
            <summary>
            Validate the signature of document.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfDocMDPValidator">
            <summary>
            The pdf digital signature validator.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfDocMDPValidator.Permissions_1">
            <summary>
            No changes to the document are permitted;
            any change to the document invalidates the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfDocMDPValidator.Permissions_2">
            <summary>
            Permitted changes are filling in forms, instantiating
            page templates, and signing;other changes invalidate the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfDocMDPValidator.Permissions_3">
            <summary>
            Permitted changes are the same as for 2,as well as annotation creation,
            deletion,and modification;other changes invalidate the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfDocMDPValidator.m_permissions">
            <summary>
            The access permissions granted for this document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfDocMDPValidator.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Pdf.Primitives.PdfDictionary,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfDocMDPValidator.Validate">
            <summary>
            Validate the signature of document.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator">
            <summary>
            The pdf digital signature validator.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.SigningDocument">
            <summary>
            The signing document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.CurrentDocument">
            <summary>
            The current document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.DigestMethod">
            <summary>
            The digest method.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.#ctor(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Security.Crypto.Digests.GeneralDigest)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="digestMethod">The digest method.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.Validate">
            <summary>
            Validate the signature of document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.Validate(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.PdfDocumentWidget)">
            <summary>
            Validate signature.
            </summary>
            <param name="signature">The signature.</param>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.CreateSignatureDeformatter(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Create signature deformatter.
            </summary>
            <param name="signature">The signature.</param>
            <returns>The signature deformatter.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.GetSigningDocument(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.PdfDocumentWidget)">
            <summary>
            Get the document at the time of signing.
            </summary>
            <param name="signature">The signature.</param>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.CompareDocument(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Compare the signed and current version of the document.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <param name="reference">The signature reference dictionary.</param>
            <returns>The signature digest value.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.GetContents(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Get signature content.
            </summary>
            <param name="document">The document.</param>
            <param name="byteRange">The byte range.</param>
            <returns>The signature content.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.ReadBytes(Spire.Pdf.PdfDocumentWidget,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read bytes to buffer from document stream.
            </summary>
            <param name="document"></param>
            <param name="documentOffset"></param>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureValidator.GetIncrementalUpdateObjects(Spire.Pdf.PdfDocumentWidget,Spire.Pdf.PdfDocumentWidget)">
            <summary>
            Get incremental update objects.
            </summary>
            <param name="signingDocument">The signing document.</param>
            <param name="currentDocument">The current document.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureProperties">
            <summary>
            Signature properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureProperties.Dictionary">
            <summary>
            inner dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureProperties.SetFilter(System.String)">
            <summary>
            Set the name of the preferred signature handler to use when validating this signature.
            (Required)
            </summary>
            <param name="filter">the name of the preferred signature handler.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureProperties.SetSubFilter(System.String)">
            <summary>
            Set a name that describes the encoding of the signature value.
            (Required)
            </summary>
            <param name="subFilter">a name that describes the encoding of the signature value.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureProperties.SetCert(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Set the X.509 certificate used when signing and verifying signatures that use public-key cryptography.
            (Required when SubFilter is adbe.x509.rsa_sha1)
            </summary>
            <param name="cert">the X.509 certificate.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureProperties.SetCert(System.Collections.Generic.IList{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Set the X.509 certificate chain used when signing and verifying signatures that use public-key cryptography.
            (Required when SubFilter is adbe.x509.rsa_sha1)
            </summary>
            <param name="certs">the X.509 certificate chain.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureProperties.SetSignatureLength(System.UInt32)">
            <summary>
            Set signature length.
            (Option)
            Default, signature need to call twice "Sign" method, one is to calculate signature length.
            If the signature length is known, avoid to calculate signature length by "Sign" method.
            The signature length.
            </summary>
            <param name="signatureLength">the signature length.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureProperties.SetSoftwareModuleName(System.String)">
            <summary>
            Set the name of the software module used to create the signature.
            (Option)
            </summary>
            <param name="softwareModuleName">the name of the software module.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureFormatter">
            <summary>
            Signature formatter.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureFormatter.Properties">
            <summary>
            Signature properties.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureFormatter.Sign(System.Byte[])">
            <summary>
            Sign.
            </summary>
            <param name="content">The data to be signed.</param>
            <returns>The signature.</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureDeformatter">
            <summary>
            Signature deformatter.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureDeformatter.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verify.
            </summary>
            <param name="content">The content signed with signature.</param>
            <param name="signature">The signature to be verified.</param>
            <returns>
            true if signature matches the content; otherwise, false.
            </returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Formatter">
            <summary>
            Pdf pkcs1 signature implementation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Formatter.m_certificate">
            <summary>
            The signing certificate.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Formatter.Properties">
            <summary>
            The signature properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Formatter.Parameters">
            <summary>
            Parameters for the encoding of the signature.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Formatter.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="certificate">The signing certificate.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Formatter.Sign(System.Byte[])">
            <summary>
            Sign.
            </summary>
            <param name="content">The data to be signed.</param>
            <returns>The signature.</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter">
            <summary>
            Pdf pkcs7 signature implementation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.m_certificate">
            <summary>
            The signing certificate.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.m_encapsulate">
            <summary>
            if encapsulate is true a copy of the message will be included in the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.m_extraCertificateStore">
            <summary>
            Represents an additional collection of certificates that can be searched
            by the chaining engine when validating a certificate chain.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.Properties">
            <summary>
            The signature properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.Parameters">
            <summary>
            Parameters for the encoding of the signature.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.OCSPService">
            <summary>
            The service which generate OCSP response.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.TimestampService">
            <summary>
            The provider which generate timestamp token.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.ExtraCertificateStore">
            <summary>
            Represents an additional collection of certificates that can be searched
            by the chaining engine when validating a certificate chain.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="certificate">The signing certificate.</param>
            <param name="encapsulate">
            if encapsulate is true a copy of the message will be included in the signature.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.Sign(System.Byte[])">
            <summary>
            Sign.
            </summary>
            <param name="content">The data to be signed.</param>
            <returns>The signature.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.FindCertificateInStore(System.String,System.String)">
            <summary>
            Find certificate in store.
            </summary>
            <param name="serialNumber">The serial number.</param>
            <param name="issuer">The name of the certificate authority.</param>
            <returns>The certificate.</returns>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Formatter.AuthenticatedAttributeTableGenerator.m_certificateChain">
            <summary>
            The certificate chain.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7SignatureFormatterWithCryptoApi.SHA1_OID">
            <summary>
            Sha1 oid.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7SignatureFormatterWithCryptoApi.m_encapsulate">
            <summary>
            if encapsulate is true a copy of the message will be included in the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7SignatureFormatterWithCryptoApi.m_certificate">
            <summary>
            The signing certificate.
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7SignatureFormatterWithCryptoApi.Properties”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7SignatureFormatterWithCryptoApi.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="certificate">The signing certificate.</param>
            <param name="encapsulate">
            if encapsulate is true a copy of the message will be included in the signature.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7SignatureFormatterWithCryptoApi.Sign(System.Byte[])">
            <summary>
            Sign.
            </summary>
            <param name="content">The data to be signed.</param>
            <returns>The signature.</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.TSAHttpService">
            <summary>
            Time Stamp service implementation which must conform to RFC 3161.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.TSAHttpService.#ctor(System.String)">
            <summary>
            Construct an instance of a TSAClient.
            </summary>
            <param name="url">Time Stamp Authority URL.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.TSAHttpService.#ctor(System.String,System.String,System.String)">
            <summary>
            Construct an instance of a TSAClient.
            </summary>
            <param name="url">Time Stamp Authority URL.</param>
            <param name="user">user(account).</param>
            <param name="password">password.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.TSAHttpService.#ctor(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Construct an instance of a TSAClient.
            Note the token size estimate is updated by each call, as the token
            size is not likely to change(as long as we call the same TSA using
            the same imprint length).
            </summary>
            <param name="url">Time Stamp Authority URL.</param>
            <param name="user">user(account).</param>
            <param name="password">password</param>
            <param name="tokenSizeEstimate">estimated size of received time stamp token (DER encoded).</param>
            <param name="digestAlgorithm"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.TSAHttpService.Generate(System.Byte[])">
            <summary>
            Generate timestamp token.
            </summary>
            <param name="signature">
            The value of signature field within SignerInfo.
            The value of messageImprint field within TimeStampToken shall be the hash of signature.
            Refrence RFC 3161 APPENDIX A.
            </param>
            <returns>timestamp which must conform to RFC 3161</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.TSAHttpService.GetTimeStampToken(System.Byte[])">
            <summary>
            Get RFC 3161 timeStampToken.
            Method may return null indicating that timestamp should be skipped.
            </summary>
            <param name="imprint">data imprint to be time-stamped</param>
            <returns>encoded TSA signed data of the timeStampToken</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.TSAHttpService.GetTSAResponse(System.Byte[])">
            <summary>
            
            </summary>
            <param name="requestBytes"></param>
            <returns>TSA response, raw bytes (RFC 3161 encoded)</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.OCSPHttpService">
             <summary>
            Ocsp http service implementation.
             </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.OCSPHttpService.#ctor(System.String)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="url">The ocsp server url.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.OCSPHttpService.Generate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Generate OCSP response.
            </summary>
            <param name="checkedCertificate">certificate to checked</param>
            <param name="issuerCertificate">certificate of the issuer</param>
            <returns>OCSP response which must conform to RFC 2560</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.IOCSPService">
            <summary>
            OCSP service interface.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.IOCSPService.Generate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Generate OCSP response.
            </summary>
            <param name="checkedCertificate">certificate to checked</param>
            <param name="issuerCertificate">certificate of the issuer</param>
            <returns>OCSP response which must conform to RFC 2560</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.ITSAService">
            <summary>
            Timestamp provider interface.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.ITSAService.Generate(System.Byte[])">
            <summary>
            Generate timestamp token.
            </summary>
            <param name="signature">
            The value of signature field within SignerInfo.
            The value of messageImprint field within TimeStampToken shall be the hash of signature.
            Refrence RFC 3161 APPENDIX A.
            </param>
            <returns>timestamp which must conform to RFC 3161</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance">
            <summary>
             Provide a custom signature appearance implemation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_signature">
            <summary>
            The signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_graphicMode">
            <summary>
            The Grapphic render/display mode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_nameLabel">
            <summary>
            label of name
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_reasonLabel">
            <summary>
            The content to the left of property reason
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_locationLabel">
            <summary>
            label of location
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_contactInfoLabel">
            <summary>
            label of contactInfo
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_dateLabel">
            <summary>
            label of date
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_signDetailsFont">
            <summary>
            the SignName font.
            Note: if not set, the default font will be applied.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.m_signNameFont">
            <summary>
            the SignDetails font.
            Note: if not set, the default font will be applied.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.NameLabel">
            <summary>
            The label of The name of the person or authority signing the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.ReasonLabel">
            <summary>
            The label of signature's reason
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.LocationLabel">
            <summary>
            The label of signature's location
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.ContactInfoLabel">
            <summary>
            The label of signature's contactInfo
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.DateLabel">
            <summary>
            The label of signature's date
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.SignFontColor">
            <summary>
            font color for the signature info
            if not set, the default is black
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.GraphicMode">
            <summary>
            The Grapphic render/display mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.SignImageLayout">
            <summary>
            Set or get the sign image layout. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.SignNameFont">
            <summary>
            the SignName font.
            Note: if not set, the default font will be applied.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.SignDetailsFont">
            <summary>
            the SignDetails font.
            Note: if not set, the default font will be applied.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.#ctor(Spire.Pdf.Interactive.DigitalSignatures.PdfSignature)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="signature">The signature.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureAppearance.Generate(Spire.Pdf.Graphics.PdfCanvas)">
            <summary>
            Generate custom signature appearance by a graphics context.
            </summary>
            <param name="g">A graphics context of signature appearance.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureAppearance">
            <summary>
            Provide a custom signature appearance interface
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureAppearance.Generate(Spire.Pdf.Graphics.PdfCanvas)">
            <summary>
            Generate custom signature appearance by a graphics context.
            </summary>
            <param name="g">A graphics context of signature appearance.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfOrdinarySignatureMaker">
            <summary>
            Pdf ordinary signature maker.
            A document can contain One or more ordinary signatures.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfOrdinarySignatureMaker.#ctor(Spire.Pdf.PdfDocument,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="document">The pdf document object</param>
            <param name="certificate">The X.509 certificate.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfOrdinarySignatureMaker.#ctor(Spire.Pdf.PdfDocument,Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureFormatter)">
            <summary>
             Initialize a new instance.
            </summary>
            <param name="document">The pdf document object</param>
            <param name="signatureFormatter">The signature formatter.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker">
            <summary>
            Pdf MDP (modification detection and prevention) signature maker.
            A document can contain only one MDP signature, it must be the first signed in the document.
            It enables the author to specify what changes are permitted to be made the document and 
            what changes invalidate the author’s signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker.Level1Permissions">
            <summary>
            No changes to the document are permitted; 
            any change to the document invalidates the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker.Level2Permissions">
            <summary>
            Permitted changes are filling in forms, instantiating page templates, 
            and signing; other changes invalidate the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker.Level3Permissions">
            <summary>
            Permitted changes are the same as for 2, as well as annotation creation, 
            deletion, and modification; other changes invalidate the signature
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker.m_permissions">
            <summary>
            The access permissions granted for this document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker.#ctor(Spire.Pdf.PdfDocument,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="document">The pdf document object</param>
            <param name="certificate">The X.509 certificate.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker.#ctor(Spire.Pdf.PdfDocument,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Int32)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="document">The pdf document object</param>
            <param name="certificate">The X.509 certificate.</param>
            <param name="permissions">
            The access permissions granted for this document.
            Validate values:
            PdfMDPSignatureMaker.Level1Permissions/PdfMDPSignatureMaker.Level2Permissions/PdfMDPSignatureMaker.Level3Permissions
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker.FindOrCreatePerms">
            <summary>
            Find or Create a Perms dictionary
            The DocMDP transform method is used to detect modifications relative to a signature field 
            that is signed by the author of a document (the person applying the first signature).
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfMDPSignatureMaker.CreateReference">
            <summary>
            (Optional; PDF 1.5) An array of signature reference dictionaries (see Table 8.103).
            </summary>
            <param name="writer"></param>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Deformatter.m_certificate">
            <summary>
            The signing certificate.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Deformatter.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="certificate">The signing certificate.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS1Deformatter.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verify.
            </summary>
            <param name="content">The content signed with signature.</param>
            <param name="signature">The signature to be verified.</param>
            <returns>
            true if signature matches the content; otherwise, false.
            </returns>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Deformatter.m_subFilter">
            <summary>
            A name that describes the encoding of the signature value.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Deformatter.#ctor(System.String)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="subFilter">
            A name that describes the encoding of the signature value.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfPKCS7Deformatter.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verify.
            </summary>
            <param name="content">The content signed with signature.</param>
            <param name="signature">The signature to be verified.</param>
            <returns>
            true if signature matches the content; otherwise, false.
            </returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature">
            <summary>
            The pdf signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.m_dictionary">
            <summary>
            The signature dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.Filter">
            <summary>
            The name of the preferred signature handler to use when validating this signature.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.SubFilter">
            <summary>
            A name that describes the encoding of the signature value.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.Certs">
            <summary>
            The X.509 certificate chain used when signing and verifying signatures that use public-key cryptography.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.Name">
            <summary>
            The name of the person or anthority signing the document
            this value should be used only when it is not possible to extract the name from the signature
            for example, from the certificat of the signer
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.Date">
            <summary>
            The time of signing. Depending on the signature handler
            this may be a normal unverified computer time or a time generated in a verifiable way from a secure time server
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.Location">
            <summary>
            Gets or sets the physical location of the signing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.Reason">
            <summary>
            Gets or sets reason of signing.
            The reason for the signing, such as ( I agree … ).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.ContactInfo">
            <summary>
            Gets or sets a phone number of signer
            Information provided by the signer to enable a recipient to contact the signer to verify the signature; for example, a phone number.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.SoftwareModule">
            <summary>
            The name of the software module used to create the signature.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.#ctor">
            <summary>
             Initialize a new instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignature.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The signature dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker">
            <summary>
            Pdf signatue maker.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.m_signatureFormatter">
            <summary>
            Signature formatter.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.Signature">
            <summary>
            The signature.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.Document">
            <summary>
            The pdf document object
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.DistinguishedName">
            <summary>
            Digital Signature Distinguished name.
            Notes: Assigning a stirng value to it directly is not recommended unless you know what is the Distinguish Name exactly.
            One way suggested of value Assignment is using pdfSignature.Certificate.IssuerName.Name,in which, pdfSignature is an instance of PDFSignature class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.NameLabel">
            <summary>
            The content to the left of property name
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.DistinguishedNameLabel">
            <summary>
            The content to the left of property distinguishedName
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.ReasonLabel">
            <summary>
            The content to the left of property reason
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.LocationLabel">
            <summary>
            The content to the left of property location
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.ContactInfoLabel">
            <summary>
            The content to the left of property contactInfo
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.DateLabel">
            <summary>
            The content to the left of property date
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.m_acro6Layers">
            <summary>
            Prior to Acrobat 6.0, signature appearances were manipulated at run-time in order to display the validity of the signature. 
            The validity was shown as a graphic icon and with an additional, optional text message. The manipulated portions of the 
            signature appearance were contained in layers n1, n3 and n4. Beginning with version 6, Acrobat does not maintain support 
            for signature appearances that can be manipulated, though legacy signatures with these appearances may continue to display 
            correctly. Use of layers n1, n3, and n4 is not recommended.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.#ctor(Spire.Pdf.PdfDocument,Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureFormatter)">
            <summary>
             Initialize a new instance.
            </summary>
            <param name="document">The pdf document object</param>
            <param name="signatureFormatter">The signature formatter.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.#ctor(Spire.Pdf.PdfDocument,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
             Initialize a new instance.
            </summary>
            <param name="document">The pdf document object</param>
            <param name="certificate">The X.509 certificate.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetName(System.String)">
            <summary>
            The name of the person or anthority signing the document
            this value should be used only when it is not possible to extract the name from the signature
            for example, from the certificat of the signer
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetDistinguishedName(System.String)">
            Digital Signature Distinguished name.
            Notes: Assigning a stirng value to it directly is not recommended unless you know what is the Distinguish Name exactly.
            One way suggested of value Assignment is using pdfSignature.Certificate.IssuerName.Name,in which, pdfSignature is an instance of PDFSignature class.
            <param name="distinguishedName"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetDate(System.String)">
            <summary>
            It is recommended to use "D:{0:yyyyMMddHHmmss}" to format the datetime,for example:String.Format("D:{0:yyyyMMddHHmmss}",DateTime.Now)
            The time of signing. Depending on the signature handler
            this may be a normal unverified computer time or a time generated in a verifiable way from a secure time server
            </summary>
            <param name="date"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetLocation(System.String)">
            <summary>
            The CPU host name or physical location of the signing.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetReason(System.String)">
            <summary>
            The reason for the signing, such as ( I agree … ).
            </summary>
            <param name="reason"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetContactInfo(System.String)">
            <summary>
            Information provided by the signer to enable a recipient to contact the signer to verify the signature
            for example, a phone number.
            </summary>
            <param name="contactInfo"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetNameLabel(System.String)">
            <summary>
            The content to the left of property name
            </summary>
            <param name="nameLabel"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetDistinguishedNameLabel(System.String)">
            <summary>
            The content to the left of property distinguishedName
            </summary>
            <param name="distinguishedNameLabel"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetReasonLabel(System.String)">
            <summary>
            The content to the left of property reason
            </summary>
            <param name="reasonLabel"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetLocationLabel(System.String)">
            <summary>
            The content to the left of property location
            </summary>
            <param name="locationLabel"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetContactInfoLabel(System.String)">
            <summary>
            The content to the left of property contactInfo
            </summary>
            <param name="contactInfoLabel"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetDateLabel(System.String)">
            <summary>
            The content to the left of property date
            </summary>
            <param name="dateLabel"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SetAcro6Layers(System.Boolean)">
            <summary>
            Only for compatibility old version.
            Whether move away signature validity visualizations in document.
            Default true.
            </summary>
            <param name="acro6Layers">
            false, display signature validity visualizations in document.
            true, move away signature validity visualizations in document. 
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.MakeSignature(System.String)">
            <summary>
            Make signature.
            </summary>
            <param name="sigFieldName">The signature filed name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.MakeSignature(System.String,Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureAppearance)">
            <summary>
            Make signature.
            </summary>
            <param name="sigFieldName">The signature filed name.</param>
            <param name="signatureAppearance">Implement a custom signature appearance.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.MakeSignature(System.String,Spire.Pdf.PdfPageBase,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Make signature.
            </summary>
            <param name="sigFieldName">The signature filed name.</param>
            <param name="page">The page index.</param>
            <param name="x">The x position of the annotation on the page.</param>
            <param name="y">The y position of the annotation on the page.</param>
            <param name="width">The width of the annotation on the page.</param>
            <param name="height">The height of the annotation on the page.</param>
            <param name="rect">The location of the annotation on the page.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.MakeSignature(System.String,Spire.Pdf.PdfPageBase,System.Single,System.Single,System.Single,System.Single,Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureAppearance)">
            <summary>
            Make signature.
            </summary>
            <param name="sigFieldName">The signature filed name.</param>
            <param name="page">The page index.</param>
            <param name="x">The x position of the annotation on the page.</param>
            <param name="y">The y position of the annotation on the page.</param>
            <param name="width">The width of the annotation on the page.</param>
            <param name="height">The height of the annotation on the page.</param>
            <param name="signatureAppearance">Implement a custom signature appearance.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GenerateSignatureAppearance(Spire.Pdf.Interactive.Annotations.PdfWidgetAnnotation,Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureAppearance,System.Boolean)">
            <summary>
            Generate signature normal appearance.
            </summary>
            <param name="widgetAnnotation">The widget annotation.</param>
            <param name="n2LayerSignatureAppearance">The n2 layer signature appearance.</param>
            <param name="acro6Layers">Whether move away signature validity visualizations in document.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GenerateTopLevelXObject(Spire.Pdf.Interactive.Annotations.PdfWidgetAnnotation,Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureAppearance,System.Boolean)">
            <summary>
            Generate top-level XObject.
            </summary>
            <param name="widgetAnnotation">The widget annotation.</param>
            <param name="n2LayerSignatureAppearance">The n2 layer signature appearance.</param>
            <param name="acro6Layers">Whether move away signature validity visualizations in document.</param>
            <returns>The top-level XObject.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GenerateSecondLevelXObject(System.Single,System.Single,Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureAppearance,System.Boolean)">
            <summary>
            Generate second-level XObject.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="n2LayerSignatureAppearance">The n2 layer signature appearance.</param>
            <param name="acro6Layers">Whether move away signature validity visualizations in document.</param>
            <returns>The second-level XObject.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GenerateLayerN0(System.Single,System.Single)">
            <summary>
            Generate n0 layer.
            Background layer.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The n0 Background layer.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GenerateLayerN1(System.Single,System.Single)">
            <summary>
            Generate n1 layer.
            Validity layer, used for the unknown and valid state;contains, for instance, a yellow question mark.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The n1 layer.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GenerateLayerN2(System.Single,System.Single,Spire.Pdf.Interactive.DigitalSignatures.IPdfSignatureAppearance)">
            <summary>
            Generate n2 layer.
            Signature appearance,containing information about the signature. This can be text or an XObject 
            that represents signature.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="signatureAppearance"></param>
            <returns>The n2 layer.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GenerateLayerN3(System.Single,System.Single)">
            <summary>
            Generate n3 layer.
            Validity layer, containing a graphic that represents the validity of the signature when the signature is validate.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The n3 layer.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GenerateLayerN4(System.Single,System.Single)">
            <summary>
            Generate n4 layer.
            Text layer, for a text presentation of the state of the signature.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The n4 layer.</returns>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.m_extraSignContentLength">
            <summary>
            添加额外无效字符长度处理两次签名长度一致,pdf-3547
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.m_ByteRanges">
            <summary>
            An array of pairs of integers (starting byte offset, length in bytes) describing the exact byte range for the digest calculation.
            Multiple discontiguous byte ranges are used to describe a digest that does not include the signature value (theContents entry) itself.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.m_WriteByteRangeStartPosition">
            <summary>
            Write the start position of byteRange
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.m_WriteDigestValueStartPosition">
            <summary>
            Write the start position of digestValue
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Handles the BeginSave event of the pdf signature dictionary object.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The events arguments.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.AddContents(Spire.Pdf.Interfaces.IPdfWriter)">
            <summary>
            The signature value
            When ByteRange is present
            the value is a hexadecimal string representing the value of the byte range digest.
            If ByteRange is not present
            the value is an object digest of the signature dictionary
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.AddRange(Spire.Pdf.Interfaces.IPdfWriter)">
            <summary>
            An array of pairs of integers (starting byte offset, length in bytes) describing the exact byte range for the digest calculation.
            Multiple discontiguous byte ranges are used to describe a digest that does not include the signature value (theContents entry) itself.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.GetSignatureLength">
            <summary>
            Calculate signature length
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.DocumentSaved(System.Object,Spire.Pdf.DocumentSavedEventArgs)">
            <summary>
            Event handler of document saved.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The events arguments.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.WriteByteRange(Spire.Pdf.Core.IO.PdfWriter)">
            <summary>
            Write the signature "ByteRange" value
            An array of pairs of integers (starting byte offset, length in bytes) describing the exact byte range for the digest calculation.
            Multiple discontiguous byte ranges are used to describe a digest that does not include the signature value (theContents entry) itself.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.SaveRangeItem(Spire.Pdf.Core.IO.PdfWriter,System.String,System.Int32)">
            <summary>
            Write the signature "ByteRange" value
            </summary>
            <param name="writer"></param>
            <param name="str"></param>
            <param name="startPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.DigitalSignatures.PdfSignatureMaker.WriteContents(Spire.Pdf.Core.IO.PdfWriter)">
            <summary>
            Write the signature "Contents" value
            When ByteRange is present
            the value is a hexadecimal string representing the value of the byte range digest.
            If ByteRange is not present
            the value is an object digest of the signature dictionary
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.GraphicMode">
            <summary>
            Modes to determine what and how to dispay the signature infomation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.GraphicMode.SignDetail">
            <summary>
            Default dispaly model. 
            Display signature details including signer,location,date,contact infomation and reason. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.GraphicMode.SignImageOnly">
            <summary>
            Only display the signature image. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.GraphicMode.SignNameOnly">
            <summary>
            Only display the sign name. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.GraphicMode.SignNameAndSignDetail">
            <summary>
            Diaply sign name and signature details.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.GraphicMode.SignImageAndSignDetail">
            <summary>
            Diaply signature image and signature details.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.SignTextAlignment">
            <summary>
            Specifies the alignment type of signature text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.SignTextAlignment.Left">
            <summary>
            Specifies the signature text is aligned to Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.SignTextAlignment.Center">
            <summary>
            Specifies the signature text is aligned to Center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.SignTextAlignment.Right">
            <summary>
            Specifies the signature text is aligned to Right.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.DigitalSignatures.SignImageLayout">
             <summary>
            The layout determine how to display the sign image. 
             </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.SignImageLayout.None">
            <summary>
            Default.
            Sign image status without any modification. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.DigitalSignatures.SignImageLayout.Stretch">
            <summary>
            Stretch the sign image. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.PdfPushButtonField">
            <summary>
            Represents Push Button terminal field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfPushButtonField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fullName">The full name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfPushButtonField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfPushButtonField.IsPushButtonField(Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Whether is push button field.
            </summary>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.PdfCheckBoxField">
            <summary>
            Represents Check Box terminal field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfCheckBoxField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fullName">The full name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfCheckBoxField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfCheckBoxField.IsCheckBoxField(Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Whether is checkbox field.
            </summary>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.PdfRadioButtonField">
            <summary>
            Represents Radio Button terminal field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfRadioButtonField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fullName">The full name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfRadioButtonField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfRadioButtonField.IsRadioButtonField(Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Whether is radio button field. 
            </summary>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.PdfChoiceField">
            <summary>
            Represents Choice terminal field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfChoiceField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fullName">The full name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfChoiceField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfChoiceField.IsChoiceField(Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Whether is choice field.
            </summary>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.PdfTextField">
            <summary>
            Represents Text terminal field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfTextField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fullName">The full name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfTextField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfTextField.IsTextField(Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Whether is text field.
            </summary>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.FieldHierarchy">
            <summary>
            Represents field hierarchy which contain field dictionary and the ancestors.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Forms.FieldHierarchy.m_dictionary">
            <summary>
            The dictionary.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Forms.FieldHierarchy.m_ancestors">
            <summary>
            The ancestors in the hierarchy.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Forms.FieldHierarchy.Dictionary">
            <summary>
            The field dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Forms.FieldHierarchy.RootDictionary">
            <summary>
            The root field dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.FieldHierarchy.#ctor(System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="fieldFullName">The field full name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.FieldHierarchy.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary[])">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The field dictionary.</param>
            <param name="ancestors">The ancestors in the hierarchy.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.FieldHierarchy.GetFullName">
            <summary>
            Get field full name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.FieldHierarchy.GetFullName(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary[])">
            <summary>
            Get field full name.
            </summary>
            <param name="dictionary">The field dictionary.</param>
            <param name="ancestors">The ancestors in the hierarchy.</param>
            <returns>The field full name.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.FieldHierarchy.ContainProperty(System.String,System.Boolean)">
            <summary>
            Whether contains property.
            </summary>
            <param name="key">The key.</param>
            <param name="inheritable">Inheritable.</param>
            <returns>
            If contain the property, true.
            Otherwise, false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.FieldHierarchy.GetProperty(System.String,System.Boolean)">
            <summary>
            Get property.
            </summary>
            <param name="key">The key.</param>
            <param name="inheritable">Inheritable.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.FieldHierarchy.SetProperty(System.String,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Set property.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.PdfField">
            <summary>
            Represents terminal field in the PDF Form.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Forms.PdfField.m_form">
            <summary>
            The assoiated form.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Forms.PdfField.m_fieldHierarchy">
            <summary>
            The field hierarchy which contain field dictionary and the ancestors.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Forms.PdfField.FieldHierarchy">
            <summary>
            The field hierarchy.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Forms.PdfField.FullName">
            <summary>
            The full name.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fullName">The full name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.GetWidgetAnnotations">
            <summary>
            Get all widget annotation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.AddWidgetAnnotation(Spire.Pdf.PdfPageBase,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add field's widget annotation.
            </summary>
            <param name="field">The field.</param>
            <param name="page">The page of widget annotation.</param>
            <param name="x">The x position of the annotation on the page.</param>
            <param name="y">The y position of the annotation on the page.</param>
            <param name="width">The width of the annotation on the page.</param>
            <param name="height">The height of the annotation on the page.</param>
            <returns>The widget annotation.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.ExistWidgetAnnotationEntries(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Whether exist widget annotation entries in field dictionary.
            </summary>
            <returns>
            If the contents of the field dictionary and the annotation dictionary can be merged into a single dictionary, true.
            Otherwise, false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.CloneAndRemoveWidgetAnnotationEntries(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Clone and remove widget annotation entries from field dictionary.
            </summary>
            <returns>The widget annotation dictionary.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.MergeWidgetAnnotationEntries(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Merge widget annotation entries to field dictionary.
            </summary>
            <param name="fieldDictionary">The field dictionary.</param>
            <param name="widgetAnnotationDictionary">The widget annotation</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.AddPageWidgetAnnotation(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Add page widget annotation.
            </summary>
            <param name="pageDictionary">The page dictionary.</param>
            <param name="widgetAnnotationDictionary">The new widget annotation dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfField.ReplacePageWidgetAnnotation(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Replace page widget annotation.
            </summary>
            <param name="oldWidgetAnnotationDictionary">The old widget annotation dictionary.</param>
            <param name="newWidgetAnnotationDictionary">The new widget annotation dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.PdfForm">
            <summary>
            Used to gathering information interactively from the user.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interactive.Forms.PdfForm.m_document">
            <summary>
            The assoiated document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Forms.PdfForm.Document">
            <summary>
            The assoiated document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interactive.Forms.PdfForm.Dictionary">
            <summary>
            The form dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfForm.#ctor(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Initialize a new instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfForm.GetPdfFields">
            <summary>
            Get all fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfForm.FindFields(System.String)">
            <summary>
            Find fields.
            </summary>
            <param name="fullName">The full name.</param>
            <returns>The matched fields.</returns>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfForm.CreateSignatureField(System.String)">
            <summary>
            Create signature field.
            </summary>
            <param name="fullName">The full name.</param>
            <returns>The new signature field.</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Interactive.Forms.PdfForm.FindFieldHierarchy(System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary},System.Collections.Generic.Stack{Spire.Pdf.Primitives.PdfDictionary},System.String,System.Collections.Generic.Dictionary{Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Interactive.Forms.FieldHierarchy})”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Interactive.Forms.PdfForm.GetFieldDictionaryList(Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Get field dictionary list.
            </summary>
            <param name="array">The array.</param>
            <returns>The field dictionary list.</returns>
        </member>
        <member name="T:Spire.Pdf.Interactive.Forms.PdfSignatureField">
            <summary>
            Represents signature field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfSignatureField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="name">The full name.</param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfSignatureField.#ctor(Spire.Pdf.Interactive.Forms.PdfForm,Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="form">The assoiated form.</param>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interactive.Forms.PdfSignatureField.IsSignatureField(Spire.Pdf.Interactive.Forms.FieldHierarchy)">
            <summary>
            Whether is signature field.
            </summary>
            <param name="fieldHierarchy">
            The field hierarchy which contain field dictionary and the ancestors.
            </param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.Standard.AutoGenerator">
            <summary>
            Auto generate tagged content for structure element and attributes.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.PdfTaggedContent">
            <summary>
            Represents the content of tagged pdf.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfTaggedContent.StructureTreeRoot">
            <summary>
            Pdf logical structure tree root.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfTaggedContent.#ctor(Spire.Pdf.PdfDocument)">
            <summary>
            Construct new instance.
            </summary>
            <param name="document">The new pdf document.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfTaggedContent.SetLanguage(System.String)">
            <summary>
            Set the natural language for all text in the document.
            A Language-Tag as defined in RFC 3066, Tags for the Identification of Languages.
            </summary>
            <param name="language"></param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfTaggedContent.SetTitle(System.String)">
            <summary>
            Set the document's title.
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfTaggedContent.SetPdfUA1Identification">
            <summary>
            Set pdf/UA identification.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.PdfStructureTreeRoot">
            <summary>
            PDF’s logical structure facilities provide a mechanism for incorporating
            structural information about a document’s content into a PDF file. Such
            information might include, for example, the organization of the document into
            chapters and sections or the identification of special elements such as figures,
            tables, and footnotes. The logical structure facilities are extensible, allowing
            applications that produce PDF files to choose what structural information to
            include and how to represent it, while enabling PDF consumers to navigate a file
            without knowing the producer’s structural conventions.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureTreeRoot.#ctor">
            <summary>
            Construct a new PDF's logical structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureTreeRoot.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Construct PDF's logical structure.
            </summary>
            <param name="root">The structure tree root.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureTreeRoot.AppendChildElement(System.String)">
            <summary>
            Append structure type element.
            </summary>
            <param name="structureType">The structure type.</param>
            <returns>The pdf structure type element.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureTreeRoot.GetChildElements">
            <summary>
            Get the children structure elements.
            </summary>
            <returns>The pdf structure type element list.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureTreeRoot.CreateLogicalStructure(Spire.Pdf.PdfDocument)">
            <summary>
            Create PDF's logical structure.
            </summary>
            <param name="doc">The pdf document.</param>
            <returns>return new logical structure.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureTreeRoot.GetPdfLogicalStructure(Spire.Pdf.PdfDocument)">
            <summary>
            Get PDF's logical structure.
            </summary>
            <param name="doc">The pdf document.</param>
            <returns>
            Return PDF's logical structure.If null,the pdf document has not PDF's logical structure.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureTreeRoot.GetPdfLogicalStructure(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Get PDF's logical structure.
            </summary>
            <param name="doc">The pdf document.</param>
            <returns>
            Return PDF's logical structure.If null,the pdf document has not PDF's logical structure.
            </returns>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.ParentTree">
            <summary>
            A number tree used in finding the structure elements to which content items belong.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.ParentTree.AssociatePdfObjectContentItem(Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            For an object identified as a content item by means of an object reference,
            the value is an indirect reference to the parent structure element.
            </summary>
            <param name="parentStructureElement">The parent structure element of content item.</param>
            <param name="associatedObject">The associated pdf object.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.ParentTree.associateMarkedContentSequencesContentItem(Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            For a content stream containing marked-content sequences that are content items, 
            the value is an array of indirect references to the sequences’ parent structure elements. 
            The array element corresponding to each sequence is found by using the sequence’s marked-content identifier 
            as a zero-based index into the array.
            </summary>
            <param name="parentStructureElement">The parent structure element of content item.</param>
            <param name="associatedContentStream">The associated content stream.</param>
            <returns>An integer marked-content identifier that uniquely identifies the marked-content sequence within its content stream.</returns>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.IDTree">
            <summary>
            A name tree that maps element identifiers to the structure elements.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.RoleMap">
            <summary>
            A dictionary that maps the names of structure types used 
            in the document to their approximate equivalents in the set of standard structure types. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.ClassMap">
            <summary>
            A dictionary that maps name objects designating attribute classes to 
            the corresponding attribute objects or arrays of attribute objects
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList">
            <summary>
            Represents the Pdf Artifact property list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.Type">
            <summary>
            Gets or sets the artifact type
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.Top">
            <summary>
            Gets or sets top of the artifact’s bounding box.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.Left">
            <summary>
            Gets or sets left of the artifact’s bounding box.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.Bottom">
            <summary>
            Gets or sets Bottom of the artifact’s bounding box.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.Right">
            <summary>
            Gets or sets Bottom of the artifact’s bounding box.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.SubType">
            <summary>
            Gets or sets the subtype of the artifact
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.TopEdge">
            <summary>
            Gets or sets top edge of the page
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.LeftEdge">
            <summary>
            Gets or sets left edge of the page
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.BottomEdge">
            <summary>
            Gets or sets Bottom edge of the page
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList.RightEdge">
            <summary>
            Gets or sets Bottom edge of the page
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes">
            <summary>
            Represents the standard struct types.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Document">
            <summary>
            A complete document. This is the root element of any structure tree containing multiple parts or multiple articles.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Part">
            <summary>
            A large-scale division of a document. This type of element is appropriate for grouping articles or sections.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Article">
            <summary>
            A relatively self-contained body of text constituting a single narrative or exposition. Articles should be disjoint; 
            that is, they should not contain other articles as constituent elements.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Section">
            <summary>
            A container for grouping related content elements. For example, a section might contain a heading, several introductory
            paragraphs, and two or more other sections nested within it as subsections.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Division">
            <summary>
            A generic block-level element or group of elements.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.BlockQuote">
            <summary>
            A portion of text consisting of one or more paragraphs attributed to someone other than the author of the surrounding text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Caption">
            <summary>
            A brief portion of text describing a table or figure.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.TOC">
            <summary>
            A list made up of table of contents item entries and/or other nested table of contents entries.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.TOCI">
            <summary>
            An individual member of a table of contents.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Index">
            <summary>
            A sequence of entries containing identifying text accompanied by reference elements
            that point out occurrences of the specified text in the main body of a document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.NonStruct">
            <summary>
            A grouping element having no inherent structural significance; it serves solely for grouping purposes. 
            This type of element differs from a division (structure type Div) in that it is not interpreted 
            or exported to other document formats; however, its descendants are to be processed normally.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Private">
            <summary>
            A grouping element containing private content belonging to the application producing it. 
            The structural significance of this type of element is unspecified and is determined entirely by the producer application. 
            Neither the Private element nor any of its descendants are to be interpreted or exported to other document formats.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Heading">
            <summary>
            A label for a subdivision of a document’s content. It should be the first child of the division that it heads.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.HeadingLevel1">
            <summary>
            Headings with specific levels, for use in applications that cannot hierarchically nest their sections and thus 
            cannot determine the level of a heading from its level of nesting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.HeadingLevel2">
            <summary>
            Headings with specific levels, for use in applications that cannot hierarchically nest their sections and thus 
            cannot determine the level of a heading from its level of nesting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.HeadingLevel3">
            <summary>
            Headings with specific levels, for use in applications that cannot hierarchically nest their sections and thus 
            cannot determine the level of a heading from its level of nesting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.HeadingLevel4">
            <summary>
            Headings with specific levels, for use in applications that cannot hierarchically nest their sections and thus 
            cannot determine the level of a heading from its level of nesting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.HeadingLevel5">
            <summary>
            Headings with specific levels, for use in applications that cannot hierarchically nest their sections and thus 
            cannot determine the level of a heading from its level of nesting.
            </summary>
        </member>
        <!-- 对于成员“F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.HeadingLevel6”忽略有格式错误的 XML 注释 -->
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Paragraph">
            <summary>
            A low-level division of text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.List">
            <summary>
            A sequence of items of like meaning and importance. Its immediate children should be an optional caption 
            (structure type Caption) followed by one or more list items (structure type LI).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.ListItem">
            <summary>
            An individual member of a list. Its children may be one or more labels, list bodies, or both (structure types Lbl or LBody).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Label">
            <summary>
            A name or number that distinguishes a given item from others in the same list or other group of like items. In a dictionary list, 
            for example, it contains the term being defined; in a bulleted or numbered list, it contains the bullet character or the number of the list item and associated punctuation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.ListBody">
            <summary>
            The descriptive content of a list item. In a dictionary list, for example, it contains the definition of the term. It can either contain the content directly or have other BLSEs, 
            perhaps including nested lists, as children.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Table">
            <summary>
            A two-dimensional layout of rectangular data cells, possibly having a complex substructure. It contains either one or more table rows (structure type TR) as children; 
            or an optional table head (structure type THead) followed by one or more table body elements (structure type TBody) and an optional table footer (structure type TFoot). 
            In addition, a table may have an optional caption (structure type Caption; see “Grouping Elements” on page 899) as its first or last child.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.TableRow">
            <summary>
            A row of headings or data in a table. It may contain table header cells and table data cells (structure types TH and TD).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.TableHeaderCell">
            <summary>
            A table cell containing header text describing one or more rows or columns of the table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.TableDataCell">
            <summary>
            A table cell containing data that is part of the table’s content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.TableHeader">
            <summary>
            A group of rows that constitute the header of a table. If the table is split across multiple pages, 
            these rows may be redrawn at the top of each table fragment (although there is only one THead element).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.TableBody">
            <summary>
            A group of rows that constitute the main body portion of a table. If the table is split across multiple pages, the body area may be broken apart on a row boundary. 
            A table may have multiple TBody elements to allow for the drawing of a border or background for a set of rows.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.TableFooter">
            <summary>
            A group of rows that constitute the footer of a table. If the table is split across multiple pages, these rows may be redrawn at the bottom of each table fragment 
            (although there is only one TFoot element.)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Span">
            <summary>
            generic inline portion of text having no particular inherent characteristics. 
            It can be used, for example, to delimit a range of text with a given set of styling attributes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Quotation">
            <summary>
            An inline portion of text attributed to someone other than the author of the surrounding text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Note">
            <summary>
            An item of explanatory text, such as a footnote or an endnote, that is referred to from within the body of the document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Reference">
            <summary>
            A citation to content elsewhere in the document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.BibEntry">
            <summary>
            A reference identifying the external source of some cited content. It may contain a label (structure type Lbl) as a child.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Code">
            <summary>
            A fragment of computer program text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Link">
            <summary>
            An association between a portion of the ILSE’s content and a corresponding link annotation or annotations.
            Its children are one or more content items or child ILSEs and one or more object references identifying the associated link annotations.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Annotation">
            <summary>
            An association between a portion of the ILSE’s content and a corresponding PDF annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Ruby">
            <summary>
            A side-note (annotation) written in a smaller text size and placed adjacent to the base text to which it refers. 
            It is used in Japanese and Chinese to describe the pronunciation of unusual words or to describe such items as abbreviations and logos. 
            A Rubyelement may also contain the RB, RT, and RP elements
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.RB">
            <summary>
            (Ruby base text) The full-size text to which the ruby annotation is applied. 
            RB can contain text, other inline elements, or a mixture of both. It may have the RubyAlign attribute.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.RT">
            <summary>
            (Ruby annotation text) The smaller-size text that is placed adjacent to the ruby base text. 
            It can contain text, other inline elements, or a mixture of both. It may have the RubyAlignand RubyPosition attributes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.RP">
            <summary>
            (Ruby punctuation) Punctuation surrounding the ruby annotation text. 
            It us used only when a ruby annotation cannot be properly formatted in a ruby style and instead is formatted as a normal comment, 
            or when it is formatted as a warichu. It contains text (usually a single open or close parenthesis or similar bracketing character).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Warichu">
            <summary>
            A comment or annotation in a smaller text size and formatted onto two smaller lines within the height of the containing text line and 
            placed following (inline) the base text to which it refers. It is used in Japanese for descriptive comments and 
            for ruby annotation text that is too long to be aesthetically formatted as a ruby. A Warichu element may also contain the WT and WP elements.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.WT">
            <summary>
            (Warichu text) The smaller-size text of a warichu comment that is formatted into two lines and placed between surrounding WP elements.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.WP">
            <summary>
            (Warichu punctuation) The punctuation that surrounds the WT text. It contains text (usually a single open or close parenthesis or similar bracketing character).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Figure">
            <summary>
            An item of graphical content. Its placement may be specified with the Placementlayout attribute.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Form">
            <summary>
            A mathematical formula.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfStandardStructTypes.Formula">
            <summary>
            A widget annotation representing an interactive form field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.MarkInfo">
            <summary>
            Represents the Pdf mark information.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.MarkInfo.Marked">
            <summary>
            A flag indicating whether the document conforms to Tagged PDF conventions.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner">
            <summary>
            The attribute owners.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Layout">
            <summary>
            Attributes governing the layout of content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.List">
            <summary>
            Attributes governing the numbering of lists.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.PrintField">
            <summary>
            Attributes governing Form structure elements for non-interactive form fields.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Table">
            <summary>
            Attributes governing the organization of cells in tables.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Xml_100">
            <summary>
            Additional attributes governing translation to XML, version 1.00
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Html_320">
            <summary>
            Additional attributes governing translation to HTML, version 3.20
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Html_401">
            <summary>
            Additional attributes governing translation to HTML, version 4.01
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Oeb_100">
            <summary>
            Additional attributes governing translation to OEB, version 1.0
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Rtf_105">
            <summary>
            Additional attributes governing translation to Microsoft Rich Text Format, version 1.05
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Css_100">
            <summary>
            Additional attributes governing translation to a format using CSS, version 1.00
            </summary>
        </member>
        <member name="F:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Css_200">
            <summary>
            Additional attributes governing translation to a format using CSS, version 2.00
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner.Name">
            <summary>
            The name of the application or plug-in extension owning the attribute data.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.UserProperty">
            <summary>
            Represents the Pdf user property.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes">
            <summary>
            The attribute information is held in one or more attribute objects
            associated with the structure element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.#ctor(Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="owner">The attributes owner.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="attributes">The attributes dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.GetNameValue(System.String)">
            <summary>
            Get the attribute value.
            </summary>
            <param name="key">The attribute key.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.SetNameValue(System.String,System.String)">
            <summary>
            Set attribute value.
            </summary>
            <param name="key">The attribute key.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.GetNameArrayValue(System.String)">
            <summary>
            Get the attribute value.
            </summary>
            <param name="key">The attribute key.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.SetNameArrayValue(System.String,System.String[])">
            <summary>
            Set attribute value.
            </summary>
            <param name="key">The attribute key.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.GetNumberValue(System.String)">
            <summary>
            Get the attribute value.
            </summary>
            <param name="key">The attribute key.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.SetNumberValue(System.String,System.Nullable{System.Single})">
            <summary>
            Set attribute value.
            </summary>
            <param name="key">The attribute key.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.GetNumberArrayValue(System.String)">
            <summary>
            Get the attribute value.
            </summary>
            <param name="key">The attribute key.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.SetNumberArrayValue(System.String,System.Nullable{System.Single}[])">
            <summary>
            Set attribute value.
            </summary>
            <param name="key">The attribute key.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.RemoveAttribute(System.String)">
            <summary>
            Remove the attribute.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureAttributes.ClearAttributes">
            <summary>
            Clear attributes.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.PdfStructContentItem">
            <summary>
            Represents the pdf structure marked-content identifier or 
            marked-content reference, object reference.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.IStructureNode">
            <summary>
            Represents the pdf structure node.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement">
            <summary>
            Represents the pdf structure element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.S">
            <summary>
            The structure type.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.ID">
            <summary>
            The element identifier.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.R">
            <summary>
            The current revision number of this structure element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.Title">
            <summary>
            The title of the structure element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.Lang">
            <summary>
            A language identifier specifying the natural language 
            for all text in the structure element except where 
            overridden by language specifications for nested structure elements or marked content.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.Alt">
            <summary>
            An alternate description of the structure element and
            its children in human-readable form, which is useful 
            when extracting the document’s contents in support of 
            accessibility to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.E">
            <summary>
            The expanded form of an abbreviation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.ActualText">
            <summary>
            Text that is an exact replacement for the structure element 
            and its children. This replacement text (which should apply 
            to as small a piece of content as possible) is useful when 
            extracting the document’s contents in support of accessibility 
            to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.GetChildNodes">
            <summary>
            Get the children of this structure element.
            </summary>
            <returns>
            The children of this structure element.
            The value of list may be one of the following objects:
            structure element or marked-content identifier or 
            marked-content reference, object reference.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.AppendChildElement(System.String)">
            <summary>
            Append structure type element.
            </summary>
            <param name="structureType">The structure type.</param>
            <returns>The pdf structure type element.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.GetAttributes">
            <summary>
            Get all owner's attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.GetAttributes(Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner)">
            <summary>
            Get the owner's attributes.
            </summary>
            <param name="owner">The owner.</param>
            <returns>The owner's attributes.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.AddAttributes(Spire.Pdf.Interchange.TaggedPdf.PdfAttributeOwner)">
            <summary>
            Add the owner's attributes.
            </summary>
            <param name="owner">The owner.</param>
            <returns>The owner's attributes.</returns>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.BeginMarkedContent(Spire.Pdf.PdfPageBase)">
            <summary>
            Begin a marked-content sequence of objects within the content stream.
            </summary>
            <param name="page">The pdf page.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.BeginMarkedContent(Spire.Pdf.PdfPageBase,Spire.Pdf.Interchange.TaggedPdf.ArtifactPropertyList)">
            <summary>
            Begin a marked-content sequence of objects within the content stream.
            </summary>
            <param name="page">The pdf page.</param>
            <param name="artifactPropertyList">The artifact property list.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.EndMarkedContent(Spire.Pdf.PdfPageBase)">
            <summary>
            End a marked-content sequence of objects within the content stream.
            </summary>
            <param name="page">The pdf page.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.AddMarkedContentSequenceContentItem(System.Int32)">
            <summary>
            Add marked-content sequence content item.
            </summary>
            <param name="mcid">
            An integer marked-content identifier that uniquely identifies the marked-content sequence within its content stream.
            </param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.AddMarkedContentSequenceContentItem(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Core.PdfStream,Spire.Pdf.Interfaces.IPdfPrimitive,System.Int32)">
            <summary>
            Add marked-content sequence content item.
            </summary>
            <param name="pg">The page object representing the page on which the graphics objects in the marked-content sequence are rendered.</param>
            <param name="stm">
            The content stream containing the marked-content sequence.
            This entry should be present only if the marked-content sequence resides in a content stream other than 
            the content stream for the page—for example, in a form XObject or an annotation’s appearance stream. 
            If this entry is absent, the marked-content sequence is contained in the content stream of the page identified by Pg 
            (either in the marked-content reference dictionary or in the parent structure element).
            </param>
            <param name="stmOwn">The PDF object owning the stream identified by Stm—for example, the annotation to which an appearance stream belongs.</param>
            <param name="mcid">The marked-content identifier of the marked-content sequence within its content stream.</param>
        </member>
        <member name="M:Spire.Pdf.Interchange.TaggedPdf.PdfStructureElement.AddPdfObjectContentItem(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Add pdf object content item.
            </summary>
            <param name="pg">The page object representing the page on which the object is rendered.</param>
            <param name="obj">The referenced object.</param>
        </member>
        <member name="T:Spire.Pdf.Print.PdfBookletLayout">
            <summary>
            BookletLayout.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletLayout.m_bookletSubset">
            <summary>
            The bookletSubset mode. 
            Default value BothSides.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletLayout.m_bookletBinding">
            <summary>
            The booklet binding mode. 
            Default value Left.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfBookletLayout.BookletBinding">
            <summary>
            Get or set BookletBinding,default value Left.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfBookletLayout.#ctor">
            <summary>
            Initializes a new instance of the PdfSinglePageLayout class
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfBookletLayout.GetPageContentBound(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Get page content bound in paper content bound.
            </summary>
            <param name="paperPrintableContentBound">The paper printable content bound.</param>
            <param name="paperContentBound">The paper content bound.</param>
            <param name="pageBound">The page bound.</param>
            <returns>The page content bound.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfBookletLayout.GetPageContentBoundFitSizePaper(System.Drawing.RectangleF)">
            <summary>
            Get page content bound when booklet Binding is Left or Right.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <returns>The page content bound.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfBookletLayout.GetPageContentBound(System.Drawing.RectangleF)">
            <summary>
            Get page content bound when scaling booklet binding is LiftHigh or RightHigh
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <param name="pageBound">The page bound.</param>
            <returns>The page content bound.</returns>
        </member>
        <member name="T:Spire.Pdf.Print.PdfBookletSubsetMode">
            <summary>
            Pdf print to booklet subset mode
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletSubsetMode.BothSides">
            <summary>
            Print BothSides.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletSubsetMode.FrontSide">
            <summary>
            Only print Front Side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletSubsetMode.ReverseSide">
            <summary>
            Only print Reverse Side.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Print.PdfBookletBindingMode">
            <summary>
            Pdf print to booklet binding mode
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletBindingMode.Left">
            <summary>
            Left Binding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletBindingMode.Right">
            <summary>
            Right Binding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletBindingMode.LeftHigh">
            <summary>
            LeftHigh Binding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfBookletBindingMode.RightHigh">
            <summary>
            RightHigh Binding.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Print.PdfMultiPageLayout">
            <summary>
            Multi pages to one paper layout.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageLayout.m_pageOrder">
             <summary>
            Multiple pages order in paper layout.
             </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageLayout.m_HasPageBorder">
            <summary>
            A value indicating whether the pages has the page border.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageLayout.m_rowNum">
            <summary>
            The number of rows for the paper layout.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageLayout.m_columnNum">
            <summary>
            The number of columns for the paper layout.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageLayout.m_pageSpacing">
            <summary>
            The spacing between pages and pages,measured in hundredths of an inch.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfMultiPageLayout.ColumnNum">
            <summary>
            Get or set the number of columns for paper layout.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfMultiPageLayout.RowNum">
            <summary>
             Get or set the number of rows for paper layout.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfMultiPageLayout.HasPageBorder">
            <summary>
            Get or set a value indicating whether the pages has the page border.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfMultiPageLayout.PageOrder">
            <summary>
            Get or set the order of pages in the paper layout.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfMultiPageLayout.#ctor">
            <summary>
            Initializes a new instance of the PdfMultiPageLayout class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfMultiPageLayout.GetPageContentBounds(System.Drawing.RectangleF)">
            <summary>
            Get the page content bounds in paper content bound.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <returns>The page content bound in paper content bound.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfMultiPageLayout.GetHorizontalPageBound(System.Drawing.RectangleF)">
            <summary>
            Get the page bounds in horizontal layout.
            </summary>
            <param name="paperContentBound">the paper content bound</param>
            <returns>The page bounds.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfMultiPageLayout.GetHorizontalReversedPageBound(System.Drawing.RectangleF)">
            <summary>
            Get the page bounds in horizontal reverse layout.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <returns>The page bounds.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfMultiPageLayout.GetVerticalPageBound(System.Drawing.RectangleF)">
            <summary>
            Get the page bounds in vertical layout.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <returns>The page bounds.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfMultiPageLayout.GetVerticalReversedPageBound(System.Drawing.RectangleF)">
            <summary>
            Get the page bounds in vertical reverse layout.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <returns>The page bounds.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfMultiPageLayout.GetPageContentBound(System.Collections.Generic.List{System.Drawing.RectangleF})">
            <summary>
            Get the page content bounds in paper bound.
            </summary>
            <param name="pageBounds">The page bounds.</param>
            <returns>The page content bounds.</returns>
        </member>
        <member name="T:Spire.Pdf.Print.PdfMultiPageOrder">
            <summary>
            Multi pages order in the Paper layout.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageOrder.Horizontal">
            <summary>
            Horizontal and from left to right
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageOrder.HorizontalReversed">
            <summary>
            Horizontal and from right to left
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageOrder.Vertical">
            <summary>
            Vertical and from left to right
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfMultiPageOrder.VerticalReversed">
            <summary>
            Vertical and from right to left
            </summary>
        </member>
        <member name="T:Spire.Pdf.Print.PdfSplitPageLayout">
            <summary>
            Split one page to multi papers layout.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfSplitPageLayout.#ctor">
            <summary>
            Initializes a new instance of the PdfSplitPageLayout class
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfSplitPageLayout.GetPageBounds(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Get page bounds.
            </summary>
            <param name="pageBound">The page bound.</param>
            <param name="paperContentBound">The paper content bound.</param>
            <returns>A List collection abount the page bounds.</returns>
        </member>
        <member name="T:Spire.Pdf.Print.PdfSinglePageLayout">
            <summary>
            One page to one paper layout.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfSinglePageLayout.m_pageScalingMode">
            <summary>
            Page scaling mode,default value FitSize.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfSinglePageLayout.m_customScaling">
            <summary>
            Custom scaling(unit:percent),default value 100f.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfSinglePageLayout.m_autoPortraitOrLandscape">
            <summary>
            A value indicating whether automatic portrait and landscape.
            Default value false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfSinglePageLayout.PageScalingMode">
            <summary>
            Get or set page scaling mode,default value FitSize.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfSinglePageLayout.CustomScaling">
            <summary>
            Get or set custom scaling(unit:percent),default value 100f.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfSinglePageLayout.AutoPortraitOrLandscape">
            <summary>
            Get or set a value indicating whether automatic portrait and landscape.
            Default value false.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfSinglePageLayout.#ctor">
            <summary>
            Initializes a new instance of the PdfSinglePageLayout class
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfSinglePageLayout.GetPageContentBound(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Get page content bound in paper content bound.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <param name="pageBound">The page bound.</param>
            <returns>The page content bound.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfSinglePageLayout.GetPageContentBoundFitSizePaper(System.Drawing.RectangleF)">
            <summary>
            Get page content bound when scaling mode is FitSize.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <returns>The page content bound.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfSinglePageLayout.GetPageContentBoundActualSizePaper(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Get page content bound when scaling mode is ActualSize.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <param name="pageBound">The page bound.</param>
            <returns>The page content bound.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfSinglePageLayout.GetPageContentBoundCustomSaclePaper(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Get page content bound when scaling mode is CustomSacle.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <param name="pageBound">The page bound.</param>
            <returns>The page content bound.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfSinglePageLayout.GetPageContentBoundShrinkOverSizedPaper(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Get page content bound when scaling mode is ShrinkOverSized.
            </summary>
            <param name="paperContentBound">The paper content bound.</param>
            <param name="pageBound">The page bound.</param>
            <returns>The page content bound.</returns>
        </member>
        <member name="T:Spire.Pdf.Print.PdfSinglePageScalingMode">
            <summary>
            Pdf Print Page Scale type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfSinglePageScalingMode.FitSize">
            <summary>
            Adaptive content size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfSinglePageScalingMode.ActualSize">
            <summary>
            The actual size of the content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfSinglePageScalingMode.ShrinkOversized">
            <summary>
            Shrink oversized pages.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfSinglePageScalingMode.CustomScale">
            <summary>
            Custom scale.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Print.PdfPaperSizes">
            <summary>
            Represents information about page size.
            The PaperSize's width and height,unit:in hundredths of an inch.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.Letter">
            <summary>
            Letter format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.Note">
            <summary>
            Note format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.Legal">
            <summary>
            Legal format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A0">
            <summary>
            A0 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A1">
            <summary>
            A1 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A2">
            <summary>
            A2 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A3">
            <summary>
            A3 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A4">
            <summary>
            A4 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A5">
            <summary>
            A5 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A6">
            <summary>
            A6 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A7">
            <summary>
            A7 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A8">
            <summary>
            A8 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A9">
            <summary>
            A9 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.A10">
            <summary>
            A10 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.B0">
            <summary>
            B0 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.B1">
            <summary>
            B1 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.B2">
            <summary>
            B2 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.B3">
            <summary>
            B3 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.B4">
            <summary>
            B4 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.B5">
            <summary>
            B5 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.ArchE">
            <summary>
            ArchE format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.ArchD">
            <summary>
            ArchD format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.ArchC">
            <summary>
            ArchC format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.ArchB">
            <summary>
            ArchB format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.ArchA">
            <summary>
            ArchA format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.Flsa">
            <summary>
            The American Foolscap format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.HalfLetter">
            <summary>
            HalfLetter format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.Letter11x17">
            <summary>
            11x17 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPaperSizes.Ledger">
            <summary>
            Ledger format.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Print.PdfPrinter">
            <summary>
            The page print to paper.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_printSettings">
            <summary>
            Pdf document printSetting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_documentBase">
            <summary>
            Pdf document object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_currentPageIndex">
            <summary>
            The current pages array index in m_pages.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_pages">
            <summary>
            The printed pages array, it's elements value is document page index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.#ctor(Spire.Pdf.Print.PdfPrintSettings,Spire.Pdf.PdfDocumentBase)">
            <summary>
            Initializes a new instance of the PdfPrinter class.
            </summary>
            <param name="printSettings">Pdf document printSetting.</param>
            <param name="documentBase">Pdf document object.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.Preview(System.Windows.Forms.PrintPreviewControl)">
            <summary>
            Print Preview.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.Print">
            <summary>
            Print document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnBeginPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Begin print page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnQueryPageSettings(System.Object,System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            Query page setting.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnPrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Print Page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnEndPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            End print.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnePageToOnePaper_OnBeginPrint">
            <summary>
            Begin print page for one page to one paper.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnePageToOnePaper_OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            Query page setting for one page to one paper.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnePageToOnePaper_OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Print one page to one paper.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.GetScalPageBound(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Get the scale page bound.
            </summary>
            <param name="pageBase">The page base</param>
            <param name="paperBound">The paper bound</param>
            <returns>The scale page bound</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.Booklet_OnBeginPrint">
            <summary>
            Begin print page for print to booklet.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.Booklet_OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            Query page setting for print to booklet.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.Booklet_OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Print document to booklet.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.MultiplePagesToOnePaper_OnBeginPrint">
            <summary>
            Begin print page for multiple pages to one paper.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.MultiplePagesToOnePaper_OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            Query page setting for multiple pages to one paper.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.MultiplePagesToOnePaper_OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Print multiple pages to one paper.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_currentPageImage">
            <summary>
            Current page image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_currentPageBound">
            <summary>
            Current page bound.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_currentPageSplitBounds">
            <summary>
            Split bounds of current page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_currentPageSplitBoundIndex">
            <summary>
            Split bound index of current page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.m_paperContentBound">
            <summary>
            Paper content bound.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnePageToMultiplePapers_OnBeginPrint">
            <summary>
            Begin print page for one page to multiple papers.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnePageToMultiplePapers_OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            Query page setting for one page to multiple papers. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.OnePageTomultiplePapers_OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Print one page to multiple papers.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.InitialPrint">
            <summary>
            Initialize print.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.GetPageMetafile(System.Int32)">
            <summary>
            Get page metafile.
            </summary>
            <param name="documentPageIndex">Document page index.</param>
            <returns>Page Image.</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.GetPaperContentBound(System.Drawing.Printing.PageSettings,System.Boolean)">
            <summary>
            Get paper margin bound which according paperSettings. the paperSettings 
            is the attribute of PrintPageEventArgs.PageSettings. (Unit: hundredths of an inch)
            PrinterUnit.Display is hundredths of an inch.
            </summary>
            <param name="paperSettings">Paper set.</param>
            <param name="considerHardXY">Is consider hard margin.</param>
            <returns>
            If the considerHardXY is true,get the paper content bound arrcording to the printable area.
            Otherwise the considerHardXY is false,get the paper content bound according to the whole piece of paper.
            Paper content bound(Unit:hundredths of an inch).
            </returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.GetPageBound(Spire.Pdf.General.Render.Page)">
            <summary>
            Get page bound.
            </summary>
            <returns>Page bound(Unit:PrinterUnit.Display).</returns>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.PrintPageByUniform(System.Drawing.Printing.PrintPageEventArgs,Spire.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
             Print the pdf page to the paper's bound using uniform mode.
            </summary>
            <param name="args">Provides data for the print page event.</param>
            <param name="pageBase">The pdf page.</param>
            <param name="pageContentBound">The pape content bound(Unit:PrinterUnit.Display).</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.PrintPageByFill(System.Drawing.Printing.PrintPageEventArgs,System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Print the page bound of pdf page image to the paper's bound using fill mode. 
            </summary>
            <param name="args">Provides data for the print page event.</param>
            <param name="pageImage">The pdf page image.</param>
            <param name="papeBound">The pdf page bound(Unit:PrinterUnit.Display).</param>
            <param name="pageSplitBound">The pdf page split bound(Unit:PrinterUnit.Display).</param>
            <param name="paperBound">The paper's bound(Unit:PrinterUnit.Display).</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinter.disposed">
            <summary>
            Specify whether to had released resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrinter.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">True,Releases all resources;False,Releases unmanaged resources.</param>
        </member>
        <member name="T:Spire.Pdf.Print.PdfPaperSettingsEventArgs">
            <summary>
            Provides data for paper setting event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPaperSettingsEventArgs.CurrentPaper">
            <summary>
            Get current paper index,from 1.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPaperSettingsEventArgs.PaperSources">
            <summary>
             Gets the paper source trays that are available on the printer.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPaperSettingsEventArgs.CurrentPaperSource">
            <summary>
            Get or set current paper source on the printer.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPaperSettingsEventArgs.#ctor(System.Int32,System.Drawing.Printing.PrinterSettings.PaperSourceCollection,System.Drawing.Printing.PaperSource)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="currentPaper">Current paper index.</param>
            <param name="paperSources">paper source trays that are available on the printer.</param>
            <param name="currentPaperSource">Current paper source on the printer.</param>
        </member>
        <member name="T:Spire.Pdf.Print.PdfPaperSettingsEventHandler">
            <summary>
            Represents the method that handles paper setting event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data</param>
        </member>
        <member name="T:Spire.Pdf.Print.PdfPrintSettings">
            <summary>
            The page print settings.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_printDocument">
            <summary>
            Defines a reusable object that sends output to a printer.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_pageLayoutMode">
            <summary>
            Page layout mode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_singlePageLayout">
            <summary>
            One page to one paper layout.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_multiPageLayout">
            <summary>
            Multi-page to one paper layout. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_splitPageLayout">
            <summary>
            One page to multi-paper layout.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_bookletLayout">
            <summary>
            Booklet layout. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_printPages">
            <summary>
            The user has specified print pages save in the array. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_UserSetMargins">
            <summary>
            User Set Margins 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.m_blUserSetMargins">
            <summary>
            when user set margins,should be use UserSetMargins instead of paperSettings.Margins(default:false;when user set,m_blUserSetMargins=true)
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PrintDocument">
            <summary>
            Defines a reusable object that sends output to a printer.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PrinterName">
            <summary>
            Get or set the name of printer which is on printing pdf document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.DocumentName">
            <summary>
             Get or set the document name to display (for example, in a print status dialog box or printer queue) while printing the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PaperSize">
            <summary>
            Get or set the size of a piece of paper.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.Copies">
            <summary>
            Get or set the number of copies of the document to print.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.Color">
            <summary>
            Get or set a value indicating whether the page should be printed in color.
            true if the page should be printed in color; otherwise, false. The default
            is determined by the printer.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.Collate">
            <summary>
            Get or set a value indicating whether the printed document is collated.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.Landscape">
            <summary>
            Get or set a value indicating whether the page is printed in landscape or portrait orientation.
            Returns:
            True if the page should be printed in landscape orientation; otherwise, false.
            </summary>   
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PrintController">
            <summary>
            Get or set the print controller that guides the printing process.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.CanDuplex">
            <summary>
            Get a value indicating whether the printer supports double-sided printing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.Duplex">
            <summary>
             Get or set the printer setting for double-sided printing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PrinterResolutionKind">
            <summary>
             Get or set the printer resolution kind.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PrintFromPage">
            <summary>
            Get the pagenumber which you choose as the start page to printing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PrintToPage">
            <summary>
            Get the pagenumber which you choose as the final page to printing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.IsValid">
            <summary>
            Gets a value indicating whether the System.Drawing.Printing.PrinterSettings.PrinterName property designates a valid printer.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PrintPages">
            <summary>
            Get the user has specified print pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.PageLayoutMode">
            <summary>
            Get or set page layout mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.SinglePageLayout">
            <summary>
            Get one page to one paper layout.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.MultiPageLayout">
            <summary>
            Get multi-page to one paper layout.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.SplitPageLayout">
            <summary>
            Get one page to multi-paper layout.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.BookletLayout">
            <summary>
            Get booklet layout.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Print.PdfPrintSettings.PaperSettings">
            <summary>
            Occurs immediately before print each paper.
            Note: Ignore on MacOS/Linux platform.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Print.PdfPrintSettings.BeginPrint">
            <summary>
             Occurs when the Spire.pdf.PdfDocument.Print() method is called
             and before the first page of the document prints.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Print.PdfPrintSettings.EndPrint">
            <summary>
            Occurs when the last page of the document has printed.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Print.PdfPrintSettings.PrintPage">
            <summary>
            Occurs when the output to print for the current page is needed.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Print.PdfPrintSettings.QueryPageSettings">
            <summary>
            Occurs immediately before each Spire.pdf.PdfDocument.PrintSettings.PrintPage
            event.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.#ctor">
            <summary>
            Initializes a new instance of the PdfPrintSetting class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectPageRange(System.Int32,System.Int32)">
            <summary>
            Set print page range.
            </summary>
            <param name="fromPage">From page.</param>
            <param name="toPage">To page.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectSomePages(System.Int32[])">
            <summary>
            Set print some pages.
            </summary>
            <param name="pages">Selection pages.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectSinglePageLayout">
            <summary>
            Select one page to one paper layout.
            Default pageScalingMode = PdfSinglePageScalingMode.FitSize, autoPortraitOrLandscape = true, customScaling = 100f.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectSinglePageLayout(Spire.Pdf.Print.PdfSinglePageScalingMode)">
            <summary>
            Select one page to one paper layout.
            </summary>
            <param name="pageScalingMode">Page scaling mode.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectSinglePageLayout(Spire.Pdf.Print.PdfSinglePageScalingMode,System.Boolean)">
            <summary>
            Select one page to one paper layout.
            </summary>
            <param name="pageScalingMode">Page scaling mode.</param>
            <param name="autoPortraitOrLandscape">Indicating whether automatic portrait and landscape.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectSinglePageLayout(Spire.Pdf.Print.PdfSinglePageScalingMode,System.Boolean,System.Single)">
            <summary>
            Select one page to one paper layout.
            </summary>
            <param name="pageScalingMode">Page scaling mode.</param>
            <param name="autoPortraitOrLandscape">Indicating whether automatic portrait and landscape.</param>
            <param name="customScaling">Custom scaling(unit:percent),default value 100f.Valid only if pageScalingMode== PdfSinglePageScalingMode.CustomScale.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectMultiPageLayout">
            <summary>
            Select muti page to one paper layout.
            Default rows = 2, columns = 2, hasPageBorder = false, pageOrder = PdfMultiPageOrder.Horizontal.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectMultiPageLayout(System.Int32)">
            <summary>
            Select muti page to one paper layout.
            </summary>
            <param name="rows">The number of rows for the paper layout.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectMultiPageLayout(System.Int32,System.Int32)">
            <summary>
            Select muti page to one paper layout.
            </summary>
            <param name="rows">The number of rows for the paper layout.</param>
            <param name="columns">The number of columns for the paper layout.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectMultiPageLayout(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Select muti page to one paper layout.
            </summary>
            <param name="rows">The number of rows for the paper layout.</param>
            <param name="columns">The number of columns for the paper layout.</param>
            <param name="hasPageBorder">A value indicating whether the pages has the page border.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectMultiPageLayout(System.Int32,System.Int32,System.Boolean,Spire.Pdf.Print.PdfMultiPageOrder)">
            <summary>
            Select muti page to one paper layout.
            </summary>
            <param name="rows">The number of rows for the paper layout.</param>
            <param name="columns">The number of columns for the paper layout.</param>
            <param name="hasPageBorder">A value indicating whether the pages has the page border.</param>
            <param name="pageOrder">Multiple pages order.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectSplitPageLayout">
            <summary>
            Select split page to muti paper layout.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectBookletLayout">
            <summary>
            Select booklet layout.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectBookletLayout(Spire.Pdf.Print.PdfBookletSubsetMode)">
            <summary>
            Select booklet layout.
            </summary>
            <param name="bookletSubset">The mode of BookletSubset.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectBookletLayout(Spire.Pdf.Print.PdfBookletBindingMode)">
            <summary>
            Select booklet layout.
            </summary>
            <param name="bookletBinding">The mode of BookletBinding.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SelectBookletLayout(Spire.Pdf.Print.PdfBookletSubsetMode,Spire.Pdf.Print.PdfBookletBindingMode)">
            <summary>
            Select booklet layout.
            </summary>
            <param name="bookletSubset">The mode of BookletSubset.</param>
            <param name="bookletBinding">The mode of BookletBinding.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.SetPaperMargins(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set paper margins,measured in hundredths of an inch.
            </summary>
            <param name="top">Paper margin top(unit:hundredths of an inch).</param>
            <param name="bottom">Paper margin bottom(unit:hundredths of an inch).</param>
            <param name="left">Paper margin left(unit:hundredths of an inch).</param>
            <param name="right">Paper margin right(unit:hundredths of an inch).</param>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.UserSetMargins">
            <summary>
            return user set Margins
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Print.PdfPrintSettings.BlUserSetMargins">
            <summary>
            when user set margins,should be use UserSetMargins instead of paperSettings.Margins
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.PrintToFile(System.String)">
            <summary>
            Set printing to file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.OnQueryPageSettings(System.Object,Spire.Pdf.Print.PdfPaperSettingsEventArgs)">
            <summary>
            Trig before each System.Drawing.Printing.PrintDocument.PrintPage.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.Drawing.Printing.QueryPageSettingsEventArgs that contains the event data.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.OnBeginPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            User set event in begin print.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.Drawing.Printing.PrintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.OnEndPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            User set event when the last page of the document has printed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.Drawing.Printing.PrintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.OnPrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            User set event in print page.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.Drawing.Printing.PrintPageEventArgs that contains the event data.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.OnQueryPageSettings(System.Object,System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            User set event in query page setting.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.Drawing.Printing.QueryPageSettingsEventArgs that contains the event data.</param>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrintSettings.disposed">
            <summary>
            Specify whether to had released resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Print.PdfPrintSettings.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">True,Releases all resources;False,Releases unmanaged resources.</param>
        </member>
        <member name="T:Spire.Pdf.Print.PdfPageLayoutMode">
            <summary>
            Pdf print pages layout mode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPageLayoutMode.SinglePage">
            <summary>
            One page to one paper.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPageLayoutMode.MultiPage">
            <summary>
            Multiple pages to one paper.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPageLayoutMode.SplitPage">
            <summary>
            One page to multiple papers.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPageLayoutMode.Booklet">
            <summary>
            Print to booklet.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Print.PdfPrinterResolutionKind">
            <summary>
             Specifies a printer resolution kind.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinterResolutionKind.High">
            <summary>
             High resolution.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinterResolutionKind.Medium">
            <summary>
             Medium resolution.
            </summary>   
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinterResolutionKind.Low">
            <summary>
              Low resolution.
            </summary>   
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinterResolutionKind.Draft">
            <summary>
             Draft-quality resolution.
            </summary>   
        </member>
        <member name="F:Spire.Pdf.Print.PdfPrinterResolutionKind.Custom">
            <summary>
             Custom resolution.
            </summary>   
        </member>
        <member name="T:Spire.Pdf.PdfPageLabels">
            <summary>
            The document’s labeling ranges.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLabels.Decimal_Arabic_Numerals_Style">
            <summary>
            Decimal arabic numerals style to be used for the numeric portion of each page label.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLabels.Uppercase_Roman_Numerals_Style">
            <summary>
            Uppercase roman numerals style to be used for the numeric portion of each page label.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLabels.Lowercase_Roman_Numerals_Style">
            <summary>
            Lowercase roman numerals style to be used for the numeric portion of each page label.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLabels.Uppercase_Letters_Style">
            <summary>
            Uppercase letters style to be used for the numeric portion of each page label.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLabels.Lowercase_Letters_Style">
            <summary>
            Lowercase letters style to be used for the numeric portion of each page label.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLabels.m_numberTree">
            <summary>
            The number tree which is the PageLabels entry in the document catalog.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageLabels.NumberTree">
            <summary>
            The number tree which is the PageLabels entry in the document catalog.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.#ctor">
            <summary>
            Construct a new instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Construct a new instance.
            </summary>
            <param name="pageLabels">The document’s labeling ranges.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.AddRange(System.Int32,System.String,System.String)">
            <summary>
            Add labeling range which is a series of consecutive pages using the same numbering system.
            </summary>
            <param name="indexOfFirstPage">
            the page index of the first page in the labeling range.
            </param>
            <param name="numberStyle">
            The numbering style to be used for the numeric portion of each page label.
            As follow:
            Decimal_Arabic_Numerals/Uppercase_Roman_Numerals/Lowercase_Roman_Numerals/Uppercase_Letters/Lowercase_Letters
            </param>
            <param name="prefix">
            The label prefix for page labels in the labeling range.
            </param>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.AddRange(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Add labeling range which is a series of consecutive pages using the same numbering system.
            </summary>
            <param name="indexOfFirstPage">
            the page index of the first page in the labeling range.
            </param>
            <param name="numberStyle">
            The numbering style to be used for the numeric portion of each page label.
            As follow:
            Decimal_Arabic_Numerals/Uppercase_Roman_Numerals/Lowercase_Roman_Numerals/Uppercase_Letters/Lowercase_Letters
            </param>
            <param name="prefix">
            The label prefix for page labels in the labeling range.
            </param>
            <param name="numberOfFirstPage">
            The value of the numeric portion for the first page label in the range. 
            Subsequent pages are numbered sequentially from this value, which must be greater than or equal to 1. Default value: 1.
            </param>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.GetPageLabel(System.Int32)">
            <summary>
            Get page label.
            </summary>
            <param name="index">The page index.</param>
            <returns>The page label.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.GetPageLabel(System.Int32,System.Int32,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get page label.
            </summary>
            <param name="index">The page index.</param>
            <param name="firstPageIndex">the page index of the first page in the labeling range.</param>
            <param name="dic">The labeling characteristics for the pages in the labeling range.</param>
            <returns>The page label.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.GetNumericPortion(System.Int32,System.String)">
            <summary>
            Get the numeric portion for the page label in the range.
            </summary>
            <param name="number">The number.</param>
            <param name="numberStyle">The numbering style to be used for the numeric portion of each page label.</param>
            <returns>The numeric portion for the page label in the range.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.NumberToRomanNumerals(System.Int32,System.Boolean)">
            <param num="number">The number.</param>
            <param upperCase="upperCase">UpperCase or LowerCase</param>
            <returns>The roman numerals style number.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLabels.NumberToLetter(System.Int32,System.Boolean)">
            <summary>
            Convert number to letters style.
            </summary>
            <param num="number">The number.</param>
            <param upperCase="upperCase">UpperCase or LowerCase</param>
            <returns>The letters style number.</returns>
        </member>
        <member name="T:Spire.Pdf.PdfApplicationData">
            <summary>
            Represents the pdf application data, used to store private data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfApplicationData.m_applicationDataDictionary">
            <summary>
            The application data dictionary.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfApplicationData.m_pdfApplicationDataDictionary">
            <summary>
            The pdf application data dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfApplicationData.Private">
            <summary>
            The private data of application data dictionary.
            The vaild type: string  Dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfApplicationData.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a pdf piece instance.
            </summary>
            <param name="piece">The piece dictionary</param>
        </member>
        <member name="M:Spire.Pdf.PdfApplicationData.#ctor(System.String)">
            <summary>
            Initialize a pdf piece instance.
            </summary>
            <param name="content">The content</param>
        </member>
        <member name="M:Spire.Pdf.PdfApplicationData.Initialize(System.String)">
            <summary>
            Initialize instance.
            </summary>
            <param name="content">The content</param>
        </member>
        <member name="M:Spire.Pdf.PdfApplicationData.Initialize(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Itialize instance.
            </summary>
            <param name="applicationData">The application data</param>
        </member>
        <member name="M:Spire.Pdf.PdfApplicationData.GetApplicationDataDictionary">
            <summary>
            Get the pdf application data dictionary.
            </summary>
            <returns>The pdf application data dictionary</returns>
        </member>
        <member name="M:Spire.Pdf.PdfApplicationData.PdfDicotionaryToDictioanry(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Pdf dictionary to dictionary.
            </summary>
            <param name="dic">The pdf dictionary</param>
            <returns>The dictioanry</returns>
        </member>
        <member name="M:Spire.Pdf.PdfApplicationData.PdfArrayToList(Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Pdf array to list.
            </summary>
            <param name="array">The array</param>
            <returns>The list</returns>
        </member>
        <member name="T:Spire.Pdf.PdfPieceInfo">
            <summary>
            Represents the pdf piece info can used to hold private application datas.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPieceInfo.m_pieceInfoDictionary">
            <summary>
            Represents the piece info  dictionary.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPieceInfo.m_applicationDatas">
            <summary>
            Represents the application datas.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPieceInfo.ApplicationDatas">
            <summary>
            Get the application datas.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPieceInfo.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a pdf piece info instance.
            </summary>
            <param name="pieceinfoDictionary">The piece info dictionary</param>
        </member>
        <member name="M:Spire.Pdf.PdfPieceInfo.#ctor">
            <summary>
            Initialize a pdf piece info instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPieceInfo.Initialize">
            <summary>
            Initialize instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPieceInfo.AddApplicationData(System.String,System.String)">
            <summary>
            Add application data.
            </summary>
            <param name="applicationName">The application name</param>
            <param name="privateData">The private data</param>
        </member>
        <member name="M:Spire.Pdf.PdfPieceInfo.RemoveApplicationData(System.String)">
            <summary>
            Remove the application data.
            </summary>
            <param name="applicationName">The application name</param>
        </member>
        <member name="P:Spire.Pdf.PdfPieceInfo.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Get the piece info dictionary.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Texts.PdfTextFragment">
            <summary>
            The class representing a result of searching designated text from PDF page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFragment.TextState">
            <summary>
            Gets the text state;
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFragment.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFragment.LineText">
            <summary>
            Gets all text of the line which covers the target text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFragment.Page">
            <summary>
            Gets the page where the text is located.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFragment.Positions">
            <summary>
            Used by find text cross line
            if the MatchText in more lines( >=2 ),the results can not contain by one Rectangle.
            So we need a list to save data.
            Gets the positions of the searched text of this System.Drawing.PointF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFragment.Bounds">
            <summary>
            if the MatchText in more lines( >=2 ),the results can not contain by one Rectangle.
            So we need a list to save data.
            Gets the bounds of the searched text of this System.Drawing RectangleF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFragment.Sizes">
            <summary>
            Used by find text cross line
            if the MatchText in more lines( >=2 ),the results can not contain by one Rectangle.
            So we need a list to save data.
            Gets the sizes of the searched text of this System.Drawing SizeF structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFragment.HighLight">
            <summary>
            Highlight the target text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFragment.HighLight(System.Drawing.Color)">
            <summary>
            Highlight the target text.
            </summary>
            <param name="color">The hight light color.</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFragment.ProcessingRectangle(System.Drawing.RectangleF)">
            <summary>
            Processing Rectangle.
            </summary>
            <param name="textRect">The textRect</param>
            <returns>The processed rectangle</returns>
        </member>
        <member name="T:Spire.Pdf.Texts.PdfTextFindOptions">
            <summary>
             Represents text search options
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFindOptions.Area">
            <summary>
            Specified the area to find in a page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFindOptions.IsPageEmbeddedTable">
            <summary>
            Whether the page is embedded table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFindOptions.IsShowHiddenText">
            <summary>
            Whether is show hidden texts.
            default vale: false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFindOptions.Parameter">
            <summary>
            Specified the text find parameter. Default value : TextFindParameter.None
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFindOptions.#ctor">
            <summary>
            Initialize a new instance.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Texts.PdfTextFinder">
            <summary>
            Representing the way how to find text on a page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextFinder.TextRanger">
            <summary>
            Gets the text segmenting mechanisms.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.#ctor(Spire.Pdf.PdfPageBase)">
            <summary>
            Construct a new text finder.
            </summary>
            <param name="page">The page</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.Find(System.String)">
            <summary>
            Find target text.
            </summary>
            <param name="text">The target text.</param>
            <returns>A list of text find result.</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.FindAllText">
            <summary>
            Find all text in the page
            </summary>
            <returns>All text find in the page.</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.ConvertTextRangeCoordinate(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange})">
            <summary>
            Convert text coordinate, the lower-left corner is the origin of coordinates.
            </summary>
            <param name="textRangeList">The list of text fragments in the page.</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.RevertTextRangeCoordinate(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange})">
            <summary>
            Revert text coordinate, revert to the original coordinates of the page.
            </summary>
            <param name="textRangeList">The list of text fragments in the page.</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.OrganizeTextFragments">
            <summary>
            Organize page text fragments.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.GenerateText(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange}@,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Generate text by sorted text ranges list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.MatchText(System.String,System.String)">
            <summary>
            Match text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.MatchTextFind(System.Text.RegularExpressions.Match,System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},System.Collections.Generic.List{System.Int32})">
            <summary>
            Match TextFind.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.MatchWholeWord(System.Collections.Generic.List{Spire.Pdf.Texts.PdfTextFragment},System.String)">
            <summary>
            Match whole word.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.MatchRectangleF(System.Collections.Generic.List{Spire.Pdf.Texts.PdfTextFragment},System.Drawing.RectangleF)">
            <summary>
            Match TextFind in the range of rectangle from the given PDF Page.
            the coordinate origin is top left corner of the page.
            </summary>
            <param name="rectangleF">Provide a rangle to match textFind.</param>
            <returns>The match TextFinds.</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.SplitTextRangesList(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},System.Collections.Generic.List{System.Drawing.RectangleF})">
            <summary>
            Split text ranges by a list of rectangle.
            </summary>
            <param name="textRangesList">All text ranges</param>
            <param name="rectList">The list of rectangle.</param>
            <returns>A list of split result.</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.GetPageTableRectangles">
            <summary>
            Get rectangles of the table on the page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextFinder.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplaceOptions.#ctor">
            <summary>
            Initializes new instance of the object for the specified scope.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Texts.TextFindParameter">
             <summary>
            Setting find text Parameters
             </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.TextFindParameter.None">
            <summary>
             Do not select any parameters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.TextFindParameter.WholeWord">
            <summary>
            Full word matching.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.TextFindParameter.IgnoreCase">
            <summary>
            Ignore English character case.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.TextFindParameter.Regex">
            <summary>
            Regular expression matching.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Texts.PdfTextExtractor">
            <summary>
            Represent the pdf text extractor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.PdfTextExtractor.m_page">
            <summary>
            The page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextExtractor.#ctor(Spire.Pdf.PdfPageBase)">
            <summary>
            Represents an instance.
            </summary>
            <param name="page">The page</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextExtractor.ExtractText(Spire.Pdf.Texts.PdfTextExtractOptions)">
            <summary>
            Extract text from the page.
            </summary>
            <param name="options">The options.</param>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextExtractor.Extract(Spire.Pdf.Texts.PdfTextExtractOptions)">
            <summary>
            Extract text.
            </summary>
            <param name="extractOptions">The extract options</param>
            <returns>The exteracted text</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextExtractor.ProcessRectangleF(System.Drawing.RectangleF)">
            <summary>
            Process rectanglef.
            </summary>
            <param name="area">The area</param>
            <returns>The rectanglef</returns>
        </member>
        <member name="T:Spire.Pdf.Texts.PdfTextReplacer">
            <summary>
            Represents the text replace.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.PdfTextReplacer.m_page">
            <summary>
            The page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.PdfTextReplacer.CommandsDelegate">
            <summary>
            The command delegate.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextReplacer.Options">
            <summary>
            Gets or sets the replace options.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextReplacer.Commands">
            <summary>
            The commands.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplacer.#ctor(Spire.Pdf.PdfPageBase)">
            <summary>
            Represents an instance.
            </summary>
            <param name="page">The page</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplacer.ReplaceText(System.String,System.String)">
            <summary>
            Replaces the target text in the page.
            </summary>
            <param name="oldText">The old text.</param>
            <param name="newText">The new text.</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplacer.ReplaceAllText(System.String,System.String)">
            <summary>
            Replaces all the text in the page.
            </summary>
            <param name="oldText">The old text</param>
            <param name="newText">The new text</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplacer.ReplaceAllText(System.String,System.String,System.Drawing.Color)">
            <summary>
            Replaces all target text in the page.
            </summary>
            <param name="oldText">The old text</param>
            <param name="newText">The new text</param>
            <param name="textColor">The color of the new text.</param>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplacer.UpdateContents">
            <summary>
            Update object stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplacer.GetTextParagraphReplacer(System.String,Spire.Pdf.Texts.PdfTextReplaceOptions)">
            <summary>
            Get text paragraph replacer.
            </summary>
            <param name="oldText">The old text</param>
            <param name="textEditOptions">The text edit options</param>
            <returns>The text paragraph replacer</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplacer.Clear">
            <summary>
            Clear the commands.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextReplacer.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.IsUnicode(System.String)">
            <summary>
            Whether the string contains chinese.
            </summary>
            <param name="value">The string</param>
            <returns>if contains,return true</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.GetInstance(Spire.Pdf.Texts.Comm.AbstractTextRange,System.String)">
            <summary>
            Get the text font instance.
            </summary>
            <param name="textManager">The text manager</param>
            <param name="abstractTextRange">The abstract text range</param>
            <param name="val">The value</param>
            <returns>The text font instance</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.UnicodesToCharCodes(Spire.Pdf.Core.PdfString,Spire.Pdf.General.Render.PdfElement.PdfFontStructure,System.Boolean)">
            <summary>
            Unicodes to char codes.
            </summary>
            <param name="unicodeString">The unicode string</param>
            <param name="fontStructure">The font structure</param>
            <param name="escape">it is process escape character?</param>
            <returns>The char codes</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.FontResourceName">
            <summary>
            Get the font resource name. 
            </summary>
            <returns>The font resource name</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.BuildFont(System.Single,Spire.Pdf.Primitives.PdfDictionary,System.String)">
            <summary>
            Build the font.
            </summary>
            <param name="fontSize">The font size</param>
            <param name="fontResource">The font resource dictionary</param>
            <param name="text">The text</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.GetFontName(Spire.Pdf.Texts.Comm.AbstractTextRange,System.String)">
            <summary>
            Get the font name.
            </summary>
            <param name="abstractTextRange">The abstract text range</param>
            <param name="val">The string</param>
            <returns>The font name</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.SetWidthToFont(Spire.Pdf.Graphics.PdfTrueTypeFont)">
            <summary>
            Set width to font.
            </summary>
            <param name="trueTypeFont">The true type font</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.IsContainsCurrentFontResource(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Wether is contains current font resource.
            </summary>
            <param name="fontResource">The font reource</param>
            <returns>if contains.return true.or false</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextFont.GetFontDictionary(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get the font dictionary
            </summary>
            <param name="fontResource">The font resource dictioary</param>
            <returns>The font dictionary</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextParagraphReplacer.IsPagePhysucakTextSegment(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Whether the physical text segments belongs page.
            </summary>
            <param name="pageResource">The page resource</param>
            <param name="resources">The physical text segments resource</param>
            <returns>Belongs page return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextParagraphReplacer.FlushPhysicalTextSegments(Spire.Pdf.Texts.Comm.TextRanger,Spire.Pdf.PdfPageBase)">
            <summary>
            Flush physical text segments.
            Do not support the form text now ,so delete the form physical text segments.
            </summary>
            <param name="segmenter">The text ranger</param>
            <param name="page">The page</param>
        </member>
        <member name="F:Spire.Pdf.Texts.Replace.TextSelected.m_horizontalAlignment">
            <summary>
            The horizontal alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Replace.TextSelected.m_verticalAlignment">
            <summary>
            The vertical alignment.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Replace.TextSelected.GetReplacedTextWidth">
            <summary>
            Get the replaced text width.
            </summary>
            <returns>The replaced text width</returns>
        </member>
        <member name="T:Spire.Pdf.Texts.PdfTextState">
            <summary>
            Represents the text state of a text
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextState.CharcodesToChars(System.String)">
            <summary>
            Charcodes to chars.
            </summary>
            <param name="str">The str</param>
            <returns>The chars</returns>
        </member>
        <member name="T:Spire.Pdf.Texts.PdfTextExtractOptions">
            <summary>
            Represents text extraction options
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.PdfTextExtractOptions.extractArea">
            <summary>
            Specified the text extract area.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.PdfTextExtractOptions.isSimpleExtraction">
            <summary>
            Whether is use simple extraction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.PdfTextExtractOptions.isExtractAllText">
            <summary>
            Whether is extract all texts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.PdfTextExtractOptions.isShowHiddenText">
            <summary>
            Show hidden text?
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextExtractOptions.IsSimpleExtraction">
            <summary>
            Whether is use simple extraction.
            default vale: false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextExtractOptions.IsExtractAllText">
            <summary>
            Whether is extract all texts.
            default vale: false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextExtractOptions.IsShowHiddenText">
            <summary>
            Whether is show hidden texts.
            default vale: false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.PdfTextExtractOptions.ExtractArea">
            <summary>
            Specified the text extract area.
            default vale: RectangleF.Empty.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.PdfTextExtractOptions.#ctor">
            <summary>
            Initialize a new instance.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.AbstractTextRange.m_isReplaced">
            <summary>
            Whether was replaced.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.AddSegment(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Core.PdfString)">
            <summary>
            Add segment.
            </summary>
            <param name="record">The record</param>
            <param name="val">The value</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.ModifySegment(Spire.Pdf.Core.PdfString)">
            <summary>
            Modify the segment.
            </summary>
            <param name="val">The value</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.AdjustParagraphAfterReplace(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},System.Double)">
            <summary>
            Adjust the paragraph after replace.
            </summary>
            <param name="inputSegments">The input segments</param>
            <param name="replacedTextWidth">The replaceed text width</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.GetCharCodes(System.String)">
            <summary>
            Get charcodes.
            </summary>
            <param name="unicodeString">The unicodeString</param>
            <returns>The char code</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.ReSetTextShowOperator(Spire.Pdf.Texts.Comm.AbstractTextRange)">
            <summary>
            Re set text show operator.
            </summary>
            <param name="textRange">The text range</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.GetBytesPerChar">
            <summary>
            Get the bytes per char.
            </summary>
            <returns>The bytes count</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.IsAdjustSpace(Spire.Pdf.Texts.Comm.AbstractTextRange,Spire.Pdf.Texts.Comm.AbstractTextRange)">
            <summary>
            Whether need adjust space.
            </summary>
            <param name="currentSegment">The curent segment</param>
            <param name="preSegment">The pre segment</param>
            <returns>if need return ture or false</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.ToCharString(System.String)">
            <summary>
            To chars string
            </summary>
            <param name="hexCode">The hex code</param>
            <returns>The string</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.GetFontSize">
            <summary>
            Get the font size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.ReSetTextManager(Spire.Pdf.Core.PdfString)">
            <summary>
            Resetting the text manager.
            </summary>
            <param name="currentString">The current string</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.AddSegmentBefore(Spire.Pdf.Core.Contents.PdfRecord,System.Double@)">
            <summary>
            Add the segment before.
            </summary>
            <param name="beforeRecord">The before record</param>
            <param name="shift">The shift</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.AbstractTextRange.AddSegmentAfter(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Texts.Comm.AbstractTextRange@)">
            <summary>
            Add the after segment.
            </summary>
            <param name="afterRecord">The after record</param>
            <param name="segmentAfter">The after segment</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.ArrayTextRange.AddSegment(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Core.PdfString)">
            <summary>
            Add segment.
            </summary>
            <param name="record">The record</param>
            <param name="val">The pdf string</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.ArrayTextRange.ModifySegment(Spire.Pdf.Core.PdfString)">
            <summary>
            Modify the segment.
            </summary>
            <param name="val">The value</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.ArrayTextRange.GetCharCodes(System.String)">
            <summary>
            Get charcodes.
            </summary>
            <param name="unicodeString">The unicodeString</param>
            <returns>The char code</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.ArrayTextRange.UnicodeStringToCharCodes(Spire.Pdf.Core.PdfString)">
            <summary>
            Unicode string to charcodes.
            </summary>
            <param name="unicodeStrings">The unicode strings</param>
            <returns>The charcodes</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.EncodedData.GetUnicodeString(System.Byte[])">
            <summary>
            Get unicode string.
            </summary>
            <param name="bytes">The bytes</param>
            <returns>The unicode string</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.EncodedData.GetUnicodeString(System.Byte[],System.Boolean)">
            <summary>
            Get unicode string.
            </summary>
            <param name="bytes">The bytes</param>
            <param name="escape">it is process escape character?</param>
            <returns>The unicode string</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.StringTextRange.AddSegment(Spire.Pdf.Core.Contents.PdfRecord,Spire.Pdf.Core.PdfString)">
            <summary>
            Add segment.
            </summary>
            <param name="record">The record</param>
            <param name="val">The val</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.StringTextRange.ModifySegment(Spire.Pdf.Core.PdfString)">
            <summary>
            Modify the segment.
            </summary>
            <param name="val">The value</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.StringTextRange.GetCharCodes(System.String)">
            <summary>
            Get charcodes.
            </summary>
            <param name="unicodeString">The unicodeString</param>
            <returns>The char code</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.StringTextRange.AdjustParagraphAfterReplace(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange},System.Double)">
            <summary>
            Adjust paragraph after replaced.
            </summary>
            <param name="inputSegments">The inputsgment</param>
            <param name="replacedTextWidth">The width</param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.StringTextRange.ReSetTextShowOperator(Spire.Pdf.Texts.Comm.AbstractTextRange)">
            <summary>
            Re set text show operator.
            </summary>
            <param name="segment">The text range</param>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextExtractOptions.extractArea">
            <summary>
            Specified the text extract area.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextExtractOptions.isSimpleExtraction">
            <summary>
            Whether is use simple extraction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextExtractOptions.isExtractAllText">
            <summary>
            Whether is extract all texts.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.Comm.TextExtractOptions.IsSimpleExtraction">
            <summary>
            Whether is use simple extraction.
            default vale: false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.Comm.TextExtractOptions.IsExtractAllText">
            <summary>
            Whether is extract all texts.
            default vale: false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.Comm.TextExtractOptions.ExtractArea">
            <summary>
            Specified the text extract area.
            default vale: RectangleF.Empty.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextExtractOptions.#ctor">
            <summary>
            Initialize a instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextExtractOptions.#ctor(System.Boolean,System.Boolean,System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of the <see cref="!:TextExtractionOptions"/> 
            object for the specified text formatting mode.
            </summary>
            <param name="isSimpleExtraction">The isSimpleExtraction</param>
            <param name="isExtractAllText">The isExtractAllText</param>
            <param name="extractArea">The extractArea</param>
        </member>
        <member name="T:Spire.Pdf.Texts.Comm.TextExtractOptions.ExtractMode">
            <summary>
            rather than a steaming layout, a Pdf document is made up of several location-fixed blocks,each of which has its own font and font size
            Defines different modes which can be used while converting pdf document into text. See <see cref="!:TextDevice"/> class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextExtractor.FilterTextRange(System.Collections.Generic.List{Spire.Pdf.Texts.Comm.AbstractTextRange})">
            <summary>
            Filter the text rangles.
            </summary>
            <param name="textRanges">The text ranges</param>
            <returns>The fitered text ranges</returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextExtractor.IsTextRangeVisible(Spire.Pdf.Texts.Comm.AbstractTextRange)">
            <summary>
            Whether the segment is visible.
            </summary>
            <param name="segment">The segment</param>
            <returns>If visible ,return true,or false</returns>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextFindOptions.isShowHiddenText">
            <summary>
            Show hidden text?
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.Comm.TextFindOptions.IsShowHiddenText">
            <summary>
            Whether is show hidden texts.
            default vale: false.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextRangeBuilder.Path">
            <summary>
            the current path
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextRangeBuilder.ClipPath">
            <summary>
            the current clip path
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextRangeBuilder.CurrentLocation">
            <summary>
            the current path location
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextRangeBuilder.textOptions">
            <summary>
            Controls options for hiding text
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.Comm.TextRangeBuilder.Options">
            <summary>
            Controls options for hiding text
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextRangeBuilder.GetPaths">
            <summary>
            Parses command queue and get current page all path
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextRangeBuilder.SavePath">
            <summary>
            save to the current dictionary
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextRangeBuilder.ExecuteClipPath">
            <summary>
            执行裁剪
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextRangeBuilder.IsHideText(Spire.Pdf.Texts.Comm.AbstractTextRange)">
            <summary>
            Determines whether the current text is hidden
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextRangeBuilder.DeletePhysicalSegment(Spire.Pdf.Texts.Comm.AbstractTextRange)">
            <summary>
            Delete physical segment.
            </summary>
            <param name="segment">The segment</param>
        </member>
        <member name="T:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions">
            <summary>
            Controls options for hiding text
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.showHiddenText">
            <summary>
            Show hidden text?
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.doIndex">
            <summary>
            Index of do command
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.commandIndex">
            <summary>
            Index of each command
            </summary>
        </member>
        <member name="F:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.clipPaths">
            <summary>
            the current page all path
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.ShowHiddenText">
            <summary>
            Gets od Sets,show hidden text?
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.DoIndex">
            <summary>
            Gets od Sets,Index of do command
            </summary>
        </member>
        <member name="P:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.CommandIndex">
            <summary>
            Gets od Sets,Index of each command
            </summary>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.AddClipPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Add clip path
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Spire.Pdf.Texts.Comm.TextRangeBuilder.HideTextOptions.GetClipPaths">
            <summary>
            Get clip paths
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Utilities.BookletOptions">
            <summary>
            The booklet options 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.BookletOptions.m_Subset">
            <summary>
            The booklet subset 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.BookletOptions.m_bookletBinding">
            <summary>
            The booklet binding mode. 
            Default value Left.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utilities.BookletOptions.#ctor(Spire.Pdf.Utilities.BookletSubset)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="size"></param>
            <param name="subset"></param>
        </member>
        <member name="P:Spire.Pdf.Utilities.BookletOptions.Subset">
            <summary>
            Set the booklet subset,only support both sides
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.BookletOptions.BookletBinding">
            <summary>
            Get or set BookletBinding,default value Left.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Utilities.BookletSubset">
            <summary>
            The booklet subset 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.BookletSubset.BothSides">
            <summary>
            The result in document should be printed on both sides of paper.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.BookletSubset.FrontSideOnly">
            <summary>
            The result in document should be printed on front sides of paper.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Utilities.PdfBookletBindingMode">
            <summary>
            Pdf print to booklet binding mode
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfBookletBindingMode.Left">
            <summary>
            Left Binding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfBookletBindingMode.Right">
            <summary>
            Right Binding.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Utilities.MergerOptions">
            <summary>
            The class can be used to set some options when do merge operation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.MergerOptions.SameFieldNameToOneField">
            <summary>
            Gets or sets a value indicates whether to merge the fields with the same name into one field. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Utilities.PdfBookletCreator">
            <summary>
            Represents a booklet creator, which allows to create a booklet from a Pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfBookletCreator.CreateBooklet(Spire.Pdf.PdfDocument,System.String,System.Drawing.SizeF)">
            <summary>
            Thie method creates a booklet
            </summary>
            <param name="document">The loaded document.</param>
            <param name="outfile">The out file</param>
            <param name="pageSize">Size of the page.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfBookletCreator.CreateBooklet(Spire.Pdf.PdfDocument,System.IO.Stream,System.Drawing.SizeF)">
            <summary>
            Thie method creates a booklet
            </summary>
            <param name="document">The loaded document.</param>
            <param name="outStream">The out stream</param>
            <param name="pageSize">Size of the page.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfBookletCreator.CreateBooklet(Spire.Pdf.PdfDocument,System.IO.Stream,System.Drawing.SizeF,Spire.Pdf.Utilities.BookletOptions)">
            <summary>
            Thie method creates a booklet
            </summary>
            <param name="document">The loaded document.</param>
            <param name="outStream">The out stream</param>
            <param name="pageSize">Size of the page.</param>
            <param name="bookletOptions">Set BookletBinding,default value Left.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfBookletCreator.CreateBooklet(Spire.Pdf.PdfDocument,System.IO.Stream,System.Drawing.SizeF,Spire.Pdf.Utilities.BookletOptions,Spire.Pdf.DrawPageInBookletEventHandler,Spire.Pdf.DrawPageInBookletEventHandler)">
            <summary>
            Thie method creates a booklet
            </summary>
            <param name="document">The loaded document.</param>
            <param name="outStream">The out stream</param>
            <param name="pageSize">Size of the page.</param>
            <param name="options">BookletOptions bookletOptions </param>
            <param name="beginDrawPage">Delegate for handling event when the begin drawing page in a booklet.</param>
            <param name="endDrawPage">Delegate for handling event when the end drawing page in a booklet.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfBookletCreator.CreateBookletCommon(Spire.Pdf.PdfDocument,Spire.Pdf.PdfDocument,System.Drawing.SizeF,Spire.Pdf.Utilities.BookletOptions,Spire.Pdf.DrawPageInBookletEventHandler,Spire.Pdf.DrawPageInBookletEventHandler)">
            <summary>
            The common method creates a booklet
            </summary>
            <param name="document">The loaded document.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="options">BookletOptions bookletOptions</param>
            <param name="beginDrawPage">Delegate for handling event when the begin drawing page in a booklet.</param>
            <param name="endDrawPage">Delegate for handling event when the end drawing page in a booklet.</param>
            <returns>
            The result document
            </returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Utilities.PdfBookletCreator.CreateBooklet(Spire.Pdf.PdfDocument,System.Drawing.SizeF,System.Boolean,Spire.Pdf.DrawPageInBookletEventHandler,Spire.Pdf.DrawPageInBookletEventHandler)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Utilities.PdfBookletCreator.GetNextPair(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the next pair of page indeces.
            </summary>
            <param name="index">The current iteration index.</param>
            <param name="count">The pages count.</param>
            <param name="twoSide">if set to <c>true</c> if the result in document should be printed
            on both sides of paper.</param>
            <returns>
            An array of integers that holds the indices.
            </returns>
        </member>
        <member name="T:Spire.Pdf.Utilities.PdfColumn">
            <summary>
            define a pdf table column
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfColumn.m_ColumnsIndex">
            <summary>
            columns index
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfColumn.ColumnsIndex">
             <summary>
            columns index
             </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfColumn.Text">
            <summary>
            Text in table 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfImageInfo.m_objNum">
            <summary>
            The number of indirect objects.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfImageInfo.m_objStream">
            <summary>
            The original stream object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfImageInfo.#ctor">
            <summary>
             Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfImageInfo.Bounds">
            <summary>
            Gets the Image Boundary location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfImageInfo.Image">
            <summary>
            Gets the Image,save to stream.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfImageInfo.Name">
            <summary>
            Gets the image name.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfImageInfo.ObjectNumber">
            <summary>
            The number of indirect object.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfImageInfo.OjbectStream">
            <summary>
            The original stream object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfImageHelper.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfImageHelper.GetImagesInfo(Spire.Pdf.PdfPageBase)">
            <summary>
            Get all image information on the page.
            </summary>
            <param name="page">The pdf page.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfImageHelper.ReplaceImage(Spire.Pdf.Utilities.PdfImageInfo,Spire.Pdf.Graphics.PdfImage)">
            <summary>
            Replace image.
            </summary>
            <param name="imageInfo">The original image info.</param>
            <param name="newImage">The new replace image.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfImageHelper.DeleteImage(Spire.Pdf.Utilities.PdfImageInfo)">
            <summary>
            Delete an image.
            </summary>
            <param name="imageInfo">The information of the image to be delete.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfImageHelper.DeleteImage(Spire.Pdf.Utilities.PdfImageInfo,System.Boolean)">
            <summary>
            Delete an image.
            </summary>
            <param name="imageInfo">The information of the image to be delete.</param>
            <param name="deleteResource">whether to delete the image resource.</param>
        </member>
        <member name="T:Spire.Pdf.Utilities.PdfMerger">
            <summary>
            The class can be used to merge pdf documents
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfMerger.inputDocuments">
            <summary>
            List of inputDocuments
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfMerger.Merge(Spire.Pdf.PdfDocumentBase,System.Object[])">
            <summary>
            Merges the specified source documents and return destination document.
            </summary>
            <param name="dest">The destination document, where the other documents are merged into.
            If it's null a new document object will be created.</param>
            <param name="sourceDocuments">The source documents.</param>
            <returns>The document containing merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfMerger.Merge(System.String[],System.String,Spire.Pdf.Utilities.MergerOptions)">
            <summary>
            Merge the PDF documents.
            </summary>
            <param name="inputFiles">The input PDF documents.</param>
            <param name="outputFile">The output PDF document.</param>
            <param name="pdfMergeOptions">Some options when do merge operation.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfMerger.Merge(System.IO.Stream[],System.IO.Stream,Spire.Pdf.Utilities.MergerOptions)">
            <summary>
            Merge the PDF documents.
            </summary>
            <param name="inputFiles">The input PDF documents.</param>
            <param name="outputFile">The output PDF document.</param>
            <param name="pdfMergeOptions">Some options when do merge operation.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfMerger.CommonMerge(System.IO.Stream[],Spire.Pdf.Utilities.MergerOptions)">
            <summary>
            CommonMerge
            </summary>
            <param name="inputFiles"></param>
            <param name="pdfMergeOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Utilities.PdfRow">
            <summary>
            define a pdf table row
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfRow.m_RowIndex">
            <summary>
            columns index
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfRow.m_Columns">
            <summary>
            All columns in the current row
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfRow.RowIndex">
            <summary>
            columns index
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfRow.Columns">
            <summary>
            All columns in the current row
            </summary>
        </member>
        <member name="T:Spire.Pdf.Utilities.PdfTable">
            <summary>
            define a pdf table
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfTable.m_TableIndex">
            <summary>
            table index
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfTable.m_StartRowIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfTable.m_StartColumnIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfTable.m_Rows">
            <summary>
            All rows in the current table
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfTable.TableIndex">
            <summary>
            table index
            </summary>
        </member>
        <member name="P:Spire.Pdf.Utilities.PdfTable.Rows">
            <summary>
            All rows in the current table
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTable.GetStartRowIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTable.GetStartColumnIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTable.GetRowCount">
            <summary>
            Get the current table row count
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTable.GetColumnCount">
            <summary>
            Get the current table column count
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTable.GetText(System.Int32,System.Int32)">
            <summary>
            Get value from the current table
            </summary>
            <param name="rowIndex">the row index,the index starts at 0</param>
            <param name="columnIndex">the column index,the index starts at 0</param>
            <returns>the text</returns>
        </member>
        <member name="T:Spire.Pdf.Utilities.PdfTableExtractor">
            <summary>
            Represent the pdf table extractor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfTableExtractor.objectExtractor">
            <summary>
            获取当前页面对象
            </summary>
        </member>
        <member name="F:Spire.Pdf.Utilities.PdfTableExtractor.m_TableLists">
            <summary>
            Return PdfTable
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTableExtractor.#ctor(Spire.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTableExtractor.#ctor(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="documentBase"></param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTableExtractor.ExtractTable(System.Int32)">
            <summary>
            Extract table from the pdf document
            </summary>
            <param name="pageIndex">pageIndex</param>
            <returns>An array of PdfTable.</returns>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTableExtractor.ConvertToPdfTable(System.Collections.Generic.List{Spire.Pdf.Conversion.LogicStructure.Tables.TableObject})">
            <summary>
            TableObject to PdfTable
            </summary>
            <param name="tableObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTableExtractor.CreatePdfTableFillText(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Create table,fill text
            </summary>
            <param name="tableIndex">the current table index</param>
            <param name="rowIndex">the current row index</param>
            <param name="columnIndex">the current column index</param>
            <param name="text">the current column text</param>
        </member>
        <member name="M:Spire.Pdf.Utilities.PdfTableExtractor.FindTable(System.Int32)">
            <summary>
            Find tables that on the current page
            </summary>
            <param name="tableIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfAction">
            <summary>
            Represents base class for all action types.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAction.NextAction">
            <summary>
            Gets or sets the next action to be performed after the action represented by this instance.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfActionCollection">
            <summary>
            Represents collection of actions.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Add(Spire.Pdf.Actions.PdfAction)">
            <summary>
            Adds the specified action.
            </summary>
            <param name="action">The action.</param>
            <returns>action</returns>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Insert(System.Int32,Spire.Pdf.Actions.PdfAction)">
            <summary>
            Inserts the action at the specified position.
            </summary>
            <param name="index">The index.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.IndexOf(Spire.Pdf.Actions.PdfAction)">
            <summary>
            Gets the index of the action.
            </summary>
            <param name="action">The action.</param>
            <returns>action</returns>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Contains(Spire.Pdf.Actions.PdfAction)">
            <summary>
            Determines whether the action is contained within collection.
            </summary>
            <param name="action">The action.</param>
            <returns>
            Value, indicating the presents of the action in collection.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Clear">
            <summary>
            Clears this collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Remove(Spire.Pdf.Actions.PdfAction)">
            <summary>
            Removes the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the action at the specified position.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfFormAction">
            <summary>
            Represents the form action base class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfFormAction.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFormAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in  
            collection will be included for resetting or submitting.
            </summary>
            <remarks>
            If Include property is true, only the fields in this collection will be reset or submitted.
            If Include property is false, the fields in this collection are not reset or submitted 
            and only the remaining form fields are reset or submitted.
            If the collection is null or empty, then all the form fields are reset 
            and the Include property is ignored.
            </remarks>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFormAction.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>The fields.</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfGoToAction">
            <summary>
            Represents an action which goes to a destination in the current document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfGoToAction.#ctor(Spire.Pdf.General.PdfDestination)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="destination">The destination to jump to.</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfGoToAction.#ctor(Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page to jump to.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfGoToAction.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfGotoNameAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="destination">The destination to jump to.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfGotoNameAction.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfJavaScriptAction">
            <summary>
            Represents an action which performs java script action in pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScriptAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="javaScript">The java script code.</param>
            <value>A string value representing valid javascript code to be executed.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfJavaScriptAction.Script">
             <summary>
            Gets or sets the javascript code to be executed when this action is executed. 
             </summary>
             <value>A string value representing valid javascript code to be executed. </value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfJavaScript">
            <summary>
            The Adobe Built-in JavaScript
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetNumberFormatString(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Get a AFNumber_Format string
            </summary>
            <param name="nDec">The number of places after the decimal point</param>
            <param name="sepStyle">The integer denoting whether to use a separator or not. If sepStyle=0, use commas. If sepStyle=1, do not separate.</param>
            <param name="negStyle">The formatting used for negative numbers: 0 = MinusBlack, 1 = Red, 2 = ParensBlack, 3 = ParensRed</param>
            <param name="currStyle">The currency style - not used</param>
            <param name="strCurrency">The currency symbol</param>
            <param name="bCurrencyPrepend">True to prepend the currency symbol; false to display on the end of the number</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetNumberKeystrokeString(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Get a AFNumber_Keystroke string
            </summary>
            <param name="nDec">The number of places after the decimal point</param>
            <param name="sepStyle">The integer denoting whether to use a separator or not. If sepStyle=0, use commas. If sepStyle=1, do not separate.</param>
            <param name="negStyle">The formatting used for negative numbers: 0 = MinusBlack, 1 = Red, 2 = ParensBlack, 3 = ParensRed</param>
            <param name="currStyle">The currency style - not used</param>
            <param name="strCurrency">The currency symbol</param>
            <param name="bCurrencyPrepend">True to prepend the currency symbol; false to display on the end of the number</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetRangeValidateString(System.Boolean,System.Single,System.Boolean,System.Single)">
            <summary>
            Get a AFRange_Validate string
            </summary>
            <param name="bGreaterThan">Indicate the use of the greater than comparison</param>
            <param name="nGreaterThan">The value to be used in the greater than comparison</param>
            <param name="bLessThan">Indicate the use of the less than comparison</param>
            <param name="nLessThan">The value to be used in the less than comparison</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetPercentFormatString(System.Int32,System.Int32)">
            <summary>
            Get a AFPercent_Format string
            </summary>
            <param name="nDec">The number of places after the decimal point</param>
            <param name="sepStyle">The integer denoting whether to use a separator or not. If sepStyle=0, use commas. If sepStyle=1, do not separate</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetPercentKeystrokeString(System.Int32,System.Int32)">
            <summary>
            Get a AFPercent_Keystroke string
            </summary>
            <param name="nDec">The number of places after the decimal point</param>
            <param name="sepStyle">The integer denoting whether to use a separator or not. If sepStyle=0, use commas. If sepStyle=1, do not separate</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetDateFormatString(System.String)">
            <summary>
            Get a AFDate_FormatEx string
            </summary>
            <param name="cFormat">Must be one of: "m/d", "m/d/yy", "mm/dd/yy", "mm/yy", "d-mmm", "d-mmm-yy", "dd-mmm-yy", "yymm-dd", "mmm-yy", "mmmm-yy", "mmm d, yyyy", "mmmm d, yyyy", "m/d/yy h:MM tt", "m/d/yy HH:MM"</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetDateKeystrokeString(System.String)">
            <summary>
            Get a AFDate_KeystrokeEx string
            </summary>
            <param name="cFormat">Must be one of: "m/d", "m/d/yy", "mm/dd/yy", "mm/yy", "d-mmm", "d-mmm-yy", "dd-mmm-yy", "yymm-dd", "mmm-yy", "mmmm-yy", "mmm d, yyyy", "mmmm d, yyyy", "m/d/yy h:MM tt", "m/d/yy HH:MM"</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetTimeFormatString(System.Int32)">
            <summary>
            Get a AFTime_Format string
            </summary>
            <param name="ptf">The time format: 0 = 24HR_MM [ 14:30 ], 1 = 12HR_MM [ 2:30 PM ], 2 = 24HR_MM_SS [ 14:30:15 ], 3 = 12HR_MM_SS [ 2:30:15 PM ]</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetTimeKeystrokeString(System.Int32)">
            <summary>
            Get a AFTime_Keystroke string
            </summary>
            <param name="ptf">The time format: 0 = 24HR_MM [ 14:30 ], 1 = 12HR_MM [ 2:30 PM ], 2 = 24HR_MM_SS [ 14:30:15 ], 3 = 12HR_MM_SS [ 2:30:15 PM ]</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetSpecialFormatString(System.Int32)">
            <summary>
            Get a AFSpecial_Format string
            </summary>
            <param name="psf">The type of formatting to use:0 = zip code, 1 = zip + 4, 2 = phone, 3 = SSN</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetSpecialKeystrokeString(System.Int32)">
            <summary>
            Get a AFSpecial_Format string
            </summary>
            <param name="psf">The type of formatting to use:0 = zip code, 1 = zip + 4, 2 = phone, 3 = SSN</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetSimpleCalculateString(System.String,System.String[])">
            <summary>
            Get a AFSimple_Calculate string
            </summary>
            <param name="cFunction">Must be one of "AVG", "SUM", "PRD", "MIN", "MAX"</param>
            <param name="cFields">The name list of the fields to use in the calculation</param>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfLaunchAction">
            <summary>
            Represents an action which launches an application or opens or prints a document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfLaunchAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fileName">Name of the file to be launched.</param>       
        </member>
        <member name="M:Spire.Pdf.Actions.PdfLaunchAction.#ctor(System.String,Spire.Pdf.Actions.PdfFilePathType)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fileName">Name of the file to be launched.</param>    
            <param name="fileName">Name of the file to be launched.</param>
            <param name="path">Name of the path type.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfLaunchAction.FileName">
            <summary>
            Gets or sets file to be launched.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfLaunchAction.IsNewWindow">
            <summary>
            Indicates the target document should be opened in a new window or not.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfNamedAction">
            <summary>
            Represents an action which perfoms the named action.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfNamedAction.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The  object representing destination of an action.</value>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfNamedAction.#ctor(Spire.Pdf.Actions.PdfActionDestination)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="destination">The  object representing destination of an action.</param>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfAnnotationActions">
            <summary>
            Represents additional actions of the annotations.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfAnnotationActions.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            annotations active area.
            </summary>
            <value>The mouse down action.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the annotations active area..
            </summary>
            <value>The mouse up action.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.GotFocus">
            <summary>
            Gets or sets the action to be performed when the annotation receives the 
            input focus.
            </summary>
            <value>The got focus action.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.LostFocus">
            <summary>
            Gets or sets the action to be performed when the annotation loses the 
            input focus.
            </summary>
            <value>The lost focus action.</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfDocumentActions">
            <summary>
            Represents an action for the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.AfterOpenAction">
            <summary>
            Gets or sets the action to execute when the document is opened. 
            </summary>
            <value>A  specifying the action to be executed when documents opens in the viewer. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.BeforeCloseAction">
            <summary>
            Gets or sets the action to be performed before the document is closed.
            </summary>
            <value>A  object specifying the action to be executed before the document is closed. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.BeforeSaveAction">
            <summary>
            Gets or sets the java script action to be performed before the document is saved.
            </summary>
            <value>A  object specifying the action to be executed before the document is saved. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.AfterSaveAction">
            <summary>
            Gets or sets the jave script action to be performed after the document is saved.
            </summary>
            <value>A  object specifying the action to be executed after the document is saved.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.BeforePrintAction">
            <summary>
            Gets or sets the action to be performed before the document is printed.
            </summary>
            <value>A  object specifying the action to be executed before the document is printed. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.AfterPrintAction">
            <summary>
            Gets or sets the action to be performed after the document is printed.
            </summary>
            <value>A  object specifying the action to be executed after the document is printed. .</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfEmbeddedGoToAction">
            <summary>
            Represents an embedded go-to action which allows jumping to or from a PDF file that is embedded in another PDF file.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfEmbeddedGoToAction.IsNewWindow">
            <summary>
            Indicates the target document should be opened in a new window or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfEmbeddedGoToAction.FileName">
            <summary>
            The target document name.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfEmbeddedGoToAction.Destination">
            <summary>
            The destination in the target document to jump to.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfEmbeddedGoToAction.#ctor(System.String,Spire.Pdf.General.PdfDestination,System.Boolean)">
            <summary>
            Initialize a new instance of PdfEmbeddedGoToAction.
            </summary>
            <param name="fileName">The target PDF file name to be opened.</param>
            <param name="dest">The destination.</param>
            <param name="newWindow">If true, the target PDF would be opened in a new window.Otherwise false.</param>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfFieldActions">
            <summary>
            Represents actions to be performed as response to field events. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfFieldActions.#ctor(Spire.Pdf.Actions.PdfAnnotationActions)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="annotationActrions">The annotation actions.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.KeyPressed">
            <summary>
            Gets or sets the JavaScript action to be performed when the user types a keystroke 
            into a text field or combo box or modifies the selection in a scrollable list box. 
            This action can check the keystroke for validity and reject or modify it.
            </summary>
            <value>A  object specifying the action to be executed when the user types a keystroke.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.Format">
            <summary>
            Gets or sets the JavaScript action to be performed before the field is formatted 
            to display its current value.
            </summary>
            <value>A  object specifying the action to be executed for formating the field value.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.Validate">
            <summary>
            Gets or sets the JavaScript action to be performed
            This action can check the new value for validity.
            </summary>
            <value>A  object specifying the action to be executed for validating the field value.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.Calculate">
            <summary>
            Gets or sets the JavaScript action to be performed to recalculate the value 
            of this field when that of another field changes.
            </summary>
            <value>A  object specifying the action to be executed for calculating the field value.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the fields area.
            </summary>
            <value>A  descendant specifying the action to be executed when the mouse button is released inside the field's area.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            fields area.
            </summary>
            <value>A  descendant specifying the action to be executed when the mouse button is pressed inside the field's area.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.GotFocus">
            <summary>
            Gets or sets the action to be performed when the field receives the 
            input focus.
            </summary>
            <value>A  descendant specifying the action to be executed when the field receives the input focus.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.LostFocus">
            <summary>
            Gets or sets the action to be performed when the field loses the 
            input focus.
            </summary>
            <value>A  descendant specifying the action to be executed when the field losts the input focus.</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfResetAction">
            <summary>
            Represents Pdf form's reset action.
            </summary>
            <remarks>This action allows a user to reset the form fields to their default values. </remarks>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfResetAction.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfResetAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in Fields
            collection will be included for resetting.
            </summary>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
            <remarks>
            If Include property is true, only the fields in this collection will be reset.
            If Include property is false, the fields in this collection are not reset
            and only the remaining form fields are reset.
            If the collection is null or empty, then all the form fields are reset
            and the Include property is ignored.
            </remarks>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfSoundAction">
            <summary>
            Represents the sound action.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfSoundAction.#ctor(System.String)">
            <summary>
             Initializes a new instance of the  class.
            </summary>
            <param name="fileName">Name of the sound file.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Volume">
            <summary>
            Gets or sets the volume at which to play the sound, in the range -1.0 to 1.0.
            </summary>
            <value>The volume of the sound.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.FileName">
            <value>The name of the sound file.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Sound">
            <summary>
            Gets or sets the sound.
            </summary>
            <value> represents the sound.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Synchronous">
            <summary>
            Gets or sets a value whether to play the sound synchronously or asynchronously.
            If this flag is true, the viewer application retains control, allowing no further 
            user interaction other than canceling the sound, until the sound has been 
            completely played. Default value: false.
            </summary>
            <value><c>true</c> if synchronous; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Repeat">
            <summary>
            Gets or sets a value indicating whether to repeat the sound indefinitely. 
            If this entry is present, the  property is ignored. Default value: false.
            </summary>
            <value><c>true</c> if repeat; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Mix">
            <summary>
            Gets or sets a value indicating whether to mix this sound with any other 
            sound already playing. If this flag is false, any previously playing sound is 
            stopped before starting this sound; this can be used to stop a repeating 
            sound. Default value: false.
            </summary>
            <value><c>true</c> if mix; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfSubmitAction">
            <summary>
            Represents Pdf form's submit action.
            </summary>
            <remarks>This type of action allows a user to go to a resource on the Internet, tipically a hypertext link. </remarks>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfSubmitAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.Url">
            <value>An string value specifying the full URI for the internet resource. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.HttpMethod">
            <summary>
            Gets or sets the HTTP method.
            </summary>
            <value>The HTTP method.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.CanonicalDateTimeFormat">
            <summary>
            If set, any submitted field values representing dates are converted to the 
            standard format. The interpretation of a form field as a date is not specified 
            explicitly in the field itself but only in the JavaScript code that processes it.
            </summary>
            <value>
            <c>true</c> if use canonical date time format when submit data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.SubmitCoordinates">
            <summary>
            Gets or sets a value indicating whether to submit mouse pointer coordinates. If set, 
            the coordinates of the mouse click that caused the submit-form action are transmitted 
            as part of the form data. 
            </summary>
            <value><c>true</c> if submit coordinates; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.IncludeNoValueFields">
            <summary>
            Gets or sets a value indicating whether to submit fields without value.
            If set, all fields designated by the Fields collection and the 
            flag are submitted, regardless of whether they have a value. For fields without a 
            value, only the field name is transmitted.
            </summary>
            <value>
            <c>true</c> if submit fields without value or the empty ones; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.IncludeIncrementalUpdates">
            <summary>
            Gets or sets a value indicating whether to submit form's incremental updates.
            Meaningful only when the form is being submitted in Forms Data Format.
            If set, the submitted FDF file includes the contents of all incremental 
            updates to the underlying PDF document. If clear, the incremental updates are 
            not included.
            </summary>
            <value>
            <c>true</c> if incremental updates should be submitted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.IncludeAnnotations">
            <summary>
            Gets or sets a value indicating whether to submit annotations.
            Meaningful only when the form is being submitted in Forms Data Format.
            If set, the submitted FDF file includes all markup annotations in the 
            underlying PDF document. If clear, markup annotations are not included.
            </summary>
            <value><c>true</c> if annotations should be submitted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.ExcludeNonUserAnnotations">
            <summary>
            Gets or sets a value indicating whether to exclude non user annotations form submit 
            data stream. Meaningful only when the form is being submitted in Forms Data Format 
            and the  property is set to true.
            </summary>
            <value>
            <c>true</c> if non user annotations should be excluded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.EmbedForm">
            <summary>
            Gets or sets a value indicating whether to include form to submit data stream.
            Meaningful only when the form is being submitted in Forms Data Format.
            If set, the  property is a file name containing an embedded file 
            stream representing the PDF file from which the FDF is being submitted.
            </summary>
            <value><c>true</c> if form should be embedded to submit stream; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.DataFormat">
            <summary>
            Gets or sets the submit data format.
            </summary>
            <value>The submit data format.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in Fields
            collection will be included for submitting.
            </summary>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
            <remarks>
            If Include property is true, only the fields in this collection will be submitted.
            If Include property is false, the fields in this collection are not submitted
            and only the remaining form fields are submitted.
            If the collection is null or empty, then all the form fields are reset
            and the Include property is ignored.
            If the field has Export property set to false it will be not included for 
            submitting in any case.
            </remarks>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfUriAction">
            <summary>
            Represents an action which resolves unique resource identifier.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfUriAction.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfUriAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="uri">The unique resource identifier.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfUriAction.Uri">
            <summary>
            Gets or sets the unique resource identifier.
            </summary>
            <value>The unique resource identifier.</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfFilePathType">
            <summary>
            Specifies the file path type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfFilePathType.Relative">
            <summary>
            Specifies the file location with out including the domain name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfFilePathType.Absolute">
            <summary>
            Specifies the location, including the domain name.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfActionDestination">
            <summary>
            Specifies the available named actions supported by the viewer. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfActionDestination.FirstPage">
            <summary>
            Navigate to first page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfActionDestination.LastPage">
            <summary>
            Navigate to last page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfActionDestination.NextPage">
            <summary>
            Navigate to next page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfActionDestination.PrevPage">
            <summary>
            Navigate to previous page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfSubmitFormFlags">
            <summary>
            Specifies the available data formats for submitting the form data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.IncludeExclude">
            <summary>
            If clear, the Fields array specifies which fields to
            include in the submission. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.IncludeNoValueFields">
            <summary>
            If set, all fields designated by the Fields array and the Include/
            Exclude flag are submitted, regardless of whether they have a value. 
            For fields without a value, only the
            field name is transmitted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.ExportFormat">
            <summary>
            Meaningful only if the SubmitPDF and XFDF flags are clear. If set,
            field names and values are submitted in HTML Form format. If
            clear, they are submitted in Forms Data Format
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.GetMethod">
            <summary>
            If set, field names and values are submitted using an HTTP GET
            request. If clear, they are submitted using a POST request. This flag
            is meaningful only when the ExportFormat flag is set; if ExportFormat
            is clear, this flag must also be clear.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.SubmitCoordinates">
            <summary>
            If set, the coordinates of the mouse click that caused the submitform
            action are transmitted as part of the form data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.Xfdf">
            <summary>
            Meaningful only if the SubmitPDF flags are clear. If set,
            field names and values are submitted as XML Forms Data Format .
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.IncludeAppendSaves">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF file includes the contents
            of all incremental updates to the underlying PDF document,
            as contained in the Differences entry in the FDF dictionary.
            If clear, the incremental updates are not included.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.IncludeAnnotations">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF file includes all markup
            annotations in the underlying PDF document.
            If clear, markup annotations are not included.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.SubmitPdf">
            <summary>
            If set, the document is submitted as PDF, using the
            MIME content type application/pdf (described in Internet RFC
            2045, Multipurpose Internet Mail Extensions (MIME), Part One:
            Format of Internet Message Bodies; see the Bibliography). If set, all
            other flags are ignored except GetMethod.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.CanonicalFormat">
            <summary>
            If set, any submitted field values representing dates are
            converted to the standard format described.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.ExclNonUserAnnots">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and
            ExportFormat flags are clear) and the IncludeAnnotations flag is
            set. If set, it includes only those markup annotations whose T entry
            matches the name of the current user, as determined
            by the remote server to which the form is being submitted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.ExclFKey">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF excludes the F entry.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.EmbedForm">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the F entry of the submitted FDF is a file
            specification containing an embedded file stream representing the
            PDF file from which the FDF is being submitted.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DActivation">
            <summary>
            Represents the activation states for the 3D annotation. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.ActivationMode">
            <summary>
            Gets or sets the activation mode for the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.DeactivationMode">
            <summary>
            Gets or sets the deactivation mode for the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.ActivationState">
            <summary>
            Gets or sets the activation state for the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.DeactivationState">
            <summary>
            Gets or sets the deactivation state for the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.ShowToolbar">
            <summary>
            Gets or sets a value indicating whether the toolbar should be displayed when the annotation is activated or not. 
            </summary>
            <value>If true, a toolbar should be displayed by default when the annotation is activated and given focus. If false, a toolbar should not be displayed by default. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.ShowUI">
            <summary>
            Gets or sets a value indicating whether the UI for managing the 3D artwork should be displayed when the annotation is activated. 
            </summary>
            <value>If true, the user interface should be made visible when the annotation is activated. If false, the user interface should not be made visible by default.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DActivation.#ctor">
            <summary>
            Initializes the new instance of  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DAnimation">
            <summary>
            Represents the lighting to apply for the 3D artwork.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnimation.Type">
            <summary>
            Gets or sets the type of the animation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnimation.PlayCount">
            <summary>
            Gets or sets the play count. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnimation.TimeMultiplier">
            <summary>
            Gets or sets the rendering opacity.
            <remarks>A positive number specifying the time multiplier to be used when running the animation. A value greater than one shortens the time it takes to play the animation, or effectively speeds up the animation.</remarks>
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnimation.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnimation.#ctor(Spire.Pdf.Annotations.PDF3DAnimationType)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="type">PDF 3D Animation Type.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DBackground">
            <summary>
            Represents the background appearance for 3D artwork. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DBackground.Color">
            <summary>
            Gets or sets the background color.
            </summary>
            <value>The  object specifying the background color for the 3D artwork. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DBackground.ApplyToEntireAnnotation">
            <summary>
            Gets or sets a value indicating how the background is applied. 
            </summary>
            <value>True if the background is applied to entire annotation, false if the background is applied to annotation's 3D view box only.</value>      
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DBackground.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DBackground.#ctor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.        
            </summary>
            <param name="color">The  object specifying the background color for the 3D artwork.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DBase.Views">
            <summary>
            Gets the list of available views for the current 3D artwork.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DBase.#ctor(Spire.Pdf.Core.PdfStream)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pdfStream"></param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DCrossSection">
            <summary>
            Represents the clipping portion of the 3D artwork for the purpose of showing artwork cross sections.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Center">
            <summary>
            Gets or sets the center of the cutting plane. 
            <remarks>A three element array specifying the center of rotation on the cutting plane in world space coordinates.</remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Color">
            <summary>
            Gets or sets the cutting plane color. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.IntersectionColor">
            <summary>
            Gets or sets the intersection color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.IntersectionIsVisible">
            <summary>
            Gets or sets a value indicating whether the intersection of cutting plane with 3D artwork is visible.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Opacity">
            <summary>
            Gets or sets the cutting plane opacity. 
            <remarks>The opacity is given in percents, 100 is full opacity, 0 is no opacity.</remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Orientation">
            <summary>
            Gets or sets the orientation of the cutting plane. 
            <value>A three-element array specifying the orientation of the cutting plane in world space, where each value represents the orientation in relation to the X, Y, and Z axes, respectively. </value>
            <remarks>If the array has more than 3 elements, only the first 3 will be considered. Exactly one of the values must be null, indicating an initial state of the cutting plane that is perpendicular to the corresponding axis and clipping all geometry on the positive side of that axis. The other two values must be numbers indicating the rotation of the plane, in degrees, around their corresponding axes. The order in which these rotations are applied should match the order in which the values appear in the array. </remarks>
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection">
            <summary>
            Represents the collection of  objects. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Add(Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Contains(Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.IndexOf(Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Insert(System.Int32,Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Remove(Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the  at the specified index.
            </summary>        
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DLighting">
            <summary>
            Represents the lighting scheme for the 3D artwork.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DLighting.Style">
            <summary>
            Gets or sets the Lighting style of the 3D artwork.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DLighting.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DLighting.#ctor(Spire.Pdf.Annotations.Pdf3DLightingStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">The  object specifies the style of the 3D artwork.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DNode">
            <summary>
            Represents the particular areas of 3D artwork and the opacity and visibility with which individual nodes are displayed.  
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Visible">
            <summary>
            Gets or sets a value indicating whether the node is visible or not. 
            </summary>
            <value>True if the node is visible. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Name">
            <summary>
            Gets or sets the node name. 
            </summary>
            <value>The name of the 3D node.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Opacity">
            <summary>
            Gets or sets the cutting plane opacity. 
            </summary>
            <value>A number indicating the opacity of the cutting plane using a standard additive blend mode. </value>
            <remarks>The opacity is given in percents, 100 is full opacity, 0 is no opacity.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Matrix">
            <summary>
            Gets or sets the 3D transformation matrix. 
            </summary>
            <value>A 12-element 3D transformation matrix that specifies the position and orientation of this node, relative to its parent, in world coordinates. </value>
            <remarks>If the array has more than 12 elements, only the first 12 will be considered.</remarks>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DNodeCollection">
            <summary>
            Represents a collection of  objects. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.Add(Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Adds the specified value.
            <param name="value">The value.</param>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.Contains(Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.IndexOf(Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.Insert(System.Int32,Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.Remove(Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNodeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DProjection">
            <summary>
             Represents the mapping of 3D camera co-ordinates onto the target coordinate system of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.ProjectionType">
            <summary>
            Gets or sets the type of the projection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.ClipStyle">
            <summary>
            Gets or sets the projection ClipStyle.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.OrthoScaleMode">
            <summary>
             Gets or sets the scale mode for ortho graphic projections.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.FarClipDistance">
            <summary>
            Gets or sets the far clipping distance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.FieldOfView">
            <summary>
            Gets or sets the field of view.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.NearClipDistance">
            <summary>
            Gets or sets the near clipping distance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.Scaling">
            <summary>
            Gets or sets the projection scaling.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DProjection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DProjection.#ctor(Spire.Pdf.Annotations.Pdf3DProjectionType)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="type">The Pdf3D Projection Type.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DRendermode">
            <summary>
            Represents the rendering mode of the 3D artwork. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.Style">
            <summary>
            Gets or sets the type of the projection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.AuxilaryColor">
            <summary>
            Gets or sets the Auxiliary color.
            </summary> 
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.FaceColor">
            <summary>
            Gets or sets the Face color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.CreaseValue">
            <summary>
            Gets or sets the crease value. 
            <remarks>The crease value is specified in degrees, from 0 to 360.</remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.Opacity">
            <summary>
            Gets or sets the rendering opacity. 
            </summary>
            <remarks>The opacity is given in percents, 100 is full opacity, 0 is no opacity.</remarks>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DRendermode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DRendermode.#ctor(Spire.Pdf.Annotations.Pdf3DRenderStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">The  object specifies the rendering style of the 3D artwork.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DView">
            <summary>
            Represents a attributes to be applied to the virtual camera associated with a 3D annotation. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.Background">
            <summary>
            Gets or sets the background for this view.  
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.CameraToWorldMatrix">
            <summary>
            Gets or sets the 3D transformation matrix. 
            </summary>
            <value>A 12-element 3D transformation matrix that specifies a position and orientation of the camera in world coordinates. </value>
            <remarks>If the array has more than 12 elements, only the first 12 will be considered.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.CenterOfOrbit">
            <summary>
            Gets or sets the center of orbit for 3D artwork. 
            </summary>
            <value>A non-negative number indicating a distance in the camera coordinate system along the z axis to the center of orbit for this view. </value>
            <remarks>If this value is negative, the viewer application must determine the center of orbit.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.CrossSections">
            <summary>
            Gets the list of cross sections for this view. 
            <value>A list of PDF3DCrossSection objects available for this view.</value>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.ExternalName">
            <summary>
            Gets or sets the view's external name.
            </summary>
            <value>The external name of the view, suitable for presentation in a user interface.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.InternalName">
            <summary>
            Gets or sets the view's internal name.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.LightingScheme">
            <summary>
            Gets or sets the Creates a new page and adds it as the last page of the document scheme for this view. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.Nodes">
            <summary>
            Gets the list of 3D nodes for this view. 
            </summary>
            <value>A list of PDF3DNode objects available for this view.</value>        
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.Projection">
            <summary>
            Gets or sets the projection for this view. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.RenderMode">
            <summary>
            Gets or sets the rendering mode for this view. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.ResetNodesState">
            <summary>
            Gets or sets a value indicating whether nodes specified in the Nodes collection are returned to their original states (as specified in the 3D artwork) before applying transformation matrices and opacity settings specified in the node dictionaries. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.ViewNodeName">
            <summary>
            Gets or sets the name of the view node.         
            </summary>
            <remarks>The view node in the content stream defines all the properties for viewing the 3D artwork. If both ViewNodeName and CameraToWorldMatrix are specified, then ViewNodeName takes precedence.</remarks>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DView.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DViewCollection">
            <summary>
            Represents a collection of Pdf3DView objects. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.Add(Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Pdf3DView</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.Contains(Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.IndexOf(Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Indexes the of the Pdf3DView object.
            </summary>
            <param name="value">The value.</param>
            <returns>Pdf3DView</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.Insert(System.Int32,Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.Remove(Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The Pdf3DView object.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DViewCollection.Item(System.Int32)">
            <summary>
            Gets or sets the  at the specified index.
            </summary>
            <value>Pdf3DView</value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DActivationState">
            <summary>
            Specifies an activation state of the 3D annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationState.Instantiated">
            <summary>
            Represents that the state in which the artwork has been read and a run-time instance of 
            the artwork has been created. In this state, it can be rendered but script-driven 
            real-time modifications (that is, animations) are disabled.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationState.Live">
            <summary>
            Represents that the artwork is instantiated, and it is being modified in real time to 
            achieve some animation effect. In the case of keyframe animation, the artwork is 
            live while it is playing and then reverts to an instantiated state when playing 
            completes or is stopped.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DActivationMode">
            <summary>
            Specifies the available modes for activating a 3D annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationMode.PageOpen">
            <summary>
            Represents that the annotation should be activated as soon as the page containing 
            the annotation is opened.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationMode.PageVisible">
            <summary>
            Represents that the annotation should be activated as soon as any part of the page 
            containing the annotation becomes visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationMode.ExplicitActivation">
            <summary>
            Represents that the annotation should remain inactive until explicitly activated 
            by a script or user action.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DDeactivationMode">
            <summary>
            Specifies the available modes for deactivating a 3D annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationMode.PageClose">
            <summary>
            Represents that the annotation should be deactivated as soon as the page is closed.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationMode.PageInvisible">
            <summary>
            Represents that the annotation should be deactivated as soon as the page containing 
            the annotation becomes invisible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationMode.ExplicitDeactivation">
            <summary>
            Represents that the annotation should remain active until explicitly deactivated by a 
            script or user action.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DDeactivationState">
            <summary>
            Specifies the available states upon deactivating a 3D annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationState.Uninstantiated">
            <summary>
            Represents the initial state of the artwork before it has been used in any way.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationState.Instantiated">
            <summary>
            Represents that the state in which the artwork has been read and a run-time instance of 
            the artwork has been created. In this state, it can be rendered but script-driven 
            real-time modifications (that is, animations) are disabled.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationState.Live">
            <summary>
            Represents that the artwork is instantiated, and it is being modified in real time to 
            achieve some animation effect. In the case of keyframe animation, the artwork is 
            live while it is playing and then reverts to an instantiated state when playing 
            completes or is stopped.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DLightingStyle">
            <summary>
            Specifies the available styles for applying light to 3D artwork. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Artwork">
            <summary>
            The Lights as specified in the 3D artwork.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.None">
            <summary>
            The lighting specified in the 3D artwork is ignored.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.White">
            <summary>
            Three blue-grey infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Day">
            <summary>
            Three light-grey infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Night">
            <summary>
            One yellow, one aqua, and one blue infinite light.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Hard">
            <summary>
            Three grey infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Primary">
            <summary>
            One red, one green, and one blue infinite light.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Blue">
            <summary>
            Three blue infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Red">
            <summary>
            Three red infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Cube">
            <summary>
            Six grey infinite lights aligned with the major axes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.CAD">
            <summary>
            Three grey infinite lights and one light attached to the camera.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Headlamp">
            <summary>
            Single infinite light attached to the camera.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DProjectionClipStyle">
            <summary>
            Specifies the available clipping style of the 3D annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionClipStyle.ExplicitNearFar">
            <summary>
            Represents the Clipping style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionClipStyle.AutomaticNearFar">
            <summary>
            Represents the Clipping style.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode">
            <summary>
            Specifies the available Ortho projection scaling mode of the 3D annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Width">
            <summary>
            Scale to fit the width of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Height">
            <summary>
            Scale to fit the height of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Min">
            <summary>
            Scale to fit the lesser of width or height of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Max">
            <summary>
            Scale to fit the greater of width or height of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Absolute">
            <summary>
            No scaling should occur due to binding.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DProjectionType">
            <summary>
            Specifies the available projection type of the 3D annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionType.Orthographic">
            <summary>
            Represents Orthographic projection
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionType.Perspective">
            <summary>
            Represents Perspective projection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DRenderStyle">
            <summary>
            Specifies the available rendering style of the 3D artwork. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Solid">
            <summary>
            Displays textured and lit geometric shapes. In the case of artwork 
            that conforms to the Universal 3D File Format specification, these 
            shapes are triangles.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.SolidWireframe">
            <summary>
            Displays textured and lit geometric shapes (triangles) with single 
            color edges on top of them.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Transparent">
            <summary>
            Displays textured and lit geometric shapes (triangles) with an added 
            level of transparency.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.TransparentWireframe">
            <summary>
            Displays textured and lit geometric shapes (triangles) with an added 
            level of transparency, with single color opaque edges on top of it.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.BoundingBox">
            <summary>
            Displays the bounding box edges of each node, aligned with the axes 
            of the local coordinate space for that node.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.TransparentBoundingBox">
            <summary>
            Displays bounding boxes faces of each node, aligned with the axes of 
            the local coordinate space for that node, with an added level of transparency.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.TransparentBoundingBoxOutline">
            <summary>
            Displays bounding boxes edges and faces of each node, aligned with the axes of 
            the local coordinate space for that node, with an added level of transparency.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Wireframe">
            <summary>
            Displays only edges in a single color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.ShadedWireframe">
            <summary>
            Displays only edges, though interpolates their color between their two vertices 
            and applies lighting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.HiddenWireframe">
            <summary>
            Displays edges in a single color, though removes back-facing and obscured edges.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Vertices">
            <summary>
            Displays only vertices in a single color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.ShadedVertices">
            <summary>
            Displays only vertices, though uses their vertex color and applies lighting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Illustration">
            <summary>
            Displays silhouette edges with surfaces, removes obscured lines.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.SolidOutline">
            <summary>
            Displays silhouette edges with lit and textured surfaces, removes obscured lines.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.ShadedIllustration">
            <summary>
            Displays silhouette edges with lit and textured surfaces and an additional emissive 
            term to remove poorly lit areas of the artwork.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PDF3DAnimationType">
            <summary>
            Specifies the available animation style for rendering the 3D artwork. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PDF3DAnimationType.None">
            <summary>
            Represents that the Keyframe animations should not be driven directly by 
            the viewer application. This value is used by documents that are intended 
            to drive animations through an alternate means, such as JavaScript.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PDF3DAnimationType.Linear">
            <summary>
            Represents that the Keyframe animations are driven linearly from beginning to end. 
            This animation style results in a repetitive playthrough of the animation, 
            such as in a walking motion.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PDF3DAnimationType.Oscillating">
            <summary>
            Represents that the Keyframe animations should oscillate along their time range. 
            This animation style results in a back-and-forth playing of the animation, 
            such as exploding or collapsing parts.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfActionAnnotation">
            <summary>
            Represents the annotation with associated action.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfActionAnnotation.#ctor(System.Drawing.RectangleF,Spire.Pdf.Actions.PdfAction)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="action">The Pdf action.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfActionLinkAnnotation">
            <summary>
            Represents base class for link annotations with associated action.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfActionLinkAnnotation.Action">
            <summary>
            Gets or sets the action for the link annotation.
            </summary>
            <value>The action to be executed when the link is activated.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfActionLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfActionLinkAnnotation.#ctor(System.Drawing.RectangleF,Spire.Pdf.Actions.PdfAction)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">Bounds specifies the location of the drawn text.</param>
            <param name="action">The  specifies an action to be executed when the link is activated.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Appearance.PdfAppearanceState">
            <summary>
            Represents the states of an annotation's appearance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.On">
            <summary>
            Gets or sets the active state template.
            </summary>
            <value>The  object specifies an active state template.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.Off">
            <summary>
            Gets or sets the inactive state.
            </summary>
            <value>The  object specifies an inactive state template.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.OnMappingName">
            <summary>
            Gets or sets the mapping name of the active state.
            </summary>
            <value>String specifies the mapping name of the active state.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.OffMappingName">
            <summary>
            Gets or sets the mapping name of the inactive state.
            </summary>
            <value>String specifies the mapping name of the inactive state.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Appearance.PdfAppearance">
            <summary>
            Represents the appearance of an annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearance.Normal">
            <summary>
            Gets or sets  object which applied to annotation in normal state.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearance.MouseHover">
            <summary>
            Gets or sets  object which applied to the annotation on hovering the mouse.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearance.Pressed">
            <summary>
            Gets or sets  object which applied to an annotation when mouse button is pressed.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Appearance.PdfAppearance.#ctor(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="annotation">The  object specifies the annotation.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance">
            <summary>
            Represents extended appearance of the annotation. It has two states such as On state and Off state.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.Normal">
            <summary>
            Gets the normal appearance of the annotation.
            </summary>
            <value>The  object specifies the normal appearance of the annotation.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.MouseHover">
            <summary>
            Gets the appearance when mouse is hovered.
            </summary>
            <value>The  object specifies the annotation appearance when the mouse is hovered on it.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.Pressed">
            <summary>
            Gets the pressed state annotation.
            </summary>
            <value>The appearance in pressed state.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfFixedPrint">
            <summary>
            The pdf fixed print dictionary.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfFixedPrint.m_dictionary">
            <summary>
            The dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFixedPrint.#ctor">
            <summary>
            Initialize an instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFixedPrint.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFixedPrint.SetMatrix(System.Single[])">
            <summary>
            Set the matrix.
            </summary>
            <param name="matrix">The matrix</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFixedPrint.SetHorizontalTranslation(System.Single)">
            <summary>
            Set the horizontal translation.
            </summary>
            <param name="horizontal">The horizontal</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFixedPrint.SetVerticalTranslation(System.Single)">
            <summary>
            Set the vertical translation.
            </summary>
            <param name="vertical">The vertiacl</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFixedPrint.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value>The element</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotation.RectangleDifferences">
            <summary>
            Gets or sets the rectangular diffecences
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotation.Author">
            <summary>
            Gets or sets the user who created the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotation.Subject">
            <summary>
            Gets or sets the annotation's subject.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineAnnotation">
            <summary>
            Represents a line annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineAnnotation.m_captionType">
            <summary>
            To specifying Caption Type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineAnnotation.m_author">
            <summary>
            To specifying author
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineAnnotation.m_subject">
            <summary>
            To specifying subject
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.LineCaption">
            <summary>
            Gets or sets whether the line annotation caption should be displayed.
            </summary>
            <value><c>true</c> if the line caption should be displayed, otherwise <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.LeaderLine">
            <summary>
            Gets or sets Leader Line 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.LeaderLineExt">
            <summary>
            Gets or sets Leader Line Extension
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.lineBorder">
            <summary>
            Gets or sets Border style of the Line Annotation.
            </summary>
            <value>A  enumeration member specifying the border style for the line.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.BeginLineStyle">
            <summary>
            Gets or sets the style used for the beginning of the line. 
            </summary>
            <value>A  enumeration member specifying the begin style for the line.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.EndLineStyle">
            <summary>
            Gets or sets the style used for the end of the line. 
            </summary>
            <value>A  enumeration member specifying the end style for the line.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.CaptionType">
            <summary>
            Gets or sets the line caption text type.
            </summary>
            <value>A  enumeration member specifying the line caption type.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.LineIntent">
            <summary>
            Gets or sets LineIntent
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.InnerLineColor">
            <summary>
            Gets or sets Inner Color of the PdfLine
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.BackColor">
            <summary>
            Gets or sets Background Color of the PdfLine
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.Author">
            <summary>
            To specifying author
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.Subject">
            <summary>
            To specifying subject
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Int32[])">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="linePoints">The line points.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Int32[],System.String)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="linePoints">The line points.</param>
            <param name="text">The line caption text.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.LineBorder">
            <summary>
            Represents the border style of the Line annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.LineBorder.BorderWidth">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The line border width.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.LineBorder.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The line border style.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.LineBorder.DashArray">
            <summary>
            Gets or sets the Line Dash
            </summary>
            <value>The line border dash array.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.LineBorder.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLinkAnnotation">
            <summary>
            Represents the base class for link annotations.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLinkAnnotation.#ctor">
            <summary>
            Initializes new instance of  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DAnnotation">
            <summary>
            Represents the 3D annotation for a PDF document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DAnnotation.m_crossTable">
            <summary>
            The crossTable
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.Views">
            <summary>
            Gets the list of available views for the current 3D artwork.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.DefaultView">
            <summary>
            Gets or sets the default view.
            </summary>
            <value>The default view.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.OnInstantiate">
            <summary>
            Gets or sets the code to execute when the 3D artwork is instantiated. 
            <value>Javascript code to be executed when the 3D artwork is instantiated.</value>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.Activation">
            <summary>
            Gets or sets the activation options for the annotation. 
            </summary>
            <remarks>Defines the times at which the annotation should be activated and deactivated and the state of the 3D artwork instance at those times.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation._3DData">
            <summary>
            Gets a 3d viedo file from Pdf3DAnnotation
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.FileName">
            <value>Filename with Full path</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="fileName">Name of the sound file.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="crossTable">The cross table.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfInkAnnotation">
            <summary>
            Represents Ink annotation in the PDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfInkAnnotation.#ctor(System.Collections.Generic.List{System.Int32[]})">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="inkList"> annotation points position
            The annotation points position, defining the location of the annotation 
            on the page in default user space units.
            </param>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Annotations.PdfInkAnnotation.#ctor(System.Collections.Generic.List{System.Int32[]},System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Annotations.PdfInkAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dictionary">The annotation dictionary.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfInkAnnotation.Opacity">
            <summary>
            Gets or sets the annotation opacity. 
            <remarks>The opacity is given in decimal, 1 is full opacity, 0 is no opacity.</remarks>
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfInkAnnotationWidget">
            <summary>
             Represents the ink annotation class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfInkAnnotationWidget.m_inkList">
            <summary>
            The ink list.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfInkAnnotationWidget.m_crossTable">
            <summary>
            The crossTable
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfInkAnnotationWidget.m_dictionary">
            <summary>
            The dictionary
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfInkAnnotationWidget.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="crossTable">The cross table.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPolygonAnnotation">
            <summary>
            Represents the polygon annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolygonAnnotation.RADIUS">
            <summary>
            The radius.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolygonAnnotation.m_appearance">
            <summary>
            The appearance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAnnotation.Author">
            <summary>
            The user who created the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAnnotation.Subject">
            <summary>
            The description of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAnnotation.Vertices">
            <summary>
            The vertice coordinates.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAnnotation.ModifiedDate">
            <summary>
            The date and time when the annotation was most recently modified.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAnnotation.BorderEffect">
            <summary>
            The border effect.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAnnotation.#ctor(Spire.Pdf.PdfPageBase,System.Drawing.PointF[])">
            <summary>
            Initialize a new instance of PdfPolygonAnnotation.
            </summary>
            <param name="page">The page</param>
            <param name="points">The polygon vertices</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAnnotation.GetVertices">
            <summary>
            Get the vertices
            </summary>
            <returns>Return vertices</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAnnotation.GetRadius">
            <summary>
            Get the radius.
            </summary>
            <returns>The radius</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAnnotation.GenerateCloudBorderArc(System.Drawing.PointF[],System.Drawing.RectangleF[]@,System.Single[]@,System.Single[]@,System.Single)">
            <summary>
            Generate cloud border arctangle.
            </summary>
            <param name="polygonPoints">The polygon points</param>
            <param name="rectangles">The rectangles</param>
            <param name="startAnglesInDegrees">The start angles in degrees</param>
            <param name="sweepAnglesInDegrees">The sweep angles in degrees</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAnnotation.ReSetGraphicsMatrix">
            <summary>
            Reseting the graphics matrix.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAnnotation.DrawApContent">
            <summary>
            Draw the ap content.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPolyLineAnnotation">
            <summary>
            Represents the poly line annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolyLineAnnotation.m_Author">
            <summary>
            The user who created the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolyLineAnnotation.m_Subject">
            <summary>
            The description of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolyLineAnnotation.m_vertices">
            <summary>
            The radius.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolyLineAnnotation.m_appearance">
            <summary>
            The appearance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolyLineAnnotation.Author">
            <summary>
            The user who created the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolyLineAnnotation.Subject">
            <summary>
            The description of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolyLineAnnotation.Vertices">
            <summary>
            The vertice coordinates.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolyLineAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotation.Initialize">
            <summary>
            Initialize instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotation.Save">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotation.CreateRectangle">
            <summary>
            Create rectangle.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotation.#ctor(Spire.Pdf.PdfPageBase,System.Drawing.PointF[])">
            <summary>
            Initialize a new instance of PdfPolygonAnnotation.
            </summary>
            <param name="page">The page</param>
            <param name="points">The polygon vertices</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotation.DrawApContent">
            <summary>
            Draw the ap content.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotation.GetVertices">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfRubberStampAnnotation">
            <summary>
            Represents the Rubber Stamp annotation for a PDF document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotation.m_rubberStampAnnotaionIcon">
            <summary>
            internal varable for the rubberstamp annotation icon
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotation.m_appearance">
            <summary>
            Annotation's appearance.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotation.m_author">
            <summary>
            The annotation`s creater
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotation.m_createTime">
            <summary>
            The annotation`s creat time
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotation.m_subject">
            <summary>
            The annotation`s subject.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotation.Icon">
            <summary>
            Gets or sets the annotation's icon. 
            </summary>        
            <value>A  enumeration member specifying the icon for the annotation when it is displayed in closed state. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotation.Author">
            <summary>
            Gets or set the name of the annotation,the entry is deleted by default when the 
            input value is an empty string
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotation.Subject">
            <summary>
            Gets or sets the annotation's subject.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotation.CreationDate">
            <summary>
            Gets or sets the creation date.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfRubberStampAnnotation.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfRubberStampAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfRubberStampAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="text">Text of the rubber stamp annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfRubberStampAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfRubberStampAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfWatermarkAnnotation">
            <summary>
            The water mark annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfWatermarkAnnotation.m_fixedPrint">
            <summary>
            The fixed print dictionary.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfWatermarkAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="text">Text of the fixed print annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotation.SetMatrix(System.Single[])">
            <summary>
            Set the matrix.
            </summary>
            <param name="matrix">The matrix</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotation.SetHorizontalTranslation(System.Single)">
            <summary>
            Set the horizontal translation.
            </summary>
            <param name="horizontal">The horizontal</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotation.SetVerticalTranslation(System.Single)">
            <summary>
            Set the vertical translation.
            </summary>
            <param name="vertical">The vertiacl</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextWebLink">
            <summary>
            Represents the class for text web link annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextWebLink.Url">
            <summary>
            Gets or sets the Url address.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextWebLink.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextWebLink.DrawTextWebLink(Spire.Pdf.PdfNewPage,System.Drawing.PointF)">
            <summary>
            Draws a Text Web Link on the Page
            </summary>
            <param name="page">The page where the annotation should be placed.</param>
            <param name="location">The location of the annotation.</param>
            <returns>Pdf Layout result</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextWebLink.DrawTextWebLink(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.PointF)">
            <summary>
            Draw a Text Web Link on the Graphics
            </summary>
            <param name="graphics">The  object specifies where annotation should be placed..</param>
            <param name="location">The location of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextWebLink.AddAnnotationToPage(Spire.Pdf.PdfPageBase,System.Single)">
            <summary>
            Add annotation to page.
            </summary>
            <param name="page">The page</param>
            <param name="advance">The advance</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextMarkupAnnotation">
            <summary>
            Represents the text markup annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.TextMarkupAnnotationType">
            <summary>
            Gets or sets TextMarkupAnnotationType .
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.TextMarkupColor">
            <summary>
            Gets or sets text markup color.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor">
            <summary>
            Initializes new instance of  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor(System.String,System.String,System.String,System.Drawing.PointF,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="markupTitle">The markup annotation title.</param>
            <param name="text">The string specifies the text of the annotation.</param>
            <param name="markupText">The string specifies the markup text of the annotation.</param>
            <param name="point">The location of the markup text annotation.</param>
            <param name="pdfFont">The  specifies the text appearance of the markup text annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor(System.String,System.String,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="title">The title of the annotation.</param>
            <param name="text">The text of the annotation.</param> 
            <param name="rect">The bounds of the annotation.</param>
            <param name="font">The font of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor(System.String,System.String,System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of  class.
            </summary>       
            <param name="title">The title of the annotation.</param>
            <param name="text">The text of the annotation.</param>     
            <param name="rect">The bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationWidget">
            <summary>
            Represents the base class for loaded annotation classes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidget.ObjectID">
            <summary>
            Represents the Form field identifier
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationWidget.PageWidget">
            <summary>
            Gets and sets the Page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationWidget.SetText(System.String)">
            <summary>
            Sets the name of the field.
            </summary>
            <param name="name">New name of the field.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAttachmentAnnotationWidget">
            <summary>
            Represents the attachment annotation from the loaded document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAttachmentAnnotationWidget.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAttachmentAnnotationWidget.FileName">
            <summary>
             Gets the attachment file name of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfCaretAnnotationWidget">
            <summary>
            Represents the loaded caret annotation class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.m_crossTable">
            <summary>
            The crossTable
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.m_dictionary">
            <summary>
            The dictionary
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.m_rectangularDifferenceArray">
            <summary>
            An array that describing the numerical differences between the annotation rectganle entry 
            and the actual boundaries
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.m_symbol">
            <summary>
            specifying a symbol
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.Symbol">
            <summary>
            Gets or sets the symbol
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.RectangularDifferenceArray">
            <summary>
            Gets or sets the rectangular diffecences array
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="crossTable">The cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.GetRectDifferenceArray">
            <summary>
            Set the rectangular differences array
            </summary>
            <returns>An float array</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.GetSymbol">
            <summary>
            Gets the symbol
            </summary>
            <returns>The symbol</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.SetRectDifferenceArray(System.Single[])">
            <summary>
            Set the rectangular differences array
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.CheckValidity(System.Single[])">
            <summary>
            Check the validity of the array 
            </summary>
            <param name="f">The float array</param>
            <returns>Validity return true or false</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfCaretAnnotationWidget.CheckDigitalValidity(System.Single[])">
            <summary>
            Check the validity of the number in array  
            </summary>
            <param name="f">The array</param>
            <returns>Validity return true or false</returns>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfDocumentLinkAnnotationWidget">
            <summary>
            Represents the loaded document link annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfDocumentLinkAnnotationWidget.Destination">
            <summary>
            Gets or Sets the destination of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfFileLinkAnnotationWidget">
            <summary>
            Represents the loaded file link annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileLinkAnnotationWidget.FileName">
            <summary>
             Gets or sets the filename of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget">
            <summary>
            Represents the free text annotation widget.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.m_rectangularDifferenceArray">
            <summary>
            An array that describing the numerical differences between the annotation rectganle entry 
            and the actual boundaries
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.ModifiedDate">
            <summary>
            Gets or sets the date and time when the annotation was most recently modified.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.RectangularDifferenceArray">
            <summary>
            Gets or sets the rectangular diffecences array
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.Intent">
            <summary>
            Gets a name describing the intent of the free text annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.LineEndingStyle">
            <summary>
            Get the line ending style
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.CalloutLines">
            <summary>
            Get the callout line
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.BorderWidth">
            <summary>
            Gets the border width.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.BorderColor">
            <summary>
            Gets the border color
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.BorderStyle">
            <summary>
            Gets the border style
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.GetRectDifferenceArray">
            <summary>
            Gets the rectangular diffecences array
            </summary>
            <returns>An float array</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.SetRectDifferenceArray(System.Single[])">
            <summary>
            Set the rectangular differences array
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.CheckValidity(System.Single[])">
            <summary>
            Check the validity of the array 
            </summary>
            <param name="f">The float array</param>
            <returns>Validity return true ,or false</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFreeTextAnnotationWidget.CheckDigitalValidity(System.Single[])">
            <summary>
            Check the validity of the number in array  
            </summary>
            <param name="f">The array</param>
            <returns>Validity return true ,or false</returns>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineAnnotationWidget">
            <summary>
            Represents the loaded line annotation class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineAnnotationWidget.m_author">
            <summary>
            To specifying author
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineAnnotationWidget.m_subject">
            <summary>
            To specifying subject
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.BackColor">
            <summary>
            Gets or sets the back color of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.BeginLineStyle">
            <summary>
            Gets or sets the begin line style of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.CaptionType">
            <summary>
            Gets or sets the caption type of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.EndLineStyle">
            <summary>
            Gets or sets the end line style of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.InnerLineColor">
            <summary>
            Gets or sets the inner line color of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LeaderLine">
            <summary>
            Gets or sets the leader line of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.EndPoint">
            <summary>
            Gets the endpoint of the annotation, it's at the bottom left
            The origin of coordinate system corresponds to the lower-left corner of page.The positive x axis extends horizontally to the right and the positive y axis vertically upward
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.StartPoint">
            <summary>
            Gets the startpoint of the annotation, it's at the bottom left
            The origin of coordinate system corresponds to the lower-left corner of page.The positive x axis extends horizontally to the right and the positive y axis vertically upward      
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LeaderExt">
            <summary>
            Gets or sets the leader ext of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LineBorder">
            <summary>
            Gets the line border of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LineCaption">
            <summary>
            Gets or sets the line caption of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LineIntent">
            <summary>
            Gets or sets the line intent of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.Author">
            <summary>
            To specifying author
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.Subject">
            <summary>
            To specifying subject
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotationWidget.BuildAppearanceDictionary">
            <summary>
            Build appearance dictioanry.
            </summary>
            <returns>The appearance dictioanry</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotationWidget.Build(Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder)">
            <summary>
            Build appearance dictioanry.
            </summary>
            <returns>The appearance dictioanry</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotationWidget.GetBeginLineStyleData">
            <summary>
            Get begin line style point data.
            </summary>
            <returns>The point array data</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotationWidget.GetEndLineStylePointFData">
            <summary>
            Get end line style point data.
            </summary>
            <returns>The point array data</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotationWidget.GetOpenArrowStyleData(System.Drawing.PointF)">
            <summary>
            Get open arrow style data.
            </summary>
            <param name="point">The point</param>
            <returns>The point array data</returns>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget">
            <summary>
            Represents the loaded markup annotation class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.m_crossTable">
            <summary>
            The crossTable
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.m_dictionary">
            <summary>
            The dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.PrimaryMarkupAnnotation">
            <summary>
            Gets or sets the primary markup annotation
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.RelyType">
            <summary>
            Gets or set the rely type
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.Intent">
            <summary>
            Gets or sets the intent
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.RichContent">
            <summary>
            Gets or sets the rich content
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.PopupAnnotation">
            <summary>
            Gets the popup annotation
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.Author">
            <summary>
            Gets or sets the annotation's author.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.CreationDate">
            <summary>
            Gets or sets the date and time when the annotation was created.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.Subject">
            <summary>
            Gets or sets the annotation's subject.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.Opacity">
            <summary>
            Gets the opacity value to be used.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="crossTable">The cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.SetTitleText(System.String)">
            <summary>
            Sets the name of the annotation,the entry is deleted by default when the input
            value is an empty string
            </summary>
            <param name="text">New name of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetPrimaryMarkupAnnotation">
            <summary>
            Get the promary markup annotation
            </summary>
            <returns>The promary markup annotation</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetRelyType">
            <summary>
            Gets the rely type,deauflt value is MarkupAnnotationRelyType.R
            </summary>
            <returns>The rely type</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetRichContent">
            <summary>
            Gets teh rich content
            </summary>
            <returns>rich content</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetPopupAnnotation">
            <summary>
            Gets the popup annotation
            </summary>
            <returns>The popup annotation</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetAuthor">
            <summary>
            Gets the annotation's author.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetCreationDate">
            <summary>
            Gets the date and time when the annotation was created.
            </summary>
            <returns>The time when the annotation was created</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetIntent">
            <summary>
            Gets the intent
            </summary>
            <returns>The intent</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetOpacity">
            <summary>
            Gets the opacity
            </summary>
            <returns>The opacity</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfMarkUpAnnotationWidget.GetSubject">
            <summary>
            Gets the annotation's subject.
            </summary>
            <returns>The annotation's subject</returns>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget">
            <summary>
            Represents the loaded text PolygonAndPolyLine annotation class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.m_crossTable">
             <summary>
             CrossTable
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.m_dictionary">
            <summary>
            Dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.Vertices">
            <summary>
            The vertice coordinates.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.InteriorColor">
            <summary>
            Gets or sets the inner line color of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="crossTable">The cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.GetVertices">
            <summary>
            Get the vertices
            </summary>
            <returns>Return vertices</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.SetVertices(System.Drawing.PointF[])">
            <summary>
            Set the vertices
            </summary>
            <param name="pointf">The pointf array</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.CheckVertices(System.Drawing.PointF[])">
            <summary>
            Check the vertices is valid
            </summary>
            <param name="points">The points</param>
            <returns>if vaild ,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.GetInteriorColor">
            <summary>
            Gets back color of the annotation.
            </summary>
            <returns>The back color.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAndPolyLineAnnotationWidget.SetInteriorColor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Set the inner line color
            </summary>
            <param name="value">The pdf rgb color</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPolygonAnnotationWidget">
            <summary>
            Represents the loaded text Polygon annotation class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolygonAnnotationWidget.m_crossTable">
             <summary>
             The crossTable
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolygonAnnotationWidget.m_dictionary">
            <summary>
            The dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolygonAnnotationWidget.Intent">
            <summary>
            Get or set the intent
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAnnotationWidget.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="crossTable">The cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolygonAnnotationWidget.GetIntent">
            <summary>
            Gets the intent
            </summary>
            <returns>The intent</returns>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget">
            <summary>
            Represents the loaded text Polygon annotation class.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.m_crossTable">
             <summary>
             The crossTable
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.m_dictionary">
            <summary>
            The dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.Intent">
            <summary>
            Get or set the intent
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.LineEndingStyle">
            <summary>
            Get or set the line ending style
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="crossTable">The cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.GetIntent">
            <summary>
            Gets the intent
            </summary>
            <returns>The intent</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.GetLineEndingStyle">
            <summary>
            Gets the intent
            </summary>
            <returns>The intent</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.BuildAppearanceDictionary">
            <summary>
            Build appearance dictioanry.
            </summary>
            <returns>The appearance dictioanry</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPolyLineAnnotationWidget.Build(Spire.Pdf.Interactive.Annotations.AnnotationAppearanceBuilder)">
            <summary>
            Build data.
            </summary>
            <param name="apBuilder">The ap builder</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPopupAnnotationWidget">
            <summary>
            Represents the loaded pop up annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotationWidget.Open">
            <summary>
            Gets or sets the open option of the popup annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotationWidget.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfRubberStampAnnotationWidget">
            <summary>
            Represents the loaded rubber stamp annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotationWidget.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfSoundAnnotationWidget">
            <summary>
            Represents the loaded sound annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotationWidget.Sound">
            <summary>
            Gets or sets the sound of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotationWidget.FileName">
            <summary>
            Gets the filename of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotationWidget.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.m_crossTable">
            <summary>
            The crossTable
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.m_dictionary">
            <summary>
            The dictionary
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.InteriorColor">
            <summary>
            Gets or sets the inner line color of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.RectangularDifferenceArray">
            <summary>
            Gets or sets the rectangular diffecences array
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.GetInteriorColor">
            <summary>
            Gets back color of the annotation.
            </summary>
            <returns>The back color.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.SetInteriorColor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Set the inner line color
            </summary>
            <param name="value">The pdf rgb color</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.GetRectDifferenceArray">
            <summary>
            Gets the rectangular diffecences array
            </summary>
            <returns>An float array</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.SetRectDifferenceArray(System.Single[])">
            <summary>
            Set the rectangular differences array
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.CheckValidity(System.Single[])">
            <summary>
            Check the validity of the array 
            </summary>
            <param name="f">The float array</param>
            <returns>Validity return true ,or false</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfSquareAnnotationWidget.CheckDigitalValidity(System.Single[])">
            <summary>
            Check the validity of the number in array  
            </summary>
            <param name="f">The array</param>
            <returns>Validity return true ,or false</returns>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfStyledAnnotationWidget">
            <summary>
            Represents the PdfLoadedStyledAnnotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <!-- 对于成员“P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Bounds”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Border">
            <summary>
            Gets or sets the annotation's border.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.AnnotationFlags">
            <summary>
            Gets or sets the annotation flags.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationWidget.m_annotationAuthor">
            <summary>
            The author of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationWidget.m_annotationState">
            <summary>
            The state of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationWidget.m_annotationStateModel">
            <summary>
            The stateModel of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextAnnotationWidget.State">
            <summary>
             Gets the annotation's state.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextAnnotationWidget.StateModel">
            <summary>
             Gets the annotation's stateModel.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextAnnotationWidget.IconNmae">
            <summary>
            Gets the iconname value to be used.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextAnnotationWidget.Open">
            <summary>
            Gets the open option of the popup annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextMarkupAnnotationWidget">
            <summary>
            Represents the loaded text markup annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextMarkupAnnotationWidget.TextMarkupAnnotationType">
            <summary>
            Gets or sets the annotation Type.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextMarkupAnnotationWidget.TextMarkupColor">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextWebLinkAnnotationWidget">
            <summary>
            Represents the loaded text web link annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextWebLinkAnnotationWidget.Url">
            <summary>
            Gets or sets the Url.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfUriAnnotationWidget">
            <summary>
            Represents the loaded unique resource identifier annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfUriAnnotationWidget.Uri">
            <summary>
            Gets or sets the unique resource identifier text of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfWatermarkAnnotationWidget">
            <summary>
            The water mark annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotationWidget.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotationWidget.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="text">Text of the fixed print annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfWatermarkAnnotationWidget.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfWebLinkAnnotationWidget">
            <summary>
            Represents the loaded web link annotation class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfSoundIcon">
            <summary>
            Specifies the name of an icon to be used in displaying the sound annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfSoundIcon.Speaker">
            <summary>
            Speaker icon of sound link.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfSoundIcon.Mic">
            <summary>
            Microphone icon of sound link.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAttachmentIcon">
            <summary>
            Specifies the type of icon to be used in displaying file attachment annotations.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAttachmentIcon.PushPin">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAttachmentIcon.Tag">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAttachmentIcon.Graph">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAttachmentIcon.Paperclip">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationFlags">
            <summary>
            Specifies the enumeration of the annotation flags.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Default">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Invisible">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Hidden">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Print">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.NoZoom">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.NoRotate">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.NoView">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.ReadOnly">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Locked">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.ToggleNoView">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPopupIcon">
            <summary>
            Specifies the enumeration of popup annotation icons.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Note">
            <summary>
            Indicates note popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Comment">
            <summary>
            Indicates comment popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Help">
            <summary>
            Indicates help popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Insert">
            <summary>
            Indicates insert popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Key">
            <summary>
            Indicates key popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.NewParagraph">
            <summary>
            Indicates new paragraph popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Paragraph">
            <summary>
            Indicates paragraph popup annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextAnnotationIcon">
            <summary>
            Specifies the enumeration of popup annotation icons.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationIcon.Note">
            <summary>
            Indicates note text annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationIcon.Comment">
            <summary>
            Indicates comment text annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationIcon.Help">
            <summary>
            Indicates help text annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationIcon.Insert">
            <summary>
            Indicates insert text annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationIcon.Key">
            <summary>
            Indicates key text annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationIcon.NewParagraph">
            <summary>
            Indicates new paragraph text annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextAnnotationIcon.Paragraph">
            <summary>
            Indicates paragraph text annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon">
            <summary>
            Specifies the enumeration of rubber stamp annotation icons.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Additional">
            <summary>
            Indicates additional names rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Approved">
            <summary>
            Indicates approved rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.AsIs">
            <summary>
            Indicates AsIs rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Confidential">
            <summary>
            Indicates confidential rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Departmental">
            <summary>
            Indicates departmental rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Draft">
            <summary>
            Indicates draft rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Experimental">
            <summary>
            Indicates experimental rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Expired">
            <summary>
            Indicates expired rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Final">
            <summary>
            Indicates final rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.ForComment">
            <summary>
            Indicates for comment rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.ForPublicRelease">
            <summary>
            Indicates for public release rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.NotApproved">
            <summary>
            Indicates not approved rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.NotForPublicRelease">
            <summary>
            Indicates not for public release rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Sold">
            <summary>
            Indicates sold rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.TopSecret">
            <summary>
            Indicates topsecret rubber stamp annotation
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineEndingStyle">
            <summary>
            Specifies the Line Ending Style to be used in the Line annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Square">
            <summary>
            Indicates Square
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Circle">
            <summary>
            Indicates Circle
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Diamond">
            <summary>
            Indicates Diamond
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.OpenArrow">
            <summary>
            Indicates OpenArrow
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.ClosedArrow">
            <summary>
            Indicates ClosedArrow
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.None">
            <summary>
            Indicates None
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.ROpenArrow">
            <summary>
            Indicates ROpenArrow
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Butt">
            <summary>
            Indicates Butt
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.RClosedArrow">
            <summary>
            IdicaIndicatestes RClosedArrow
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Slash">
            <summary>
            Indicates Slash
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineBorderStyle">
            <summary>
            Specifies the Line Border Style is to be used in the Line annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Solid">
            <summary>
            Indicates Solid
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Dashed">
            <summary>
            Indicates Dashed
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Beveled">
            <summary>
            Indicates Beveled
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Inset">
            <summary>
            Indicates Inset
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Underline">
            <summary>
            Indicates Underline
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineIntent">
            <summary>
            Specifies the Line Intent Style is to be used in the Line annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineIntent.LineArrow">
            <summary>
            Indicates Line Arrow as intent of the line annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineIntent.LineDimension">
            <summary>
            Indicates LineDimension as intent of the line annotation
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineCaptionType">
            <summary>
            Specifies the Line Caption Type is to be used in the Line annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType">
            <summary>
            Specifies the Style of the Text Markup Annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType.Highlight">
            <summary>
            The Text Markup Annotation Type is Highlight.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType.Underline">
            <summary>
            The Text Markup Annotation Type is Underline.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType.Squiggly">
            <summary>
            The Text Markup Annotation Type is Squiggly.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType.StrikeOut">
            <summary>
            The Text Markup Annotation Type is StrikeOut.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes">
            <summary>
            Specifies the annotation types.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.Highlight">
            <summary>
            Highlight type annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.Underline">
            <summary>
            Underline type annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.StrikeOut">
            <summary>
            StrikeOut type annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.Squiggly">
            <summary>
            Squiggly type annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.AnnotationStates">
            <summary>
            AnnotationStates type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.TextAnnotation">
            <summary>
            TextAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.LinkAnnotation">
            <summary>
            LinkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.DocumentLinkAnnotation">
            <summary>
            DocumentLinkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.FileLinkAnnotation">
            <summary>
            FileLinkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.FreeTextAnnotation">
            <summary>
            FreeTextAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.LineAnnotation">
            <summary>
            LineAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.SquareandCircleAnnotation">
            <summary>
            SquareandCircleAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.PolygonandPolylineAnnotation">
            <summary>
            PolygonandPolylineAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.TextMarkupAnnotation">
            <summary>
            TextMarkupAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.CaretAnnotation">
            <summary>
            CaretAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.RubberStampAnnotation">
            <summary>
            RubberStampAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.LnkAnnotation">
            <summary>
            LnkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.PopupAnnotation">
            <summary>
            PopupAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.FileAttachmentAnnotation">
            <summary>
            FileAttachmentAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.SoundAnnotation">
            <summary>
            SoundAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.MovieAnnotation">
            <summary>
            MovieAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.ScreenAnnotation">
            <summary>
            ScreenAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.WidgetAnnotation">
            <summary>
            WidgetAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.PrinterMarkAnnotation">
            <summary>
            PrinterMarkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.TrapNetworkAnnotation">
            <summary>
            TrapNetworkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.WatermarkAnnotation">
            <summary>
            WatermarkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.TextWebLinkAnnotation">
            <summary>
            TextWebLinkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes._3DAnnotation">
            <summary>
            3DAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.Null">
            <summary>
            No annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.PolygonAnnotation">
            <summary>
            Polygon Annotation type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.PolyLineAnnotation">
            <summary>
            PolyLine Annotation type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.SquareAnnotation">
            <summary>
            Square Annotation type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.InkAnnotation">
            <summary>
            Ink Annotation type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.CircleAnnotation">
            <summary>
            Circle Annotation type
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPolygonIntent">
            <summary>
            polygon annotation intent type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolygonIntent.PolygonCloud">
            <summary>
            Indicates that the annotaiton is intended to function as a cloud
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolygonIntent.PolygonDimension">
            <summary>
            Indicates that the annotaiton is intended to function as dimension
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPolyLineIntent">
            <summary>
            polyLine annotation intent type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPolyLineIntent.PolyLineDimension">
            <summary>
            Indicates that the annotaiton is intended to function as dimension
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotation">
            <summary>
            Represents the base class for annotation objects.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotation.m_annotationName">
            <summary>
            The name of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotation.m_annotationModifiedDate">
            <summary>
            The ModifiedDate of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Color">
            <summary>
            Gets or sets the background of the annotations icon when closed.
            The title bar of the annotations pop-up window.
            The border of a link annotation.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.ModifiedDate">
            <summary>
            Gets annotation's modified date.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Border">
            <summary>
            Gets or sets annotation's border.
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Pdf.Annotations.PdfAnnotation.Rectangle”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Location">
            <summary>
            Gets or sets location of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Name">
            <summary>
            Gets or sets the name of the annotation.
            Note: The annotation name, a text string uniquely identifying it among all the annotations on its page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Size">
            <summary>
            Gets or sets size of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Page">
            <summary>
            Gets a page which this annotation is connected to.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Text">
            <summary>
            Gets or sets content of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Flags">
            <summary>
            Gets or sets annotation flags.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotation.SetApDictionary">
            <summary>
            Set ap dictionary.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotation.BuildAppearanceDictionary">
            <summary>
            Build appearance dictionary.
            </summary>
            <returns>The appearance dictionary</returns>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationBorder">
            <summary>
            Represents the appearance of an annotation's border.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationBorder.HorizontalRadius">
            <summary>
            Gets or sets a horizontal corner radius.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationBorder.VerticalRadius">
            <summary>
            Gets or sets a vertical corner radius.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationBorder.Width">
            <summary>
            Gets or sets the width of annotation's border. 
            </summary>
            <value>A float value specifying the width of the annotation's border. </value>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationBorder.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationBorder.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="borderWidth">A float value specifying the width of the annotation's border.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationBorder.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="borderWidth">A float value specifying the width of the annotation's border.</param>
            <param name="horizontalRadius">A float value specifying the horizontal corner radius value.</param>
            <param name="verticalRadius">A float value specifying the vertical corner radius value.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationCollection">
            <summary>
            Represents collection of  objects.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationCollection.Item(System.Int32)">
            <summary>
            Gets the  object at the specified position.
            </summary>
            <param name="index">The index value of the annotation in the collection. </param>
            <returns>Annotation object at the specified position.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.#ctor(Spire.Pdf.PdfNewPage)">
            <summary>
            Creates new annotation collection for the specified page.
            </summary>
            <param name="page">Page which collection is created for.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Add(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Adds a new annotation to collection. 
            </summary>
            <param name="annotation">The new annotation to be added to collection.</param>
            <returns>Position of the annotation in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Clear">
            <summary>
            Cleares the collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Contains(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Searches the collection for the specified annotation. 
            </summary>
            <param name="annotation">The annotation to search for.</param>
            <returns>True, if annotation is contained in collection. Otherwise - false.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.IndexOf(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Searches the collection for the specified annotation. 
            </summary>
            <param name="annotation">The Annotation to search.</param>
            <returns>Index of the element in the collection, if exists, or -1 if the element does not exist in the collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Insert(System.Int32,Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Inserts annotation to the collection at the specified index.
            </summary>
            <param name="index">Index where to insert the element.</param>
            <param name="annotation">The annotation to insert in the collection.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified field.
            </summary>
            <param name="index">The index of the element to remove.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Remove(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Removes the element from the collection. 
            </summary>
            <param name="field">The element to remove.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAttachmentAnnotation">
            <summary>
            Represents an attachment annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAttachmentAnnotation.Icon">
            <summary>
            Gets or Sets attachment's icon.
            </summary>
            <value>A  enumeration member specifying the icon for the annotation when it is displayed in closed state.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAttachmentAnnotation.FileName">
            <value>A string value specifying the full path to the file to be embedded in the PDF file.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String,System.Byte[])">
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
            <param name="data">A byte array specifying the content of the annotation's embedded file. </param>
            <remarks>If both FileName and FileContent are specified, the FileContent takes precedence. </remarks>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String,System.IO.Stream)">
            <param name="rectangle">The rectangle.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
            <param name="stream">The stream specifying the content of the annotation's embedded file. </param>
            <remarks>If both FileName and FileContent are specified, the FileContent takes precedence. </remarks>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfDocumentLinkAnnotation">
            <summary>
            Represents annotation object with holds link on another location within a document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfDocumentLinkAnnotation.Destination">
            <summary>
            Gets or sets the destination of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfDocumentLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new  instance.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfDocumentLinkAnnotation.#ctor(System.Drawing.RectangleF,Spire.Pdf.General.PdfDestination)">
            <summary>
            Initializes new  instance.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="destination">Destination of the annotation.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfFileAnnotation">
            <summary>
            Represents a base class for file attachment annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfFileAnnotation.m_crossTable">
            <summary>
            The crossTable
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileAnnotation.FileName">
            <summary>
            Gets or sets file name of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFileAnnotation.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="crossTable">The cross table.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfFileLinkAnnotation">
            <summary>
            Represents the annotation link to external file.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileLinkAnnotation.FileName">
            <value>A string value specifying the full path to the file to be embedded.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileLinkAnnotation.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action to be executed when the annotation is activated.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFileLinkAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPopupAnnotation">
            <summary>
            Represents a Base class for popup annotation which can be either in open or closed state.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotation.Icon">
            <summary>
            Gets or sets icon style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotation.Open">
            <summary>
            Gets or sets value whether annotation is initially open or closed
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPopupAnnotation.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPopupAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPopupAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="text">The string specifies the annotation text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfSoundAnnotation">
            <summary>
            Represents the sound annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotation.Icon">
            <summary>
            Gets or sets the icon to be used in displaying the annotation.
            </summary>
            <value>The  enumeration member specifying the icon for the annotation.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotation.Sound">
            <summary>
            Gets or sets the sound.
            </summary>
            <value>The  object specified a sound for the annotation.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotation.FileName">
            <value>The string specifies the file name of the sound annotation.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfSoundAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="fileName">The string specifies the file name of the sound annotation.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfUriAnnotation">
            <summary>
            Represents the Uri annotation
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfUriAnnotation.Uri">
            <summary>
            Gets or sets the Uri address.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfUriAnnotation.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The  object specifies the action of the annotation.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfUriAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>        
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfUriAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="uri">unique resource identifier path.</param>
        </member>
        <member name="M:Spire.Pdf.Exporting.Text.IOCR.GetTextFromImage(System.Drawing.Image)">
            <summary>
            return text from image by OCR.
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Exporting.Text.SimpleTextExtractionStrategy">
            <summary>
            This extractor keeps track of the current Y position of each string. If it detectsthat the y position has changed, it inserts a line break into the output.If the PDF extractor text in a non-top-to-bottom fashion, this will result in the text not being a true representation of how it appears in the PDF.
            </summary>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="T:Spire.Pdf.Exporting.PdfImageInfo">
            <summary>
            Represents the utility class to store information about Images and its location.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Exporting.PdfImageInfo.m_objNum">
            <summary>
            The number of indirect objects.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Exporting.PdfImageInfo.m_objStream">
            <summary>
            The original stream object.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfImageInfo.Bounds">
            <summary>
            Gets the Image Boundary location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfImageInfo.Image">
            <summary>
            Gets the Image,save to stream.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfImageInfo.Index">
            <summary>
            Gets the Image index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfImageInfo.ObjectNumber">
            <summary>
            The number of indirect object.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfImageInfo.OjbectStream">
            <summary>
            The original stream object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfImageInfo.HasSMask(Spire.Pdf.Core.PdfStream)">
            <summary>
            Whether the current image contains SMask entry
            </summary>
            <param name="m_objStream">The current image stream obejct</param>
            <returns>if has return true or false</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfImageInfo.Dispose">
            <summary>
            dispose the image resources
            </summary>
        </member>
        <member name="T:Spire.Pdf.Exporting.PdfToHtml.PdfToHtmlParameter">
            <summary>
            Pdf to html Set Parameter
            </summary>
        </member>
        <member name="F:Spire.Pdf.Exporting.PdfToHtml.PdfToHtmlParameter.m_SplitHtmlNumber">
            <summary>
            In 1000 The Split Page
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfToHtml.PdfToHtmlParameter.SplitHtmlNumber">
            <summary>
            In 1000 The Split Page,default 1000
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfToHtml.PdfToHtmlParameter.IsEmbedImage">
            <summary>
            wheather embedded image
            </summary>
        </member>
        <member name="F:Spire.Pdf.Exporting.PdfToHtml.HtmlExportOptions.m_PdfToHtmlParameter">
            <summary>
            Pdf to Html, Set Parameter
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfToHtml.HtmlFileExport.WriteDocComment">
            <summary>
            Writes the doc Comment
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfToHtml.HtmlFileExport.DocumentPageStart(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="PageWidth"></param>
            <param name="PageMarginTopHeight"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfToHtml.HtmlFileExport.DocumentPageEnd">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfToHtml.HtmlFileExport.JavaScript">
            <summary>
            
            </summary>
            <param name="js"></param>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfToHtml.Html.HtmlCssWriter.StyleId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfToHtml.Html.HtmlCssWriter.CssFileNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfToHtml.Html.HtmlTextWriter.FilesFolder">
            <summary>
            Get file Folder
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfToHtml.Html.HtmlTextWriterHelper.DocComment(System.String)">
            <summary>
            write doc comment
            </summary>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfToHtml.Html.HtmlUtils.GetSaveFileRelativePath(System.String)">
            <summary>
            Save file  Relative Path
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfToHtml.Html.HtmlUtils.GetHtmlSaveFilesFolder(System.String)">
            <summary>
            Save file folder
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.PdfToHtml.XhtmlFileExport.WriteDocComment">
            <summary>
            write doc comment
            </summary>
            <param name="comment"></param>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Reader.PathDataReader">
            <summary>
            Represents the path data reader.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.EOF">
            <summary>
            Gets a value indicating whether this <see cref="!:StringTokenizer"/> is EOF.
            </summary>
            <value><c>true</c> if EOF; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.Length">
            <summary>
            Gets text length.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PathDataReader class.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.ReadSymbol">
            <summary>
            Reads the symbols
            </summary>
            <returns>Symbol</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.GetNextSymbol">
            <summary>
            Gets the next symbol
            </summary>
            <returns>Symbol</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.GetNextSymbolPosition">
            <summary>
            Gets the next symbol position.
            </summary>
            <returns>The next symbol position</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.UpdateCurrentPosition(System.Int32)">
            <summary>
            Updates the current position of the reader
            </summary>
            <param name="length">Length of the path data</param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.TryReadFloat(System.Single@)">
            <summary>
            Reads the float value from the path data
            </summary>
            <param name="value">float value</param>
            <returns>True if the next value is float</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.TryReadPoint(System.Drawing.PointF@)">
            <summary>
            Reads the pint form the path data
            </summary>
            <param name="point">Point value</param>
            <returns>True if the next parameter is point</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.TryReadPoints">
            <summary>
            Reads the points from the path data
            </summary>
            <returns>Points</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.CheckIfCurrentCharIsSymbol">
            <summary>
            Checks if the current character is symbol
            </summary>
            <returns>True if the character is a symbol</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadName(System.String,System.Int32@)">
            <summary>
            Reads the Name of the element
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>Name</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadBoolean(System.String,System.Int32@)">
            <summary>
            Reads the boolean value from the Data
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>True if the next value is boolean</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadDouble(System.String,System.Int32@)">
            <summary>
            Reads the float from the data.
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>float value</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadPoint(System.String,System.Int32@)">
            <summary>
            Reads the point from the data
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>point</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadMatrix(System.String,System.Int32@)">
            <summary>
            Reads the matrix from the data
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>Matrix</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Exporting.XPS.Reader.XPSDocumentReader.GetAttributeFromXmlHeader(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDocumentReader.FindItemFromRels(System.String)">
            <summary>
            Find item by searching in the .rels file
            </summary>
            <param name="relsPath"></param>
            <returns>The index of item</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDocumentReader.GetItemFromAlternateContent(System.Byte[],System.Type)">
            <summary>
            Get item from alternate content
            </summary>
            <param name="data">alternate content data</param>
            <param name="itemType">the type of item</param>
            <returns>the item</returns>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Reader.XPSElementType">
            <summary>
            Enumerator representing the available XPS elements.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.CreateGlyphInfo(Spire.Pdf.Graphics.Fonts.UnicodeTrueTypeFont,System.Int32)">
            <summary>
            Create a new ttf glyph.
            </summary>
            <param name="font">The ttf font</param>
            <param name="index">The glyph index</param>
            <returns>A new ttf glyph info</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.GetUnicode(System.Collections.Generic.Dictionary{System.Int32,Spire.Pdf.Graphics.Fonts.TtfGlyphInfo},Spire.Pdf.Graphics.Fonts.TtfGlyphInfo)">
            <summary>
            Add char code to glyph info.
            </summary>
            <param name="microsoft">The microsft</param>
            <param name="glyphInfo">The glyph info</param>
            <returns>The char code</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.ExsitGlyphCharCode(Spire.Pdf.Graphics.TtfReader,System.Int32,System.Int32)">
            <summary>
            Whether exsit glyph char code 
            </summary>
            <param name="ttfReader">The true type reader</param>
            <param name="glyphIndex">The glyph index</param>
            <param name="charCode">The char code</param>
            <returns>if exsit return true or false</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.GetIntArraySpiltIndices(System.String)">
            <summary>
            Bug897
            </summary>
            <param name="Indices"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.DrawAlternateContent(Spire.Pdf.Exporting.XPS.Schema.Mc.AlternateContent)">
            <summary>
            Converts the alternateContent graphics to PDF graphics.
            </summary>
            <param name="alternateContent"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.DrawChoice(Spire.Pdf.Exporting.XPS.Schema.Mc.Choice,System.String)">
            <summary>
             Converts the choice graphics to PDF graphics.
            </summary>
            <param name="choice"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.DrawFallback(Spire.Pdf.Exporting.XPS.Schema.Mc.Fallback,System.String)">
            <summary>
             Converts the fallback graphics to PDF graphics.
            </summary>
            <param name="fallback"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.DrawBaloo(Spire.Pdf.Exporting.XPS.Schema.Mc.Baloo,System.String)">
            <summary>
             Converts the baloo graphics to PDF graphics.
            </summary>
            <param name="baloo"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.GetImage(System.String,System.String)">
            <summary>
            Get the base image and mask image
            </summary>
            <param name="imageUrl"></param>
            <param name="imageMaskUrl"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Renderer.ICCProfile.Index">
            <summary>
            The index of the profile in the xps archive
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Renderer.ICCProfile.Data">
            <summary>
            The data of icc proifle
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Renderer.ICCProfile.Components">
            <summary>
            The number of color components
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.ICCProfile.#ctor(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Initialize a new ICCProfile
            </summary>
            <param name="index">The index of the profile in the xps archive</param>
            <param name="data">The data of icc proifle</param>
            <param name="components">The number of color components</param>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DiscardControl">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DiscardControl.Discard">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Discard">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Discard.SentinelPage">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Discard.Target">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DocumentStructure">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentStructure.DocumentStructureOutline">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentStructure.Story">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Outline">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Outline.DocumentOutline">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DocumentOutline">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentOutline.OutlineEntry">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentOutline.lang">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry.OutlineLevel">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry.OutlineTarget">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry.Description">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry.lang">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Story">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Story.StoryFragmentReference">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Story.StoryName">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.StoryFragmentReference">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragmentReference.FragmentName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragmentReference.Page">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.StoryFragments">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragments.StoryFragment">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.StoryFragment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.StoryBreak">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.StoryBreak1">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.StoryName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.FragmentName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.FragmentType">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Break">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Figure">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Figure.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.NamedElement">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.NamedElement.NameReference">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.List">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.List.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ListItem">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ListItem.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ListItem.Marker">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Paragraph">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Paragraph.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Table">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Table.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.TableRowGroup">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableRowGroup.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.TableRow">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableRow.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.TableCell">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableCell.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableCell.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableCell.RowSpan">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableCell.ColumnSpan">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType.FigureStructure">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType.ListStructure">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType.ParagraphStructure">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType.TableStructure">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Section">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Section.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FragmentType">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FragmentType.Content">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FragmentType.Header">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FragmentType.Footer">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.MatrixTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.MatrixTransform.Matrix">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.MatrixTransform.Key">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SolidColorBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SolidColorBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SolidColorBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SolidColorBrush.Color">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ImageBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.ImageBrushTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Viewbox">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Viewport">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.TileMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.ViewboxUnits">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.ViewportUnits">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.ImageSource">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Transform.MatrixTransform">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.TileMode">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.None">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.Tile">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.FlipX">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.FlipY">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.FlipXY">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ViewUnits">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ViewUnits.Absolute">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.VisualBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.VisualBrushTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.VisualBrushVisual">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Viewbox">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Viewport">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.TileMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.ViewboxUnits">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.ViewportUnits">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Visual">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Visual">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Visual.Item">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Canvas">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.CanvasResources">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.CanvasRenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.CanvasClip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.CanvasOpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.RenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Clip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.OpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Name">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.RenderOptionsEdgeMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.RenderOptionsEdgeModeSpecified">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.FixedPageNavigateUri">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.lang">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.AutomationPropertiesName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.AutomationPropertiesHelpText">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Resources">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Resources.ResourceDictionary">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ResourceDictionary">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ResourceDictionary.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ResourceDictionary.Source">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Glyphs">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.GlyphsRenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.GlyphsClip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.GlyphsOpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.GlyphsFill">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.BidiLevel">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.CaretStops">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.DeviceFontName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Fill">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.FontRenderingEmSize">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.FontUri">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.OriginX">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.OriginY">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.IsSideways">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Indices">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.UnicodeString">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.StyleSimulations">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.RenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Clip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.OpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Name">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.FixedPageNavigateUri">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.lang">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Key">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Geometry">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Geometry.PathGeometry">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PathGeometry">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.PathGeometryTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.PathFigure">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.Figures">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.FillRule">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.Key">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PathFigure">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathFigure.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathFigure.IsClosed">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathFigure.StartPoint">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathFigure.IsFilled">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ArcSegment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.Point">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.Size">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.RotationAngle">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.IsLargeArc">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.SweepDirection">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.IsStroked">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SweepDirection">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SweepDirection.Clockwise">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SweepDirection.Counterclockwise">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PolyBezierSegment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyBezierSegment.Points">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyBezierSegment.IsStroked">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PolyLineSegment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyLineSegment.Points">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyLineSegment.IsStroked">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PolyQuadraticBezierSegment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyQuadraticBezierSegment.Points">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyQuadraticBezierSegment.IsStroked">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FillRule">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FillRule.EvenOdd">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FillRule.NonZero">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Brush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Brush.Item">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.LinearGradientBrushTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.LinearGradientBrushGradientStops">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.ColorInterpolationMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.SpreadMethod">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.MappingMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.StartPoint">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.EndPoint">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.GradientStop">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.GradientStop.Color">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.GradientStop.Offset">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ClrIntMode">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ClrIntMode.ScRgbLinearInterpolation">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ClrIntMode.SRgbLinearInterpolation">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SpreadMethod">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SpreadMethod.Pad">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SpreadMethod.Reflect">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SpreadMethod.Repeat">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.MappingMode">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.MappingMode.Absolute">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.RadialGradientBrushTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.RadialGradientBrushGradientStops">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.ColorInterpolationMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.SpreadMethod">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.MappingMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.Center">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.GradientOrigin">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.RadiusX">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.RadiusY">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations.None">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations.ItalicSimulation">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations.BoldSimulation">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations.BoldItalicSimulation">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Path">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathRenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathClip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathOpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathFill">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathStroke">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathData">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Data">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Fill">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.RenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Clip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.OpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Stroke">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeDashArray">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeDashCap">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeDashOffset">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeEndLineCap">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeStartLineCap">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeLineJoin">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeMiterLimit">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeThickness">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Name">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.FixedPageNavigateUri">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.lang">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.AutomationPropertiesName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.AutomationPropertiesHelpText">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.SnapsToDevicePixels">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.SnapsToDevicePixelsSpecified">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DashCap">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.DashCap.Flat">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.DashCap.Round">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.DashCap.Square">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.DashCap.Triangle">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LineCap">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineCap.Flat">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineCap.Round">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineCap.Square">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineCap.Triangle">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LineJoin">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineJoin.Miter">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineJoin.Bevel">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineJoin.Round">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.EdgeMode">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.EdgeMode.Aliased">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FixedPage">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.FixedPageResources">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.Width">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.Height">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.ContentBox">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.BleedBox">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.lang">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.Name">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FixedDocument">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedDocument.PageContent">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PageContent">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.PageContentLinkTargets">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.Source">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.Width">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.WidthSpecified">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.Height">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.HeightSpecified">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LinkTarget">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinkTarget.Name">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FixedDocumentSequence">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedDocumentSequence.DocumentReference">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DocumentReference">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentReference.Source">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LinkTargets">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinkTargets.LinkTarget">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.GradientStops">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.GradientStops.GradientStop">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Mc.AlternateContent.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Mc.Choice.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Mc.Fallback.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Mc.Baloo.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionsType">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionsType.SignatureDefinition">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SpotLocation">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.Intent">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SignBy">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SignBySpecified">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SigningLocation">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SpotID">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SignerName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.lang">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SpotLocationType">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SpotLocationType.PageURI">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SpotLocationType.StartX">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SpotLocationType.StartY">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfBarcode">
            <summary>
            Represents a base class for all barcode types.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">Set the barcode text.</param>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.BackColor">
            <summary>
            Gets or sets the back color of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.BarColor">
            <summary>
            Gets or sets the bar color of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.TextColor">
            <summary>
            Gets or sets the text color of the barcode text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.NarrowBarWidth">
            <summary>
            Gets or sets the narrow bar width.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.Text">
            <summary>
            Gets or Sets the barcode text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.Location">
            <summary>
            Gets or sets the location to render barcode in the PDF Document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.QuietZone">
            <summary>
            Gets or sets the empty area which is to be allocated around the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.BarHeight">
            <summary>
            Gets or sets the bar height.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.Size">
            <summary>
            Gets the size of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.Bounds">
            <summary>
            Gets or sets the rectangular area occupied by the barcode.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfBarcodeException">
            <summary>
            Represents the general barcode exception class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcodeException.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcodeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfBarcodeQuietZones">
            <summary>
            Represents the Class for specifying Quiet zones around the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.Right">
            <summary>
            Gets or sets the quiet zones at the right side of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.Top">
            <summary>
             Gets or sets the quiet zones at Top of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.Left">
            <summary>
             Gets or sets the quiet zones at the left side of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.Bottom">
            <summary>
             Gets or sets the quiet zones at bottom of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.All">
            <summary>
             Gets or sets the quiet zones around the bar code.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.IsAll">
            <summary>
            Check whether all the margin values are equal.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCodabarBarcode">
             <summary>
              Represents a Codabar barcode.
             </summary>
            <remarks> This symbology allows the encoding of strings of up to 16 digits, 10 numeric digits (0 through 9) and 
             6 special non alpha characters ("+", "-", "$", "/", ":", "."). 
             </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCodabarBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCodabarBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode11Barcode">
            <summary>
            Represents a Code11 barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 11 barcode: 0 1 2 3 4 5 6 7 8 9 -</remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode11Barcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode11Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode Text.</param>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode128ABarcode">
            <summary>
            Represents a Code128A barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 128 A barcode: NUL (\x00) SOH (\x01) STX (\x02) ETX (\x03) EOT (\x04) ENQ (\x05) ACK (\x06) BEL (\x07) BS (\x08) HT (\x09) LF (\x0A) VT (\x0B) FF (\x0C) CR (\x0D) SO (\x0E) SI (\x0F) DLE (\x10) DC1 (\x11) DC2 (\x12) DC3 (\x13) DC4 (\x14) NAK (\x15) SYN (\x16) ETB (\x17) CAN (\x18) EM (\x19) SUB (\x1A) ESC (\x1B) FS (\x1C) GS (\x1D) RS (\x1E) US (\x1F) SPACE !  # $ % ' * + , - . 0 1 2 3 4 5 6 7 8 9 : ; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ]^ _ FNC1 (\xF0) FNC2 (\xF1) FNC3 (\xF2) FNC4  </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128ABarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128ABarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode128BBarcode">
            <summary>
            Represents a Code128B Barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 128 B barcode:SPACE ! " # $ % ' ( ) * + , - . / 0 12 3 4 5 6 7 8 9 : ; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ]^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ DEL (\x7F) FNC1 (\xF0) FNC2 (\xF1) FNC3 (\xF2) FNC4 (\xF3) SHIFT (\xF4). </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128BBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128BBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode128CBarcode">
            <summary>
            Represents a Code128C barcode.
            </summary>
            <remarks>Only the following symbols are allowed in a Code 128C barcode: 0 1 2 3 4 5 6 7 8 9 FNC1 (\xF0). Code 128 C encodes only numeric symbols at double density, each pair of digits is encoded using a single symbol.</remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128CBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128CBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode32Barcode">
            <summary>
            Represents a Code32 barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 32 barcode: 1 2 3 4 5 6 7 8 9 0. The barcode length is 9 digits (8 user defined digits + 1 check digit).
            Code 32 barcodes are also known as Italian Pharmacode barcodes. 
            </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode32Barcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode32Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode39Barcode">
            <summary>
            Represents a Code39 barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 39 barcode:Only the following symbols are allowed in a Code 39 barcode: 1 2 3 4 5 6 7 8 9 0 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z - . $ / + % SPACE
            All alphabetic characters are uppercase. If lowercase characters are required, then a Code 39 Extended barcode must be used.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode39Barcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode39Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode39ExtendedBarcode">
            <summary>
            Represents a Code39 Extended barcode.
            Code 39 Extended is designed to encode 128 full ASCII characters.
            </summary>
            <remarks> All 128 ASCII characters can be encoded in an extended Code 39 barcode</remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode39ExtendedBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode39ExtendedBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode93Barcode">
            <summary>
            Represents a Code93 barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 93 barcode: 1 2 3 4 5 6 7 8 9 0 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z - . $ / + % SPACE
            All alphabetic characters are uppercase. If lowercase characters are required, then a Code 93 Extended barcode must be used.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode93Barcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode93Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode93ExtendedBarcode">
            <summary>
            Represents a code93 extended barcode.
            </summary>
            <remarks> All 128 ASCII characters can be encoded in an extended Code 93 barcode. </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode93ExtendedBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode93ExtendedBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfUnidimensionalBarcode">
            <summary>
            Represents the Base class for all the Single dimensional barcodes
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.#ctor">
            <summary>
            Initializes the new instance of 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.Font">
            <summary>
            Gets or sets the Text font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.TextDisplayLocation">
            <summary>
            Gets or sets the text display location. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.ShowCheckDigit">
            <summary>
            </summary>
            <remarks>The Default value is false.</remarks>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.EnableCheckDigit">
            <summary>
            Gets or sets a value indicating whether to enable to check digit calculation in the generated barcode or not.
            </summary>
            <remarks>The Default value is True.</remarks>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.BarcodeToTextGapHeight">
            <summary>
            Gets or sets the gap between the barcode and the displayed text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.TextAlignment">
            <summary>
            Gets or sets the alignment of the text displayed on the barcode.
            </summary>
            <remarks>Default value is Center.</remarks>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.EncodeStartStopSymbols">
            <summary>
            Gets or sets a value indicating whether [encode start stop symbols].
            </summary>
            <value>
            <c>true</c> if [encode start stop symbols]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.Draw(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Draws the barcode on the  at the specified region.
            </summary>
            <param name="page">The pdf page.</param>
            <param name="rect">The barcode region.</param>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.Draw(Spire.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Draws the barcode on the  at the specified location.
            </summary>
            <param name="page">The pdf page.</param>
            <param name="location">The barcode location.</param>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.Draw(Spire.Pdf.PdfPageBase,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws the barcode on the  at the specified location with the size.
            </summary>
            <param name="page">The pdf page.</param>
            <param name="location">The barcode location.</param>
            <param name="size">The barcode size.</param>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.ToImage">
            <summary>
            Exports the barcode as image.
            <returns>The barcode image.</returns>
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.TextLocation">
            <summary>
            Specifies the barcode text display location.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.TextLocation.None">
            <summary>
            Displays, no text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.TextLocation.Top">
            <summary>
            Displays text, above the barcode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.TextLocation.Bottom">
            <summary>
             Displays text, at the bottom of the barcode.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfBarcodeTextAlignment">
            <summary>
            Specifies the barcode text alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.PdfBarcodeTextAlignment.Left">
            <summary>
            Displays the readable text on the left side of the barcode. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.PdfBarcodeTextAlignment.Center">
            <summary>
            Displays the readable text at the center of the barcode. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.PdfBarcodeTextAlignment.Right">
            <summary>
             Displays the readable text on the right side of the barcode. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Attachments.PdfAttachment">
            <summary>
            Represents attachments of the Pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachment.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachment.#ctor(System.String,System.Byte[])">
            <param name="fileName">Name of the file.</param>
            <param name="data">The data to be attached as a file.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachment.#ctor(System.String,System.IO.Stream)">
            <param name="fileName">Name of the file.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:Spire.Pdf.Attachments.PdfAttachmentCollection">
            <summary>
            Represents a collection of the attachment objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Attachments.PdfAttachmentCollection.Item(System.Int32)">
            <summary>
            Gets attachment by its index in the collection.
            </summary>
            <param name="index">Index of the attachment.</param>
            <returns>Attachment object by its index in the collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Add(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Adds the specified attachment.
            </summary>
            <param name="attachment">The attachment.</param>
            <returns>Position of the inserted attachment.</returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Add(Spire.Pdf.Attachments.PdfAttachment,Spire.Pdf.PdfDocument,Spire.Pdf.General.PdfAttachmentRelationship)">
            <summary>
            Adds the specified attachment.
            </summary>
            <param name="attachment">The attachment.</param>
            <param name="associatedDocument">The associated document.</param>
            <param name="association">The relationship between attachment and associated document.</param>
            <returns>Position of the inserted attachment.</returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Add(System.String,Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Adds the specified attachment.
            </summary>
            <param name="attachment">The attachment.</param>
            <returns>Position of the inserted attachment.</returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Insert(System.Int32,Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Remove(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Removes the specified attachment.
            </summary>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes attachment at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.IndexOf(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Indexes the of attachment.
            </summary>
            <param name="attachment">The attachment.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Contains(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Determines whether 
            </summary>
            <param name="attachment">The attachment.</param>
            <returns>
            if it contains the specified attachment, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Attachments.PdfAttachmentCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfAutomaticField">
            <summary>
            Represents a fields which is calculated before the document saves.
            </summary>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Bounds">
            <summary>
            Gets or sets the bounds of the field.
            </summary>
            <value>The bounds value.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Size">
            <summary>
            Gets or sets the size of the field.
            </summary>
            <value>The size of the field.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Location">
            <summary>
            Gets or sets the location of the field.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Brush">
            <summary>
            Gets or sets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Pen">
            <summary>
            Gets or sets the pen.
            </summary>
            <value>The pen.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfAutomaticField.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
            <exclude/>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfCreationDateField">
            <summary>
            Represents class to display creation date of the document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCreationDateField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCreationDateField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCreationDateField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCreationDateField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfCreationDateField.DateFormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfDateTimeField">
            <summary>
            Represents date automated field.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDateTimeField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDateTimeField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDateTimeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="brush">A  object that is used to fill the string. </param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDateTimeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfDateTimeField.DateFormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField">
            <summary>
            Represents class which displays destination page's number.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.PageWidget">
            <summary>
            Get and sets the PdfLoadedPage
            </summary>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField">
            <summary>
            Represent automatic field which contains document's author name.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfDynamicField">
            <summary>
            Represents automatic field which value is dynamically evaluated.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDynamicField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDynamicField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDynamicField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDynamicField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfCompositeField">
            <summary>
            Represents class which can concatenate multiple automatic fields into single string.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>  
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="text">The wide-character string to be drawn.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="brush">A  object that is used to fill the string. </param> 
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(System.String,Spire.Pdf.AutomaticFields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of  objects.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.String,Spire.Pdf.AutomaticFields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of  objects.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.String,Spire.Pdf.AutomaticFields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A  object that is used to fill the string. </param>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of  objects.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfCompositeField.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The wide-character string to be drawn.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfCompositeField.AutomaticFields">
            <summary>
            Gets or sets the automatic fields.
            </summary>
            <value>The automatic fields.</value>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField">
            <summary>
            Represents automatic field which has the same value within the 
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.NumberStyle">
            <summary>
            Gets or sets the number style.
            </summary>
            <value>The number style.</value>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfMultipleValueField">
            <summary>
            Represents automatic field which has the same value within the 
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleValueField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfPageCountField">
            <summary>
            Represents total page count automatic field.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageCountField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfPageCountField.NumberStyle">
            <summary>
            Gets or sets the number style.
            </summary>
            <value>The number style.</value>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfPageNumberField">
            <summary>
            Represents page number field.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfSectionNumberField">
            <summary>
            Represents automatic field to display
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionNumberField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfSectionPageCountField">
            <summary>
            Represents automatic field to display number of pages in section.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageCountField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField">
            <summary>
            Represents automatic field to display page number within a section.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfSingleValueField">
            <summary>
            Represents automatic field which has the same value 
            in the whole document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSingleValueField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSingleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSingleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSingleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfStaticField">
            <summary>
            Represents automatic field which value can be evaluated in the moment of creation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfStaticField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfStaticField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfStaticField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfStaticField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.Collections.PdfCollection">
            <summary>
            A collection specifies the viewing and organizational characteristics
            of portable collections.The intent of portable collections is to present,
            sort, and search collections of related document,such as email archives,
            photo collections, and engineering bidsets.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.PdfCollection.m_dictionary">
            <summary>
            A collection dictionary which specifies the viewing and organizational
            characteristics of portable collections.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.PdfCollection.m_embeddedFiles">
            <summary>
            The embeddedFiles name tree which the file attachments comprising a collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfCollection.Folders">
            <summary>
            (Required if the collection has folders; ExtensionLevel3)
            An indirect reference to the folder dictionary that is the
            single common ancestor of all other folders in a portable
            collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfCollection.AssociatedFiles">
            <summary>
            Get the document collection associated files
            </summary>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfCollection.FieldNames">
            <summary>
            Get the document collection associated field names
            </summary>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.#ctor(Spire.Pdf.Attachments.PdfAttachmentCollection,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance.
            </summary>
            <param name="embeddedFiles">The embeddedFiles name tree which the file attachments comprising a collection.</param>
            <param name="crossTable">The pdf cross Table.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Attachments.PdfAttachmentCollection,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance.
            </summary>
            <param name="dictCollection">The collections dictionary.</param>
            <param name="embeddedFiles">The embeddedFiles name tree which the file attachments comprising a collection.</param>
            <param name="crossTable">The pdf cross Table.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.AddFile(System.String)">
            <summary>
            Add a local file.
            </summary>
            <param name="filePath">The local file path.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.AddFile(System.String,System.IO.Stream)">
            <summary>
            Add a stream.
            </summary>
            <param name="fileName">The file name of the stream.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.AddAttachment(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Add an attachment.
            </summary>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.AddCustomField(System.String,System.String,Spire.Pdf.Collections.CustomFieldType)">
            <summary>
            Add a custom field.
            </summary>
            <param name="fieldName">Custom field name.</param>
            <param name="displayText">Custom field display name.</param>
            <param name="fieldType">Custom field type.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.AddFileRelatedField(System.String,System.String,Spire.Pdf.Collections.FileRelatedFieldType)">
            <summary>
            Add a file related field.
            </summary>
            <param name="fieldName">File related field name.</param>
            <param name="displayText">File related field display name.</param>
            <param name="fieldType">File related field type.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.Sort(System.String[],System.Boolean[])">
            <summary>
            Sort embedded files with field names.
            </summary>
            <param name="fieldNames">The names of fields that the PDF viewer application
            uses to sort the items in the collection.</param>
            <param name="order">Specifies whether the items in the collection are sorted
            in ascending order.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.Clear">
            <summary>
            Clear all files and folders.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.CreateDefaultDictionary">
            <summary>
            Create default dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.SynchronizeToPdfPrimitive">
            <summary>
            Synchronize the instance to the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfCollection.SynchronizeFromPdfPrimitive">
            <summary>
            Synchronize the instance from the pdf primitive.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Collections.CustomFieldType">
            <summary>
            Custom field type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.CustomFieldType.TextField">
            <summary>
            The field data is stored as a PDF text string.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.CustomFieldType.DateField">
            <summary>
            The field data is stored as a PDF date string.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.CustomFieldType.NumberField">
            <summary>
            The field data is stored as a PDF number.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Collections.FileRelatedFieldType">
            <summary>
            File related field Type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.FileRelatedFieldType.FileName">
            <summary>
            The field data is file name of the embedded file stream.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.FileRelatedFieldType.Desc">
            <summary>
            The field data is the description of the embedded file stream.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.FileRelatedFieldType.ModDate">
            <summary>
            The field data is the modification date of the embedded file stream.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.FileRelatedFieldType.CreationDate">
            <summary>
            The field data is the creation date of the embedded file stream.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.FileRelatedFieldType.Size">
            <summary>
            The field data is the size of the embedded file stream.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Collections.PdfFolder">
            <summary>
            A folder for the purpose of organizing files into a hierarchical structure.
            The structure is represented by a tree with a single root folder acting as
            the common ancestor for all other folders and files in the collection.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.PdfFolder.m_dictionary">
            <summary>
            A collection dictionary which specifies the viewing and organizational
            characteristics of portable collections.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Collections.PdfFolder.m_embeddedFiles">
            <summary>
            The embeddedFiles name tree which the file attachments comprising a collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfFolder.ID">
            <summary>
            (Required;ExtensionLevel3)A non-negative integer value
            representing the unique folder identification number.Two folders
            shall not share the same ID value.
            The folder ID value appears as part of the name tree key of any file
            associated with this folder.A detailed description of the association
            between folder and files can be found after this table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfFolder.Name">
            <summary>
            (Required;ExtensionLevel3)A file name representing the name of the
            folder.Two sibling folders shall not share the same name following
            case normalization.
            Note:Descriptions of file name and case normalization follow this
            table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfFolder.Parent">
            <summary>
            (Required for child folders; ExtensionLevel3)
            An indirect reference to the parent folder of this folder.
            This entry shall be absent for a root folder.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfFolder.Child">
            <summary>
            (Required if the folder has any descendents; ExtensionLevel3)
            An indirect reference to the first child folder of this folder.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfFolder.Next">
            <summary>
            (Required for all but the last item at each level; ExtensionLevel3)
            An indirect reference to the next sibling folder at this level.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.#ctor(System.String,Spire.Pdf.Attachments.PdfAttachmentCollection,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance.
            </summary>
            <param name="name">The folder name.</param>
            <param name="embeddedFiles">The embeddedFiles name tree which the file attachments comprising a collection.</param>
            <param name="crossTable">The pdf cross Table.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Attachments.PdfAttachmentCollection,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance.
            </summary>
            <param name="dictFolder">The collections dictionary.</param>
            <param name="embeddedFiles">The embeddedFiles name tree which the file attachments comprising a collection.</param>
            <param name="crossTable">The pdf cross Table.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.AddFile(System.String)">
            <summary>
            Add a local file into this folder.
            </summary>
            <param name="filePath">The local file path.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.AddFile(System.String,System.IO.Stream)">
            <summary>
            Add a stream into this folder.
            </summary>
            <param name="fileName">The file name of the stream.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.DeleteFile(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Delete the file in this folder.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.GetFiles">
            <summary>
            Get the files in this folder.
            </summary>
            <returns>The file list in this folder.</returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.CreateSubfolder(System.String)">
            <summary>
            Create an subfolder.
            </summary>
            <param name="folderName">The subfolder name.</param>
            <returns>The PdfFolder.</returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.DeleteSubfolder(System.String)">
            <summary>
            Delete an subfolder.
            </summary>
            <param name="folderName">The subfolder name.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.GetSubfolders">
            <summary>
            Get the subfolders of this folder.
            </summary>
            <returns>The subfolder list in this folder.</returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.HasSubfolders">
            <summary>
            Whether has subfolders.
            </summary>
            <returns>True or False</returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.Clear">
            <summary>
            Clear this folder.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.AddExistFolder(System.String)">
            <summary>
            Add local folder into this folder.
            </summary>
            <param name="folderPath">The local folder path.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.AddAttachment(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Add an attachment into this folder.
            </summary>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.CreateDefaultDictionary">
            <summary>
            Create default dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.GenerateUniqueFolderID">
            <summary>
            Generate foler ID which A non-negative integer value
            representing the unique folder identification number.
            Two folders shall not share the same ID value.
            </summary>
            <returns>The Unique folder ID.</returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.GetFolderIDWithChild">
            <summary>
            Get all folder ID which include current folder's ID and child folders's ID.
            </summary>
            <returns>The folder ID list.</returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.ShouldNotShareSameNameInChildFolders(System.String)">
            <summary>
            Two sibling folders shall not share the same name.
            </summary>
            <param name="name">The new child folder name.</param>
            <returns>True: no same name.</returns>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="P:Spire.Pdf.Collections.PdfFolder.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.SynchronizeToPdfPrimitive">
            <summary>
            Synchronize the instance to the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Collections.PdfFolder.SynchronizeFromPdfPrimitive">
            <summary>
            Synchronize the instance from the pdf primitive.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Bookmarks.PdfBookmark">
            <summary>
            Each instance of this class represents
            an bookmark node in the bookmark tree.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.Destination">
            <summary>
            Gets or sets the outline destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.Title">
            <summary>
            Gets or sets the outline title.
            </summary>
            <remarks>The outline title is the text,
            which appears in the outline tree as a tree node.</remarks>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.DisplayStyle">
            <summary>
            Gets or sets the text style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.ExpandBookmark">
            <summary>
            It's true,expand node
            It's false,collapse node
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.Action">
            <summary>
            Gets or sets the Action for the Outline.
            </summary>        
        </member>
        <member name="T:Spire.Pdf.Bookmarks.PdfBookmarkCollection">
            <summary>
            This class plays two roles: it's a base class for all bookmarks
            and it's a root of a bookmarks tree.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Count">
            <summary>
            Gets number of the elements in the collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value>index</value>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Add(System.String)">
            <summary>
            Creates and adds an outline.
            </summary>
            <param name="title">The title of the new outline.</param>
            <returns>The outline created.</returns>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Contains(Spire.Pdf.Bookmarks.PdfBookmark)">
            <summary>
            Determines whether the specified outline is a direct descendant of the outline base.
            </summary>
            <param name="outline">The outline.</param>
            <returns>
            <c>true</c> if the specified outline is a direct descendant of the outline base;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Remove(System.String)">
            <summary>
            Removes the specified bookmark from the document.
            </summary>
            <param name="title">The title of the outline.</param>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the specified bookmark from the document at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Clear">
            <summary>
            Removes all the bookmark from the document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a new outline at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="title">The title of the new outline.</param>
            <returns>The new outline.</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.System#Collections#IEnumerable#GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Bookmarks.PdfTextStyle">
            <summary>
            Allows to choose outline text style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Bookmarks.PdfTextStyle.Regular">
            <summary>
            Regular text style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Bookmarks.PdfTextStyle.Italic">
            <summary>
            Italic text style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Bookmarks.PdfTextStyle.Bold">
            <summary>
            Bold text style.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Bookmarks.PdfBookmarkWidget">
            <summary>
            Represents loaded bookmark class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkWidget.Destination">
            <summary>
            Gets or sets the outline destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkWidget.Title">
            <summary>
            Gets or sets the outline title.
            </summary>
            <remarks>The outline title is the text,
            which appears in the outline tree as a tree node.</remarks>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkWidget.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkWidget.DisplayStyle">
            <summary>
            Gets or sets the text style.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfConvertOptions">
            <summary>
            The class can be used to set some options when do convert operation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConvertOptions.m_xlsxOptions">
            <summary>
            Pdf document to xlsx document,page content layout
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConvertOptions.m_ofdOptions">
            <summary>
            Pdf to ofd option.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.UseHighQualityImage">
            <summary>
            Gets or sets a value indicates whether to use the high qulity image when convert xps to pdf.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.UseHighQualityEmbeddedSvg">
            <summary>
            Gets or sets a value indicates whether to use the high quality embedded svg when convert pdf to html.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.UseInvariantCulture">
            <summary>
            Gets or sets a value indicates whether to use invariant culture mode when convert pdf to xps.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.UsePsMode">
            <summary>
            Gets or sets a value indicates whether to use PS mode to convert pdf to xps, doc.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.UsePsModeToImage">
            <summary>
            Gets or sets a value indicates whether to use PS mode to convert pdf to img.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.BackgroundTransparentValue">
            <summary>
            Gets or sets a value indicates whether to image background transparent pdf to img.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.UseEmbeddedSvgMode">
            <summary>
            Gets or sets a value indicates whether to use the embedded svg in the result file when convert pdf to html.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.MaxPageInOneFile">
            <summary>
            Gets or sets a value indicates the count of page contents in one html file when convert pdf to html, works only when UseEmbeddedSvgMode property is set to false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.UseEmbeddedImage">
            <summary>
            Gets or sets a value indicates whether to embed image data in the result file when convert pdf to html, works only when UseEmbeddedSvgMode property is set to false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.SvgWidthPixel">
            <summary>
            Gets or sets a value indicates the output svg's width in pixel unit, -1 means use the orignal width.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.SvgHeightPixel">
            <summary>
            Gets or sets a value indicates the output svg's height in pixel unit, -1 means use the orignal width.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.UseFlowRecognitionModeForDoc">
            <summary>
            Gets or sets a value indicates whether whether to use flow recognition mode to convert pdf to doc(docx).
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.XlsxOptions">
            <summary>
            Pdf document to xlsx document,the xlsx options
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.OfdOptions">
            <summary>
            Pdf to ofd options
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfConvertOptions.FindTextByAbsolutePosition">
            <summary>
            Find Text in PDF file by absolute position or operator order.default is true. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToImageOptions(System.Boolean)">
            <summary>
            Set pdf to image convert options.
            </summary>
            <param name="usePsMode">Indicates whether to use PS mode.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToImageOptions(System.Int32)">
            <summary>
            Set pdf to image convert options.
            </summary>
            <param name="bgTransparentValue">Alpha values rang from 0 to 255</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToXlsxOptions(Spire.Pdf.Conversion.XlsxOptions)">
            <summary>
            Set pdf to xlsx convert options
            the parameter is：the implementation class the xlsxOptions class
            The implementation class:XlsxLineLayoutOptions or XlsxTextLayoutOptions
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToOfdOptions(Spire.Pdf.Conversion.OfdOptions)">
            <summary>
            Set pdf to ofd convert options
            </summary>
            <param name="options">The option.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToXpsOptions">
            <summary>
            Set pdf to xps convert options.
            Default usePsMode = true,useInvariantCulture = false,useHighQualityImg = false.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToXpsOptions(System.Boolean)">
            <summary>
            Set pdf to xps convert options.
            </summary>
            <param name="usePsMode">Indicates whether to use PS mode.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToXpsOptions(System.Boolean,System.Boolean)">
            <summary>
            Set pdf to xps convert options.
            </summary>
            <param name="usePsMode">Indicates whether to use PS mode.</param>
            <param name="useInvariantCulture">Indicates whether to use invariant culture.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToXpsOptions(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set pdf to xps convert options.
            </summary>
            <param name="usePsMode">Indicates whether to use PS mode.</param>
            <param name="useInvariantCulture">Indicates whether to use invariant culture.</param>
            <param name="useHighQualityImg">Indicates whether to use the high qulity image.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToDocOptions">
            <summary>
            Set pdf to doc convert options.
            Default usePsMode = true.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToDocOptions(System.Boolean)">
            <summary>
            Set pdf to doc convert options.
            </summary>
            <param name="usePsMode">Indicates whether to use PS mode.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToDocOptions(System.Boolean,System.Boolean)">
            <summary>
            Set pdf to doc convert options.
            </summary>
            <param name="usePsMode">Indicates whether to use PS mode.</param>
            <param name="useFlowRecognitionMode">Indicates whether to use flow recognition mode.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetXpsToPdfOptions">
            <summary>
            Set xps to pdf convert options.
            Default useHighQualityImg = false.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetXpsToPdfOptions(System.Boolean)">
            <summary>
            Set xps to pdf convert options.
            </summary>
            <param name="useHighQualityImg">Indicates whether to use the high qulity image.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToHtmlOptions">
            <summary>
            Set pdf to html convert options.
            Default useEmbeddedSvg = true, useEmbeddedImg = false, maxPageOneFile = 500, useHighQualityEmbeddedSvg=true.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToHtmlOptions(System.Boolean)">
            <summary>
            Set pdf to html convert options.
            </summary>
            <param name="useEmbeddedSvg">Indicates whether to use the embedded svg in html file.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToHtmlOptions(System.Boolean,System.Boolean)">
            <summary>
            Set pdf to html convert options.
            </summary>
            <param name="useEmbeddedSvg">Indicates whether to use the embedded svg in html file.</param>
            <param name="useEmbeddedImg">Indicates whether to embed image data in html file, works only when useEmbeddedSvg is set to false.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToHtmlOptions(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Set pdf to html convert options.
            </summary>
            <param name="useEmbeddedSvg">Indicates whether to use the embedded svg in html file.</param>
            <param name="useEmbeddedImg">Indicates whether to embed image data in html file, works only when useEmbeddedSvg is set to false.</param>
            <param name="maxPageOneFile">Indicates the count of page contents in one html file, works only when useEmbeddedSvg is set to false.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToHtmlOptions(System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Set pdf to html convert options.
            </summary>
            <param name="useEmbeddedSvg">Indicates whether to use the embedded svg in html file.</param>
            <param name="useEmbeddedImg">Indicates whether to embed image data in html file, works only when useEmbeddedSvg is set to false.</param>
            <param name="maxPageOneFile">Indicates the count of page contents in one html file, works only when useEmbeddedSvg is set to false.</param>
            <param name="useHighQualityEmbeddedSvg">Indicates whether to use the high quality embedded svg in html file, works only when useEmbeddedSvg is set to true.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToSvgOptions">
            <summary>
            Set pdf to svg options.
            Default wPixel = -1f, hPixel = -1f, -1f means no change.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToSvgOptions(System.Single)">
            <summary>
            Set pdf to svg options.
            </summary>
            <param name="wPixel">The output svg's width in pixel unit, -1f means no change.</param>
        </member>
        <member name="M:Spire.Pdf.PdfConvertOptions.SetPdfToSvgOptions(System.Single,System.Single)">
            <summary>
            Set pdf to svg options.
            </summary>
            <param name="wPixel">The output svg's width in pixel unit, -1f means no change.</param>
            <param name="hPixel">The output svg's height in pixel unit, -1f means no change.</param>
        </member>
        <member name="F:Spire.Pdf.PdfDocument.m_documentPieceInfo">
            <summary>
            The document piece info.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.UseHighQualityImage">
            <summary>
            Indicates whether to use the high qulity image when convert document
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocument.m_SetPdfToHtmlParameter">
            <summary>
            Pdf to Html, Set Parameter
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.AllowCreateForm">
            <summary>
            Get or Set Allow Create Form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.UseInvariantCulture">
            <summary>
            Indicates whether use invariant culture mode to convert pdf document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.ConvertOptions">
            <summary>
            Set some options when do convert operation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PDFStandard">
            <summary>
            Set,Get Current active pdf object 
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Conformance">
            <summary>
            Get document PdfConformanceLevel
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Attachments">
            <summary>
            Gets the collection of document attachments displayed on a PDF page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Bookmarks">
            <summary>
            Gets the bookmarks.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.ColorSpace">
            <summary>
            Gets or sets the color space for page that will be created.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.DocumentInformation">
            <summary>
            Gets or sets document's information and properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.JavaScripts">
            <summary>
            Gets the additional document's actions.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Form">
            <summary>
            Gets the loaded form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PageLabels">
            <summary>
            Page labels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.DocumentPieceInfo">
            <summary>
            Gets or set the document piece info.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Pages">
            <summary>
            Gets the pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.UsedFonts">
            <summary>
            Gets the fonts which are available in the PDF document.
            </summary>
            <value>Retruns the fonts which are used in the PDF document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.CompressionLevel">
            <summary>
            Gets or sets the desired level of stream compression.
            </summary>
            <remarks>All new objects should be compressed with this level of the compression.</remarks>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Security">
            <summary>
            Gets the security parameters of the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.ViewerPreferences">
            <summary>
            Gets or sets a viewer preferences object controlling the way the document is to be 
            presented on the screen or in print.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.AfterOpenAction">
            <summary>
            Gets or sets the action to execute when the document is opened. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.AfterPrintAction">
            <summary>
            Gets or sets the action to be performed after the document is printed.
            </summary>
            <value>A  object specifying the action to be executed after the document is printed. .</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.AfterSaveAction">
            <summary>
            Gets or sets the jave script action to be performed after the document is saved.
            </summary>
            <value>A  object specifying the action to be executed after the document is saved.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.BeforeCloseAction">
            <summary>
            Gets or sets the action to be performed before the document is closed.
            </summary>
            <value>A  object specifying the action to be executed before the document is closed. </value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.BeforePrintAction">
            <summary>
            Gets or sets the action to be performed before the document is printed.
            </summary>
            <value>A  object specifying the action to be executed before the document is printed. </value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.BeforeSaveAction">
            <summary>
            Gets or sets the java script action to be performed before the document is saved.
            </summary>
            <value>A  object specifying the action to be executed before the document is saved. </value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Template">
            <summary>
            Gets the template of pdf document
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.EnableFontCache">
            <summary>
            Indicates whether enable font cache.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.IsEncrypted">
            <summary>
            Indicates the document is encrypted or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.IsPortfolio">
            <summary>
            Indicates the document is a PDF Portfolio or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Layers">
            <summary>
            Optional content properties
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Collection">
            <summary>
            The pdf collections.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.String)">
            <param name="filename">The path to source pdf file.</param>
            <remarks>This constructor imports an existing pdf file into the document object. It automatically populates the Pages collection with the pages of the given document. </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="filename">The path to source PDF document.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(Spire.Pdf.PdfConformanceLevel)">
            <summary>
            Setting up the Pdf docuement standard,but Pdf/A2A standards are not suppored
            </summary>
            <param name="Pdflevel"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="file">The byte array with the file content.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="file">The byte array with the file content.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="stream">The stream with the file.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="file">The stream with the file.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromFile(System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="filename">The path to source pdf file.</param>
            <remarks>This constructor imports an existing pdf file into the document object. It automatically populates the Pages collection with the pages of the given document. </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromFile(System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="filename">The path to source PDF document.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromXPS(System.Byte[])">
            <summary>
            Load a xps bytes array.
            </summary>
            <param name="xpsBytes">the xps byte array</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromXPS(System.String)">
            <summary>
            Load a xps file.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromXPS(System.IO.Stream)">
            <summary>
            Load a xps stream.
            </summary>
            <param name="xpsStream"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromSvg(System.String)">
            <summary>
            Load a svg file.
            </summary>
            <param name="fileName">A relative or absolute path for the svg file</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromSvg(System.IO.Stream)">
            <summary>
            Load a svg stream.
            </summary>
            <param name="stream">A Svg file stream</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Load file from disk file.
            </summary>
            <param name="url">url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean,Spire.Pdf.PdfPageSettings)">
            <summary>
             Load file from disk file.
            </summary>
            <param name="url">url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="Size">paper size</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean,Spire.Pdf.PdfPageSettings,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat)">
            <summary>
             Load file from disk file.
            </summary>
            <param name="url">url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="Size">paper size</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean,Spire.Pdf.PdfPageSettings,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat,System.Boolean)">
            <summary>
             Load file from disk file.
            </summary>
            <param name="url">url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="setting">Page setting</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
            <param name="isLoadComplete">
            by default false, when load Html DOM timeout(PdfHtmlLayoutFormat.LoadHtmlTimeout),convert uncompleted Html DOM to pdf.
            if true,until Html DOM load completed,then convert to pdf. 
            </param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,Spire.Pdf.PdfPageSettings,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat)">
            <summary>
            Load htmlSourceCode to Pdf
            </summary>
            <param name="htmlSourceCode">htmlSourceCode</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="setting">PdfPageSettings setting</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,Spire.Pdf.PdfPageSettings,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat,System.Boolean)">
            <summary>
            Load htmlSourceCode to Pdf
            </summary>
            <param name="htmlSourceCode">htmlSourceCode</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="setting">PdfPageSettings setting</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
            <param name="isLoadComplete">
            by default false, when load Html DOM timeout(PdfHtmlLayoutFormat.LoadHtmlTimeout),convert uncompleted Html DOM to pdf.
            if true,until Html DOM load completed,then convert to pdf. 
            </param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromBytes(System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="bytes">The byte array with the file content.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromStream(System.IO.Stream)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="stream">The stream with the file.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromBytes(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="bytes">The byte array with the file content.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromStream(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="stream">The stream with the file.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.CreateBooklet(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Thie method creates a booklet
            </summary>
            <param name="fileName">The loaded document filename.</param>
            <param name="width">The page width</param>
            <param name="height">The page height</param>
            <param name="bothSides">if set to <c>true</c> if the result in document should be printed</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.CreateBooklet(System.String,System.Single,System.Single,System.Boolean,Spire.Pdf.DrawPageInBookletEventHandler,Spire.Pdf.DrawPageInBookletEventHandler)">
            <summary>
            Thie method creates a booklet
            </summary>
            <param name="fileName">The loaded document filename.</param>
            <param name="width">The page width</param>
            <param name="height">The page height</param>
            <param name="bothSides">if set to <c>true</c> if the result in document should be printed</param>
            <param name="beginDrawPage">Delegate for handling event when the begin drawing page in a booklet.</param>
            <param name="endDrawPage">Delegate for handling event when the end drawing page in a booklet.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.VerifySignature(System.String)">
            <summary>
            Verify pdf document regarding signature.
            </summary>
            <param name="signName">Signature field name.</param>
            <returns>Signature is validated return true,otherwise false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.GetSignatureContent(System.String)">
            <summary>
            Get pdf document regarding signature.
            </summary>
            <param name="signName">Signature field name.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.IsPasswordProtected(System.String)">
            <summary>
            Whether the file is password protected.
            </summary>
            <param name="fileName">The file name</param>
            <returns>if password protected,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.HasExtendedRight">
            <summary>
            Indicates whthere contains extended right.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.RemoveExtendedRight">
            <summary>
            Removes the extended right.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToStream(System.IO.Stream)">
            <summary>
            Save the document to the specified stream.
            </summary>
            <param name="stream">
            The stream which default saved to the FileFormat.PDF format.
            </param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToStream(Spire.Pdf.FileFormat)">
            <summary>
            Convert the document to streams with the file format.
            </summary>
            <param name="fileformat">The file format.</param>
            <returns>
            The format file streams.
            FileFormat.PDF:return only one stream(PDF support paging).
            FileFormat.XPS:return only one stream(XPS support paging).
            FileFormat.DOC:return only one stream(DOC support paging).
            FileFormat.DOCX:return only one stream(DOCX support paging).
            FileFormat.XLSX:return only one stream(XLSX support paging).
            FileFormat.PCL:return only one stream(PCL support paging).
            FileFormat.POSTSCRIPT:return only one stream(POSTSCRIPT support paging).
            FileFormat.HTML:return only one stream(HTML support paging).
            FileFormat.SVG:return multiple streams(SVG not support paging,one stream to one page).
            </returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToStream(System.Int32,System.Int32,Spire.Pdf.FileFormat)">
            <summary>
            Convert the document to streams with the file format.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="fileformat">The file format.</param>
            <returns>
            The format file streams.
            FileFormat.PDF:return only one stream(PDF support paging).
            FileFormat.XPS:return only one stream(XPS support paging).
            FileFormat.DOC:return only one stream(DOC support paging).
            FileFormat.DOCX:return only one stream(DOCX support paging).
            FileFormat.XLSX:return only one stream(XLSX support paging).
            FileFormat.PCL:return only one stream(PCL support paging).
            FileFormat.POSTSCRIPT:return only one stream(POSTSCRIPT support paging).
            FileFormat.HTML:return only one stream(HTML support paging).
            FileFormat.SVG:return multiple streams(SVG not support paging,one stream to one page).
            </returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToStream(System.IO.Stream,Spire.Pdf.FileFormat)">
            <summary>
            Convert the document to an stream with the file format.
            </summary>
            <param name="stream">
            The stream with the file format.
            </param>
            <param name="fileformat">
            The file format.
            FileFormat.SVG is not supported, because SVG file has no paging,so can't be saved to a stream.
            </param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToFile(System.String)">
            <summary>
            Saves PDF document to file.
            </summary>
            <param name="filename">A relative or absolute path for the file</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToFile(System.String,Spire.Pdf.FileFormat)">
            <summary>
            Saves PDF document to file.
            </summary>
            <param name="filename">A relative or absolute path for the file</param>
            <param name="fileFormat">File format for the file</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToFile(System.String,System.Int32,System.Int32,Spire.Pdf.FileFormat)">
            <summary>
            Saves PDF document to PDF or other Format files.
            Current only supports save PDF document to SVG and PDF
            </summary>
            <param name="filename">A relative or absolute path for the file</param>
            <param name="startIndex">The start page index.The index starts at 0</param>
            <param name="endIndex">The end page index.</param>
            <param name="fileFormat">File format for the file</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Saves PDF document page as image,Set image Dpi
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="dpiX">Pictures X resolution</param>
            <param name="dpiY">Pictures Y resolution</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32,Spire.Pdf.Graphics.PdfImageType,System.Int32,System.Int32)">
            <summary>
            Saves PDF document page as image,Set PdfImageType and image Dpi
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type">PdfImageType type </param>
            <param name="dpiX">
            X resolution
            </param>
            <param name="dpiY">
            Y resolution
            </param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32,System.Single,System.Boolean)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="zoomFactor">The zoom factor</param>
            <param name="writeWarning">The write warning</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32,System.Single)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="zoomFactor">The zoom factor</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32,Spire.Pdf.Graphics.PdfImageType)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type">PdfImageType type </param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <value>A new object that is a copy of this instance.</value>
            <remarks>The resulting clone must be of the same type as or a compatible type to the original instance.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.AppendPage(Spire.Pdf.PdfDocument)">
            <summary>
            Appends the specified loaded document to this one.
            </summary>
            <param name="doc">The loaded document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.AppendPage">
            <summary>
            Appends a new page to this one.
            </summary>
            <returns>The new page.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.InsertPage(Spire.Pdf.PdfDocument,Spire.Pdf.PdfPageBase)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="page">The page.</param>
            <returns>The page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.InsertPage(Spire.Pdf.PdfDocument,System.Int32)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="pageIndex">Index of the page.</param>
            <returns>The page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.InsertPage(Spire.Pdf.PdfDocument,System.Int32,System.Int32)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="resultPageIndex">The page index in the result document.</param>
            <returns>The page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.InsertPageRange(Spire.Pdf.PdfDocument,System.Int32,System.Int32)">
            <summary>
            Imports a page range from a loaded document.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="startIndex">The start page index.</param>
            <param name="endIndex">The end page index.</param>
            <returns>The last created page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Merge(Spire.Pdf.PdfDocumentBase,System.Object[])">
            <summary>
            Merges the specified source documents and return destination document.
            ***It is recommended to use method "MergeFiles(string[] inputFiles, string outputFile)" or "MergeFiles(stream[] inputFiles, stream[] outputFile)",
            which automatically release srcFiles and mergeFils resources after merging.***
            </summary>
            <param name="dest">The destination document, where the other documents are merged into.
            If it's null a new document object will be created.</param>
            <param name="sourceDocuments">The source documents.</param>
            <returns>The document containing merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.MergeFiles(System.String[])">
            <summary>
            Merges the PDF documents specified by the paths.
            ***It is recommended to use method "MergeFiles(string[] inputFiles, string outputFile)" or "MergeFiles(stream[] inputFiles, stream[] outputFile)",
            which automatically release srcFiles and mergeFils resources after merging.***
            </summary>
            <param name="paths">The array of string paths.</param>
            <returns>A new PDF document containing all merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.MergeFiles(System.IO.Stream[])">
            <summary>
            Merges the PDF documents specified by the Stream.
            ***It is recommended to use method "MergeFiles(string[] inputFiles, string outputFile)" or "MergeFiles(stream[] inputFiles, stream[] outputFile)",
            which automatically release srcFiles and mergeFils resources after merging.***
            </summary>
            <param name="streams"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.MergeFiles(System.String,System.String)">
            <summary>
            Merges the PDF documents specified by the paths.
            </summary>
            <param name="firstInputFile"></param>
            <param name="secInputFile"></param>
            <returns>A new PDF document containing all merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.MergeFiles(System.String[],System.String)">
            <summary>
            Merge the PDF documents.
            </summary>
            <param name="inputFiles">The input PDF documents.</param>
            <param name="outputFile">The output PDF document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.MergeFiles(System.IO.Stream[],System.IO.Stream)">
            <summary>
            Merge the PDF documents.
            </summary>
            <param name="inputFiles">The input PDF documents.</param>
            <param name="outputFile">The output PDF document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Split(System.String)">
            <summary>
            Splits a PDF file to many PDF files, each of them consists of one page from the source file.
            </summary>
            <param name="destFilePattern">Template for destination file names.</param>
            <remarks>
            Each destination file will have 'destFileName{0***}' name,
            where *** is an optional format string for the number of the
            page inside of the source document.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Split(System.String,System.Int32)">
            <summary>
            Splits a PDF file to many PDF files, each of them consists of
            one page from the source file.
            </summary>
            <param name="destFilePattern">Template for destination file
            names.</param>
            <param name="startNumber">The number that is use as a start
            point for the page numbering.</param>
            <remarks>
            Each destination file will have 'destFileName{0***}' name,
            where *** is an optional format string for the number of the
            page inside of the source document.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.RemoveDocumentJavaScript">
            <summary>
            remove document's javaScript
            </summary>
            <returns>if True remove succesfully,else remove the failure or document doesn't have JavaScript</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Preview(System.Windows.Forms.PrintPreviewControl)">
            <summary>
            Print preview.
            </summary>
            <param name="printPreviewControl">Print preview control</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Print(Spire.Pdf.Print.PdfPrintSettings)">
            <summary>
            Print document.
            </summary>
            <param name="printSettings">The print settings.</param>
        </member>
        <member name="F:Spire.Pdf.PdfDocument.m_printSettings">
            <summary>
            Print settings.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PrintSettings">
            <summary>
            Get the print settings.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Print">
            <summary>
            Print document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SetExportTextOCRHandler(Spire.Pdf.Exporting.Text.IOCR)">
            <summary>
            when export text,if have image ,will call IOCR and add text to export content.
            </summary>
            <param name="iOCR"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Close">
            <summary>
            Closes the document.
            </summary>
            <remarks>The document is disposed after calling the Close method. So, the document can not be saved if Close method was invoked.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Dispose">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
             is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SetCustomFontsFolders(System.String)">
            <summary>
            Set the path to the folder where the custom font is located.
            </summary>
            <param name="fontPath">the folder path.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.ClearCustomFontsFolders">
            <summary>
            Clear the path of the folder where the custom font is located.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfDocumentBase">
            <summary>
            Represent common PdfDocumentBase classes.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.ForbidWarningWhenSave">
            <summary>
            Whether forbid warning when convert to Pdf/A Pdf/X
            !!! Temp solution
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentBase.m_UseHighQualityImage">
            <summary>
            specify whether to use high quality images
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentBase.m_SetPdfToHtmlParameter">
            <summary>
            Pdf to Html, Set Parameter
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.SetPdfToHtmlParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentBase.m_privateFonts">
            <summary>
            Internal variable to store the private font collection.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentBase.m_layers">
            <summary>
            Optional content properties
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Conformance">
            <summary>
            The conformance level.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.PageLabels">
            <summary>
            Page labels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.UsedFonts">
            <summary>
            Gets the fonts which are available in the PDF document.
            </summary>
            <value>Retruns the fonts which are used in the PDF document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Template">
            <summary>
            Gets or sets a template that is applied to all pages in the document.
            </summary>        
            <value>The  specifying the default template for the document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Pages">
            <summary>
            Gets the pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.TableExtractor">
            <summary>
            Gets the table extractor of the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Security">
            <summary>
            Gets the security parameters of the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.DocumentInformation">
            <summary>
            Gets or sets document's information and properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.ViewerPreferences">
            <summary>
            Gets or sets a viewer preferences object controlling the way the document is to be 
            presented on the screen or in print.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.CompressionLevel">
            <summary>
            Gets or sets the desired level of stream compression.
            </summary>
            <remarks>All new objects should be compressed with this level of the compression.</remarks>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.FileStructure">
            <summary>
            Gets or sets the internal structure of the PDF file.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.FileStructureNew">
            <summary>
            Get the PDF file structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.JavaScripts">
            <summary>
            Gets the additional document's actions.
            </summary>
            <value>The  specifying the document action.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Bookmarks">
            <summary>
            Gets the bookmarks.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.PrivateFonts">
            <summary>
            Gets the Private Font Collection
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Layers">
            <summary>
            Optional content properties
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Collection">
            <summary>
            The pdf collections
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Split(System.String)">
            <summary>
            Splits a PDF file to many PDF files, each of them consists of one page from the source file.
            </summary>
            <param name="destFilePattern">Template for destination file names.</param>
            <remarks>
            Each destination file will have 'destFileName{0***}' name,
            where *** is an optional format string for the number of the
            page inside of the source document.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Split(System.String,System.Int32)">
            <summary>
            Splits a PDF file to many PDF files, each of them consists of
            one page from the source file.
            </summary>
            <param name="destFilePattern">Template for destination file
            names.</param>
            <param name="startNumber">The number that is use as a start
            point for the page numbering.</param>
            <remarks>
            Each destination file will have 'destFileName{0***}' name,
            where *** is an optional format string for the number of the
            page inside of the source document.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Merge(Spire.Pdf.PdfDocumentBase,System.Object[])">
            <summary>
            Merges the specified source documents and return destination document.
            </summary>
            <param name="dest">The destination document, where the other documents are merged into.
            If it's null a new document object will be created.</param>
            <param name="sourceDocuments">The source documents.</param>
            <returns>The document containing merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.DisposeOnClose(System.IDisposable)">
            <summary>
            Adds an object to a collection of the objects that will be disposed during document closing.
            </summary>
            <param name="obj">The object that will be disposed during document closing.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(System.IO.Stream,Spire.Pdf.FileFormat)">
            <summary>
            Convert the document to an stream with the file format.
            </summary>
            <param name="stream">
            The stream with the file format.
            </param>
            <param name="fileformat">
            The file format.
            FileFormat.SVG is not supported, because SVG file has no paging,so can't be saved to an stream.
            </param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(Spire.Pdf.FileFormat)">
            <summary>
            Convert the document to streams with the file format.
            </summary>
            <param name="fileformat">The file format.</param>
            <returns>
            The format file streams.
            FileFormat.PDF:return only one stream(PDF support paging).
            FileFormat.XPS:return only one stream(XPS support paging).
            FileFormat.DOC:return only one stream(DOC support paging).
            FileFormat.DOCX:return only one stream(DOCX support paging).
            FileFormat.XLSX:return only one stream(XLSX support paging).
            FileFormat.PCL:return only one stream(PCL support paging).
            FileFormat.POSTSCRIPT:return only one stream(POSTSCRIPT support paging).
            FileFormat.HTML:return only one stream(HTML support paging).
            FileFormat.SVG:return multiple streams(SVG not support paging,one stream to one page).
            </returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(System.Int32,System.Int32,Spire.Pdf.FileFormat)">
            <summary>
            Convert the document to streams with the file format.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="fileformat">The file format.</param>
            <returns>
            The format file streams.
            FileFormat.PDF:return only one stream(PDF support paging).
            FileFormat.XPS:return only one stream(XPS support paging).
            FileFormat.DOC:return only one stream(DOC support paging).
            FileFormat.DOCX:return only one stream(DOCX support paging).
            FileFormat.XLSX:return only one stream(XLSX support paging).
            FileFormat.PCL:return only one stream(PCL support paging).
            FileFormat.POSTSCRIPT:return only one stream(POSTSCRIPT support paging).
            FileFormat.HTML:return only one stream(HTML support paging).
            FileFormat.SVG:return multiple streams(SVG not support paging,one stream to one page).
            </returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32,System.Single)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="zoomFactor"></param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32,System.Int32,System.Int32)">
            <summary>
             Saves PDF document page as image,set Dpi
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="dpiX">Pictures X resolution</param>
            <param name="dpiY">Pictures Y resolution</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsMetaImage(System.Int32)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsMetaImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Saves PDF document page as image,set Dpi
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="dpiX">
            X resolution
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <param name="dpiY">
            Y resolution
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32,Spire.Pdf.Graphics.PdfImageType)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type">PdfImageType type </param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32,Spire.Pdf.Graphics.PdfImageType,System.Int32,System.Int32)">
            <summary>
            Saves PDF document page as image,Set PdfImageType and image Dpi
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type">PdfImageType type </param>
            <param name="dpiX">
            X resolution
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <param name="dpiY">
            Y resolution
            Note: Metafile can't set dpi and use "Green context" dpi.
            </param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToPdf(System.IO.MemoryStream,System.Int32,System.Int32)">
            <summary>
            Save a range page of the document to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToPdf(System.String,System.Int32,System.Int32)">
            <param name="fileName">A relative or absolute path for the file</param>
            <param name="startIndex">The start page index.</param>
            <param name="endIndex">The end page index.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(System.String)">
            <summary>
            Saves the document to the specified filename.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToXPS(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Save a range page of the document to xps as stream.
            </summary>
            <param name="startIndex">The strart index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The xps stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToXPS(System.IO.Stream)">
            <summary>
            Save the document to xps as stream.
            </summary>
            <param name="stream">The xps stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToSvg(System.String,System.Int32,System.Int32)">
            <param name="filename">A relative or absolute path for the file</param>
            <param name="startIndex">The start page index.</param>
            <param name="endIndex">The end page index.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToSVG(System.Int32,System.Int32)">
            <summary>
            Save a range page of the document to svg as stream[].
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <returns>Stream collection.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToSVG">
            <summary>
            Save the document to svg as stream[].
            </summary>
            <returns>Stream collection</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToHtml(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Save a range page of the document to html stream.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The html stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToHtml(System.IO.Stream)">
            <summary>
            Save the document to html stream.
            </summary>
            <param name="stream">The html stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToPcl(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Convert pdf document to pcl.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToPostScript(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Convert pdf document to pcl.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToDoc(System.Int32,System.Int32,System.IO.Stream,System.Boolean)">
            <summary>
            Save a range page of the document to doc as stream[].
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The doc stream.</param>
            <param name="IsDocx">Is doc or docx.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToDoc(System.IO.Stream,System.Boolean)">
            <summary>
            Save the document to doc as stream[].
            </summary>
            <param name="stream">The doc stream.</param>
            <param name="IsDocx">Is docs or doc.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToExcel(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Convert pdf document to excel.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The out stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToExcel(System.IO.Stream)">
            <summary>
            Save the document to excel as stream.
            </summary>
            <param name="stream">The excel stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToOfd(System.IO.Stream)">
            <summary>
            Save the document to ofd as stream.
            </summary>
            <param name="stream">The ofd stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveToOfd(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Save a range page of the document to ofd as stream.
            </summary>
            <param name="startIndex">The strart index.</param>
            <param name="endIndex">The end index.</param>
            <param name="stream">The ofd stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Close">
            <summary>
            Closes the document. Releases all common resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Close(System.Boolean)">
            <summary> 
            Closes the document.
            </summary>
            <param name="completely">if set to <c>true</c> the document should close its stream as well.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(System.IO.Stream)">
            <summary>
            Saves the document to the specified stream.
            </summary>
            <param name="stream">The stream object where PDF document will be saved.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportPage(Spire.Pdf.PdfDocumentBase,Spire.Pdf.PdfPageBase)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="page">The page.</param>
            <returns>The page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportPage(Spire.Pdf.PdfDocumentBase,System.Int32)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="pageIndex">Index of the page.</param>
            <returns>The page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportPage(Spire.Pdf.PdfDocumentBase,System.Int32,System.Int32)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="resultPageIndex">The page index in the result document.</param>
            <returns>The page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportPageRange(Spire.Pdf.PdfDocumentBase,System.Int32,System.Int32)">
            <summary>
            Imports a page range from a loaded document.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="startIndex">The start page index.</param>
            <param name="endIndex">The end page index.</param>
            <returns>The last created page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportPageRange(Spire.Pdf.PdfDocumentBase,System.Int32,System.Int32,System.Int32)">
            <summary>
            Imports a page range from a loaded document.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="startIndex">The start page index.</param>
            <param name="endIndex">The end page index.</param>
            <param name="resultPageIndex">The page index in the result document when startIndex == endIndex.</param>
            <returns>The last created page in the result document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.HandleActionAnnotation(System.Collections.Generic.Dictionary{Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.PdfPageBase},Spire.Pdf.PdfPageBase)">
            <summary>
            Handle action annotation.
            </summary>
            <param name="pageCorrespondance">The page corresponsedance</param>
            <param name="page">The page</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.MergeFontResource(Spire.Pdf.Primitives.PdfDictionary,System.Collections.Generic.Dictionary{Spire.Pdf.Interfaces.IPdfPrimitive,System.Byte[]})">
            <summary>
            Merge same font when merge document. Bug_4941
            </summary>
            <param name="dictionary">The resource dictionary.</param>
            <param name="fontMap">The document font map.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Equal(System.Byte[],System.Byte[])">
            <summary>
            Compare bytes.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.CreateBookmarkDestinationDictionary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Append(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Appends the specified loaded document to this one.
            </summary>
            <param name="ldDoc">The loaded document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportDestinations(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Import Original Document Destinations to new Document Catalog->Names -> Dests.
            Quote page to this document Catalog->Names -> Dests -> Names
            </summary>
            <param name="ldDoc">Original Document</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportOCProperties(Spire.Pdf.PdfDocumentBase)">
            <summary>
            Merge OCProperties
            </summary>
            <param name="ldDoc"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportD(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            
            </summary>
            <param name="D"></param>
            <param name="newD"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportItem(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary,System.String)">
            <summary>
            Merge D Item
            </summary>
            <param name="D"></param>
            <param name="newD"></param>
            <param name="key"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.IsPageExistField(Spire.Pdf.PdfPageBase,Spire.Pdf.Fields.PdfField)">
            <summary>
            Whether the page exist the field
            </summary>
            <param name="page">The page</param>
            <param name="field">The field</param>
            <returns>If exist return true or false</returns>
        </member>
        <member name="T:Spire.Pdf.PdfFileInfo">
            <summary>
            This class represents a set of the properties that define the internal structure of PDF file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfFileInfo.m_documentBase">
             <summary>
            PDF Document object
             </summary>
        </member>
        <member name="F:Spire.Pdf.PdfFileInfo.m_LoadFile">
            <summary>
            read pdf file
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfFileInfo.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>    
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.DocumentBase">
             <summary>
            PDF Document object
             </summary>
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.LoadFile">
            <summary>
            read pdf file
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.Version">
            <summary>
            Gets or sets the version of the PDF document.
            </summary>
            <value>The document version.</value>
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.IncrementalUpdate">
            <summary>
            Gets or sets a value indicating whether [incremental update].
            </summary>
            <value><c>true</c> if [incremental update]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.CrossReferenceType">
            <summary>
            Gets or sets the type of PDF cross-reference.
            </summary>
            <remarks>Please see the description of  for more details.</remarks>
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.TaggedPdf">
            <summary>
            Gets the value indicating whether the PDF document is tagged one or not.
            </summary>
            <value>If true PDF document is tagged, otherwise false.</value>
        </member>
        <member name="M:Spire.Pdf.PdfFileInfo.SetPdfVersion(Spire.Pdf.PdfVersion)">
            <summary>
            
            </summary>
            <param name="version"></param>
        </member>
        <member name="T:Spire.Pdf.PdfStructureType">
            <summary>
            Tagged PDF's standard structure types
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfStructureType.Div">
            <summary>
            A generic block-level element or group of elements
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfStructureType.Span">
            <summary>
            A generic inline portion of text having no particular inherent characteristics
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfStructureType.Figure">
            <summary>
            An item of graphical content
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfStructTreeRoot">
            <summary>
            Represents the document's structure tree root dictionary
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfStructTreeRoot.Build">
            <summary>
            Build struct tree root before saved.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfStructElement">
            <summary>
            Represents the structure element
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfStructElement.Parent">
            <summary>
            The parent struct element
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfStructElement.TreeRoot">
            <summary>
            The parent tree root
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfStructElement.Build">
            <summary>
            Build struct element before saved.
            </summary>
        </member>
        <member name="T:Spire.Pdf.DrawPageInBookletEventHandler">
            <summary>
            Delegate for handling event when drawing page in a booklet.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when starting/finished drawing a page of the source file in a booklet.</remarks>
        </member>
        <member name="T:Spire.Pdf.DrawPageInBookletEventArgs">
            <summary>
            Represents DrawPageInBooklet Event arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.DrawPageInBookletEventArgs.PageInSource">
            <summary>
            Gets the page of the source file.
            </summary>
        </member>
        <member name="P:Spire.Pdf.DrawPageInBookletEventArgs.PageNumberInSource">
            <summary>
            Gets the index of the source page, basing on 0.
            </summary>
        </member>
        <member name="P:Spire.Pdf.DrawPageInBookletEventArgs.PageInBooklet">
            <summary>
            Gets the page of the booklet.
            </summary>
        </member>
        <member name="P:Spire.Pdf.DrawPageInBookletEventArgs.PageNumberInBooklet">
            <summary>
            Gets the index of the booklet page, basing on 0.
            </summary>
        </member>
        <member name="T:Spire.Pdf.FileFormat">
            <summary>
            Specifies the type of file format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfFileFormat.Plain">
            <summary>
            Specifies plain PDF file format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfFileFormat.Linearized">
            <summary>
            Specifies Linearized PDF file format.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HttpReadType">
            <summary>
            Specifies the different way of presenting the document at the client browser.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HttpReadType.Open">
            <summary>
            Send the generated document to the client browser and will open document inside browser or using application associated with .pdf extension externally.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HttpReadType.Save">
            <summary>
            Send the generated document to the client browser and presents an option to save the document to disk or open inside the browser.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfVersion">
            <summary>
            Specifies the available PDF versions to save a PDF document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_0">
            <summary>
            PDF version 1.0.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_1">
            <summary>
            PDF version 1.1.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_2">
            <summary>
            PDF version 1.2.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_3">
            <summary>
            PDF version 1.3. Adobe Acrobat 4.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_4">
            <summary>
            PDF version 1.4. Adobe Acrobat 5.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_5">
            <summary>
            PDF version 1.5. Adobe Acrobat 6.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_6">
            <summary>
            PDF version 1.6. Adobe Acrobat 7.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_7">
            <summary>
            PDF version 1.7. Adobe Acrobat 8.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfCrossReferenceType">
            <summary>
            Specifies the type of the PDF cross-reference.
            </summary>
            <remarks>Default value is CrossReferenceStream</remarks>
        </member>
        <member name="F:Spire.Pdf.PdfCrossReferenceType.CrossReferenceTable">
            <summary>
            The cross-reference table contains information that permits random access to indirect objects within the file so that the entire file need not be read to locate any particular object. The structure is useful for incremental updates, since it allows a new cross-reference section to be added to the PDF file, containing entries only for objects that have been added or deleted. Cross-reference is represented by cross-reference table. The cross-reference table is the traditional way of representing reference type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCrossReferenceType.CrossReferenceStream">
            <summary>
            Cross-reference is represented by cross-reference stream. Cross-reference streams are stream objects, and contain a dictionary and a data stream.
            This leads to more compact representation of the file data especially along with the compression enabled.
            This format is supported by PDF 1.5 version and higher only.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfConformanceLevel">
            <summary>
            Specifies the Pdf document's Conformance-level.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.None">
            <summary>
            Specifies Default / No Conformance.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_A1B">
            <summary>
            This PDF/A ISO standard [ISO 19005-1:2005] is based on Adobe PDF version 1.4
            and This Level B conformance indicates minimal compliance to ensure that the 
            rendered visual appearance of a conforming file is preservable over the long term.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_X1A2001">
            <summary>
            This PDF/X-1a:2001 ISO standard [ISO 15930-1] is based on Adobe PDF version 1.3
            which uses only CMYK + Spot Color and this compliance to ensure that the 
            contents will be reliably reproduced in the repress environment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_A1A">
            <summary>
            PDF/A-1a ensures the preservation of a document's logical structure and con-tent text stream in natural reading order. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_A2A">
            <summary>
            PDF/A-2a standard,Only check the standard from the pdfaid:part and pdfaid:conformance node,And only check.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_A2B">
            <summary>
            PDF/A-2b standard,Only check the standard from the pdfaid:part and pdfaid:conformance node,And only check.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_A3A">
            <summary>
            PDF/A-3a standard,Only check the standard from the pdfaid:part and pdfaid:conformance node,And only check
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_A3B">
            <summary>
            PDF/A-3b standard,Only check the standard from the pdfaid:part and pdfaid:conformance node,And only check
            </summary>
        </member>
        <member name="T:Spire.Pdf.PrintScalingMode">
            <summary>
            Specifies the different page scaling option that shall be selected when a print dialog is displayed for this document.
            </summary>
            <remarks>Default value is AppDefault.</remarks>
        </member>
        <member name="F:Spire.Pdf.PrintScalingMode.AppDefault">
            <summary>
            Indicates the conforming readers default print scaling.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PrintScalingMode.None">
            <summary>
            Indicates no page scaling.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfCompressionLevel">
            <summary>
            Defines data compression level.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.None">
            <summary>
            Pack without compression.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.BestSpeed">
            <summary>
            Use high speed compression, reduce of data size is low.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.BelowNormal">
            <summary>
            Something middle between normal and BestSpeed compressions.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.Normal">
            <summary>
            Use normal compression, middle between speed and size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.AboveNormal">
            <summary>
            Pack better but require a little more time.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.Best">
            <summary>
            Use best compression, slow enough.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Editable">
            <summary>
            Gets or sets a value indicating whether this  is editable.
            </summary>
            <value><c>true</c> if editable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
            <value>The index of the selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <value>The selected value.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.SelectedItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.BackColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.ForeColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The highlighting mode.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text alignment.</value>
            <remarks>This property is meaningful for fields containing variable text only.
            </remarks>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Visible">
            <summary>
            Gets or sets a value indicating whether this  is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Form">
            <summary>
            Gets the form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form 
            field data from the document.
            </summary>
            <value>The mapping name.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Export">
            <summary>
            Gets or sets a value indicating whether this  is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value> if the field is read only, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Required">
            <summary>
            Gets or sets a value indicating whether this  is required.
            </summary>
            <value><c>true</c> if required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Flatten">
            <summary>
            Gets or sets a value indicating whether this  is flatten.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfSignatureStyledField">
            <summary>
            Represents form's field with style parameters.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureStyledField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.BackColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The highlighting mode.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Visible">
            <summary>
            Gets or sets a value indicating whether this  is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Spire.Pdf.Fields.FieldPainter.DrawButton(Spire.Pdf.Graphics.PdfCanvas,Spire.Pdf.Fields.PaintParams,Spire.Pdf.Graphics.PdfImage,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws a button.
            </summary>
            <param name="g">The g.</param>
            <param name="paintParams">The paint params.</param>
            <param name="image">The image.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.FieldPainter.CalculateTextPosition(System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Calculate the text position
            </summary>
            <param name="rectangle">the rectangle</param>
            <param name="format">the pdfStringFormat</param>
            <param name="font">the PdfFontBase</param>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfAppearanceField">
            <summary>
            Represents form field with appearance custom support.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfAppearanceField.Appearance">
            <summary>
            Gets the appearance.
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfButtonField">
            <summary>
            Represents button field in the PDF form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfButtonField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the button.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.Text">
            <summary>
            Gets or sets the caption text.
            </summary>
            <value>The caption text.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.LayoutMode">
            <summary>
            Gets or sets the button layout mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.AlternateText">
            <summary>
            Gets or sets the text displayed when the mouse button is pressed within the annotation's active area, only available in Push mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.RolloverText">
            <summary>
            Gets or sets the text displayed when the user rolls the cursor into the annotation's active area without pressing the mouse button, only available in Push mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.IconLayout">
            <summary>
            Defining the icon layout.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.Icon">
            <summary>
            Gets or sets the widget annotation's normal icon displayed when it is not interacting with the user.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.AlternateIcon">
            <summary>
            Gets or sets the widget annotation's alternate icon displayed when the mouse button is pressed within its active area, only available in Push mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.RolloverIcon">
            <summary>
            Gets or sets the widget annotation's rollover icon displayed when the user rolls the cursor into its active area without pressing the mouse button, only available in Push mode.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfButtonField.AddPrintAction">
            <summary>
            Adds Print action to current button field.
            <remarks>Clicking on the specified button will trigger the Print Dialog Box.</remarks>
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfButtonIconLayout">
            <summary>
            Represents the button icon layout options.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonIconLayout.ScaleReason">
            <summary>
            Gets or sets the circumstances under which the icon shall be scaled inside the annotation rectangle.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonIconLayout.Spaces">
            <summary>
            Gets or sets an array of two numbers between 0.0 and 1.0 indicating the fraction of leftover space to allocate at the left and bottom of the icon.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonIconLayout.IsFitBounds">
            <summary>
            If true, indicates that the button appearance should be scaled to fit fully within the bounds of the annotation without taking into consideration the line width of the border.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonIconLayout.ScaleMode">
            <summary>
            Gets or sets the type of scaling to use.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfButtonIconScaleMode">
            <summary>
            Represents the type of scaling to use.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonIconScaleMode.Anamorphic">
            <summary>
            Scale the icon to fill the annotation rectangle exactly, without regard to its original aspect ratio.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonIconScaleMode.Proportional">
            <summary>
            Scale the icon to fit the width or height of the annotation rectangle while maintaining the icon's original aspect ratio.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfButtonLayoutMode">
            <summary>
            Represents the button layout mode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonLayoutMode.CaptionOnly">
            <summary>
            No icon; caption only.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonLayoutMode.IconOnly">
            <summary>
            No caption; icon only.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonLayoutMode.CaptionBelowIcon">
            <summary>
            Caption below the icon.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonLayoutMode.CaptionAboveIcon">
            <summary>
            Caption above the icon.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonLayoutMode.CaptionRightOfIcon">
            <summary>
            Caption to the right of the icon.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonLayoutMode.CaptionLeftOfIcon">
            <summary>
            Caption to the left of the icon,
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonLayoutMode.CaptionOverlayIcon">
            <summary>
            Caption overlaid directly on the icon.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfButtonIconScaleReason">
            <summary>
            Represtents the circumstances under which the icon shall be scaled inside the annotation rectangle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonIconScaleReason.Always">
            <summary>
            Always scale.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonIconScaleReason.IconIsBigger">
            <summary>
            Scale only when the icon is bigger than the annotation rectangele.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonIconScaleReason.IconIsSmaller">
            <summary>
            Scale only when the icon is smaller than the annotation rectangle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfButtonIconScaleReason.Never">
            <summary>
            Never scale.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfCheckBoxField">
            <summary>
            Represents check box field in the PDF form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfCheckBoxField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the check box field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfCheckBoxField.Checked">
            <summary>
            Gets or sets a value indicating whether this  is checked.
            </summary>
            <value><c>true</c> if checked; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfCheckFieldBase">
            <summary>
            Represents base class for field which can be in checked and unchecked states.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfCheckFieldBase.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the check box field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfCheckFieldBase.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The  object specifies the style of the check box field.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfComboBoxField">
            <summary>
            Represents combo box field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfComboBoxField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfComboBoxField.Editable">
            <summary>
            Gets or sets a value indicating whether this  is editable.
            </summary>
            <value><c>true</c> if editable; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfField">
            <summary>
            Represents field of the Pdf document's interactive form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfField.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="dictionary">Field Dictionary</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Form">
            <summary>
            Gets the form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form 
            field data from the document.
            </summary>
            <value>The mapping name.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Export">
            <summary>
            Gets or sets a value indicating whether this  is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value> if the field is read only, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Required">
            <summary>
            Gets or sets a value indicating whether this  is required.
            </summary>
            <value><c>true</c> if required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Flatten">
            <summary>
            Gets or sets a value indicating whether this  is flatten.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfField.SaveFieldAppearance(System.String)">
            <summary>
            Save the field apprearance
            </summary>
            <param name="text">The text</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfFieldCollection">
            <summary>
            Represents collection of the Pdf fields.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfFieldCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>        
        </member>
        <member name="P:Spire.Pdf.Fields.PdfFieldCollection.Item(System.String)">
            <summary>
            Gets the  with thier field name.
            </summary>   
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Add(Spire.Pdf.Fields.PdfField)">
            <summary>
            Adds the specified field.
            </summary>
            <param name="field">The field item which is added in the PDF form.</param>
            <returns>The field to be added on the page. </returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Insert(System.Int32,Spire.Pdf.Fields.PdfField)">
            <summary>
            Inserts the the field at the specified index.
            </summary>
            <param name="index">The index of the field.</param>
            <param name="field">The field which should be inserted at the specified index.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Contains(Spire.Pdf.Fields.PdfField)">
            <summary>
            Determines whether field is contained within the collection.
            </summary>
            <param name="field">Check whether  object is present in the field collection or not.</param>
            <returns>
            <c>true</c> if field is present in the collection, otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.IndexOf(Spire.Pdf.Fields.PdfField)">
            <summary>
            Gets the index of the field.
            </summary>
            <param name="field">The  object whose index is requested.</param>
            <returns>Index of the field in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Remove(Spire.Pdf.Fields.PdfField)">
            <summary>
            Removes the specified field in the collection.
            </summary>
            <param name="field">The  object to be removed from collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.RemoveAt(System.Int32)">
            <summary>
            Removes field at the specified position.
            </summary>
            <param name="index">The index where to remove the item.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Clear">
            <summary>
            Clears the form field collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfFieldCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfForm">
            <summary>
            Represents interactive form of the Pdf document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfForm.m_enabledHighLightFormField">
            <summary>
            Set a value to enabled form field highLight
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfForm.m_needRewriteFormField">
            <summary>
            pdfviewer fill,a form field needs to override ap 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfForm.m_sameFieldNameToOneField">
            <summary>
            Merge the fields with the same name into one field or not
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfForm.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>The Form fields.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.IsFlatten">
            <summary>
            Gets or sets a value indicating whether this  is flatten.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the form is read only.
            </summary>
            <value><c>true</c> if the form is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.AutoNaming">
            <summary>
            Gets or sets a value indicating whether [field auto naming].
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.NeedAppearances">
            <summary>
            Gets or sets a value indicating whether the viewer must generate appearances for fields.
            </summary>
            <value><c>true</c> if viewer must generate appearance; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfFormFieldCollection">
            <summary>
            Represents a collection of form fields.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFormFieldCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfListBoxField">
            <summary>
            Represents list box field of the PDF form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListBoxField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListBoxField.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the field is multiselectable.
            </summary>
            <value><c>true</c> if multiselectable; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfListField">
            <summary>
            Represents base class form's list fields.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfListField.m_commitOnSelChange">
            <summary>
            Internal variable to store CommitOnSelChange flag.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
            <value>The index of the selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <value>The selected value.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.SelectedItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.CommitOnSelChange">
            <summary>
            Gets or sets the flag indicating if a new value selected is committed immediately without waiting to leave the field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfListFieldItem">
            <summary>
            Represents an item of the list fields.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItem.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The item text, it is displayed in the list.</param>
            <param name="value">The item value, it is exported when form content is exported.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text of the list item field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value of the list item field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItem.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value>The primitive.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfListFieldItemCollection">
            <summary>
            Represents list field item collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value>The  object.</value>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Add(Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Adds the specified item in the collection.
            </summary>
            <param name="item">The  object which to be added in the collection.</param>
            <returns>item</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Insert(System.Int32,Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Inserts the list item field at the specified index.
            </summary>
            <param name="index">The index where to insert the new item.</param>
            <param name="item">The  object to be added to collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Remove(Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The  object which to be removed in the collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified position.
            </summary>
            <param name="index">The index where to remove the item.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Contains(Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Determines whether the item is contained by the collection.
            </summary>
            <param name="item">Check whether  object is exists in the collection or not.</param>
            <returns>
            <c>true</c> if the item is contained within the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.IndexOf(Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Gets the index of the specified item.
            </summary>
            <param name="item">A  object whose index is requested.</param>
            <returns>The index of the given item, -1 if the item does not exist.</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItemCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfRadioButtonListField">
            <summary>
            Represents radio button field in the PDF form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonListField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
            <value>The index of the selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <value>The selected value of the list field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListField.SelectedItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
            <value>The selected item of the field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListField.Items">
            <summary>
            Gets the items of the radio button field.
            </summary>
            <value>The radio button field item collection.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfRadioButtonListItem">
            <summary>
            Represents an item of a radio button list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonListItem.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonListItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListItem.Form">
            <summary>
            Gets the form of the field.
            </summary>
            <value>The  object of the field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListItem.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListItem.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfRadioButtonItemCollection">
            <summary>
            Represents collection of radio buttons items.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.#ctor(Spire.Pdf.Fields.PdfRadioButtonListField)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Add(Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The  object to be added to collection.</param>
            <returns>The index of the added field.</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Insert(System.Int32,Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Inserts an item at the specified index.
            </summary>
            <param name="index">The index where to insert the new item..</param>
            <param name="item">A  object to be added to collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Remove(Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The  object which is to be removed from the collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified position.
            </summary>
            <param name="index">The index where to remove the item.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.IndexOf(Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Gets the index of the item within the collection.
            </summary>
            <param name="item">A  object whose index is requested.</param>
            <returns>Index of the item with the collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Contains(Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Determines whether the collection contains the specified item.
            </summary>
            <param name="item">Check whether  object is exists in the collection or not.</param>
            <returns>
            <c>true</c> if collection contains specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Clear">
            <summary>
            Clears the item collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value>Returns item at the specified position.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfSignatureAppearanceField">
            <summary>
            Represents form field with appearance custom support.
            </summary>   
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureAppearanceField.Appearance">
            <summary>
            Gets the appearance.
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfSignatureField">
            <summary>
            Represents signature field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.#ctor(Spire.Pdf.PdfPageBase,System.String,Spire.Pdf.Security.PdfSignature)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>
            <param name="m_signature">a PdfSignature obj</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Single,System.Single)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Drawing.RectangleF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfStyledField">
            <summary>
            Represents form's field with style parameters.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfStyledField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.BackColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.ForeColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The highlighting mode.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text alignment.</value>
            <remarks>This property is meaningful for fields containing variable text only.
            </remarks>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Visible">
            <summary>
            Gets or sets a value indicating whether this  is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfTextBoxField">
            <summary>
            Represents text box field in the PDF form.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfTextBoxField.m_passwordValue">
            <summary>
            The password chrackter.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text of the text box field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value of the text box field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether to check spelling.
            </summary>
            <value><c>true</c> if check spelling; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.InsertSpaces">
            <summary>
            Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.
            If set, the field is automatically divided into as many equally spaced positions, or combs, 
            as the value of MaxLength, and the text is laid out into those combs.
            </summary>
            <value><c>true</c> if need to insert spaces; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.Multiline">
            <summary>
            Gets or sets a value indicating whether this  is multiline.
            </summary>
            <value><c>true</c> if multiline; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.Password">
            <summary>
            Gets or sets a value indicating whether this  is password field.
            </summary>
            <value><c>true</c> if password field; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.Scrollable">
            <summary>
            Gets or sets a value indicating whether this  is scrollable.
            </summary>
            <value><c>true</c> if scrollable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered in the text box.
            </summary>
            <value>An integer value specifying the maximum number of characters that can be entered in the text box.</value>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfTextBoxField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the text box field.</param>
        </member>
        <member name="T:Spire.Pdf.Fields.FieldFlags">
            <summary>
            Represents fields flags enum.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Default">
            <summary>
            Default field flag.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.ReadOnly">
            <summary>
            If set, the user may not change the value of the field. Any associated widget annotations 
            will not interact with the user; that is, they will not respond to mouse clicks or 
            change their appearance in response to mouse motions. This flag is useful 
            for fields whose values are computed or imported from a database.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Required">
            <summary>
            If set, the field must have a value at the time it is exported by a submit-form action.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.NoExport">
            <summary>
            If set, the field must not be exported by a submit-form action
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Multiline">
            <summary>
            If set, the field can contain multiple lines of text; 
            if clear, the fields text is restricted to a single line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Password">
            <summary>
            If set, the field is intended for entering a secure password that should not be 
            echoed visibly to the screen. Characters typed from the keyboard should instead 
            be echoed in some unreadable form, such as asterisks or bullet characters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.FileSelect">
            <summary>
            If set, the text entered in the field represents the pathname of a file whose 
            contents are to be submitted as the value of the field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.DoNotSpellCheck">
            <summary>
            If set, text entered in the field is not spell-checked.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.DoNotScroll">
            <summary>
            If set, the field does not scroll (horizontally for single-line fields, vertically 
            for multiple-line fields) to accommodate more text than fits within its annotation 
            rectangle. Once the field is full, no further text is accepted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Comb">
            <summary>
            Meaningful only if the MaxLen entry is present in the text field dictionary and if 
            the Multiline, Password, and FileSelect flags are clear. If set, the field is 
            automatically divided into as many equally spaced positions, or combs, as the 
            value of MaxLen, and the text is laid out into those combs.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.RichText">
            <summary>
            If set, the value of this field should be represented as a rich text string.
            If the field has a value, the RVentry of the field dictionary specifies 
            the rich text string.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.NoToggleToOff">
            <summary>
            If set, exactly one radio button must be selected at all times; clicking 
            the currently selected button has no effect. If clear, clicking the selected 
            button reselects it, leaving no button selected.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Radio">
            <summary>
            If set, the field is a set of radio buttons; if clear, the field is a check box. 
            This flag is meaningful only if the Pushbutton flag is clear.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.PushButton">
            <summary>
            If set, the field is a pushbutton that does not retain a permanent value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.RadiosInUnison">
            <summary>
            If set, a group of radio buttons within a radio button field that use the same value 
            for the on state will turn on and off in unison; that is if one is checked, they 
            are all checked. If clear, the buttons are mutually exclusive.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Combo">
            <summary>
            If set, the field is a combo box; if clear, the field is a list box.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Edit">
            <summary>
            If set, the combo box includes an editable text box as well as a drop-down 
            list; if clear, it includes only a drop-down list. This flag is meaningful only 
            if the Combo flag is set.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Sort">
            <summary>
            If set, the fields option items should be sorted alphabetically. This flag 
            is intended for use by form authoring tools, not by PDF viewer applications.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.MultiSelect">
            <summary>
            If set, more than one of the fields option items may be selected simultaneously; 
            if clear, no more than one item at a time may be selected.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.CommitOnSelChange">
            <summary>
            If set, the new value is committed as soon as a selection is made with the pointing 
            device. This option enables applications to perform an action once a selection is 
            made, without requiring the user to exit the field. If clear, the new value is not 
            committed until the user exits the field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfBorderStyle">
            <summary>
            Specifies the available styles for a field border.
            </summary>
            <remarks>Defaule value is Solid.</remarks>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Solid">
            <summary>
            A solid rectangle surrounding the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Dashed">
            <summary>
            A dashed rectangle surrounding the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Beveled">
            <summary>
            A simulated embossed rectangle that appears to be raised above the surface 
            of the page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Inset">
            <summary>
            A simulated engraved rectangle that appears to be recessed below the surface 
            of the page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Underline">
            <summary>
            A single line along the bottom of the annotation rectangle.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfHighlightMode">
            <summary>
            Specifies the highlight mode for a field.
            </summary>
            <remarks>Defaule value is Invert.</remarks>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfHighlightMode.NoHighlighting">
            <summary>
            No highlighting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfHighlightMode.Invert">
            <summary>
            Invert the contents of the field rectangle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfHighlightMode.Outline">
            <summary>
            Invert the field's border.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfHighlightMode.Push">
            <summary>
            Pushed highlighting.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfCheckBoxStyle">
            <summary>
            Specifies the style for a check box field.
            </summary>
            <remarks>The default value is Check.</remarks>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Check">
            <summary>
            A check mark is used for the checked state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Circle">
            <summary>
            A circle is used for the checked state. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Cross">
            <summary>
            A cross is used for the checked state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Diamond">
            <summary>
            A diamond symbol is used for the checked state. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Square">
            <summary>
            A square is used for the checked state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Star">
            <summary>
            A star is used for the checked state.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.HttpMethod">
            <summary>
            Specifies Http request method.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.HttpMethod.Get">
            <summary>
            Data submitted using Http Get method.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.HttpMethod.Post">
            <summary>
            Data submitted using Http Post method.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.SubmitDataFormat">
            <summary>
            Specifies the enumeration of submit data formats.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.SubmitDataFormat.Html">
            <summary>
            Data should be transmitted as Html.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.SubmitDataFormat.Pdf">
            <summary>
            Data should be transmitted as Pdf.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.SubmitDataFormat.Fdf">
            <summary>
            Data should be transmitted as Forms Data Format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.SubmitDataFormat.Xfdf">
            <summary>
            Data should be transmitted as XML Forms Data Format .
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfCheckFieldState">
            <summary>
            Represents states of the check field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckFieldState.Unchecked">
            <summary>
            Indicated unchecked/unpressed state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckFieldState.Checked">
            <summary>
            Indicated checked unpressed state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckFieldState.PressedUnchecked">
            <summary>
            Indicated pressed unchecked state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckFieldState.PressedChecked">
            <summary>
            Indicated pressed checked state.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.XFAForm">
            <summary>
            Represents XML Forms Architecture (XFA).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.XmlTemplate">
            <summary>
            XFA Template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.XmlDatasets">
            <summary>
            XFA Datasets.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.XmlConfig">
            <summary>
            XFA Config.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.XmlDataPackage">
            <summary>
            XML Data Package
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.Item(System.String)">
            <summary>
            Gets of sets data node value.deprecated to use,instead use xfaField to set field value.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.XFAForm.GetTemplate(System.String)">
            <summary>
            Returns XML node of field tempalte. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.XFAForm.getField(System.String)">
            <summary>
            Added by Henry Zhou. 
            To get the xfaField through its name. Notes: the param 'name' is the name have been midified by codes instead of originals.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.XFAXmlDataPackage.FindSelectItemsByValueOrDataSets(System.Collections.Generic.List{System.String},System.Xml.XmlNode,System.Collections.Generic.List{Spire.Pdf.Widget.XfaField})">
            <summary>
            FindSelectItemsByValueOrDataSets
            </summary>
            <param name="loItemsText">item text</param>
            <param name="node"></param>
            <param name="xfaFields"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfPageCollection">
            <summary>
            Implements routines for manipulation with loaded pages.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Widget.PdfPageCollection.PageAdded">
            <summary>
            Represents the  method that executes on a PdfNewDocument when a new page is created.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfPageCollection.SectionCount">
            <summary>
            Get the Section Count.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfPageCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfPageCollection.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add">
            <summary>
            Creates a new page and adds it to the collection.
            </summary>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add(System.Drawing.SizeF)">
            <summary>
            Creates a new page of the specified size and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add(System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins)">
            <summary>
            Creates a new page of the specified size and with the specified margins
            and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <param name="margins">The margins of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add(System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle)">
            <summary>
            Creates a new page of the specified size and with the specified margins
            and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <param name="margins">The margins of the new page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <returns>The created page.</returns>		
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add(System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle,Spire.Pdf.PdfPageOrientation)">
            <summary>
            Creates a new page of the specified size and with the specified margins
            and adds it to the collection.
            </summary>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <param name="orientation">The orientation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.SizeF)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.PointF,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="origin">The origin of the page.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the page at the given specified index.
            </summary>
            <param name="index"> Index of the page.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Remove(System.Int32,Spire.Pdf.PdfPageBase)">
            <summary>
            Removes the specified page.
            </summary>
            <param name="page">The page to be remove.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Remove(Spire.Pdf.PdfPageBase)">
            <summary>
            Removes the specified page.
            </summary>
            <param name="page">The page to be remove.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.ReArrange(System.Int32[])">
            <summary>
            ReArrange the Pages in the Loaded Document.
            </summary>
            <param name="orderArray">The page sequence to arrange the pages.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle,Spire.Pdf.PdfPageOrientation,System.Boolean)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <param name="orientation">The orientation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.GetSection(System.Int32)">
            <summary>
            Get the Section
            </summary>
            <param name="index">The index</param>
            <returns>The section</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.CaculatePageNumber(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.PdfPageBase,System.Int32@,System.Boolean@)">
            <summary>
            Caculate the index of the page in the document.
            </summary>
            <param name="pages">The pages</param>
            <param name="page">The page</param>
            <param name="pageCount">The page number</param>
            <param name="IsFind">whether the page is find in pages</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.IsPage(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Whether the current object is page object
            </summary>
            <param name="dic">The dic</param>
            <returns>if the dic is a page obejct ,return true ,or false</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.IndexOf(Spire.Pdf.PdfPageBase)">
            <summary>
            Gets the index of the page in the document.
            </summary>
            <param name="page">The current page.</param>
            <returns>Index of the page in the document if exists, -1 otherwise.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.ForeachKids(Spire.Pdf.Primitives.PdfDictionary,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            foreach Nodes,find page
            </summary>
            <param name="node"></param>
            <param name="index"></param>
            <param name="currentIndex"></param>
            <param name="localIndex"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Widget.PdfPageCollection.GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Pdf.Widget.PdfPageWidgetEnumerator">
            <summary>
            Implements enumerator to the loaded page collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageWidgetEnumerator.#ctor(Spire.Pdf.Widget.PdfPageCollection)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfPageWidgetEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The enumerator is positioned before the first element of the collection
            or after the last element. </exception>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageWidgetEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageWidgetEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfAnnotationWidgetCollection">
            <summary>
            Represents the loaded annotation colllection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.Item(System.String)">
            <summary>
            Represents the annotation with specified name.
            </summary>
            <param name="name">The specified annotation name.</param>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.PageWidget">
            <summary>
            Gets or sets the page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.Add(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Adds annotation to collection.
            </summary>
            <param name="annotation">Annotation to be added to collection.</param>
            <returns>Position of the annotation in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.CreatePolygonAnnotation(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Creates the polygon annotation
            </summary>
            <param name="dictionary">The dictionary</param>
            <param name="crossTable">The cross table</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.CreatePolyLineAnnotation(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Creates the polyLine annotation
            </summary>
            <param name="dictionary">The dictionary</param>
            <param name="crossTable">The cross table</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.CreateSquareAnnotation(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Creates the square annotation
            </summary>
            <param name="dictionary">The dictionary</param>
            <param name="crossTable">The cross table</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.CreateInkAnnotation(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Creates the ink annotation
            </summary>
            <param name="dictionary">The dictionary</param>
            <param name="crossTable">The cross table</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.CreateCircleAnnotation(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Creates the Circle annotation
            </summary>
            <param name="dictionary">The dictionary</param>
            <param name="crossTable">The cross table</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.BackColor">
            <summary>
            Get or Set the background color of the field
            </summary>
            <value>A  object specifying the background color of field. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.ForeColor">
            <summary>
            Gets or Set the fore color of the field.
            </summary>
            <value>A  object specifying the background color of field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.TextAlignment">
            <summary>
            Get or Set the text alignment in a text box.
            </summary>
            <value>A  enumeration member specifying the text alignment in a text box.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.HighlightMode">
            <summary>
            Get or Set the HighLightMode of the Field.
            </summary>
            <value>A  enumeration member specifying the highlight mode in a text box.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Text">
            <summary>
            Gets or Set value of the text box field.
            </summary>
            <value>A string value representing the value of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.DefaultValue">
            <summary>
            Gets or set the default value of the field.
            </summary>
            <value>A string value representing the default value of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether to check spelling.
            </summary>
            <value>True if the field content should be checked for spelling erorrs, false otherwise. Default is true.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.InsertSpaces">
            <summary>
            Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.
            If set, the field is automatically divided into as many equally spaced positions, or combs, 
            as the value of MaxLength, and the text is laid out into those combs.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Multiline">
            <summary>
            Gets or sets a value indicating whether this  is multiline.
            </summary>       
            <value>True if the field is multiline, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Password">
            <summary>
            Gets or sets a value indicating whether this  is password field.
            </summary>
            <value>True if the field is a password field, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Scrollable">
            <summary>
            Gets or sets a value indicating whether this  is scrollable.
            </summary>
            <value>True if the field content can be scrolled, false otherwise. Default is true.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.MaxLength">
            <summary>
            Gets or sets the maximum length of the field, in characters.
            </summary>
            <value>A positive integer value specifying the maximum number of characters that can be entered in the text edit field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.BorderStyle">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.BorderWidth">
            <summary>
            Gets or Sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Visible">
            <summary>
            Gets a value indicating the visibility of the field.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Name">
            <summary>
            Gets the name of the field.
            </summary>
            <value>A string value specifying the name of the field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form
            field data from the document.
            </summary>
            <value>A string value specifying the mapping name of the field. </value>        
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Page">
            <summary>
            Gets the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>True if the field is read-only, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Required">
            <summary>
            Gets or sets a value indicating whether this  is required.
            </summary>
            <value>True if the field is required, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Export">
            <summary>
            Gets or sets a value indicating whether this  is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Flatten">
            <summary>
            Gets or sets a value indicating whether this  is flatten.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget">
            <summary>
            Represents a button field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.m_ButtonImage">
            <summary>
            Button background picture
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.ButtonImage">
            <summary>
            Gets or sets Button background picture.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.Text">
            <summary>
            Gets or sets the caption text.
            </summary>
            <value>A string value specifying the caption of the button.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.WidgetItems">
            <summary>
            Gets the collection of button items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.IconLayout">
            <summary>
            Defining the icon layout.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.SetButtonImage(Spire.Pdf.Graphics.PdfImage)">
            <summary>
            need replace image
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.AddPrintAction">
            <summary>
            Adds Print action to current button field.</summary>
            <remarks>Clicking on the specified button will trigger the Print Dialog Box.</remarks>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfButtonWidgetWidgetItem">
            <summary>
            Represents button group item of an existing PDF document`s form.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStateFieldWidget">
            <summary>
            Represents the base class for loaded state field.
            </summary>   
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStateFieldWidget.WidgetItems">
            <summary>
            Gets the items collection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStateWidgetItem">
            <summary>
            Represents the loaded state item.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStateWidgetItem.Checked">
            <summary>
            Gets or sets a value indicating whether this  is checked.
            </summary>           
        </member>
        <member name="T:Spire.Pdf.Widget.PdfButtonWidgetItemCollection">
            <summary>
            Represents collection of button item.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfButtonWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfCheckBoxWidgetFieldWidget">
            <summary>
            Represents check box of an existing PDF document`s form. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfCheckBoxWidgetFieldWidget.Checked">
            <summary>
            Gets or sets a value indicating whether this  is checked.
            </summary>
            <value>True if the check box is checked, false otherwise. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfCheckBoxWidgetFieldWidget.WidgetWidgetItems">
            <summary>
            Gets the collection check box items.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfCheckBoxWidgetFieldWidget.SetExportValue(System.String)">
            <summary>
            Set the export value.
            </summary>
            <param name="exportValue">The export value</param>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfCheckBoxWidgetWidgetItemCollection">
            <summary>
            Represents collection of text box group items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfCheckBoxWidgetWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfCheckBoxWidgetWidgetItem">
            <summary>
            Represents loaded check box item.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget">
            <summary>
            Represents a choice field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.Values">
            <summary>
            Gets the collection of choice items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.SelectedWidgetItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.SelectedItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.CommitOnSelChange">
            <summary>
            Gets or sets the flag indicating if a new value selected is committed immediately without waiting to leave the field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfComboBoxWidgetFieldWidget">
            <summary>
            Represents the combo box field of an existing item.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfComboBoxWidgetFieldWidget.Editable">
            <summary>
            Gets or sets a value indicating whether this  is editable.
            </summary>
            <value>True if the drop down list is editable, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfComboBoxWidgetFieldWidget.WidgetItems">
            <summary>
            Gets the collection of combo box items.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfComboBoxWidgetWidgetItem">
            <summary>
            Represents group for combo box field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfComboBoxWidgetItemCollection">
            <summary>
            Represents collection of Combo box items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfComboBoxWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStateItemCollection">
            <summary>
            Represents state item collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStateItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>  
            <value>The index of specified  item.</value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfFieldWidget">
            <summary>
            Represents base class for loaded fields.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidget.ObjectID">
            <summary>
            Form field identifier
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.Name">
            <summary>
            Gets the name of the field.
            </summary>
            <value>A string value specifying the name of the field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form
            field data from the document.
            </summary>
            <value>A string value specifying the mapping name of the field. </value>        
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.Page">
            <summary>
            Gets the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>True if the field is read-only, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.Required">
            <summary>
            Gets or sets a value indicating whether this  is required.
            </summary>
            <value>True if the field is required, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.Export">
            <summary>
            Gets or sets a value indicating whether this  is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.FormWidget">
            <summary>
            Gets the form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFieldWidget.ReSetPage(Spire.Pdf.PdfPageBase)">
            <summary>
            Re set the page.
            </summary>
            <param name="page">The page</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFieldWidget.SetName(System.String)">
            <summary>
            Sets the name of the field.
            </summary>
            <param name="name">New name of the field.</param>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfFieldWidgetItem">
            <summary>
            Represents base class for field's group items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidgetItem.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidgetItem.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidgetItem.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidgetItem.Page">
            <summary>
            Gets the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfFormWidget">
            <summary>
            Represents Loaded form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormWidget.FieldsWidget">
            <summary>
            Gets the field collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormWidget.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the form is read only.
            </summary>
            <value>True if the field is read-only, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormWidget.XFAForm">
            <summary>
            Gets XFA data of the form.
            </summary>
            
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormWidget.NeedAppearances">
            <summary>
            Gets or sets a value indicating whether need appearances.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ExportData(System.String,Spire.Pdf.Widget.DataFormat,System.String)">
            <summary>
            Export the form data to a file.
            </summary>
            <param name="fileName">Name of the document which is need to export.</param>
            <param name="dataFormat">The format of exported data.</param>
            <param name="formName"> The name of the PDF file the data is exported from.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ExportData(System.IO.Stream,Spire.Pdf.Widget.DataFormat,System.String)">
            <summary>
            Export the form data to a file.
            </summary>
            <param name="fileName">The stream where form data will be exported.</param>
            <param name="dataFormat">The format of exported data</param>
            <param name="formName"> The name of the PDF file the data is exported from</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.RetsetSignatureFlags">
            <summary>
            Reset the signature flags.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ImportData(System.String,Spire.Pdf.Widget.DataFormat)">
            <summary>
            Imports the data.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="dataFormat">The data format.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ImportDataXFDF(System.String)">
            <summary>
            Import form data from XFDF file.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ImportData(System.String,Spire.Pdf.Widget.DataFormat,System.Boolean)">
            <summary>
            Imports the data.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="dataFormat">The data format.</param>
            <param name="errorFlag">if it is error flag, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ImportDataFDF(System.IO.Stream,System.Boolean)">
            <summary>
            Import form data from FDF file.
            </summary>
            <param name="stream">The FDF file stream</param>
            <param name="continueImportOnError">False if the import should stop on the first field that generates an error, or true if the import should ignore the error and continue with the next field.</param>
            <returns>Document form fields filled with data which are imported from FDF.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.HighlightFields(System.Boolean)">
            <summary>
            Sets/Resets the form field highlight option.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.OnlyHexInString(System.String)">
            <summary>
            Called when [hex in string].
            </summary>
            <param name="test">The test.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ExtractSignatureAsImages">
            <summary>
            Extract Images from Signature
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.RenderFromAnnots(Spire.Pdf.General.Render.PdfElement.PdfPageResources)">
            <summary>
            
            </summary>
            <param name="apAsAnnotsRes"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfFormFieldWidgetCollection">
            <summary>
            Represents field collection of loaded form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.Item(System.String)">
            <summary>
            Returns field with specified name.
            </summary>
            <param name="name">The specified field name.</param>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.FormWidget">
            <summary>
            Gets or sets the form.
            </summary>      
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.FieldNames">
            <summary>
            Field Signature Names
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.AddFormField(Spire.Pdf.Fields.PdfField)">
            <summary>
            Add field
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.GetField(System.Int32)">
            <summary>
            Gets the field.
            </summary>
            <param name="index">int index</param>
            <returns>The created field.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.UpdateFieldName(Spire.Pdf.Fields.PdfField)">
            <summary>
            Update field name.
            </summary>
            <param name="field">The field</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.GetFieldNameByExportValue(System.String)">
            <summary>
            Get FieldName from FormWidget by exportValue
            </summary>
            <param name="exportValue"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.GetFieldNameByExportValue(Spire.Pdf.Primitives.PdfDictionary,System.String)">
            <summary>
            Get filedName from FiledWeiget
            </summary>
            <param name="dic"></param>
            <param name="exportValue"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.FindExportValueFromAP(Spire.Pdf.Primitives.PdfDictionary,System.String)">
            <summary>
            find exportValue from AP  By exportValue
            </summary>
            <param name="dicAP"></param>
            <param name="exportValue"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.GetFieldsByExportValue(System.String)">
            <summary>
            Get Fields from FormWidget by exportValue
            </summary>
            <param name="exportValue"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget">
            <summary>
            Represents loaded list box field.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the field is multiselectable..
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget.TI">
            <summary>
            For scrollable list boxes, the top index (the index in the Opt array of the first option visible in the list)
            Default value: 0.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The collection of list box items.</value>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget.GetSelectedMaxIndex(System.Int32[])">
            <summary>
            获取选中项中最大的一个索引
            </summary>
            <param name="selectedIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget.GetVisualItemCount(Spire.Pdf.Fields.PdfListFieldItemCollection,Spire.Pdf.Widget.PdfStyledFieldWidget.GraphicsProperties)">
            <summary>
            获取listbox可显示区域最大能显示多少个项
            </summary>
            <param name="items"></param>
            <param name="gp"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListFieldWidgetItem">
            <summary>
            Represents group item for list field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListWidgetFieldItemCollection">
            <summary>
            Represents loaded item collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListWidgetFieldItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListWidgetItem">
            <summary>
            Represents loaded list item.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListWidgetItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>A string value representing the display text of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListWidgetItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>A string value representing the value of the item. </value>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListWidgetItemCollection">
            <summary>
            Represents a collection of list box field items.
            </summary>   
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItemCollection.Add(Spire.Pdf.Widget.PdfListWidgetItem)">
            <summary>
            Inserts an item at the end of the collection. 
            </summary>
            <param name="widgetItem">a object to be added to collection.</param>
            <returns>The index of item.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItemCollection.Insert(System.Int32,Spire.Pdf.Widget.PdfListWidgetItem)">
            <summary>
            Inserts the list item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="widgetItem">The item.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <remarks>Throws IndexOutOfRange exception if the index is out of bounds.</remarks>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItemCollection.Clear">
            <summary>
            Clears the item collection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfRadioButtonWidgetWidgetItemCollection">
            <summary>
            Represents collection of radio box group items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonWidgetWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <returns>Returns  object at the specified index.</returns>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfRadioButtonWidgetItem">
            <summary>
            Represents radio button field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonWidgetItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value of the radio button item.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonWidgetItem.Selected">
            <summary>
            Gets or sets a value indicating whether this  is selected.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget">
            <summary>
            Represents radio button field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.WidgetWidgetItems">
            <summary>
            Gets the collection of radio button items.
            </summary>
            <value>A  that represents the items within the list.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item in the list.
            </summary>
            <value>The lowest ordinal index of the selected items in the list. The default is -1, which indicates that nothing is selected. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list. 
            </summary>
            <value>A string value specifying the value of the first selected item, null (Nothing in VB.NET) if there is no selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.SelectedItem">
            <summary>
            Gets the selected item.
            </summary>
            <value>Return the item as PdfLoadedRadioButtonItem class</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.ButtonStyle">
            <summary>
            Gets the button style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.Value">
            <summary>
            Gets or sets the value of specified item.
            </summary>
            <value>A string value representing the value of the item.</value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfSignatureFieldWidget">
            <summary>
            Represents the signature field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfSignatureFieldWidget.Draw">
            <summary>
            draw signature
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfSignatureFieldWidget.ParseDatetime(System.String)">
            <summary>
            Need to convert a date
            </summary>
            <param name="date">convert a date</param>
            <returns>DateTime</returns>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStateWidgetItemCollection">
            <summary>
            Represents the collection of loaded state item.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStateWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStyledFieldWidget">
            <summary>
            Represents loaded styled field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfStyledFieldWidget.m_DAString">
            <summary>
            Get DA for from annot 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the annotations active area..
            </summary>
            <value>The mouse up action.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            annotations active area.
            </summary>
            <value>The mouse down action.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.GotFocus">
            <summary>
            Gets or sets the action to be performed when the annotation receives the 
            input focus.
            </summary>
            <value>The got focus action.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.BackColor">
            <summary>
            Get or Set the background color of the field
            </summary>
            <value>A  object specifying the background color of field. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.LostFocus">
            <summary>
            Gets or sets the action to be performed when the annotation loses the 
            input focus.
            </summary>
            <value>The lost focus action.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.BorderStyle">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.BorderWidth">
            <summary>
            Gets or Sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfStyledFieldWidget.GetFontSizeFromDA(System.String[])">
            <summary>
            Get font size from DA
            </summary>
            <param name="fontParameters">The font parameters</param>
            <returns>The font size</returns>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.DefaultIndex">
            <summary>
            Gets the default index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Visible">
            <summary>
            Gets a value indicating the visibility of the field.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfStyledFieldWidget.IsASCIICharacters">
            <summary>
            Whether they are all ascii characters.
            </summary>
            <returns>if all characters are ascii characters,return true ,or false</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfStyledFieldWidget.GetXfaFieldFromTemplate">
            <summary>
            Get the xfa field from template
            </summary>
            <returns>A xmlnode</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfStyledFieldWidget.GetAttributeValue(System.String)">
            <summary>
            Get the value of the specified attribute
            </summary>
            <returns>The value</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfStyledFieldWidget.GraphicsProperties.#ctor(Spire.Pdf.Widget.PdfStyledFieldWidget)">
            <summary>
            Initializes a new instance of the  struct.
            </summary>
            <param name="fieldWidget">The field.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfStyledFieldWidget.GraphicsProperties.#ctor(Spire.Pdf.Widget.PdfFieldWidgetItem)">
            <summary>
            Initializes a new instance of the  struct.
            </summary>
            <param name="widgetItem">The item.</param>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfTexBoxWidgetItem">
            <summary>
            Represents an item in a text box field collection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfTextBoxFieldWidget">
            <summary>
            Represents the text box field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfTextBoxFieldWidget.m_passwordValue">
            <summary>
            The password chrackter.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.ForeColor">
            <summary>
            Gets or Set the fore color of the field.
            </summary>
            <value>A  object specifying the background color of field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.TextAlignment">
            <summary>
            Get or Set the text alignment in a text box.
            </summary>
            <value>A  enumeration member specifying the text alignment in a text box.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.HighlightMode">
            <summary>
            Get or Set the HighLightMode of the Field.
            </summary>
            <value>A  enumeration member specifying the highlight mode in a text box.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.Text">
            <summary>
            Gets or Set value of the text box field.
            </summary>
            <value>A string value representing the value of the item. </value>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfTextBoxFieldWidget.AppendApContent(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            append ap content
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfTextBoxFieldWidget.SetBoderStyleToApStream(Spire.Pdf.Core.Contents.PdfStreamWriter,System.Drawing.RectangleF)">
            <summary>
            Set the boder style
            </summary>
            <param name="writer">The writer</param>
            <param name="bounds">The bounds</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfTextBoxFieldWidget.GetTransformMatrix(Spire.Pdf.Primitives.PdfDictionary,System.Drawing.RectangleF)">
            <summary>
            Get the transform matrix from the MK entry in dictionary.
            </summary>
            <param name="dictionary">The annotation</param>
            <param name="bounds">The annotation's bound</param>
            <returns>The matrix</returns>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.DefaultValue">
            <summary>
            Gets or set the default value of the field.
            </summary>
            <value>A string value representing the default value of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.SpellCheck">
            <summary>
            Gets or sets a value indicating whether to check spelling.
            </summary>
            <value>True if the field content should be checked for spelling erorrs, false otherwise. Default is true.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.InsertSpaces">
            <summary>
            Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.
            If set, the field is automatically divided into as many equally spaced positions, or combs, 
            as the value of MaxLength, and the text is laid out into those combs.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.Multiline">
            <summary>
            Gets or sets a value indicating whether this  is multiline.
            </summary>       
            <value>True if the field is multiline, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.Password">
            <summary>
            Gets or sets a value indicating whether this  is password field.
            </summary>
            <value>True if the field is a password field, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.Scrollable">
            <summary>
            Gets or sets a value indicating whether this  is scrollable.
            </summary>
            <value>True if the field content can be scrolled, false otherwise. Default is true.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.MaxLength">
            <summary>
            Gets or sets the maximum length of the field, in characters.
            </summary>
            <value>A positive integer value specifying the maximum number of characters that can be entered in the text edit field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.WidgetItems">
            <summary>
            Gets the collection of text box field items. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfTextBoxFieldWidget.CalculateTextLine(System.Single,System.Drawing.RectangleF,System.String)">
            <summary>
            Calculate how many lines of text
            </summary>
            <param name="fontSize"></param>
            <param name="rect"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfTextBoxFieldWidget.CalculateFontSize(System.Single,System.Single,System.Drawing.RectangleF,System.String)">
            <summary>
            Calculate font size
            </summary>
            <param name="fontSize"></param>
            <param name="fontHeight"></param>
            <param name="rect"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfTextBoxFieldWidget.GetDaFontSize">
            <summary>
            Get font size from da string 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfTextBoxFieldWidget.SaveFieldAppearance(System.String)">
            <summary>
            Save the text box field appearance
            </summary>
            <param name="text">the text value</param>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfTextBoxWidgetItemCollection">
            <summary>
            Represents collection of text box group items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.XFdfDocument">
            <summary>
            Represents base class of XFDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.XFdfDocument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.PushButton">
            <summary>
            Identify push button field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.CheckBox">
            <summary>
            Identify check box field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.RadioButton">
            <summary>
            Identify radio button field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.TextField">
            <summary>
            Identify text field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.ListBox">
            <summary>
            Identify listbox field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.ComboBox">
            <summary>
            Identify combobox field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.SignatureField">
            <summary>
            Identify signature field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.Null">
            <summary>
            Identify that field has no type.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.DataFormat">
            <summary>
            Specifies the format of Export or Import data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.DataFormat.Xml">
            <summary>
            Specifies  XML file format
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.DataFormat.Fdf">
            <summary>
            Specifies  Forms Data Format file format
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.DataFormat.XFdf">
            <summary>
            Specifies  XFDF file format.
            </summary>    
        </member>
        <member name="M:Spire.Pdf.PdfCacheCollection.GetCachedObject(System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            Get cached item.
            </summary>
            <param name="group">
            Cache group which all objects in group share the same data.
            </param>
            <returns>Any cached object,because all objects in group share the same data.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfSeparableBlend">
            <summary>
            Represents the separable blend.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.#ctor(System.String,System.Single)">
            <summary>
            Represents the instance.
            </summary>
            <param name="blendMode">The blend mode</param>
            <param name="alphaFactor">The alpha factor</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.Initialize(System.String)">
            <summary>
            Initialize object.
            </summary>
            <param name="blendMode">The blend mode</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.StringToEnum``1(System.String)">
            <summary>
            String to enum.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="enumType">The enum type</param>
            <returns>The enum type</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.BlendImage(System.Drawing.Image,System.Drawing.Image,System.Single[])">
            <summary>
            Blend image.
            </summary>
            <param name="pageImage">The page image</param>
            <param name="sourceImage">The source image</param>
            <param name="element">The matrix</param>
            <returns>The blend bitmap</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.BlendPath(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Image)">
            <summary>
            Blend path.
            </summary>
            <param name="pageGraphics">The page graphics</param>
            <param name="penColor">The pen color</param>
            <param name="path">The path</param>
            <param name="pageImage">The page image</param>
            <returns>The bitmap</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.BlendImage(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Blend image.
            </summary>
            <param name="backBitmap">The back bitmap</param>
            <param name="sourceBitmap">The source bitmap</param>
            <param name="blendBitmap">The blend bitmap</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.BlendBitmap(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Blend bitmap.
            </summary>
            <param name="backBitData">The back bitdata</param>
            <param name="sourceBitData">The source bitdata</param>
            <param name="outBitData">The out bitdata</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.MultilyBlend(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Multily blend.
            </summary>
            <param name="backBitBase">The back bitbase</param>
            <param name="sourceBitBase">The source bitbase</param>
            <param name="outPutBitBase">The output bitbase</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.DarkenBlend(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Darken blend.
            </summary>
            <param name="backBitBase">The back bitbase</param>
            <param name="sourceBitBase">The source bitbase</param>
            <param name="outPutBitBase">The output bitbase</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.LightenBlend(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Lighten blend.
            </summary>
            <param name="backBitBase">The back bitbase</param>
            <param name="sourceBitBase">The source bitbase</param>
            <param name="outPutBitBase">The output bitbase</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.ScreenBlend(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Screen blend.
            </summary>
            <param name="backBitBase">The back bitbase</param>
            <param name="sourceBitBase">The source bitbase</param>
            <param name="outPutBitBase">The output bitbase</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.NormalBlend(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Normal blend.
            </summary>
            <param name="backBitBase">The back bitbase</param>
            <param name="sourceBitBase">The source bitbase</param>
            <param name="outPutBitBase">The output bitbase</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.SaturationBlend(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Saturation blend.
            </summary>
            <param name="backBitBase">The back bitbase</param>
            <param name="sourceBitBase">The source bitbase</param>
            <param name="outPutBitBase">The output bitbase</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.CreateBlendBitmap(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Create blend bitmap.
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="dpix">The dpix</param>
            <param name="dpiy">The dpiy</param>
            <returns>The bitmap</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.SubtractedImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Subtracted image.
            </summary>
            <param name="sourceImage">The source image</param>
            <param name="rect">The rect</param>
            <returns>The bitmap</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.GetActualImageSize(System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
            Get the image actual size.
            </summary>
            <param name="width">The widhth</param>
            <param name="height">The height</param>
            <param name="dpix">The dpix</param>
            <param name="dpiy">The dpiy</param>
            <returns>The image actual size</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.GetBackBitmap(System.Drawing.Image,System.Single[])">
            <summary>
            Get back bitmap.
            </summary>
            <param name="pageImage">The page image</param>
            <param name="element">The float array</param>
            <returns>The bitmap</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.GetSourceBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Get source bitmap.
            </summary>
            <param name="sourceImage">The source image</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="dpix">The dpix</param>
            <param name="dpiy">The dpiy</param>
            <returns>The bitmap</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSeparableBlend.GetPathBound(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Get the path bound.
            </summary>
            <param name="path">The path</param>
            <param name="matrix">The matrix</param>
            <returns>The rectangle</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBlend">
            <summary>
            Implements blend brush setting and functions.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBlend.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBlend.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="count">The number of elements in the Factors and Positions arrays.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBlend.Factors">
            <summary>
            Gets or sets the factors array.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBlendBase">
            <summary>
            Represents the base class for PdfBlend and PdfColorBlend classes.
            Implements basic routines needed by both classes.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBlendBase.Positions">
            <summary>
            Gets or sets the positions array.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBrushes">
            <summary>
            Represents the collection of immutable default brushes.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.AliceBlue">
            <summary>
            Gets the AliceBlue brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.AntiqueWhite">
            <summary>
            Gets the antique white brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Aqua">
            <summary>
            Gets the Aqua default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Aquamarine">
            <summary>
            Gets the Aquamarine default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Azure">
            <summary>
            Gets the Azure default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Beige">
            <summary>
            Gets the Beige default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Bisque">
            <summary>
            Gets the Bisque default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Black">
            <summary>
            Gets the Black default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.BlanchedAlmond">
            <summary>
            Gets the BlanchedAlmond default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Blue">
            <summary>
            Gets the Blue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.BlueViolet">
            <summary>
            Gets the BlueViolet default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Brown">
            <summary>
            Gets the Brown default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.BurlyWood">
            <summary>
            Gets the BurlyWood default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.CadetBlue">
            <summary>
            Gets the CadetBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Chartreuse">
            <summary>
            Gets the Chartreuse default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Chocolate">
            <summary>
            Gets the Chocolate default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Coral">
            <summary>
            Gets the Coral default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.CornflowerBlue">
            <summary>
            Gets the CornflowerBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Cornsilk">
            <summary>
            Gets the Corn silk default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Crimson">
            <summary>
            Gets the Crimson default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Cyan">
            <summary>
            Gets the Cyan default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkBlue">
            <summary>
            Gets the DarkBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkCyan">
            <summary>
            Gets the DarkCyan default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkGoldenrod">
            <summary>
            Gets the DarkGoldenrod default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkGray">
            <summary>
            Gets the DarkGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkGreen">
            <summary>
            Gets the DarkGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkKhaki">
            <summary>
            Gets the DarkKhaki default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkMagenta">
            <summary>
            Gets the DarkMagenta default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkOliveGreen">
            <summary>
            Gets the DarkOliveGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkOrange">
            <summary>
            Gets the DarkOrange default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkOrchid">
            <summary>
            Gets the DarkOrchid default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkRed">
            <summary>
            Gets the DarkRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkSalmon">
            <summary>
            Gets the DarkSalmon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkSeaGreen">
            <summary>
            Gets the DarkSeaGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkSlateBlue">
            <summary>
            Gets the DarkSlateBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkSlateGray">
            <summary>
            Gets the DarkSlateGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkTurquoise">
            <summary>
            Gets the DarkTurquoise default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkViolet">
            <summary>
            Gets the DarkViolet default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DeepPink">
            <summary>
            Gets the DeepPink default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DeepSkyBlue">
            <summary>
            Gets the DeepSkyBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DimGray">
            <summary>
            Gets the DimGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DodgerBlue">
            <summary>
            Gets the DodgerBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Firebrick">
            <summary>
            Gets the Firebrick default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.FloralWhite">
            <summary>
            Gets the FloralWhite default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.ForestGreen">
            <summary>
            Gets the ForestGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Fuchsia">
            <summary>
            Gets the Fuchsia default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Gainsboro">
            <summary>
            Gets the Gainsborough default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.GhostWhite">
            <summary>
            Gets the GhostWhite default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Gold">
            <summary>
            Gets the Gold default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Goldenrod">
            <summary>
            Gets the Goldenrod default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Gray">
            <summary>
            Gets the Gray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Green">
            <summary>
            Gets the Green default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.GreenYellow">
            <summary>
            Gets the GreenYellow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Honeydew">
            <summary>
            Gets the Honeydew default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.HotPink">
            <summary>
            Gets the HotPink default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.IndianRed">
            <summary>
            Gets the IndianRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Indigo">
            <summary>
            Gets the Indigo default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Ivory">
            <summary>
            Gets the Ivory default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Khaki">
            <summary>
            Gets the Khaki default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Lavender">
            <summary>
            Gets the Lavender default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LavenderBlush">
            <summary>
            Gets the LavenderBlush default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LawnGreen">
            <summary>
            Gets the LawnGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LemonChiffon">
            <summary>
            Gets the LemonChiffon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightBlue">
            <summary>
            Gets the LightBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightCoral">
            <summary>
            Gets the LightCoral default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightCyan">
            <summary>
            Gets the LightCyan default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightGoldenrodYellow">
            <summary>
            Gets the LightGoldenrodYellow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightGray">
            <summary>
            Gets the LightGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightGreen">
            <summary>
            Gets the LightGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightPink">
            <summary>
            Gets the LightPink default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSalmon">
            <summary>
            Gets the LightSalmon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSeaGreen">
            <summary>
            Gets the LightSeaGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSkyBlue">
            <summary>
            Gets the LightSkyBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSlateGray">
            <summary>
            Gets the LightSlateGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSteelBlue">
            <summary>
            Gets the LightSteelBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightYellow">
            <summary>
            Gets the LightYellow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Lime">
            <summary>
            Gets the Lime default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LimeGreen">
            <summary>
            Gets the LimeGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Linen">
            <summary>
            Gets the Linen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Magenta">
            <summary>
            Gets the Magenta default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Maroon">
            <summary>
            Gets the Maroon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumAquamarine">
            <summary>
            Gets the MediumAquamarine default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumBlue">
            <summary>
            Gets the MediumBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumOrchid">
            <summary>
            Gets the MediumOrchid default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumPurple">
            <summary>
            Gets the MediumPurple default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumSeaGreen">
            <summary>
            Gets the MediumSeaGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumSlateBlue">
            <summary>
            Gets the MediumSlateBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumSpringGreen">
            <summary>
            Gets the MediumSpringGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumTurquoise">
            <summary>
            Gets the MediumTurquoise default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumVioletRed">
            <summary>
            Gets the MediumVioletRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MidnightBlue">
            <summary>
            Gets the MidnightBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MintCream">
            <summary>
            Gets the MintCream default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MistyRose">
            <summary>
            Gets the MistyRose default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Moccasin">
            <summary>
            Gets the Moccasin default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.NavajoWhite">
            <summary>
            Gets the NavajoWhite default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Navy">
            <summary>
            Gets the Navy default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.OldLace">
            <summary>
            Gets the OldLace default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Olive">
            <summary>
            Gets the Olive default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.OliveDrab">
            <summary>
            Gets the OliveDrab default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Orange">
            <summary>
            Gets the Orange default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.OrangeRed">
            <summary>
            Gets the OrangeRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Orchid">
            <summary>
            Gets the Orchid default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PaleGoldenrod">
            <summary>
            Gets the PaleGoldenrod default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PaleGreen">
            <summary>
            Gets the PaleGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PaleTurquoise">
            <summary>
            Gets the PaleTurquoise default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PaleVioletRed">
            <summary>
            Gets the PaleVioletRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PapayaWhip">
            <summary>
            Gets the PapayaWhip default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PeachPuff">
            <summary>
            Gets the PeachPuff default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Peru">
            <summary>
            Gets the Peru default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Pink">
            <summary>
            Gets the Pink default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Plum">
            <summary>
            Gets the Plum default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PowderBlue">
            <summary>
            Gets the PowderBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Purple">
            <summary>
            Gets the Purple default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Red">
            <summary>
            Gets the Red default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.RosyBrown">
            <summary>
            Gets the RosyBrown default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.RoyalBlue">
            <summary>
            Gets the RoyalBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SaddleBrown">
            <summary>
            Gets the SaddleBrown default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Salmon">
            <summary>
            Gets the Salmon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SandyBrown">
            <summary>
            Gets the SandyBrown default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SeaGreen">
            <summary>
            Gets the SeaGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SeaShell">
            <summary>
            Gets the SeaShell default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Sienna">
            <summary>
            Gets the Sienna default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Silver">
            <summary>
            Gets the Silver default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SkyBlue">
            <summary>
            Gets the SkyBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SlateBlue">
            <summary>
            Gets the SlateBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SlateGray">
            <summary>
            Gets the SlateGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Snow">
            <summary>
            Gets the Snow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SpringGreen">
            <summary>
            Gets the SpringGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SteelBlue">
            <summary>
            Gets the SteelBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Tan">
            <summary>
            Gets the Tan default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Teal">
            <summary>
            Gets the Teal default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Thistle">
            <summary>
            Gets the Thistle default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Tomato">
            <summary>
            Gets the Tomato default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Transparent">
            <summary>
            Gets the Transparent default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Turquoise">
            <summary>
            Gets the Turquoise default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Violet">
            <summary>
            Gets the Violet default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Wheat">
            <summary>
            Gets the Wheat default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.White">
            <summary>
            Gets the White default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.WhiteSmoke">
            <summary>
            Gets the WhiteSmoke default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Yellow">
            <summary>
            Gets the Yellow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.YellowGreen">
            <summary>
            Gets the YellowGreen default brush.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfColorBlend">
            <summary>
            Represents the arrays of colors and positions used for
            interpolating color blending in a multicolor gradient.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfColorBlend.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfColorBlend.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfColorBlend.Colors">
            <summary>
            Gets or sets the colours array.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLinearGradientMode">
            <summary>
            Specifies the gradient direction of the linear gradient brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLinearGradientMode.BackwardDiagonal">
            <summary>
            Specifies a gradient from upper right to lower left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLinearGradientMode.ForwardDiagonal">
            <summary>
            Specifies a gradient from upper left to lower right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLinearGradientMode.Horizontal">
            <summary>
            Specifies a gradient from left to right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLinearGradientMode.Vertical">
            <summary>
            Specifies a gradient from top to bottom.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfExtend">
            <summary>
            Specifies the constant values specifying whether to extend the shading
            beyond the starting and ending points of the axis.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfExtend.None">
            <summary>
            Do not extend any point.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfExtend.Start">
            <summary>
            Extend start point.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfExtend.End">
            <summary>
            Extend end point.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfExtend.Both">
            <summary>
            Extend both start and end points.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Function">
            <summary>
            Function-based shading.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Axial">
            <summary>
            Axial shading.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Radial">
            <summary>
            Radial shading.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.FreeForm">
            <summary>
            Free-form Gouraud-shaded triangle mesh
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.LatticeForm">
            <summary>
            Lattice-form Gouraud-shaded triangle mesh.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Coons">
            <summary>
            Coons patch mesh.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Tensor">
            <summary>
            Tensor-product patch mesh.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfDrawWidget">
            <summary>
            Describes a graphics element which can be drawn by a pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfDrawWidget.Pen">
            <summary>
            Gets or sets a pen that will be used to draw the element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLayoutHTMLResult.HTMLViewBounds">
            <summary>
            The actual bounds of the html view. It may larger than Bounds
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFillElement">
            <summary>
            Represents an element that could be drawn and/or filled.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFillElement.Brush">
            <summary>
            Gets or sets the brush.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfGraphicsWidget">
            <summary>
            Represents a base class for all page graphics elements.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGraphicsWidget.Draw(Spire.Pdf.Graphics.PdfCanvas)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGraphicsWidget.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.PointF)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="location">Location of the element in the Graphics' co-ordinate system.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGraphicsWidget.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLayoutWidget">
            <summary>
            Represents the base class for all elements that can be layout on the pages.
            </summary>
            [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Assert, Name = "FullTrust")]
        </member>
        <member name="E:Spire.Pdf.Graphics.PdfLayoutWidget.EndPageLayout">
            <summary>
            Event. Raises after the element was printed on the page.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Graphics.PdfLayoutWidget.BeginPageLayout">
            <summary>
            Event. Raises before the element should be printed on the page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <returns>Layouting result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Single,System.Single)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="x">X co-ordinate of the element on the page.</param>
            <param name="y">Y co-ordinate of the element on the page.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the element.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the element.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.PointF,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Single,System.Single,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="x">X co-ordinate of the element on the page.</param>
            <param name="y">Y co-ordinate of the element on the page.</param>
            <param name="format">Layout format.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the element.</param>
            <param name="format">Layout format.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PrivateFontStructOfPdf.FontPath">
            <summary>
            Gets or sets the path of the font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PrivateFontStructOfPdf.FontStream">
            <summary>
            Gets or set the font stream.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PrivateFontStructOfPdf.PrivateFontCollection">
            <summary>
            Gets or sets the private font collection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfShapeWidget">
            <summary>
            Base class for the main shapes.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfShapeWidget.GetBounds">
            <summary>
            Gets the bounds.
            </summary>
            <returns>rect</returns>
        </member>
        <!-- 对于成员“F:Spire.Pdf.Graphics.ShapeLayouter.splitDiff”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Pdf.Graphics.PdfHTMLTextElement">
            <summary>
            Class that represent HTML text area with the ability to span several pages.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.TextAlign">
            <summary>
            Specifies how text in a  is
            horizontally aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextAlign.Left">
            <summary>
            The text is aligned to the left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextAlign.Right">
            <summary>
            The text is aligned to the right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextAlign.Center">
            <summary>
            The text is aligned in the center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextAlign.Justify">
            <summary>
            The text is justified.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.cbSize">
            <summary>
            internal variable to store Size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dwMask">
            <summary>
            internal variable to store Mask.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wNumbering">
            <summary>
            internal variable to store Numbering.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wReserved">
            <summary>
            internal variable to store Reserved.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dxStartIndent">
            <summary>
            internal variable to store Start Indent.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dxRightIndent">
            <summary>
            internal variable to store Right Indent.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dxOffset">
            <summary>
            internal variable to store Offset.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wAlignment">
            <summary>
            internal variable to store Alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.cTabCount">
            <summary>
            internal variable to store Tab Count.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.rgxTabs">
            <summary>
            internal variable to store rgxTabs.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dySpaceBefore">
            <summary>
            internal variable to store Space Before.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dySpaceAfter">
            <summary>
            internal variable to store Space After.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dyLineSpacing">
            <summary>
            internal variable to store Line Spacing.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.sStyle">
            <summary>
            internal variable to store Style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.bLineSpacingRule">
            <summary>
            internal variable to store Line Spacing Rule.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.bOutlineLevel">
            <summary>
            internal variable to store Out line Level.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wShadingWeight">
            <summary>
            internal variable to store Shading Weight.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wShadingStyle">
            <summary>
            internal variable to store Shading Style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wNumberingStart">
            <summary>
            internal variable to store Numbering Start.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wNumberingStyle">
            <summary>
            internal variable to store Numbering Style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wNumberingTab">
            <summary>
            internal variable to store Numbering Tab.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wBorderSpace">
            <summary>
            internal variable to store Border Space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wBorderWidth">
            <summary>
            internal variable to store Border Width.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wBorders">
            <summary>
            internal variable to store Borders.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.cbSize">
            <summary>
            internal variable to store size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.dwMask">
            <summary>
            internal variable to store Mask.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.dwEffects">
            <summary>
            internal variable to store Effects.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.yHeight">
            <summary>
            internal variable to store Height.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.yOffset">
            <summary>
            internal variable to store Offset.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.crTextColor">
            <summary>
            internal variable to store Text Color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bCharSet">
            <summary>
            internal variable to store CharSet.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bPitchAndFamily">
            <summary>
            internal variable to store Pitch And Family.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.wWeight">
            <summary>
            internal variable to store Weight.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.sSpacing">
            <summary>
            internal variable to store Spacing.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.crBackColor">
            <summary>
            internal variable to store BackColor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.lcid">
            <summary>
            internal variable to store lcid.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.dwReserved">
            <summary>
            internal variable to store Reserved.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.sStyle">
            <summary>
            internal variable to store Style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.wKerning">
            <summary>
            internal variable to store Kerning.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bUnderlineType">
            <summary>
            internal variable to store Under line Type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bAnimation">
            <summary>
            internal variable to store Animation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bRevAuthor">
            <summary>
            internal variable to store RevAuthor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bReserved1">
            <summary>
            internal variable to store Reserved.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTextWidget">
            <summary>
            Represents the text area with the ability to span several pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="format">The format.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.Text">
            <summary>
            Gets or sets a value indicating the text that should be printed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.Pen">
            <summary>
            Gets or sets a pen that will be used to draw the text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.Brush">
            <summary>
            Gets or sets the brush that will be used to draw the text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.Font">
            <summary>
            Gets or sets a font that will be used to draw the text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.StringFormat">
            <summary>
            Gets or sets text settings that will be used to draw the text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the text on the page.
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF,System.Single,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the text on the page.
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="width">Width of the text bounds.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the text on the page.
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the text.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfCancelEventArgs">
            <summary>
            Represents the data for a cancelable event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this  is cancel.
            </summary>
            <value><c>true</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Graphics.BeginPageLayoutEventArgs">
            <summary>
            Data for event before lay outing of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.BeginPageLayoutEventArgs.Bounds">
            <summary>
            Gets or sets value that indicates the lay outing bounds on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.BeginPageLayoutEventArgs.Page">
            <summary>
            Gets the page where the lay outing should start.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.BeginPageLayoutEventArgs.#ctor(System.Drawing.RectangleF,Spire.Pdf.PdfPageBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="page">The page.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.EndPageLayoutEventArgs">
            <summary>
            Contains information about layout`s element .
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.EndPageLayoutEventArgs.Result">
            <summary>
            Gets a result of the lay outing on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.EndPageLayoutEventArgs.NextPage">
            <summary>
            Gets or sets a value indicating the next page where the element should be layout if the process is not finished or stopped.
            </summary>
            <remarks>The default value is null. In this case the element will be layout on the next page.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.EndPageLayoutEventArgs.#ctor(Spire.Pdf.Graphics.PdfLayoutResult)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.EndTextPageLayoutEventArgs">
            <summary>
            Contains information about layout`s element .
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.EndTextPageLayoutEventArgs.#ctor(Spire.Pdf.Graphics.PdfTextLayoutResult)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.EndTextPageLayoutEventArgs.Result">
            <summary>
            Gets a result of the lay outing on the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.BeginPageLayoutEventHandler">
            <summary>
            Delegate. Defines a type of the event before lay outing on the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.EndPageLayoutEventHandler">
            <summary>
            Delegate. Defines a type of the event after lay outing on the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.EndTextPageLayoutEventHandler">
            <summary>
            Delegate. Defines a type of the event after the text lay outing on the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLayoutType">
            <summary>
            Specifies type of paginating.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLayoutType.Paginate">
            <summary>
            If the element exceeds the page, proceed it on the next page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLayoutType.OnePage">
            <summary>
            Draw the element on the one page only.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLayoutBreakType">
            <summary>
            Specifies how the element should be contained on the page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLayoutBreakType.FitPage">
            <summary>
            Fit the element according to the bounds specified or the page bounds.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLayoutBreakType.FitElement">
            <summary>
            If the element doesn't fit at the first page, don't draw it on this page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Fonts.PdfUsedFont">
            <summary>
            Represents the used fonts in a PDF document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Style">
            <summary>
            Gets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.PdfUsedFont.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.PdfPageWidget)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Replace(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Replaces the specified new font.
            </summary>
            <param name="newFont">The new font.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Replace(System.Single,Spire.Pdf.Primitives.PdfName)">
            <summary>
            Replace the font size in the content.
            </summary>
            <param name="fontSize">The font size.</param>
            <param name="name">The font name in the resources.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.PdfUsedFont.ScaleFontSize(Spire.Pdf.PdfPageBase,System.String[],System.Single)">
            <summary>
            Scale the font size specified page.
            </summary>
            <param name="page">modified page</param>
            <param name="fontNames">the names of the fonts to be scaled</param>
            <param name="factor">scale factor</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Dispose">
            <summary>
            Dispose font
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableInfo.Offset">
            <summary>
            Gets or sets ofset from beginning of TrueType font file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableInfo.Length">
            <summary>
            Gets or sets length of this table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableInfo.Checksum">
            <summary>
            Gets or sets table checksum.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.TtfTableInfo.Empty">
            <summary>
            Gets a value indicating whether this  is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.LineGap">
            <summary>
            Typographic line gap.
            Negative LineGap values are treated as DEF_TABLE_CHECKSUM.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.ContainsCFF">
            <summary>
            Gets or sets contains CFF.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsSymbol">
            <summary>
            Gets or sets value indicating if Symbol font is used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.FontBox">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsFixedPitch">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsScript">
            <summary>
            Gets a value indicating whether font is script.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsSerif">
            <summary>
            Gets a value indicating whether font is serif.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.ItalicAngle">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.PostScriptName">
            <summary>
            Gets or sets post-script font name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.FontFamily">
            <summary>
            Gets or sets font family name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.FontName">
            <summary>
            Gets or sets font name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.CapHeight">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.Leading">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.MacAscent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.MacDescent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.WinDescent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.WinAscent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.StemV">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.WidthTable">
            <summary>
            Gets or sets widths table for the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.MacStyle">
            <summary>
            Regular: 0
            Bold: 1
            Italic: 2
            Bold Italic: 3
            Bit 0- bold (if set to 1)
            Bit 1- italic (if set to 1)
            Bits 2-15- reserved (set to 0).
            NOTE:
            Note that macStyle bits must agree with the 'OS/2' table fsSelection bits.
            The fsSelection bits are used over the macStyle bits in Microsoft Windows.
            The PANOSE values and 'post' table values are ignored for determining bold or italic fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.SubScriptSizeFactor">
            <summary>
            Subscript size factor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.SuperscriptSizeFactor">
            <summary>
            Superscript size factor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.FirstChar">
            <summary>
            First char of the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.LastChar">
            <summary>
            Last char of the font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsItalic">
            <summary>
            Gets a value indicating whether this instance is italic.
            </summary>
            <value><c>true</c> if this instance is italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsBold">
            <summary>
            Gets a value indicating whether this instance is bold.
            </summary>
            <value><c>true</c> if this instance is bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameTable.FormatSelector">
            <summary>
            Local variable to store Format Selector.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameTable.RecordsCount">
            <summary>
            Local variable to store Records Count.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameTable.Offset">
            <summary>
            Local variable to store Offset.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameTable.NameRecords">
            <summary>
            Local variable to store Name Records.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.PlatformID">
            <summary>
            The PlatformID.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.EncodingID">
            <summary>
            The EncodingID.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.LanguageID">
            <summary>
            The PlatformIDLanguageID
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.NameID">
            <summary>
            The NameID.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.Length">
            <summary>
            The Length.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.Offset">
            <summary>
            The Offset.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.Name">
            <summary>
            The Name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.cmap">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.glyf">
            <summary>
            The glyf.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.head">
            <summary>
            The head.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.hhea">
            <summary>
            The hhea.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.hmtx">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.loca">
            <summary>
            The loca.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.maxp">
            <summary>
            The maxp.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.name">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.post">
            <summary>
            The post.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.OS2">
            <summary>
            The OS2.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.CFF">
            <summary>
            The CFF.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.cvt">
            <summary>
            The cvt.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.fpgm">
            <summary>
            The fpgm.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.prep">
            <summary>
            The prep.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.Modified">
            <summary>
            Modified: International date (8-byte field).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.Created">
            <summary>
            Created: International date (8-byte field).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.MagicNumber">
            <summary>
            MagicNumber: Set to 0x5F0F3CF5.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.CheckSumAdjustment">
            <summary>
            CheckSumAdjustment: To compute: set it to 0, sum the entire font as ULONG,
            then store 0xB1B0AFBA - sum.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.FontRevision">
            <summary>
            FontRevision: Set by font manufacturer.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.Version">
            <summary>
            Table version number: 0x00010000 for version 1.0.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.XMin">
            <summary>
            Minimum x for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.YMin">
            <summary>
            Minimum y for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.UnitsPerEm">
            <summary>
            Valid range is from 16 to 16384.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.YMax">
            <summary>
            Maximum y for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.XMax">
            <summary>
            Maximum x for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.MacStyle">
            <summary>
            Regular: 0
            Bold: 1
            Italic: 2
            Bold Italic: 3
            Bit 0 - bold (if set to 1)
            Bit 1 - italic (if set to 1)
            Bits 2-15 - reserved (set to 0)
            NOTE:
            Note that macStyle bits must agree with the 'OS/2' table fsSelection bits.
            The fsSelection bits are used over the macStyle bits in Microsoft Windows.
            The PANOSE values and 'post' table values are ignored for determining bold or italic fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.Flags">
            <summary>
            Bit 0 - baseline for font at y=0
            Bit 1 - left SideBearing at x=0
            Bit 2 - instructions may depend on point size
            Bit 3 - force ppem to integer values for all private scaler math; may use fractional ppem sizes if this bit is clear
            Bit 4 - instructions may alter advance width (the advance widths might not scale linearly)
            Note: All other bits must be zero.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.LowestRecPPEM">
            <summary>
            LowestRecPPEM: Smallest readable size in pixels.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.FontDirectionHint">
            <summary>
            FontDirectionHint:
            0   Fully mixed directional glyphs
            1   Only strongly left to right
            2   Like 1 but also contains neutrals
            -1   Only strongly right to left
            -2   Like -1 but also contains neutrals.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.IndexToLocFormat">
            <summary>
            0 for short offsets, 1 for long.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.GlyphDataFormat">
            <summary>
            0 for current format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.Ascender">
            <summary>
            Typographic ascent.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.AdvanceWidthMax">
            <summary>
            Maximum advance width value in HTML table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.Descender">
            <summary>
            Typographic descent.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.NumberOfHMetrics">
            <summary>
            Number of hMetric entries in HTML table;
            may be smaller than the total number of glyphs in the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.LineGap">
            <summary>
            Typographic line gap. Negative LineGap values are treated as DEF_TABLE_CHECKSUM
            in Windows 3.1, System 6, and System 7.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.MinLeftSideBearing">
            <summary>
            Minimum left SideBearing value in HTML table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.MinRightSideBearing">
            <summary>
            Minimum right SideBearing value; calculated as Min(aw - lsb - (xMax - xMin)).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.XMaxExtent">
            <summary>
            Max(lsb + (xMax - xMin)).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.CaretSlopeRise">
            <summary>
            Used to calculate the slope of the cursor (rise/run); 1 for vertical.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.CaretSlopeRun">
            <summary>
            0 for vertical.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.MetricDataFormat">
            <summary>
            0 for current format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.Version">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.XAvgCharWidth">
            <summary>
            The Average Character Width parameter specifies
            the arithmetic average of the escapement (width)
            of all of the 26 lowercase letters a through z of the Latin alphabet
            and the space character. If any of the 26 lowercase letters are not present,
            this parameter should equal the weighted average of all glyphs in the font.
            For non-UGL (platform 3, encoding 0) fonts, use the unweighted average.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsWeightClass">
            <summary>
            Indicates the visual weight (degree of blackness or thickness of strokes)
            of the characters in the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsWidthClass">
            <summary>
            Indicates a relative change from the normal aspect ratio (width to height ratio)
            as specified by a font designer for the glyphs in a font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.FsType">
            <summary>
            Indicates font embedding licensing rights for the font.
            Embeddable fonts may be stored in a document.
            When a document with embedded fonts is opened on a system that does not have the font installed
            (the remote system), the embedded font may be loaded for temporary (and in some cases, permanent)
            use on that system by an embedding-aware application.
            Embedding licensing rights are granted by the vendor of the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSubscriptXSize">
            <summary>
            The recommended horizontal size in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSubscriptYSize">
            <summary>
            The recommended vertical size in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSubscriptXOffset">
            <summary>
            The recommended horizontal offset in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSubscriptYOffset">
            <summary>
            The recommended vertical offset in font design units from the baseline for subscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.ySuperscriptXSize">
            <summary>
            The recommended horizontal size in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSuperscriptYSize">
            <summary>
            The recommended vertical size in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSuperscriptXOffset">
            <summary>
            The recommended horizontal offset in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSuperscriptYOffset">
            <summary>
            The recommended vertical offset in font design units from the baseline for superscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YStrikeoutSize">
            <summary>
            Width of the strikeout stroke in font design units.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YStrikeoutPosition">
            <summary>
            The position of the strikeout stroke relative to the baseline in font design units.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.SFamilyClass">
            <summary>
            This parameter is a classification of font-family design.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.Panose">
            <summary>
            This 10 byte series of numbers are used to describe the visual characteristics
            of a given typeface.  These characteristics are then used to associate the font with
            other fonts of similar appearance having different names. The variables for each digit are listed below.
            The specifications for each variable can be obtained in the specification
            PANOSE v2.0 Numerical Evaluation from Microsoft or Elseware Corporation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlUnicodeRange1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlUnicodeRange2">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlUnicodeRange3">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlUnicodeRange4">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.AchVendID">
            <summary>
            The four character identifier for the vendor of the given type face.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.FsSelection">
            <summary>
            Information concerning the nature of the font patterns.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsFirstCharIndex">
            <summary>
            The minimum Unicode index (character code) in this font,
            according to the cmap subtable for platform ID 3 and encoding ID 0 or 1.
            For most fonts supporting Win-ANSI or other character sets, this value would be 0x0020.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsLastCharIndex">
            <summary>
            usLastCharIndex: The maximum Unicode index (character code) in this font,
            according to the cmap subtable for platform ID 3 and encoding ID 0 or 1.
            This value depends on which character sets the font supports.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.STypoAscender">
            <summary>
            The typographic ascender for this font.
            Remember that this is not the same as the Ascender value in the 'hhea' table,
            which Apple defines in a far different manner.
            DEF_TABLE_OFFSET good source for usTypoAscender is the Ascender value from an AFM file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.STypoDescender">
            <summary>
            The typographic descender for this font.
            Remember that this is not the same as the Descender value in the 'hhea' table,
            which Apple defines in a far different manner.
            DEF_TABLE_OFFSET good source for usTypoDescender is the Descender value from an AFM file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.STypoLineGap">
            <summary>
            The typographic line gap for this font.
            Remember that this is not the same as the LineGap value in the 'hhea' table,
            which Apple defines in a far different manner.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsWinAscent">
            <summary>
            The ascender metric for Windows.
            This too is distinct from Apple's Ascender value and from the usTypoAscender values.
            usWinAscent is computed as the yMax for all characters in the Windows ANSI character set.
            usTypoAscent is used to compute the Windows font height and default line spacing.
            For platform 3 encoding 0 fonts, it is the same as yMax.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsWinDescent">
            <summary>
            The descender metric for Windows.
            This too is distinct from Apple's Descender value and from the usTypoDescender values.
            usWinDescent is computed as the -yMin for all characters in the Windows ANSI character set.
            usTypoAscent is used to compute the Windows font height and default line spacing.
            For platform 3 encoding 0 fonts, it is the same as -yMin.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlCodePageRange1">
            <summary>
            This field is used to specify the code pages encompassed
            by the font file in the 'cmap' subtable for platform 3, encoding ID 1 (Microsoft platform).
            If the font file is encoding ID 0, then the Symbol Character Set bit should be set.
            If the bit is set (1) then the code page is considered functional.
            If the bit is clear (0) then the code page is not considered functional.
            Each of the bits is treated as an independent flag and the bits can be set in any combination.
            The determination of "functional" is left up to the font designer,
            although character set selection should attempt to be functional by code pages if at all possible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlCodePageRange2">
            <summary>
            This field is used to specify the code pages encompassed
            by the font file in the 'cmap' subtable for platform 3, encoding ID 1 (Microsoft platform).
            If the font file is encoding ID 0, then the Symbol Character Set bit should be set.
            If the bit is set (1) then the code page is considered functional.
            If the bit is clear (0) then the code page is not considered functional.
            Each of the bits is treated as an independent flag and the bits can be set in any combination.
            The determination of "functional" is left up to the font designer,
            although character set selection should attempt to be functional by code pages if at all possible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.SxHeight">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.SCapHeight">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsDefaultChar">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsBreakChar">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsMaxContext">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.FormatType">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.ItalicAngle">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.UnderlinePosition">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.UnderlineThickness">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.IsFixedPitch">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.MinMemType42">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.MaxMemType42">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.MinMemType1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.MaxMemType1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfLongHorMertric.AdvanceWidth">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfLongHorMertric.Lsb">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapTable.TablesCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapSubTable.PlatformID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapSubTable.EncodingID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapSubTable.Offset">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfAppleCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfAppleCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfAppleCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.FirstCode">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.EntryCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfSegmentedCoverageCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfSegmentedCoverageCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfSegmentedCoverageCmapSubTable.Language">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfSegmentedCoverageCmapSubTable.NGroups">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.SegCountX2">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.SearchRange">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.EntrySelector">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.RangeShift">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.EndCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.ReservedPad">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.StartCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.IdDelta">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.IdRangeOffset">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.GlyphID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.Index">
            <summary>
            Holds glyph index.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.Width">
            <summary>
            Holds character's width.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.CharCode">
            <summary>
            Code of the char symbol.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.Empty">
            <summary>
            Gets a value indicating whether this  is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.CompareTo(System.Object)">
            <summary>
            Compares two WidthDescriptor objects.
            </summary>
            <param name="obj">Another object for comparing.</param>
            <returns>A signed integer that indicates the relative order of this instance and value.</returns>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfLocaTable.Offsets">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.numberOfContours">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.XMin">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.YMin">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.XMax">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.YMax">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfCjkStandardFont">
            <summary>
            Represents the standard CJK fonts.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCjkStandardFont.#ctor(Spire.Pdf.Graphics.PdfCjkFontFamily,System.Single,Spire.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCjkStandardFont.#ctor(Spire.Pdf.Graphics.PdfCjkFontFamily,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCjkStandardFont.#ctor(Spire.Pdf.Graphics.PdfCjkStandardFont,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCjkStandardFont.#ctor(Spire.Pdf.Graphics.PdfCjkStandardFont,System.Single,Spire.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCjkStandardFont.FontFamily">
            <summary>
            Gets the font family.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFontBase">
            <summary>
            Represents the font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Height">
            <summary>
            Gets the height of the font in points.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Descent">
            <summary>
            Gets the descent of the font in points.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Style">
            <summary>
            Gets the style information for this font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Bold">
            <summary>
            Gets a value indicating whether this  is bold.
            </summary>
            <value><c>true</c> if bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Italic">
            <summary>
            Gets a value indicating whether this  is italic.
            </summary>
            <value><c>true</c> if italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Strikeout">
            <summary>
            Gets a value indicating whether this  is strikeout.
            </summary>
            <value><c>true</c> if strikeout; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Underline">
            <summary>
            Gets a value indicating whether this  is underline.
            </summary>
            <value><c>true</c> if underline; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,Spire.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Single)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="width">Maximum width of the string in points.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Single,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="width">Maximum width of the string in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Single,Spire.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="width">Maximum width of the string in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Drawing.SizeF)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets Pdf primitive representing the font.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.Spire#Pdf#Interfaces#IPdfCache#EqualsTo(Spire.Pdf.Interfaces.IPdfCache)">
            <summary>
            Checks whether the object is similar to another object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>True - if the objects have equal internals and can share them, False otherwise.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFont">
            <summary>
            Represents one of the 14 standard PDF fonts.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFont.#ctor(Spire.Pdf.Graphics.PdfFontFamily,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFont.#ctor(Spire.Pdf.Graphics.PdfFontFamily,System.Single,Spire.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFont.#ctor(Spire.Pdf.Graphics.PdfFont,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFont.#ctor(Spire.Pdf.Graphics.PdfFont,System.Single,Spire.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFont.FontFamily">
            <summary>
            Gets the FontFamily.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfStringFormat">
            <summary>
            Represents the text layout information.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.#ctor(Spire.Pdf.Graphics.PdfTextAlignment)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="alignment">The alignment.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="columnFormat">The column format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.#ctor(Spire.Pdf.Graphics.PdfTextAlignment,Spire.Pdf.Graphics.PdfVerticalAlignment)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="alignment">The alignment.</param>
            <param name="lineAlignment">The vertical alignment.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.Alignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.LineAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.RightToLeft">
            <summary>
            Gets or sets the value that indicates text direction mode.
            </summary>
            <remarks>Note, that this property doesn't change any alignment of the text. 
             property should be set manually to align the text. This property just enables or disables
            support of right to left approach. 
            If the value is False, the text won't be checked for right to left symbols occurrence.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.CharacterSpacing">
            <summary>
            Gets or sets value that indicates a size among the characters in the text.
            When the glyph for each character in the string is rendered, this value is
            added to the the glyphs displacement.
            </summary>
            <remarks>
            Default value is 0.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.WordSpacing">
            <summary>
            Gets or sets value that indicates a size among the words in the text.
            Word spacing works the same way as character spacing but applies only to the
            space character, code 32.
            </summary>
            <remarks>Default value is 0.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.LineSpacing">
            <summary>
            Gets or sets value that indicates the vertical distance between the baselines of adjacent lines of text.
            </summary>
            <remarks>Default value is 0.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.ClipPath">
            <summary>
            Gets or sets a value indicating whether the text
            should be a part of the clipping path.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.SubSuperScript">
            <summary>
            Gets or sets value indicating whether the text is in subscript or superscript mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.ParagraphIndent">
            <summary>
            Gets or sets the indent of the first line in the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.LineLimit">
            <summary>
            Only entire lines are laid out in the formatting rectangle.
            By default layout continues until the end of the text, 
            or until no more lines are visible as a result of clipping, whichever comes first. 
            Note that the default settings allow the last line to be partially obscured by a formatting rectangle that is not a whole multiple of the line height.
            To ensure that only whole lines are seen, specify this value and be careful to provide a formatting rectangle at least as tall as the height of one line.
            </summary>
            <value><c>true</c> if [line limit]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.MeasureTrailingSpaces">
            <summary>
            Includes the trailing space at the end of each line.
            By default the boundary rectangle returned by the MeasureString method of PdfFont excludes the space at the end of each line.
            Set this flag to include that space in measurement.
            </summary>
            <value>
            	<c>true</c> if [measure trailing spaces]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.NoClip">
            <summary>
            Overhanging parts of glyphs, 
            and unwrapped text reaching outside the formatting rectangle are allowed to show. 
            By default all text and glyph parts reaching outside the formatting rectangle are clipped.
            </summary>
            <value><c>true</c> if [no clip]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.WordWrap">
            <summary>
            Gets or sets value indicating type of the text wrapping.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>The new created object.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTrueTypeFont">
             <summary>
             Represents TrueType font.
             </summary>
            [System.Security.Permissions.PermissionSet( System.Security.Permissions.SecurityAction.Assert, Name = "FullTrust" )]
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTrueTypeFont.ConvertUnicodeToCharCode(System.String)">
            <summary>
            Convert unicode text to charCode text using the character set encoding.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfStringLayouter">
            <summary>
            Class lay outing the text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringLayouter.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringLayouter.Layout(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfStringFormat,System.Drawing.SizeF)">
            <summary>
            Layouts the text.
            </summary>
            <param name="text">String text.</param>
            <param name="font">Font for the text.</param>
            <param name="format">String format.</param>
            <param name="size">Bounds of the text.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringLayouter.ProcessingText(System.String)">
            <summary>
            Process the '\t' in text.
            </summary>
            <param name="text">The text</param>
            <returns>The processed text</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringLayouter.GetInfoTextLength(Spire.Pdf.Graphics.LineInfo,System.Int32)">
            <summary>
            Get the info text length
            </summary>
            <param name="info">The line info</param>
            <param name="postion">The postion</param>
            <returns>the line info`s length</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfStringLayoutResult">
            <summary>
            Layouter result.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringLayoutResult.Remainder">
            <summary>
            Gets the text which is not layouted
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringLayoutResult.ActualSize">
            <summary>
            Gets the actual layouted text bounds
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringLayoutResult.Lines">
            <summary>
            Gets layouted lines information.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringLayoutResult.LineHeight">
            <summary>
            Gets the height of the line.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.LineInfo">
            <summary>
            Contains information about the line.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.LineInfo.LineType">
            <summary>
            Gets width of the line text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.LineInfo.Text">
            <summary>
            Gets line text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.LineInfo.Width">
            <summary>
            Gets width of the line text.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.LineType">
            <summary>
            Break type of the line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.None">
            <summary>
            Unknown type line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.NewLineBreak">
            <summary>
            The line has new line symbol.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.LayoutBreak">
            <summary>
            layout break.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.FirstParagraphLine">
            <summary>
            The line is the first in the paragraph.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.LastParagraphLine">
            <summary>
            The line is the last in the paragraph.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.None">
            <summary>
            Is not a separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.Separator">
            <summary>
            Is a separator, but can not be the first char of a new line
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.LineBreakSeparator">
            <summary>
            Is a separator which can be the first char of a new line
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.InitialQuotePunctuation">
            <summary>
            Indicates that the character is an opening or initial quotation mark.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.G1EF4Letter">
            <summary>
            Letter, whoes code > 0x1EF4
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.TtfReader.CheckFontTable(System.String)">
            <summary>
            Check table name does not exist
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.TtfReader.SetUnicodeStringToCharCodeForXpsConvertPdf(System.String,System.String)">
            <summary>
            set char Code for unicode char 
            </summary>
            <param name="unicodeString">unicodeString</param>
            <param name="charCode">charCode</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.TtfReader.GetGlyphCharCode(System.Int32)">
            <summary>
            Get CharCode
            </summary>
            <param name="glyphIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Regular">
            <summary>
            Normal text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Bold">
            <summary>
            Bold text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Italic">
            <summary>
            Italic text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Underline">
            <summary>
            Represents the underline text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Strikeout">
            <summary>
            Strikeout text.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFontFamily">
            <summary>
            Indicates type of standard PDF fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.Helvetica">
            <summary>
            Represents the Helvetica font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.Courier">
            <summary>
            Represents the Courier font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.TimesRoman">
            <summary>
            Represents the Times Roman font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.Symbol">
            <summary>
            Represents the Symbol font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.ZapfDingbats">
            <summary>
            Represents the ZapfDingbats font.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfCjkFontFamily">
            <summary>
            Specifies the type of CJK font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.HanyangSystemsGothicMedium">
            <summary>
            Represents the Hanyang Systems Gothic Medium font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.HanyangSystemsShinMyeongJoMedium">
            <summary>
            Represents the Hanyang Systems shin myeong Jo Medium font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.HeiseiKakuGothicW5">
            <summary>
            Represents the Heisei kaku GothicW5 font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.HeiseiMinchoW3">
            <summary>
            Represents the Heisei MinchoW3 font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.MonotypeHeiMedium">
            <summary>
            Represents the Monotype Hei Medium font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.MonotypeSungLight">
            <summary>
            Represents the monotype sung Light font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.SinoTypeSongLight">
            <summary>
            Represents the sinotype song light font.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFontType">
            <summary>
            Specifies the type of the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontType.Standard">
            <summary>
            Indicates the standard Adobe fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontType.TrueType">
            <summary>
            Indicates the non-embedded TrueType fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontType.TrueTypeEmbedded">
            <summary>
            Indicates the Embedded TrueType fonts.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfWordWrapType">
            <summary>
            Specifies the types of text wrapping.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfWordWrapType.None">
            <summary>
            Text wrapping between lines when formatting within a rectangle is disabled.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfWordWrapType.Word">
            <summary>
            Text is wrapped by words. If there is a word that is longer than bounds' width, this word is wrapped by characters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfWordWrapType.WordOnly">
            <summary>
            Text is wrapped by words. If there is a word that is longer than bounds' width, it won't be wrapped at all
            and the process will be finished.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfWordWrapType.Character">
            <summary>
            Text is wrapped by characters. In this case the word at the end of the text line can be split.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfSubSuperScript">
            <summary>
            Specifies type of the SubSuperScript.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfSubSuperScript.None">
            <summary>
            Specifies no subscript or superscript.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfSubSuperScript.SuperScript">
            <summary>
            Specifies superscript format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfSubSuperScript.SubScript">
            <summary>
            Specifies subscript format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfPlatformID.AppleUnicode">
            <summary>
            Apple platform.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfPlatformID.Macintosh">
            <summary>
            Macintosh platform.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfPlatformID.Iso">
            <summary>
            Iso platform.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfPlatformID.Microsoft">
            <summary>
            Microsoft platform.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.Copyright">
            <summary>
            The Copyright
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.FontFamily">
            <summary>
            The Font Family
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.FontSubFamily">
            <summary>
            The Font Sub Family
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.FontIdentifier">
            <summary>
            The Font Identifier
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.FontName">
            <summary>
            The Font Name
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.Version">
            <summary>
            The Version
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.PostScriptName">
            <summary>
            The PostScriptName
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.Trademark">
            <summary>
            The Trademark
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapEncoding.Unknown">
            <summary>
            Unknown encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapEncoding.Symbol">
            <summary>
            When building a symbol font for Windows.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapEncoding.Unicode">
            <summary>
            When building a Unicode font for Windows.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapEncoding.Macintosh">
            <summary>
            For font that will be used on a Macintosh.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMicrosoftEncodingID.Undefined">
            <summary>
            Undefined encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMicrosoftEncodingID.UnicodeUCS2">
            <summary>
            Unicode BMP(UCS-2) encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMicrosoftEncodingID.UnicodeUCS4">
            <summary>
            Add by pdf-2610
            Unicode UCS-4 encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMacintoshEncodingID.Roman">
            <summary>
            Roman encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMacintoshEncodingID.Japanese">
            <summary>
            Japanese encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMacintoshEncodingID.Chinese">
            <summary>
            Chinese encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapFormat.Apple">
            <summary>
            This is the Apple standard character to glyph index mapping table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapFormat.Microsoft">
            <summary>
            This is the Microsoft standard character to glyph index mapping table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapFormat.Trimmed">
            <summary>
            Format 6: Trimmed table mapping.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapFormat.SegmentedCoverage">
            <summary>
            Add by pdf-2610
            Format 12:  Segmented Coverage table mapping.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.TtfCompositeGlyphFlags">
            <summary>
            ttf composite glyph flags.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.ARG_1_AND_2_ARE_WORDS">
            <summary>
            The ARG_1_AND_2_ARE_WORDS.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.ARGS_ARE_XY_VALUES">
            <summary>
            The ARGS_ARE_XY_VALUES.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.ROUND_XY_TO_GRID">
            <summary>
            The ROUND_XY_TO_GRID.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.WE_HAVE_A_SCALE">
            <summary>
            The WE_HAVE_A_SCALE.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.RESERVED">
            <summary>
            The RESERVED.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.MORE_COMPONENTS">
            <summary>
            The MORE_COMPONENTS.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.WE_HAVE_AN_X_AND_Y_SCALE">
            <summary>
            The WE_HAVE_AN_X_AND_Y_SCALE.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.WE_HAVE_A_TWO_BY_TWO">
            <summary>
            The WE_HAVE_A_TWO_BY_TWO.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.WE_HAVE_INSTRUCTIONS">
            <summary>
            The WE_HAVE_INSTRUCTIONS.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.USE_MY_METRICS">
            <summary>
            The USE_MY_METRICS.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.Unknown">
            <summary>
            Unknown encoding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.StandardEncoding">
            <summary>
            Adobe standard Latin-text encoding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.MacRomanEncoding">
            <summary>
            Mac OS standard encoding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.MacExpertEncoding">
            <summary>
            An encoding for use with expert fonts
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.WinAnsiEncoding">
            <summary>
            Windows Code Page 1252
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.PDFDocEncoding">
            <summary>
            Encoding for text strings in a PDF document outside the document's content streams.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.IdentityH">
            <summary>
            The horizontal identity mapping for 2-byte CIDs; may be used with CIDFonts using any
            Registry, Ordering, and Supplement values. It maps 2-byte character codes ranging from
            0 to 65,535 to the same 2-byte CID value, interpreted high-order byte first.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.FixedPitch">
            <summary>
            All glyphs have the same width (as opposed to proportional or variable-pitch
            fonts, which have different widths).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Serif">
            <summary>
            Glyphs have serifs, which are short strokes drawn at an angle on the top and
            bottom of glyph stems (as opposed to sans serif fonts, which do not).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Symbolic">
            <summary>
            Font contains glyphs outside the Adobe standard Latin character set. The
            flag and the nonsymbolic flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Script">
            <summary>
            Glyphs resemble cursive handwriting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Nonsymbolic">
            <summary>
            Font uses the Adobe standard Latin character set or a subset of it.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Italic">
            <summary>
            Glyphs have dominant vertical strokes that are slanted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.ForceBold">
            <summary>
            Bold font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CompositeFontType.Type0">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CompositeFontType.TrueType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFormXObject">
            <summary>
            Represent pdf form XObject.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFormXObject.m_stream">
            <summary>
            Form XObject pdf stream.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFormXObject.m_bound">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFormXObject.m_matrix">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFormXObject.m_resources">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFormXObject.m_graphics">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFormXObject.m_visibilityGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFormXObject.Resources">
            <summary>
            The resources.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFormXObject.Bound">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.#ctor(System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <param name="crossTable"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.#ctor(Spire.Pdf.Core.PdfStream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="crossTable"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.Stream_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFormXObject.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeToPdfPrimitive">
            <summary>
            Synchronize the instance to the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeToPdfPrimitiveForBound(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_bound to the pdf primitive.
            </summary>
            <param name="dictFormXObject">The form XObject dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeToPdfPrimitiveForMatrix(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_matrix to the pdf primitive.
            </summary>
            <param name="dictFormXObject">The form XObject dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeToPdfPrimitiveForVisibilityGroup(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_visibilityGroup to the pdf primitive.
            </summary>
            <param name="dictFormXObject">The form XObject dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeToPdfPrimitiveForResources(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_resources to the pdf primitive.
            </summary>
            <param name="dictFormXObject">The form XObject dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeFromPdfPrimitive">
            <summary>
            Synchronize the instance from the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeFromPdfPrimitiveForBound(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_bound from the pdf primitive.
            </summary>
            <param name="dictFormXObject">The form XObject dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeFromPdfPrimitiveForMatrix(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_matrix from the pdf primitive.
            </summary>
            <param name="dictFormXObject">The form XObject dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeFromPdfPrimitiveForVisibilityGroup(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_visibilityGroup from the pdf primitive.
            </summary>
            <param name="dictFormXObject">The form XObject dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFormXObject.SynchronizeFromPdfPrimitiveForResources(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_resources from the pdf primitive.
            </summary>
            <param name="dictFormXObject">The form XObject dictionary.</param>
        </member>
        <member name="F:Spire.Pdf.Graphics.ByteBuffer.count">
            The count of bytes in the buffer. 
        </member>
        <member name="F:Spire.Pdf.Graphics.ByteBuffer.buf">
            The buffer where the bytes are stored. 
        </member>
        <member name="F:Spire.Pdf.Graphics.ByteBuffer.HIGH_PRECISION">
            If <CODE>true</CODE> always output floating point numbers with 6 decimal digits.
            If <CODE>false</CODE> uses the faster, although less precise, representation.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.#ctor">
            Creates new ByteBuffer with capacity 128 
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.#ctor(System.Int32)">
            Creates a byte buffer with a certain capacity.
            @param size the initial capacity
        </member>
        <!-- 对于成员“M:Spire.Pdf.Graphics.ByteBuffer.SetCacheSize(System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.FillCache(System.Int32)">
             You can fill the cache in advance if you want to.
            
             @param   decimals
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.ConvertToBytes(System.Int32)">
             Converts an double (multiplied by 100 and cast to an int) into an array of bytes.
            
             @param   i   the int
             @return  a bytearray
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append_i(System.Int32)">
            Appends an <CODE>int</CODE>. The size of the array will grow by one.
            @param b the int to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Byte[],System.Int32,System.Int32)">
            Appends the subarray of the <CODE>byte</CODE> array. The buffer will grow by
            <CODE>len</CODE> bytes.
            @param b the array to be appended
            @param off the offset to the start of the array
            @param len the length of bytes to Append
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Byte[])">
            Appends an array of bytes.
            @param b the array to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.String)">
            Appends a <CODE>string</CODE> to the buffer. The <CODE>string</CODE> is
            converted according to the encoding ISO-8859-1.
            @param str the <CODE>string</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Char)">
            Appends a <CODE>char</CODE> to the buffer. The <CODE>char</CODE> is
            converted according to the encoding ISO-8859-1.
            @param c the <CODE>char</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(Spire.Pdf.Graphics.ByteBuffer)">
            Appends another <CODE>ByteBuffer</CODE> to this buffer.
            @param buf the <CODE>ByteBuffer</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Int32)">
            Appends the string representation of an <CODE>int</CODE>.
            @param i the <CODE>int</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Int64)">
            Appends the string representation of a <CODE>long</CODE>.
            @param i the <CODE>long</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Single)">
            Appends a string representation of a <CODE>float</CODE> according
            to the Pdf conventions.
            @param i the <CODE>float</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Double)">
            Appends a string representation of a <CODE>double</CODE> according
            to the Pdf conventions.
            @param d the <CODE>double</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.FormatDouble(System.Double)">
            Outputs a <CODE>double</CODE> into a format suitable for the PDF.
            @param d a double
            @return the <CODE>string</CODE> representation of the <CODE>double</CODE>
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.FormatDouble(System.Double,Spire.Pdf.Graphics.ByteBuffer)">
            Outputs a <CODE>double</CODE> into a format suitable for the PDF.
            @param d a double
            @param buf a ByteBuffer
            @return the <CODE>String</CODE> representation of the <CODE>double</CODE> if
            <CODE>buf</CODE> is <CODE>null</CODE>. If <CODE>buf</CODE> is <B>not</B> <CODE>null</CODE>,
            then the double is appended directly to the buffer and this methods returns <CODE>null</CODE>.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Reset">
            Sets the size to zero.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.ToByteArray">
             Creates a newly allocated byte array. Its size is the current
             size of this output stream and the valid contents of the buffer
             have been copied into it.
            
             @return  the current contents of this output stream, as a byte array.
        </member>
        <member name="P:Spire.Pdf.Graphics.ByteBuffer.Size">
             Returns the current size of the buffer.
            
             @return the value of the <code>count</code> field, which is the number of valid bytes in this byte buffer.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.ToString">
             Converts the buffer's contents into a string, translating bytes into
             characters according to the platform's default character encoding.
            
             @return string translated from the buffer's contents.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.WriteTo(System.IO.Stream)">
             Writes the complete contents of this byte buffer output to
             the specified output stream argument, as if by calling the output
             stream's write method using <code>out.Write(buf, 0, count)</code>.
            
             @param      out   the output stream to which to write the data.
             @exception  IOException  if an I/O error occurs.
        </member>
        <member name="M:Spire.Pdf.Graphics.ImageUtilities.GetShortInverted(System.IO.Stream)">
            <summary>
            Reads an inverted short from the Stream.
            </summary>
            <param name="istr">the Stream</param>
            <returns>an int</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.JpegEncoder.BaseJPEGEncoder.DefaultQuantizerQuality">
            <summary>
            Default Quantizer Quality.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.JpegEncoder.BaseJPEGEncoder.LuminanceTable">
            <summary>
            A 64 byte array which corresponds to a JPEG Luminance Quantization table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.JpegEncoder.BaseJPEGEncoder.ChromianceTable">
            <summary>
            A 64 byte array which corresponds to a JPEG Chromiance Quantization table.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.BaseJPEGEncoder.EncodeImageBufferToJpg(System.Byte[0:,0:,0:],System.Drawing.Point,System.Drawing.Point,System.IO.BinaryWriter,System.Single,Spire.Pdf.Graphics.JpegEncoder.Utils.IProgress,Spire.Pdf.Graphics.JpegEncoder.Utils.ICurrentOperation)">
            <summary>
            Encodes a provided ImageBuffer[,,] to a JPG Image.
            </summary>
            <param name="ImageBuffer">The ImageBuffer containing the pixel data.</param>
            <param name="originalDimension">Dimension of the original image. This value is written to the image header.</param>
            <param name="actualDimension">Dimension on which the Encoder works. As the Encoder works in 8*8 blocks, if the image size is not divisible by 8 the remaining blocks are set to '0' (in this implementation)</param>
            <param name="OutputStream">Stream to which the JPEG data is to be written.</param>
            <param name="Quantizer_Quality">Required quantizer quality; Default: 50 , Lower value higher quality.</param>
            <param name="progress">Interface for updating Progress.</param>
            <param name="currentOperation">Interface for updating CurrentOperation.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.BaseJPEGEncoder.EncodeImageToJpg(System.Drawing.Bitmap,System.IO.BinaryWriter,System.Single,Spire.Pdf.Graphics.JpegEncoder.Utils.IProgress,Spire.Pdf.Graphics.JpegEncoder.Utils.ICurrentOperation)">
            <summary>
            Encodes a provided Image to a JPG Image.
            </summary>
            <param name="ImageToBeEncoded">The Image to be encoded.</param>
            <param name="OutputStream">Stream to which the JPEG data is to be written.</param>
            <param name="Quantizer_Quality">Required quantizer quality; Default: 50 , Lower value higher quality.</param>
            <param name="progress">Interface for updating Progress.</param>
            <param name="currentOperation">Interface for updating CurrentOperation.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.JpegEncoder.Imaging">
            <summary>
            Generates Y, Cb, Cr, R, G and B values from given RGB_Buffer
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.JpegEncoder.Imaging.ChannelType">
            <summary>
            Defines the different possible channel types.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.Imaging.Get_Channel_Data(System.Byte[0:,0:,0:],System.Boolean,System.Int32,System.Int32,Spire.Pdf.Graphics.JpegEncoder.Imaging.ChannelType,Spire.Pdf.Graphics.JpegEncoder.Utils.IProgress,Spire.Pdf.Graphics.JpegEncoder.Utils.ICurrentOperation)">
            <summary>
            Generates Y, Cb, Cr, R, G and B values from given RGB_Buffer
            </summary>
            <param name="RGB_Buffer">The input RGB_Buffer.</param>
            <param name="drawInGrayscale">Draw in grayscale.</param>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="channel">Enum specifying the channel type required.</param>
            <param name="progress">Interface for updating progress.</param>
            <param name="operation">Interface for updating current operation.</param>
            <returns>3D array of the specified channel type.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.CreateCompatibleDC(System.IntPtr)">
            <summary>
            The CreateCompatibleDC function creates a memory device context (DC) compatible with the specified device. 
            </summary>
            <param name="hdc">[in] Handle to an existing DC. If this handle is NULL, the function creates a memory DC compatible with the application's current screen. </param>
            <returns>
            If the function succeeds, the return value is the handle to a memory DC.
            If the function fails, the return value is NULL. 
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            The SelectObject function selects an object into the specified device context (DC). 
            The new object replaces the previous object of the same type. 
            </summary>
            <param name="hdc">[in] Handle to the DC.</param>
            <param name="hgdiobj">[in] Handle to the object to be selected. The specified object must have been created by using one of the following functions. </param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.SetStretchBltMode(System.IntPtr,System.Int32)">
            <summary>
            The SetStretchBltMode function sets the bitmap stretching mode in the specified device context. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="iStretchMode">[in] Specifies the stretching mode. This parameter can be one of the values from StretchBltModes enum.</param>
            <returns>
            If the function succeeds, the return value is the previous stretching mode.
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.GetObject(System.IntPtr,System.Int32,Spire.Pdf.Graphics.JpegEncoder.InteropGDI.BITMAP@)">
            <summary>
            The GetObject function retrieves information for the specified graphics object. 
            </summary>
            <param name="hgdiobj">[in] Handle to the graphics object of interest. This can be a handle to one of the following: a logical bitmap, a brush, a font, a palette, a pen, or a device independent bitmap created by calling the CreateDIBSection function. </param>
            <param name="cbBuffer">[in] Specifies the number of bytes of information to be written to the buffer. </param>
            <param name="lpvObject">[out] Pointer to a buffer that receives the information about the specified graphics object. </param>
            <returns>
            If the function succeeds, and lpvObject is a valid pointer, the return value is the number of bytes stored into the buffer.
            If the function succeeds, and lpvObject is NULL, the return value is the number of bytes required to hold the information the function would store into the buffer.
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.StretchBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations)">
            <summary>
            The StretchBlt function copies a bitmap from a source rectangle into a destination 
            rectangle, stretching or compressing the bitmap to fit the dimensions of the destination 
            rectangle, if necessary. The system stretches or compresses the bitmap according to 
            the stretching mode currently set in the destination device context. 
            </summary>
            <param name="hdcDest">[in] Handle to the destination device context. </param>
            <param name="nXOriginDest">[in] Specifies the x-coordinate, in logical units, of the upper-left corner of the destination rectangle. </param>
            <param name="nYOriginDest">[in] Specifies the y-coordinate, in logical units, of the upper-left corner of the destination rectangle. </param>
            <param name="nWidthDest">[in] Specifies the width, in logical units, of the destination rectangle. </param>
            <param name="nHeightDest">[in] Specifies the height, in logical units, of the destination rectangle. </param>
            <param name="hdcSrc">[in] Handle to the source device context. </param>
            <param name="nXOriginSrc">[in] Specifies the x-coordinate, in logical units, of the upper-left corner of the source rectangle. </param>
            <param name="nYOriginSrc">[in] Specifies the y-coordinate, in logical units, of the upper-left corner of the source rectangle. </param>
            <param name="nWidthSrc">[in] Specifies the width, in logical units, of the source rectangle. </param>
            <param name="nHeightSrc">[in] Specifies the height, in logical units, of the source rectangle. </param>
            <param name="dwRop">[in] Specifies the raster operation to be performed. Raster operation codes define how the system combines colors in output operations that involve a brush, a source bitmap, and a destination bitmap. </param>
            <returns>
            If the function succeeds, the return value is nonzero. 
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            The CreateCompatibleBitmap function creates a bitmap compatible with the device that is associated with the specified device context. 
            </summary>
            <param name="hdc">[in] Handle to a device context. </param>
            <param name="nWidth">[in] Specifies the bitmap width, in pixels. </param>
            <param name="nHeight">[in] Specifies the bitmap height, in pixels. </param>
            <returns>
            If the function succeeds, the return value is a handle to the compatible bitmap (DDB).
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.GetDIBits(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,System.Byte[],Spire.Pdf.Graphics.JpegEncoder.InteropGDI.BITMAPINFOHEADER@,System.UInt32)">
            <summary>
            The GetDIBits function retrieves the bits of the specified compatible bitmap 
            and copies them into a buffer as a DIB using the specified format. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="hbmp">[in] Handle to the bitmap. This must be a compatible bitmap (DDB). </param>
            <param name="uStartScan">[in] Specifies the first scan line to retrieve.</param>
            <param name="cScanLines">[in] Specifies the number of scan lines to retrieve.</param>
            <param name="lpvBits">[out] Pointer to a buffer to receive the bitmap data. If this parameter is NULL, the function passes the dimensions and format of the bitmap to the BITMAPINFOHEADER structure pointed to by the lpbi parameter.</param>
            <param name="lpbmi">[in/out] Pointer to a BITMAPINFOHEADER structure that specifies the desired format for the DIB data. </param>
            <param name="uUsage">[in] Specifies the format of the bmiColors member of the BITMAPINFOHEADER structure.</param>
            <returns>If the lpvBits parameter is non-NULL and the function succeeds, the return value is the number of scan lines copied from the bitmap.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.SetDIBits(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,System.Byte[],Spire.Pdf.Graphics.JpegEncoder.InteropGDI.BITMAPINFOHEADER@,System.UInt32)">
            <summary>
            The SetDIBits function sets the pixels in a compatible bitmap (DDB) 
            using the color data found in the specified DIB . 
            </summary>
            <param name="hdc">[in] Handle to a device context. </param>
            <param name="hbmp">[in] Handle to the compatible bitmap (DDB) that is to be altered using the color data from the specified DIB.</param>
            <param name="uStartScan">[in] Specifies the starting scan line for the device-independent color data in the array pointed to by the lpvBits parameter. </param>
            <param name="cScanLines">[in] Specifies the number of scan lines found in the array containing device-independent color data. </param>
            <param name="lpvBits">[in] Pointer to the DIB color data, stored as an array of bytes. The format of the bitmap values depends on the biBitCount member of the BITMAPINFO structure pointed to by the lpbmi parameter. </param>
            <param name="lpbmi">[in] Pointer to a BITMAPINFOHEADER structure that contains information about the DIB. </param>
            <param name="fuColorUse">[in] Specifies whether the bmiColors member of the BITMAPINFO structure was provided and, if so, whether bmiColors contains explicit red, green, blue (RGB) values or palette indexes.</param>
            <returns>If the function succeeds, the return value is the number of scan lines copied.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.GetDC(System.IntPtr)">
            <summary>
            The GetDC function retrieves a handle to a display device context (DC) 
            for the client area of a specified window or for the entire screen.        
            </summary>
            <param name="hWnd">[in] Handle to the window whose DC is to be retrieved. If this value is NULL, GetDC retrieves the DC for the entire screen. </param>
            <returns>If the function succeeds, the return value is a handle to the DC for the specified window's client area. I
            If the function fails, the return value is NULL. 
            </returns>  
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.GetClientRect(System.IntPtr,Spire.Pdf.Graphics.JpegEncoder.InteropGDI.RECT@)">
            <summary>
            The GetClientRect function retrieves the coordinates of a window's client area.
            The client coordinates specify the upper-left and lower-right corners of the client area. 
            </summary>
            <param name="hWnd">[in] Handle to the window whose client coordinates are to be retrieved.</param>
            <param name="lpRect">[out] Pointer to a RECT structure that receives the client coordinates.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations)">
            <summary>
               Performs a bit-block transfer of the color data corresponding to a
               rectangle of pixels from the specified source device context into
               a destination device context.
            </summary>
            <param name="hdc">Handle to the destination device context.</param>
            <param name="nXDest">The leftmost x-coordinate of the destination rectangle (in pixels).</param>
            <param name="nYDest">The topmost y-coordinate of the destination rectangle (in pixels).</param>
            <param name="nWidth">The width of the source and destination rectangles (in pixels).</param>
            <param name="nHeight">The height of the source and the destination rectangles (in pixels).</param>
            <param name="hdcSrc">Handle to the source device context.</param>
            <param name="nXSrc">The leftmost x-coordinate of the source rectangle (in pixels).</param>
            <param name="nYSrc">The topmost y-coordinate of the source rectangle (in pixels).</param>
            <param name="dwRop">A raster-operation code.</param>
            <returns>
               <c>true</c> if the operation succeeded, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, 
            freeing all system resources associated with the object. After the object is deleted, 
            the specified handle is no longer valid. 
            </summary>
            <param name="hObject">[in] Handle to a logical pen, brush, font, bitmap, region, or palette.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            The ReleaseDC function releases a device context (DC), freeing it for use by other applications. 
            The effect of the ReleaseDC function depends on the type of DC.
            </summary>
            <param name="hWnd">[in] Handle to the window whose DC is to be released. </param>
            <param name="hDC">[in] Handle to the DC to be released. </param>
            <returns>
            The return value indicates whether the DC was released. 
            If the DC was released, the return value is 1.
            If the DC was not released, the return value is zero.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.SetPixel(System.IntPtr,System.Int32,System.Int32,System.UInt32)">
            <summary>
            The SetPixel function sets the pixel at the specified coordinates to the specified color. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="X">[in] Specifies the x-coordinate, in logical units, of the point to be set. </param>
            <param name="Y">[in] Specifies the y-coordinate, in logical units, of the point to be set. </param>
            <param name="crColor">[in] Specifies the color to be used to paint the point.</param>
            <returns>If the function succeeds, the return value is the RGB value that the function sets the pixel to. 
            This value may differ from the color specified by crColor; that occurs when an exact match for the 
            specified color cannot be found.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations">
            <summary>
                Specifies a raster-operation code. These codes define how the color data for the
                source rectangle is to be combined with the color data for the destination
                rectangle to achieve the final color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.SRCCOPY">
            <summary>dest = source</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.SRCPAINT">
            <summary>dest = source OR dest</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.SRCAND">
            <summary>dest = source AND dest</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.SRCINVERT">
            <summary>dest = source XOR dest</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.SRCERASE">
            <summary>dest = source AND (NOT dest)</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.NOTSRCCOPY">
            <summary>dest = (NOT source)</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.NOTSRCERASE">
            <summary>dest = (NOT src) AND (NOT dest)</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.MERGECOPY">
            <summary>dest = (source AND pattern)</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.MERGEPAINT">
            <summary>dest = (NOT source) OR dest</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.PATCOPY">
            <summary>dest = pattern</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.PATPAINT">
            <summary>dest = DPSnoo</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.PATINVERT">
            <summary>dest = pattern XOR dest</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.DSTINVERT">
            <summary>dest = (NOT dest)</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.BLACKNESS">
            <summary>dest = BLACK</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.JpegEncoder.InteropGDI.TernaryRasterOperations.WHITENESS">
            <summary>dest = WHITE</summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.FontRegistryKey">
            <summary>
            Get Font registry key.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.FontNameRegistrySubKey">
            <summary>
            Get font name key of teh registry.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.DrawLines(System.Drawing.Pen,System.Drawing.PointF[],System.Boolean)">
            <summary>
            Draws extra line between the last and first points.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
            <param name="closeShape">If true, connects last and first points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.DrawCompoundLine(System.Drawing.Pen,System.Drawing.PointF[],System.Boolean,Spire.Pdf.Graphics.PdfPen)">
            <summary>
            Darw the multiple Line
            </summary>
            <param name="pen"></param>
            <param name="points"></param>
            <param name="rotate"></param>
            <param name="pdfPen"></param>
        </member>
        <member name="P:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.Bounds">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Invalid">
            <summary>
            Invalid object type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Brush">
            <summary>
            Brush object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Pen">
            <summary>
            Pen object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Path">
            <summary>
            Path object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Region">
            <summary>
            Region object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Image">
            <summary>
            Image object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Font">
            <summary>
            Font object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.StringFormat">
            <summary>
            String format object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.ImageAttributes">
            <summary>
            Image attributes object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.CustomLineCap">
            <summary>
            Custom line cap object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.SolidBrush">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.HatchBrush">
            <summary>
            Hatch brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.TextureBrush">
            <summary>
            Texture brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.PathGradientBrush">
            <summary>
            Path gradient brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.LienarGradientBrush">
            <summary>
            Linear gradient brush.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags">
            <summary>
            Flags for a linear gradient brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.Default">
            <summary>
            Minimal data are present.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.Matrix">
            <summary>
            The brush applies a transformation matrix to the source image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.ColorBlend">
            <summary>
            The brush contains a ColorBlend object for use with its InterpolationColors property.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.Blend">
            <summary>
            The brush contains a Blend object for use with its Blend property.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.FocusScales">
            <summary>
            The brush has a non-default value for the FocusScales property.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.GammaCorrection">
            <summary>
            The brush uses gamma correction.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Images.Metafiles.PenFlags">
            <summary>
            Represents pen flags.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.Default">
            <summary>
            Pen just with color set.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.Transform">
            <summary>
            Transformation set. (20-... - float )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.StartCap">
            <summary>
            StartCap set. ( 20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.EndCap">
            <summary>
            EndCap set. ( 20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.LineJoin">
            <summary>
            LineJoin set. ( 20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.MiterLimit">
            <summary>
            MiterLimit set. ( 20 - float )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.DashStyle">
            <summary>
            Pen has DashStyle defined.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.DashCap">
            <summary>
            DashCap set. ( 20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.DashOffset">
            <summary>
            DashOffset is defined. (20 - float)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.DashPattern">
            <summary>
            DashPattern is defined. (20 - int: numArray; 24-... - float: DashPattern )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.Alignment">
            <summary>
            Alignment set. (20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.CompoundArray">
            <summary>
            CompoundArray set. (20 - int: numArray; 24-... - float: compoundArray )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.CustomStartCap">
            <summary>
            The pen uses a custom start cap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.CustomEndCap">
            <summary>
            The pen uses a custom end cap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectImageFormat.Unknown">
            <summary>
            Unknown format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectImageFormat.Bitmap">
            <summary>
            Bitmap image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectImageFormat.Metafile">
            <summary>
            Metafile image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectRegionInitState.Rectangle">
            <summary>
            Region is from rectangle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectRegionInitState.GraphpicsPath">
            <summary>
            Region is from graphics path.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectRegionInitState.Empty">
            <summary>
            Region is empty.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectRegionInitState.Infinity">
            <summary>
            Region is infinity.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBmpImage">
            <summary>
            Represents the bmp image object.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBmpImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBmpImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBmpImage.HorizontalResolution">
            <summary>
            Gets the horizontal resolution, in pixels per inch, of this Image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBmpImage.VerticalResolution">
            <summary>
            Gets the vertical resolution, in pixels per inch, of this Image.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBmpImage.#ctor(System.IO.Stream)">
            <summary>
            Initialize a new instance of PdfBmpImage from stream.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBmpImage.#ctor(System.String)">
            <summary>
            Initialize a new instance of PdfBmpImage from path.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBmpImage.#ctor(System.Byte[])">
            <summary>
            Initialize a new instance of PdfBmpImage from byte array.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.#ctor(System.String)">
            <summary>
            Initialize a new instance of PdfGifImage from path.
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.#ctor(System.Byte[])">
            <summary>
            Initialize a new instance of PdfGifImage from byte array.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.#ctor(System.IO.Stream)">
            <summary>
            Initialize a new instance of PdfGifImage from stream.
            </summary>
            <param name="isp"></param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGifImage.FrameCount">
            <summary>
            Get the count of frame in gif.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGifImage.ActiveFrame">
            <summary>
            Get or set the current frame index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGifImage.Width">
            <summary>
            Get the width of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGifImage.Height">
            <summary>
            Get the height of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGifImage.HorizontalResolution">
            <summary>
            Get the horizontal resolution, in pixels per inch, of this Image. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGifImage.VerticalResolution">
            <summary>
            Gets the vertical resolution, in pixels per inch, of this Image. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.GetFramePosition(System.Int32)">
            Gets the [x,y] position of the frame in reference to the
            logical screen.
            @param frame the frame
            @return the [x,y] position of the frame
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.ReadHeader">
            Reads GIF file header information.
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.ReadLSD">
            Reads Logical Screen Descriptor
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.ReadShort">
            Reads next 16-bit value, LSB first
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.ReadBlock">
             Reads next variable length block from input.
            
             @return number of bytes stored in "buffer"
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.ReadImage">
            Reads next frame image
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.ResetFrame">
            Resets frame state for reading next image.
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.ReadGraphicControlExt">
            Reads Graphics Control Extension values
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGifImage.Skip">
            Skips variable length blocks up to and including
            next zero length block.
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfJ2kImage">
            <summary>
            Represents the jpeg2000 image object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJ2kImage.scaledWidth">
            <summary> This is the scaled width of the image taking rotation into account. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJ2kImage.scaledHeight">
            <summary> This is the original height of the image taking rotation into account. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJ2kImage.bpc">
            <summary> this is the bits per component of the raw image. It also flags a CCITT image.</summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJ2kImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJ2kImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJ2kImage.HorizontalResolution">
            <summary>
            Gets the horizontal resolution, in pixels per inch, of this Image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJ2kImage.VerticalResolution">
            <summary>
            Gets the vertical resolution, in pixels per inch, of this Image.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJ2kImage.#ctor(System.String)">
            <summary>
            Initialize a new instance of PdfBmpImage from path.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJ2kImage.#ctor(System.Byte[])">
            <summary>
            Initialize a new instance of PdfBmpImage from byte array.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJ2kImage.#ctor(System.IO.Stream)">
            <summary>
            Initialize a new instance of PdfBmpImage from stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJ2kImage.ProcessParameters">
            This method checks if the image is a valid JPEG and processes some parameters.
            @throws BadElementException
            @throws IOException
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJ2kImage.IsJp2">
            @return <code>true</code> if the image is JP2, <code>false</code> if a codestream.
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfJb2Image">
            <summary>
            Represents the jb2 image object.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJb2Image.Width">
            <summary>
            Get the width of the image in pixel unit.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJb2Image.Height">
            <summary>
            Get the height of the image in pixel unit.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJb2Image.HorizontalResolution">
            <summary>
            Get the horizontal resoulution of the image in pixel unit.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJb2Image.VerticalResolution">
            <summary>
            Get the vertical resolution of the image in pixel unit.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJb2Image.#ctor(System.String)">
            <summary>
            Initialize a new instance of PdfJb2Image from file path.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJb2Image.#ctor(System.Byte[])">
            <summary>
            Initialize a new instance of PdfJb2Image from byte array.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJb2Image.#ctor(System.IO.Stream)">
            <summary>
            Initialize a new instance of PdfJb2Image from stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="T:Spire.Pdf.Graphics.JBIG2SegmentReader.JBIG2Segment">
            Inner class that holds information about a JBIG2 segment.
            @since   2.1.5
        </member>
        <member name="T:Spire.Pdf.Graphics.JBIG2SegmentReader.JBIG2Page">
            Inner class that holds information about a JBIG2 page.
            @since   2.1.5
        </member>
        <member name="M:Spire.Pdf.Graphics.JBIG2SegmentReader.JBIG2Page.GetData(System.Boolean)">
            return as a single byte array the header-data for each segment in segment number
            order, EMBEDDED organization, but i am putting the needed segments in SEQUENTIAL organization.
            if for_embedding, skip the segment types that are known to be not for acrobat. 
            @param for_embedding
            @return  a byte array
            @throws IOException
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfJpegImage">
            <summary>
            Represents the jpeg image object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.RIGHT_ALIGN">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.LEFT_ALIGN">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.MIDDLE_ALIGN">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.TEXTWRAP">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.UNDERLYING">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.AX">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.AY">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.BX">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.BY">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.CX">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.CY">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.DX">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.DY">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_NONE">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_JPEG">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_PNG">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_GIF">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_BMP">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_TIFF">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_WMF">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_JPEG2000">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_JBIG2">
            type of image
            @since	2.1.5
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.invert">
            Image color inversion 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.alignment">
            <summary> The alignment of the Image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.alt">
            <summary> Text that can be shown instead of the image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.absoluteX">
            <summary> This is the absolute X-position of the image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.absoluteY">
            <summary> This is the absolute Y-position of the image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.plainWidth">
            <summary> This is the width of the image without rotation. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.plainHeight">
            <summary> This is the width of the image without rotation. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.scaledWidth">
            <summary> This is the scaled width of the image taking rotation into account. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.scaledHeight">
            <summary> This is the original height of the image taking rotation into account. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.compressionLevel">
            The compression level of the content streams.
            @since   2.1.3
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.rotationRadians">
            <summary> This is the rotation of the image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.colorspace">
            <summary> this is the colorspace of a jpeg-image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.bpc">
            <summary> this is the bits per component of the raw image. It also flags a CCITT image.</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.transparency">
            <summary> this is the transparency information of the raw image</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.indentationLeft">
            the indentation to the left. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.indentationRight">
            the indentation to the right. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.dpiX">
            <summary> Holds value of property dpiX. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.dpiY">
            <summary> Holds value of property dpiY. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.interpolation">
            <summary> Holds value of property interpolation. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.profile">
            <summary> ICC Profile attached </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.deflated">
            Holds value of property deflated. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.smask">
            Holds value of property smask. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.xyRatio">
            Holds value of property XYRatio. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.originalData">
            Holds value of property originalData. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.spacingBefore">
            The spacing before the image. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.spacingAfter">
            The spacing after the image. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.widthPercentage">
            Holds value of property widthPercentage.
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.initialRotation">
            Holds value of property initialRotation.
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.VALID_MARKER">
            <summary> This is a type of marker. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.VALID_MARKERS">
            <summary> Acceptable Jpeg markers. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.UNSUPPORTED_MARKER">
            <summary> This is a type of marker. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.UNSUPPORTED_MARKERS">
            <summary> Unsupported Jpeg markers. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.NOPARAM_MARKER">
            <summary> This is a type of marker. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.NOPARAM_MARKERS">
            <summary> Jpeg markers without additional parameters. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.M_APPD">
            Marker value for Photoshop IRB 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.PS_8BIM_RESO">
            sequence preceding Photoshop resolution data 
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJpegImage.#ctor(System.String)">
            <summary>
            Initialize a new instance of PdfJpegImage from path. 
            </summary>
            <param name="filePath">The file path</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJpegImage.#ctor(System.Byte[])">
            <summary>
            Initialize a new instance of PdfJpegImage from byte array.
            </summary>
            <param name="data">The data array</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfJpegImage.#ctor(System.IO.Stream)">
            <summary>
            Initialize a new instance of PdfJpegImage from stream.
            </summary>
            <param name="imageStream">The data stream</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJpegImage.HorizontalResolution">
            <summary>
            Gets the horizontal resolution, in pixels per inch, of this Image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJpegImage.VerticalResolution">
            <summary>
            Gets the vertical resolution, in pixels per inch, of this Image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJpegImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfJpegImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPngImage">
            <summary>
            Represents the png object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.PNGID">
            Some PNG specific values. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.IHDR">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.PLTE">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.IDAT">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.IEND">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.tRNS">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.pHYs">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.gAMA">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.cHRM">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.sRGB">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.iCCP">
            A PNG marker. 
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPngImage.Width">
            <summary>
            Get the width of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPngImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPngImage.HorizontalResolution">
            <summary>
            Get the horizontal resolution, in pixels per inch, of this Image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPngImage.VerticalResolution">
            <summary>
            Get the vertical resolution, in pixels per inch, of this Image.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPngImage.#ctor(System.String)">
            <summary>
            Initialize a new instance of PdfPngImage from file path.
            </summary>
            <param name="filePath">the file path</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPngImage.#ctor(System.Byte[])">
            <summary>
            Initialize a new instance of PdfPngImage from byte array.
            </summary>
            <param name="data">byte array</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPngImage.#ctor(System.IO.Stream)">
            <summary>
            Initialize a new instance of PdfPngImage from stream.
            </summary>
            <param name="isp">stream</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPngImage.GetInt(System.IO.Stream)">
             Gets an <CODE>int</CODE> from an <CODE>Stream</CODE>.
            
             @param		is      an <CODE>Stream</CODE>
             @return		the value of an <CODE>int</CODE>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPngImage.GetWord(System.IO.Stream)">
             Gets a <CODE>word</CODE> from an <CODE>Stream</CODE>.
            
             @param		is      an <CODE>Stream</CODE>
             @return		the value of an <CODE>int</CODE>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPngImage.GetString(System.IO.Stream)">
             Gets a <CODE>String</CODE> from an <CODE>Stream</CODE>.
            
             @param		is      an <CODE>Stream</CODE>
             @return		the value of an <CODE>int</CODE>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTiffImage">
            <summary>
            Represents the tiff image object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTiffImage.GetBytesCountPerComponent">
            <summary>
            Get bytes count per component.
            </summary>
            <returns>The bytes count per component</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTiffImage.ProcessImageData(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Process the image data.
            if the value of SamplePerPixel bigger than 3 extra samples should 
            give an indication of the meaning of the additional channels
            </summary>
            <param name="data">The same y position image data.</param>
            <param name="y">The y position</param>
            <param name="existSMask">Whether exist smask.</param>
            <returns>The processed image data.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.IPdfVisibilityGroup">
            <summary>
            Represent pdf optional content group(or optional content membership).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.IPdfVisibilityGroup.Visibility">
            <summary>
            Visible of optional content.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfIntent">
            <summary>
            The intent of using optional group
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfIntent.View">
            <summary>
            Which is intended to represent a document designer's 
            structural organization of artwork.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfIntent.Design">
            <summary>
            Which is intended for interactive use by document consumers.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfLayer">
            <summary>
            Represent pdf optional content group.
            Content typically belongs to a single optional content group.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayer.m_dictionary">
            <summary>
            Optional content group dictionary
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayer.m_name">
            <summary>
            Optional content group Name
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayer.m_intent">
            <summary>
            Optional group used Intent
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayer.m_config">
            <summary>
            Optional content configuration.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayer.m_reference">
            <summary>
            Optional content group reference.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayer.Name">
            <summary>
            Get or set pdf layer name.
            Notice: 
            Name may be is not unique.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayer.ViewState">
            <summary>
            Get or set pdf layer view state.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayer.ExportState">
            <summary>
            Get or set pdf layer export state.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayer.PrintState">
            <summary>
            Get or set pdf layer print state.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayer.Visibility">
            <summary>
            Get or set pdf layer visible.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayer.IsShowOnUI">
            <summary>
            Get whether the layer shows on user interface or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayer.Reference">
            <summary>
            Get reference of the layer.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.#ctor(System.String,Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance
            </summary>
            <param name="name">The pdf layer name</param>
            <param name="defaultViewConfig">The optional content configuration.</param>
            <param name="crossTable">The pdf cross Table</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance with the optional content group dictionary
            </summary>
            <param name="dictOptionalContentGroup">The optional content group dictionary</param>
            <param name="defaultViewConfig">The optional content configuration.</param>
            <param name="crossTable">The pdf cross Table</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration,Spire.Pdf.IO.PdfCrossTable,System.String)">
            <summary>
            Construct an instance with the optional content group dictionary
            </summary>
            <param name="dictOptionalContentGroup">The optional content group dictionary</param>
            <param name="defaultViewConfig">The optional content configuration.</param>
            <param name="crossTable">The pdf cross Table</param>
            <param name="reference">The reference of the layer</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.CreateGraphics(Spire.Pdf.Graphics.PdfCanvas)">
            <summary>
            Create the layer graphics.
            </summary>
            <param name="g">
            The pdf layer container's graphics.
            eg: PdfPageBase.Canvas ...
            </param>
            <returns>The pdf layer graphics.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayer.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.SynchronizeToPdfPrimitive">
            <summary>
            Synchronize the instance to the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.SynchronizeToPdfPrimitiveForName(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_name to the pdf primitive.
            </summary>
            <param name="dictOptionalContentGroup">The optional content group dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.SynchronizeToPdfPrimitiveForIntent(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_intent to the pdf primitive.
            </summary>
            <param name="dictOptionalContentGroup">The optional content group dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.SynchronizeToPdfPrimitiveForUsage(System.String,System.String)">
            <summary>
            Synchronize the instance field Usage to the pdf primitive.
            </summary>
            <param name="layerProperty">The layer property</param>
            <param name="flag">The layer property's state</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.SynchronizeFromPdfPrimitive">
            <summary>
            Synchronize the instance from the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.SynchronizeFromPdfPrimitiveForName(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_name from the pdf primitive.
            </summary>
            <param name="dictOptionalContentGroup">The optional content group dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayer.SynchronizeFromPdfPrimitiveForIntent(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_intent from the pdf primitive.
            </summary>
            <param name="dictOptionalContentGroup">The optional content group dictionary</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfLayerCollection">
            <summary>
            Represent pdf layer collection.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollection.m_documentBase">
            <summary>
            The PdfDocumentBase.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollection.m_dictionary">
            <summary>
            Optional content properties dictionary.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollection.m_layers">
            <summary>
            Optional content groups.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollection.m_defaultViewConfig">
            <summary>
            Default viewing optional content configuration.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayerCollection.Item(System.Int32)">
            <summary>
            Get the pdf layer of the index.
            </summary>
            <param name="index">Pdf layer index</param>
            <returns>Pdf layer</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayerCollection.Item(System.String)">
            <summary>
            Get the pdf layer of name.
            Notice: 
            Pdf layer name may be is not unique.
            If exist duplication of name,return first pdf layer of name.
            If not exist pdf layer of name,return null;
            </summary>
            <param name="name">Pdf layer name</param>
            <returns>Pdf layer</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayerCollection.Count">
            <summary>
            Gets the number of pdf layers contained.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.#ctor(Spire.Pdf.PdfDocumentBase,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance
            </summary>
            <param name="documentBase">The PdfDocumentBase.</param>
            <param name="crossTable">The pdf cross table</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.PdfDocumentBase,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance with the optional content properties dictionary
            </summary>
            <param name="dictOptionalContentProperties">The optional content properties dictionary</param>
            <param name="documentBase">The PdfDocumentBase.</param>
            <param name="crossTable">The pdf cross table</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.NewOutline">
            <summary>
            Create a new empty pdf layer outline.
            </summary>
            <returns>Pdf layer outline.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.AddLayer(System.String)">
            <summary>
            Add a new pdf layer.
            </summary>
            <param name="name">Pdf layer name.</param>
            <returns>Pdf layer.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.AddLayer(System.String,Spire.Pdf.Graphics.Layer.PdfVisibility)">
            <summary>
            Add a new pdf layer.
            </summary>
            <param name="name">Pdf layer name.</param>
            <param name="state">Pdf layer's visibility.</param>
            <returns>Pdf layer.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.RemoveLayer(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Remove the pdf layer.
            </summary>
            <param name="layer">The pdf layer.</param>
            <returns>
            True if item is successfully removed; otherwise, false. This method also
             returns false if item was not found
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.RemoveLayer(Spire.Pdf.Graphics.Layer.PdfLayer,System.Boolean)">
            <summary>
            Remove the pdf layer.
            </summary>
            <param name="layer">The pdf layer.</param>
            <param name="withContent">If true,remove content with the pdf layer.Otherwise,false.</param>
            <returns>
            True if item is successfully removed; otherwise, false. This method also
             returns false if item was not found
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.RemovelayerFromOcgs(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Remove layer from Ocgs array.
            </summary>
            <param name="layer"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.RemoveLayer(System.String)">
            <summary>
            Remove the pdf layer.
            Notice: Pdf layer name may be is not unique.
            If exist duplication of name,will remove all pdf layers of name.
            </summary>
            <param name="name">Pdf layer name.</param>
            <returns>
            True if item is successfully removed; otherwise, false. This method also
             returns false if item was not found
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.RemoveLayer(System.String,System.Boolean)">
            <summary>
            Remove the pdf layer.
            Notice: Pdf layer name may be is not unique.
            If exist duplication of name,will remove all pdf layers of name.
            </summary>
            <param name="name">Pdf layer name.</param>
            <param name="withContent">If true,remove content with the pdf layer.Otherwise,false.</param>
            <returns>
            True if item is successfully removed; otherwise, false. This method also
             returns false if item was not found
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.FindLayers(System.String)">
            <summary>
            Find pdf layers of name.
            </summary>
            <param name="name">Pdf layer name.</param>
            <returns>Pdf layers of name.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayerCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.SynchronizeToPdfPrimitive">
            <summary>
            Synchronize the instance to the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.SynchronizeToPdfPrimitiveForConfiguration(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_defaultViewConfig,m_otherConfigs to the pdf primitive.
            </summary>
            <param name="dictOptionalContentProperties">The optional content properties dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.SynchronizeToPdfPrimitiveForLayers(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_layers to the pdf primitive.
            </summary>
            <param name="dictOptionalContentProperties">The optional content properties dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.SynchronizeFromPdfPrimitive">
            <summary>
            Synchronize the instance from the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.SynchronizeFromPdfPrimitiveForConfiguration(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_defaultViewConfig,m_otherConfigs from the pdf primitive.
            </summary>
            <param name="dictOptionalContentProperties">The optional content properties dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollection.SynchronizeFromPdfPrimitiveForLayers(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_layers from the pdf primitive.
            </summary>
            <param name="dictOptionalContentProperties">The optional content properties dictionary</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration">
            <summary>
            Represent pdf optional content configuration
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.m_dictionary">
            <summary>
            Optional content configuration dictionary
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.m_name">
            <summary>
            A name for the configuration.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.m_baseState">
            <summary>
            Used to initialize the states of all optional content groups's visibility.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.m_on">
            <summary>
            An array of optional content groups whose state should be set to
            ON when this configuration is applied.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.m_off">
            <summary>
            An array of optional content groups whose state should be set to
            OFF when this configuration is applied.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.m_intent">
            <summary>
            Used to determine which optional group's states to consider and ignore
            in calculating the visibility of content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.m_layerOutline">
            <summary>
            An array specifying the recommended order for presentation of optional content
            groups in user interface.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.#ctor(System.String,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance
            </summary>
            <param name="name">A name for the configuration.</param>
            <param name="crossTable">The pdf cross table</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.#ctor(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance with the optional content configuration dictionary
            </summary>
            <param name="dictOptionalContentProperties">The optional content configuration dictionary</param>
            <param name="crossTable">The pdf cross table</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.NewOutline">
            <summary>
            Create a new empty pdf layer outline.
            </summary>
            <returns>Pdf layer outline.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.AddLayer(Spire.Pdf.Graphics.Layer.PdfLayer,Spire.Pdf.Graphics.Layer.PdfVisibility)">
            <summary>
            Configure a layer at top level.
            </summary>
            <param name="layer">The pdf layer.</param>
            <param name="state">The layer's visibility.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.RemoveLayer(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Remove a layer's configs.
            </summary>
            <param name="layer">The pdf layer.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.GetLayerVisibility(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Get layer's visibility.
            </summary>
            <param name="layer">The pdf layer.</param>
            <returns>The pdf layer's visibility.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SetLayerVisibility(Spire.Pdf.Graphics.Layer.PdfLayer,Spire.Pdf.Graphics.Layer.PdfVisibility)">
            <summary>
            Set layer's visibility.
            </summary>
            <param name="layer">The pdf layer.</param>
            <param name="state">The pdf layer's visibility.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.GetLayerShowOnUI(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Return layer shows on ui or not.
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SetASItem(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.AppendOCGsItem(Spire.Pdf.Primitives.PdfArray,System.String)">
            <summary>
            Append OCGs item for AS item
            </summary>
            <param name="As">the AS PdfArray</param>
            <param name="layerProperties">The layer property</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.GetVisibility(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Get layer's visibility.
            </summary>
            <param name="layer">The pdf Layer dictionary.</param>
            <returns>The pdf layer's visibility.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.AddVisibilitySettings(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive},Spire.Pdf.Graphics.Layer.PdfVisibility)">
            <summary>
            Add pdf layer visibility settings.
            </summary>
            <param name="layers">The list of pdf Layer dictionary.</param>
            <param name="state">Visibility of the pdf layer.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.AddVisibilitySettings(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.Graphics.Layer.PdfVisibility)">
            <summary>
            Add pdf layer visibility settings.
            </summary>
            <param name="layer">The pdf Layer dictionary.</param>
            <param name="state">Visibility of the pdf layer.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.RemoveVisibilitySettings(System.Collections.Generic.List{Spire.Pdf.Interfaces.IPdfPrimitive})">
            <summary>
            Remove pdf layer visibility settings.
            </summary>
            <param name="layers">The list of pdf Layer dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.RemoveVisibilitySettings(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Remove pdf layer visibility settings.
            </summary>
            <param name="layer">The pdf Layer dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.AddVisibilitySettings(Spire.Pdf.Graphics.Layer.PdfLayer,Spire.Pdf.Graphics.Layer.PdfVisibility)">
            <summary>
            Add pdf layer visibility settings.
            </summary>
            <param name="layer">The pdf Layer.</param>
            <param name="state">Visibility of the pdf layer.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.RemoveVisibilitySettings(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Remove pdf layer visibility settings.
            </summary>
            <param name="layer">The pdf Layer.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.GetShowOnUI(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Return the layer shows on ui or not.
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeToPdfPrimitive">
            <summary>
            Synchronize the instance to the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeToPdfPrimitiveForName(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_name to the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeToPdfPrimitiveForBaseState(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_baseState to the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeToPdfPrimitiveForOn(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_on to the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeToPdfPrimitiveForOff(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_off to the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeToPdfPrimitiveForIntent(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_intent to the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeToPdfPrimitiveForLayerOutline(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_layerOutline to the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeFromPdfPrimitive">
            <summary>
            Synchronize the instance from the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeFromPdfPrimitiveForName(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_name from the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeFromPdfPrimitiveForBaseState(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_baseState from the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeFromPdfPrimitiveForIntent(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_intent from the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeFromPdfPrimitiveForOn(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_on from the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeFromPdfPrimitiveForOff(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_off from the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerCollectionConfiguration.SynchronizeFromPdfPrimitiveForLayerOutline(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_layerOutline from the pdf primitive.
            </summary>
            <param name="dictOptionalContentConfiguration">The optional content configuration dictionary.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfLayerMembership">
            <summary>
            Represent pdf optional content membership.
            To express more complex visibility policies,content should declare itself not 
            to belong directly an optional content group but rather to an optional content
            membership.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerMembership.m_dictionary">
            <summary>
            Optional content membership dictionary
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerMembership.m_relatedLayers">
            <summary>
            Optional content group whose visibility determine the visibility of
            this optional content membership.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerMembership.m_visibilityPolicy">
            <summary>
            Visibility policy.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerMembership.m_visibilityExpression">
            <summary>
            Visibility expression.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerMembership.m_layers">
            <summary>
            All optional content groups in document,not all related this membership.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayerMembership.Visibility">
            <summary>
            Pdf layer membership Visibility.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.#ctor(System.Collections.Generic.List{Spire.Pdf.Graphics.Layer.PdfLayer},Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct a instance.
            </summary>
            <param name="layers">all optional content groups.</param>
            <param name="crossTable">The pdf cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.#ctor(Spire.Pdf.Primitives.PdfDictionary,System.Collections.Generic.List{Spire.Pdf.Graphics.Layer.PdfLayer},Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance with the optional content membership dictionary.
            </summary>
            <param name="dictOptionalContentProperties">The optional content membership dictionary.</param>
            <param name="layers">all optional content groups.</param>
            <param name="crossTable">The pdf cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayerMembership.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.SynchronizeToPdfPrimitive">
            <summary>
            Synchronize the instance to the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.SynchronizeToPdfPrimitiveForRelatedLayerss(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_relatedLayers to the pdf primitive.
            </summary>
            <param name="dictOptionalContentMembership">The optional content membership dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.SynchronizeToPdfPrimitiveForVisibilityPolicy(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_visibilityPolicy to the pdf primitive.
            </summary>
            <param name="dictOptionalContentMembership">The optional content membership dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.SynchronizeToPdfPrimitiveForVisibilityExpression(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_visibilityExpression to the pdf primitive.
            </summary>
            <param name="dictOptionalContentMembership">The optional content membership dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.SynchronizeFromPdfPrimitive">
            <summary>
            Synchronize the instance from the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.SynchronizeFromPdfPrimitiveForRelatedLayers(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_relatedLayers from the pdf primitive.
            </summary>
            <param name="dictOptionalContentMembership">The optional content membership dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.SynchronizeFromPdfPrimitiveForVisibilityPolicy(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_visibilityPolicy from the pdf primitive.
            </summary>
            <param name="dictOptionalContentMembership">The optional content membership dictionary</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerMembership.SynchronizeFromPdfPrimitiveForVisibilityExpression(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Synchronize the instance field m_visibilityExpression from the pdf primitive.
            </summary>
            <param name="dictOptionalContentMembership">The optional content membership dictionary</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfLayerOutline">
            <summary>
            Represent the recommended order for presentation of optional content
            groups in user interface.
            Refrence "Optional content configuration dictionary's entry order".
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfLayerOutline.m_array">
            <summary>
            Optional content configuration dictionary's entry order
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerOutline.#ctor(Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance.
            </summary>
            <param name="crossTable">The pdf cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerOutline.#ctor(Spire.Pdf.Primitives.PdfArray,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance with .
            </summary>
            <param name="arrayOrder"></param>
            <param name="crossTable">The pdf cross table</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerOutline.AddGroup(System.String)">
            <summary>
            Add a sub group outline.
            </summary>
            <param name="name">Group name.</param>
            <returns>Sub group outline.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerOutline.AddGroup(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Add a outline entry of the pdf layer with a sub group outline.
            </summary>
            <param name="layer">Pdf layer</param>
            <returns>Sub group outline.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerOutline.AddEntry(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Add a outline entry of the pdf layer.
            </summary>
            <param name="layer">Pdf layer</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerOutline.Remove(Spire.Pdf.Graphics.Layer.PdfLayer)">
            <summary>
            Remove an entry of the layer,inclued sub enties.
            </summary>
            <param name="layer">The layer.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerOutline.Remove(Spire.Pdf.Graphics.Layer.PdfLayer,Spire.Pdf.Primitives.PdfArray)">
            <summary>
            Remove an entry with the layer,inclued sub enties..
            Refrence "Optional content configuration dictionary's entry order".
            </summary>
            <param name="layer">The layer.</param>
            <param name="array">The array include outline entries.</param>
            <returns>True,if has succeed.Otherwise,false.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfLayerOutline.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfLayerUtils.RemoveLayerContent(Spire.Pdf.Graphics.Layer.PdfLayer,Spire.Pdf.PdfPageBase,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Remove layer content in the page.
            </summary>
            <param name="layer">The layer.</param>
            <param name="page">The page.</param>
            <param name="crossTable">The pdfCrossTable</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfVisibility">
            <summary>
            Represent the visibility of optional content group(or optional content membership).
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression">
            <summary>
            Specify the visibility expression for optional content belonging to PdfLayerMembership.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression.m_array">
            <summary>
            An array specifying a visibility expression
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression.Visible">
            <summary>
            Visible of optional content.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression.#ctor(Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance
            </summary>
            <param name="crossTable">The pdf cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression.#ctor(Spire.Pdf.Primitives.PdfArray,Spire.Pdf.IO.PdfCrossTable)">
            <summary>
            Construct an instance with the visibility expression array.
            </summary>
            <param name="arrayVisibilityExpression">The visibility expression array.</param>
            <param name="crossTable">The pdf cross table.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression.SynchronizeToPdfPrimitive">
            <summary>
            Synchronize the instance to the pdf primitive.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Layer.PdfVisibilityExpression.SynchronizeFromPdfPrimitive">
            <summary>
            Synchronize the instance from the pdf primitive.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Layer.PdfVisibilityPolicy">
            <summary>
            Specify the visibility policy for content belonging to PdfLayerMembership.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfVisibilityPolicy.None">
            <summary>
            Not Specifying the visibility policy.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfVisibilityPolicy.AnyOn">
            <summary>
            Visible if any of layer are On.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfVisibilityPolicy.AllOn">
            <summary>
            Visible only if all of layers are On.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfVisibilityPolicy.AnyOff">
            <summary>
            Visible if any of layer are Off.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Layer.PdfVisibilityPolicy.AllOff">
            <summary>
            Visible only if all of layers are Off.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfMatrix">
            <summary>
            Represent the matrix
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMatrix.OffsetX">
            <summary>
            Gets the x translation value (the dx value, or the element in the third row and first column).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMatrix.OffsetY">
            <summary>
            Gets the x translation value (the dx value, or the element in the third row and second column).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMatrix.Elements">
            <summary>
            Gets an array of floating-point values that represents the elements.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.#ctor">
            <summary>
            Construct a instance as the identity matrix.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Construct a instance as the identity matrix.
            </summary>
            <param name="m11">The value in the first row and first column.</param>
            <param name="m12">The value in the first row and second column.</param>
            <param name="m21">The value in the second row and first column.</param>
            <param name="m22">The value in the second row and second column.</param>
            <param name="dx">The value in the third row and first column.</param>
            <param name="dy">The value in the third row and second column.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
            <summary>
            Construct a instance to the geometric transform defined by the specified rectangle and array of points.
            </summary>
            <param name="rect">A System.Drawing.Rectangle structure that represents the rectangle.</param>
            <param name="plgpts">
            An array of three System.Drawing.Point structures that represents the points 
            of a parallelogram to which the upper-left, upper-right, and lower-left corners 
            of the rectangle is to be transformed. The lower-right corner of the parallelogram
            is implied by the first three corners.
            </param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
            <summary>
            Construct a instance to the geometric transform defined by the specified rectangle and array of points.
            </summary>
            <param name="rect">A System.Drawing.RectangleF structure that represents the rectangle.</param>
            <param name="plgpts">
            An array of three System.Drawing.PointF structures that represents the points 
            of a parallelogram to which the upper-left, upper-right, and lower-left corners 
            of the rectangle is to be transformed. The lower-right corner of the parallelogram
            is implied by the first three corners.
            </param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Multiply(Spire.Pdf.Graphics.PdfMatrix)">
            <summary>
            Prepend the specified matrix.
            </summary>
            <param name="matrix">Matrix is to be multiplied.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Multiply(Spire.Pdf.Graphics.PdfMatrix,Spire.Pdf.Graphics.PdfMatrixOrder)">
            <summary>
            Apply the specified matrix by the specified order.
            </summary>
            <param name="matrix">Matrix is to be multiplied.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Translate(System.Single,System.Single)">
            <summary>
            Prepend the specified translation vector (offsetX and offsetY).
            </summary>
            <param name="offsetX">The x value by which to translate.</param>
            <param name="offsetY">The y value by which to translate.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Translate(System.Single,System.Single,Spire.Pdf.Graphics.PdfMatrixOrder)">
            <summary>
            Apply the specified translation vector (offsetX and offsetY) by the specified order.
            </summary>
            <param name="offsetX">The x value by which to translate.</param>
            <param name="offsetY">The y value by which to translate.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Scale(System.Single,System.Single)">
            <summary>
            Prepend the specified scale vector (scaleX and scaleY).
            </summary>
            <param name="scaleX">The value by which to scale in the x-axis direction.</param>
            <param name="scaleY">The value by which to scale in the y-axis direction.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Scale(System.Single,System.Single,Spire.Pdf.Graphics.PdfMatrixOrder)">
            <summary>
            Apply the specified scale vector (scaleX and scaleY) by the specified order.
            </summary>
            <param name="scaleX">The value by which to scale in the x-axis direction.</param>
            <param name="scaleY">The value by which to scale in the y-axis direction.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Rotate(System.Single)">
            <summary>
            Prepend a clockwise rotation(angle) around the origin.
            </summary>
            <param name="angle">The angle of the rotation, in degrees.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Rotate(System.Single,Spire.Pdf.Graphics.PdfMatrixOrder)">
            <summary>
            Apply a clockwise rotation(angle) around the origin by the specified order.
            </summary>
            <param name="angle">The angle of the rotation, in degrees.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Skew(System.Single,System.Single)">
            <summary>
            Prepend the specified skew angles(angleX angleY).
            </summary>
            <param name="angleX">The horizontal skew angle, in degrees.</param>
            <param name="angleY">The vertical skew angle, in degrees.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Skew(System.Single,System.Single,Spire.Pdf.Graphics.PdfMatrixOrder)">
            <summary>
            Prepend the specified skew angles(angleX angleY) by the specified order.
            </summary>
            <param name="angleX">The horizontal skew angle, in degrees.</param>
            <param name="angleY">The vertical skew angle, in degrees.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Shear(System.Single,System.Single)">
            <summary>
            Prepend the specified Shear vector (shearX and shearY).
            </summary>
            <param name="shearX">The horizontal shear factor.</param>
            <param name="shearY">The vertical shear factor.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Shear(System.Single,System.Single,Spire.Pdf.Graphics.PdfMatrixOrder)">
            <summary>
            Apply the specified Shear vector (shearX and shearY) by the specified order.
            </summary>
            <param name="shearX">The horizontal shear factor.</param>
            <param name="shearY">The vertical shear factor.</param>
            <param name="order">Represent the applying order.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.TransformPoints(System.Drawing.PointF[])">
            <summary>
            Applies the geometric transform to a specified array of points.
            </summary>
            <param name="pt">An array of points to transform.</param>
            <returns>The transformed points.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Multiply(Spire.Pdf.Graphics.PdfMatrix,Spire.Pdf.Graphics.PdfMatrix)">
            <summary>
            Matrix1 multiply matrix2 to this.
            </summary>
            <param name="matrix1">first matrix.</param>
            <param name="matrix2">second matrix.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.DegreeToRadian(System.Double)">
            <summary>
            Converts degree to radian.
            </summary>
            <param name="degree">The degree</param>
            <returns>The radian</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.RadianToDegree(System.Double)">
            <summary>
            Converts radian to degree.
            </summary>
            <param name="radian">The radian</param>
            <returns>The degree</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Cal3SimpleEquation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Calculate 3 simple equation
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMatrix.Cal3SimpleEquation(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Calculate 3 simple equation
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfMatrixOrder">
            <summary>
            Represent the applying order to matrix.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfMatrixOrder.Prepend">
            <summary>
            The new operation is applied before the old operation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfMatrixOrder.Append">
            <summary>
            The new operation is applied after the old operation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPens">
            <summary>
            The collection of the default pens.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.AliceBlue">
            <summary>
            Gets the AliceBlue pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.AntiqueWhite">
            <summary>
            Gets the antique white pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Aqua">
            <summary>
            Gets the Aqua default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Aquamarine">
            <summary>
            Gets the Aquamarine default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Azure">
            <summary>
            Gets the Azure default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Beige">
            <summary>
            Gets the Beige default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Bisque">
            <summary>
            Gets the Bisque default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Black">
            <summary>
            Gets the Black default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.BlanchedAlmond">
            <summary>
            Gets the BlanchedAlmond default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Blue">
            <summary>
            Gets the Blue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.BlueViolet">
            <summary>
            Gets the BlueViolet default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Brown">
            <summary>
            Gets the Brown default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.BurlyWood">
            <summary>
            Gets the BurlyWood default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.CadetBlue">
            <summary>
            Gets the CadetBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Chartreuse">
            <summary>
            Gets the Chartreuse default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Chocolate">
            <summary>
            Gets the Chocolate default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Coral">
            <summary>
            Gets the Coral default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.CornflowerBlue">
            <summary>
            Gets the CornflowerBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Cornsilk">
            <summary>
            Gets the Corn silk default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Crimson">
            <summary>
            Gets the Crimson default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Cyan">
            <summary>
            Gets the Cyan default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkBlue">
            <summary>
            Gets the DarkBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkCyan">
            <summary>
            Gets the DarkCyan default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkGoldenrod">
            <summary>
            Gets the DarkGoldenrod default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkGray">
            <summary>
            Gets the DarkGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkGreen">
            <summary>
            Gets the DarkGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkKhaki">
            <summary>
            Gets the DarkKhaki default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkMagenta">
            <summary>
            Gets the DarkMagenta default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkOliveGreen">
            <summary>
            Gets the DarkOliveGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkOrange">
            <summary>
            Gets the DarkOrange default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkOrchid">
            <summary>
            Gets the DarkOrchid default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkRed">
            <summary>
            Gets the DarkRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkSalmon">
            <summary>
            Gets the DarkSalmon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkSeaGreen">
            <summary>
            Gets the DarkSeaGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkSlateBlue">
            <summary>
            Gets the DarkSlateBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkSlateGray">
            <summary>
            Gets the DarkSlateGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkTurquoise">
            <summary>
            Gets the DarkTurquoise default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkViolet">
            <summary>
            Gets the DarkViolet default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DeepPink">
            <summary>
            Gets the DeepPink default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DeepSkyBlue">
            <summary>
            Gets the DeepSkyBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DimGray">
            <summary>
            Gets the DimGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DodgerBlue">
            <summary>
            Gets the DodgerBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Firebrick">
            <summary>
            Gets the Firebrick default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.FloralWhite">
            <summary>
            Gets the FloralWhite default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.ForestGreen">
            <summary>
            Gets the ForestGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Fuchsia">
            <summary>
            Gets the Fuchsia default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Gainsboro">
            <summary>
            Gets the Gainsborough default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.GhostWhite">
            <summary>
            Gets the GhostWhite default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Gold">
            <summary>
            Gets the Gold default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Goldenrod">
            <summary>
            Gets the Goldenrod default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Gray">
            <summary>
            Gets the Gray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Green">
            <summary>
            Gets the Green default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.GreenYellow">
            <summary>
            Gets the GreenYellow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Honeydew">
            <summary>
            Gets the Honeydew default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.HotPink">
            <summary>
            Gets the HotPink default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.IndianRed">
            <summary>
            Gets the IndianRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Indigo">
            <summary>
            Gets the Indigo default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Ivory">
            <summary>
            Gets the Ivory default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Khaki">
            <summary>
            Gets the Khaki default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Lavender">
            <summary>
            Gets the Lavender default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LavenderBlush">
            <summary>
            Gets the LavenderBlush default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LawnGreen">
            <summary>
            Gets the LawnGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LemonChiffon">
            <summary>
            Gets the LemonChiffon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightBlue">
            <summary>
            Gets the LightBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightCoral">
            <summary>
            Gets the LightCoral default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightCyan">
            <summary>
            Gets the LightCyan default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightGoldenrodYellow">
            <summary>
            Gets the LightGoldenrodYellow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightGray">
            <summary>
            Gets the LightGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightGreen">
            <summary>
            Gets the LightGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightPink">
            <summary>
            Gets the LightPink default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSalmon">
            <summary>
            Gets the LightSalmon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSeaGreen">
            <summary>
            Gets the LightSeaGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSkyBlue">
            <summary>
            Gets the LightSkyBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSlateGray">
            <summary>
            Gets the LightSlateGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSteelBlue">
            <summary>
            Gets the LightSteelBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightYellow">
            <summary>
            Gets the LightYellow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Lime">
            <summary>
            Gets the Lime default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LimeGreen">
            <summary>
            Gets the LimeGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Linen">
            <summary>
            Gets the Linen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Magenta">
            <summary>
            Gets the Magenta default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Maroon">
            <summary>
            Gets the Maroon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumAquamarine">
            <summary>
            Gets the MediumAquamarine default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumBlue">
            <summary>
            Gets the MediumBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumOrchid">
            <summary>
            Gets the MediumOrchid default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumPurple">
            <summary>
            Gets the MediumPurple default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumSeaGreen">
            <summary>
            Gets the MediumSeaGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumSlateBlue">
            <summary>
            Gets the MediumSlateBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumSpringGreen">
            <summary>
            Gets the MediumSpringGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumTurquoise">
            <summary>
            Gets the MediumTurquoise default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumVioletRed">
            <summary>
            Gets the MediumVioletRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MidnightBlue">
            <summary>
            Gets the MidnightBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MintCream">
            <summary>
            Gets the MintCream default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MistyRose">
            <summary>
            Gets the MistyRose default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Moccasin">
            <summary>
            Gets the Moccasin default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.NavajoWhite">
            <summary>
            Gets the NavajoWhite default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Navy">
            <summary>
            Gets the Navy default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.OldLace">
            <summary>
            Gets the OldLace default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Olive">
            <summary>
            Gets the Olive default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.OliveDrab">
            <summary>
            Gets the OliveDrab default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Orange">
            <summary>
            Gets the Orange default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.OrangeRed">
            <summary>
            Gets the OrangeRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Orchid">
            <summary>
            Gets the Orchid default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PaleGoldenrod">
            <summary>
            Gets the PaleGoldenrod default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PaleGreen">
            <summary>
            Gets the PaleGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PaleTurquoise">
            <summary>
            Gets the PaleTurquoise default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PaleVioletRed">
            <summary>
            Gets the PaleVioletRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PapayaWhip">
            <summary>
            Gets the PapayaWhip default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PeachPuff">
            <summary>
            Gets the PeachPuff default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Peru">
            <summary>
            Gets the Peru default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Pink">
            <summary>
            Gets the Pink default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Plum">
            <summary>
            Gets the Plum default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PowderBlue">
            <summary>
            Gets the PowderBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Purple">
            <summary>
            Gets the Purple default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Red">
            <summary>
            Gets the Red default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.RosyBrown">
            <summary>
            Gets the RosyBrown default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.RoyalBlue">
            <summary>
            Gets the RoyalBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SaddleBrown">
            <summary>
            Gets the SaddleBrown default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Salmon">
            <summary>
            Gets the Salmon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SandyBrown">
            <summary>
            Gets the SandyBrown default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SeaGreen">
            <summary>
            Gets the SeaGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SeaShell">
            <summary>
            Gets the SeaShell default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Sienna">
            <summary>
            Gets the Sienna default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Silver">
            <summary>
            Gets the Silver default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SkyBlue">
            <summary>
            Gets the SkyBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SlateBlue">
            <summary>
            Gets the SlateBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SlateGray">
            <summary>
            Gets the SlateGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Snow">
            <summary>
            Gets the Snow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SpringGreen">
            <summary>
            Gets the SpringGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SteelBlue">
            <summary>
            Gets the SteelBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Tan">
            <summary>
            Gets the Tan default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Teal">
            <summary>
            Gets the Teal default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Thistle">
            <summary>
            Gets the Thistle default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Tomato">
            <summary>
            Gets the Tomato default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Transparent">
            <summary>
            Gets the Transparent default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Turquoise">
            <summary>
            Gets the Turquoise default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Violet">
            <summary>
            Gets the Violet default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Wheat">
            <summary>
            Gets the Wheat default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.White">
            <summary>
            Gets the White default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.WhiteSmoke">
            <summary>
            Gets the WhiteSmoke default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Yellow">
            <summary>
            Gets the Yellow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.YellowGreen">
            <summary>
            Gets the YellowGreen default pen.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfHorizontalAlignment">
            <summary>
            Specifies the type of Horizontal alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfHorizontalAlignment.Left">
            <summary>
            Specifies the element is aligned to Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfHorizontalAlignment.Center">
            <summary>
            Specifies the element is aligned to Center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfHorizontalAlignment.Right">
            <summary>
            Specifies the element is aligned to Right.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfVerticalAlignment">
            <summary>
            Specifies the type of Vertical alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfVerticalAlignment.Top">
            <summary>
            Specifies the element is aligned to Top.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfVerticalAlignment.Middle">
            <summary>
            Specifies the element is aligned to Middle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfVerticalAlignment.Bottom">
            <summary>
            Specifies the element is aligned to Bottom.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTextAlignment">
            <summary>
            Specifies the type of horizontal text alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTextAlignment.Left">
            <summary>
            Specifies the text is aligned to Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTextAlignment.Center">
            <summary>
            Specifies the text is aligned to Center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTextAlignment.Right">
            <summary>
            Specifies the text is aligned to Right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTextAlignment.Justify">
            <summary>
            Specifies the text as Justified text.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.TextRenderingMode">
            <summary>
            Specifies the text rendering mode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.Fill">
            <summary>
            Fill text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.Stroke">
            <summary>
            Stroke text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.FillStroke">
            <summary>
            Fill, then stroke text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.None">
            <summary>
            Neither fill nor stroke text (invisible).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.ClipFill">
            <summary>
            Fill text and add to path for clipping (see above)..
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.ClipStroke">
            <summary>
            Stroke text and add to path for clipping (see above).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.ClipFillStroke">
            <summary>
            Stroke fill text  and add to path for clipping.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.Clip">
            <summary>
            Add text to path for clipping.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLineJoin">
            <summary>
            Specifies the corner style of the shapes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineJoin.Miter">
            <summary>
            The outer edges for the two segments are extended
            until they meet at an angle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineJoin.Round">
            <summary>
            An arc of a circle with a diameter equal to the line width is drawn
            around the point where the two segments meet, connecting the outer edges for the two segments.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineJoin.Bevel">
            <summary>
            The two segments are finished with caps
            and the resulting notch beyond the ends of the segments is filled
            with a triangle.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLineCap">
             <summary>
            Specifies the line cap style to be used at the ends of the lines.
             </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineCap.Flat">
            <summary>
            The stroke is squared off at the endpoint of the path. There is no
            projection beyond the end of the path.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineCap.Round">
            <summary>
            A semicircular arc with a diameter equal to the line width is
            drawn around the endpoint and filled in.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineCap.Square">
            <summary>
             The stroke continues beyond the endpoint of the path
            for a distance equal to half the line width and is squared off.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfDashStyle">
            <summary>
            Possible dash styles of the pen.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.Solid">
            <summary>
            Solid line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.Dash">
            <summary>
            Dashed line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.Dot">
            <summary>
            Dotted line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.DashDot">
            <summary>
            Dash-dot line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.DashDotDot">
            <summary>
            Dash-dot-dot line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.Custom">
            <summary>
            User defined dash style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.None">
            <summary>
            No line.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFillMode">
            <summary>
            Specifies how the shapes are filled. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFillMode.Winding">
            <summary>
            Nonzero winding number rule of determining &quot;insideness&quot;
            of point.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFillMode.Alternate">
            <summary>
            Even odd rule of determining &quot;insideness&quot; of point.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfColorSpace">
            <summary>
            Defines set of color spaces.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfColorSpace.RGB">
            <summary>
            RGB color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfColorSpace.CMYK">
            <summary>
            CMYK color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfColorSpace.GrayScale">
            <summary>
            GrayScale color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfColorSpace.Indexed">
            <summary>
            Indexed color space used internally.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ColorIntent.AbsoluteColorimetric">
            <summary>
            Colors are represented solely with respect to the light source;
            no correction is made for the output mediums white point
            (such as the color of unprinted paper).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ColorIntent.RelativeColorimetric">
            <summary>
            Colors are represented with respect to the combination of
            the light source and the output mediums white point
            (such as the color of unprinted paper).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ColorIntent.Saturation">
            <summary>
            Colors are represented in a manner that preserves
            or emphasizes saturation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ColorIntent.Perceptual">
            <summary>
            Colors are represented in a manner that provides a pleasing
            perceptual appearance.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBlendMode">
            <summary>
            Specifies the blend mode for transparency.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Normal">
            <summary>
            Selects the source color, ignoring the backdrop.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Multiply">
            <summary>
            Multiplies the backdrop and source color values.
            The result color is always at least as dark as either
            of the two constituent colors. Multiplying
            any color with black produces black; multiplying
            with white leaves the original color unchanged.
            Painting successive overlapping objects with a color
            other than black or white produces progressively darker colors.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Screen">
            <summary>
            Multiplies the complements of the backdrop and source
            color values, then complements the result. The result
            color is always at least as light as either of the two
            constituent colors. Screening any color with white
            produces white; screening with black leaves the original
            color unchanged. The effect is similar to projecting
            multiple photographic slides simultaneously onto a single screen.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Overlay">
            <summary>
            Multiplies or screens the colors, depending on
            the backdrop color value. Source colors overlay
            the backdrop while preserving its highlights and
            shadows. The backdrop color is not replaced but
            is mixed with the source color to reflect the
            lightness or darkness of the backdrop.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Darken">
            <summary>
            Selects the darker of the backdrop and source colors.
            The backdrop is replaced with the source where the source
            is darker; otherwise, it is left unchanged.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Lighten">
            <summary>
            Selects the lighter of the backdrop and source colors.
            The backdrop is replaced with the source where the source
            is lighter; otherwise, it is left unchanged.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.ColorDodge">
            <summary>
            Brightens the backdrop color to reflect the source color.
            Painting with black produces no changes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.ColorBurn">
            <summary>
            Darkens the backdrop color to reflect the source color.
            Painting with white produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.HardLight">
            <summary>
            Multiplies or screens the colors, depending on the source color value.
            The effect is similar to shining a harsh spotlight on the backdrop.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.SoftLight">
            <summary>
            Darkens or lightens the colors, depending on the source color value.
            The effect is similar to shining a diffused spotlight on the backdrop.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Difference">
            <summary>
            Subtracts the darker of the two constituent colors from the lighter color.
            Painting with white inverts the backdrop color; painting with black produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Exclusion">
            <summary>
            Produces an effect similar to that of the Difference mode
            but lower in contrast. Painting with white inverts 
            the backdrop color; painting with black produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Hue">
            <summary>
            Creates a color with the hue of the source color and 
            the saturation and luminosity of the backdrop color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Saturation">
            <summary>
            Creates a color with the saturation of the source color
            and the hue and luminosity of the backdrop color. Painting
            with this mode in an area of the backdrop that is a pure
            gray (no saturation) produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Color">
            <summary>
            Creates a color with the hue and saturation of
            the source color and the luminosity of the backdrop
            color. This preserves the gray levels of the backdrop
            and is useful for coloring monochrome images or tinting color images.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Luminosity">
            <summary>
            Creates a color with the luminosity of the source color
            and the hue and saturation of the backdrop color. This
            produces an inverse effect to that of the Color mode.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfImageType">
            <summary>
            Specifies the type of the PdfImage.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfImageType.Bitmap">
            <summary>
            Specifies the image is bitmap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfImageType.Metafile">
            <summary>
            Specifies the image is metafile.
            Note: Metafile can't set dpi and use "Green context" dpi.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfGraphicsUnit">
            <summary>
            Specifies the types of the page's logical units.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Centimeter">
            <summary>
            Specifies the Measurement is in centimeters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Pica">
            <summary>
            Specifies the Measurement is in picas. A pica represents 12 points.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Pixel">
            <summary>
            Specifies the unit of measurement is 1 pixel.
            </summary>
            <remarks>Pixel unit is device dependent unit. The result depends on the default Dpi on the machine.</remarks>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Point">
            <summary>
            Specifies a printer's point (1/72 inch) as the unit of measure. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Inch">
            <summary>
            Specifies the inch as the unit of measure. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Document">
            <summary>
            Specifies the document unit (1/300 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Millimeter">
            <summary>
            Specifies the Measurement is in millimeters.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfImageFormat">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.LayerExportState">
            <summary>
            Specifies the export state of the Layer
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerExportState.Allways">
            <summary>
            Allways export
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerExportState.Nerver">
            <summary>
            Never export
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerExportState.ExportWhenVisible">
            <summary>
            Export when visible
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.LayerPrintState">
            <summary>
            Specifies the print state of the Layer
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerPrintState.Allways">
            <summary>
            Allways print
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerPrintState.Nerver">
            <summary>
            Never print
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerPrintState.PrintWhenVisible">
            <summary>
            Print when visible
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.LayerViewState">
            <summary>
            Specifies the view state of the Layer
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerViewState.Allways">
            <summary>
            Allways visible
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerViewState.Nerver">
            <summary>
            never visible
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LayerViewState.ViewWhenOpen">
            <summary>
            Visible when on
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfRGBColor">
            <summary>
            Implements structures and routines working with color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Empty">
            <summary>
            Gets a null color.
            </summary>
            <value>The empty.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.IsEmpty">
            <summary>
            Gets whether the PDFColor is Empty or not.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.B">
            <summary>
            Gets or sets Blue channel value.
            </summary>
            <value>The B.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Blue">
            <summary>
            Gets the blue.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.C">
            <summary>
            Gets or sets Cyan channel value.
            </summary>
            <value>The C.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.G">
            <summary>
            Gets or sets Green channel value.
            </summary>
            <value>The G.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Green">
            <summary>
            Gets the green.
            </summary>
            <value>The green.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Gray">
            <summary>
            Gets or sets Gray channel value.
            </summary>
            <value>The gray.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.K">
            <summary>
            Gets or sets Black channel value.
            </summary>
            <value>The K.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.M">
            <summary>
            Gets or sets Magenta channel value.
            </summary>
            <value>The M.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.R">
            <summary>
            Gets or sets Red channel value.
            </summary>
            <value>The R.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Red">
            <summary>
            Gets the red.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Y">
            <summary>
            Gets or sets Yellow channel value.
            </summary>
            <value>The Y.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">Source color object.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">Source color object.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="gray">Gray value.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="red">Red channel value.</param>
            <param name="green">Green channel value.</param>
            <param name="blue">Blue channel value.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="cyan">Cyan channel value.</param>
            <param name="magenta">Magenta channel value.</param>
            <param name="yellow">Yellow channel value.</param>
            <param name="black">Black channel value.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.ToArgb">
            <summary>
            Creates the Alpha ,Red ,Green, and Blue value of this PDFColor structure.
            </summary>
            <returns>ARGB value.</returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.op_Implicit(System.Drawing.Color)~Spire.Pdf.Graphics.PdfRGBColor">
            <summary>
            Implicit operator.
            </summary>
            <param name="color">System.Drawing.Color.</param>
            <returns>PDFColor.</returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.op_Implicit(Spire.Pdf.Graphics.PdfRGBColor)~System.Drawing.Color">
            <summary>
            Implicit operator.
            </summary>
            <param name="color">System.Drawing.Color.</param>
            <returns>PDFColor.</returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.op_Equality(Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Operator ==.
            </summary>
            <param name="colour1">The color 1.</param>
            <param name="colour2">The color 2.</param>
            <returns>
            True if color 1 is equal to color 2; otherwise False.
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.op_Inequality(Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Operator !=.
            </summary>
            <param name="colour1">The color 1.</param>
            <param name="colour2">The color 2.</param>
            <returns>
            True if color 1 is not equal to color 2; otherwise False.
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.Equals(System.Object)">
            <summary>
            Determines whether the specified 
            is equal to the current .
            </summary>
            <param name="obj">The  to
            compare with the current .</param>
            <returns>
            True if the specified  is equal
            to the current ; otherwise -
            False.
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.Equals(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Determines if the specified color is equal to this one.
            </summary>
            <param name="colour">The color.</param>
            <returns>
            True if the color is equal; otherwise - False.
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for
            use in hashing algorithms and data structures like a hash
            table.
            </summary>
            <returns>
            A hash code for the current .
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.CompareColours(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Compares colors.
            </summary>
            <param name="color1">The color 1.</param>
            <param name="color2">The color 2.</param>
            <returns>
            True if colors are identical; otherwise - False.
            </returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfCanvas">
            <summary>
            The class representing a graphics context of the objects.
            It's used for performing simple graphics operations.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCanvas.m_webLinkCollection">
            <summary>
            The web link collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCanvas.Size">
            <summary>
            Gets the size of the canvas.
            </summary>
            <remarks>Usually, this value is equal to the size of the object this graphics belongs to.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCanvas.ClientSize">
            <summary>
            Gets the size of the canvas reduced by margins and page templates.
            </summary>
            <remarks>It indicates a size of the canvas reduced by margins and template dimensions.
            This value doesn't change when any custom clip is set.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCanvas.ColorSpace">
            <summary>
            Gets or sets the current color space.
            </summary>
            <remarks>The value change of this property has impact on the objects
            which will be drawn after the change.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCanvas.WebLinkCollection">
            <summary>
            The web link collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawLine(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line.
            </summary>
            <param name="pen">The pen.</param>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawLine(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawArc(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws an arc.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawArc(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPolygon(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPolygon(Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPolygon(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawBezier(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a bezier curve.
            </summary>
            <param name="pen">The pen.</param>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawBezier(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a bezier curve.
            </summary>
            <param name="pen">The pen.</param>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPath(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Draws a path.
            </summary>
            <param name="pen">The pen.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPath(Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Draws a path.
            </summary>
            <param name="brush">The brush.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPath(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Draws a path.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Drawing.PointF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Single,System.Single)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Drawing.RectangleF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Int32,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws an image,recommending monochrome image.
            </summary>
            <param name="image">The image.</param>
            <param name="compressionQuality">The image compresson quality.</param>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an image,recommending monochrome image
            </summary>
            <param name="image">The image.</param>
            <param name="compressionQuality">The image compresson quality.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="point">The location point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="point">The location point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="point">The location point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen, Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawFormFieldString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen, Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="point">The location point.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="point">The location point.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="point">The location point.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen, Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.TranslateTransform(System.Single,System.Single)">
            <summary>
            Translates the coordinates by specified coordinates.
            </summary>
            <param name="offsetX">The X value by which to translate
            coordinate system.</param>
            <param name="offsetY">The Y value by which to translate
            coordinate system.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.ScaleTransform(System.Single,System.Single)">
            <summary>
            Scales the coordinates by specified coordinates.
            </summary>
            <param name="scaleX">The value by which to scale coordinate
            system in the X axis direction.</param>
            <param name="scaleY">The value by which to scale coordinate
            system in the Y axis direction.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.RotateTransform(System.Single,System.Drawing.PointF)">
             <summary>
             Rotates the coordinate system in clockwise direction around specified point.
             </summary>
             <param name="angle">The angle of the rotation (in degrees).</param>
            <param name="angle">A System.Drawing.PointF that represents the center of the rotation. </param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.RotateTransform(System.Single)">
            <summary>
            Rotates the coordinate system in clockwise direction.
            </summary>
            <param name="angle">The angle of the rotation (in degrees).</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SkewTransform(System.Single,System.Single)">
            <summary>
            Skews the coordinate system axes.
            </summary>
            <param name="angleX">Skews the X axis by this angle (in
            degrees).</param>
            <param name="angleY">Skews the Y axis by this angle (in
            degrees).</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawTemplate(Spire.Pdf.Graphics.PdfTemplate,System.Drawing.PointF)">
            <summary>
            Draws a template using its original size, at the specified location.
            </summary>
            <param name="template"> object.</param>
            <param name="location">Location of the template.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawTemplate(Spire.Pdf.Graphics.PdfTemplate,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws a template at the specified location and size.
            </summary>
            <param name="template"> object.</param>
            <param name="location">Location of the template.</param>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.Flush">
            <summary>
            Flashes this instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.Save">
            <summary>
            Saves the current state of this Graphics and identifies the saved state with a GraphicsState.
            </summary>
            <returns>This method returns a GraphicsState that represents the saved state of this Graphics. </returns>
            <remarks>This method works similar to  method.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.Restore">
            <summary>
            Restores the last state of this Graphics.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.Restore(Spire.Pdf.Graphics.PdfGraphicsState)">
            <summary>
            Restores the state of this Graphics to the state represented by a GraphicsState.
            </summary>
            <param name="state">GraphicsState that represents the state to which to restore this Graphics.</param>
            <remarks>This method works similar to  method.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetClip(System.Drawing.RectangleF)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="rectangle">Clip rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetClip(System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfFillMode)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="rectangle">Clip rectangle.</param>
            <param name="mode">The fill mode to determine which regions lie inside the clipping	path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetClip(Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="path">Clip path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetClip(Spire.Pdf.Graphics.PdfPath,Spire.Pdf.Graphics.PdfFillMode)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="path">Clip path.</param>
            <param name="mode">The fill mode to determine which regions lie inside the clipping	path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetTransparency(System.Single)">
            <summary>
            Sets the transparency.
            </summary>
            <param name="alpha">The alpha value for both pen
            and brush operations.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetTransparency(System.Single,System.Single)">
            <summary>
            Sets the transparency.
            </summary>
            <param name="alphaPen">The alpha value for pen operations.</param>
            <param name="alphaBrush">The alpha value for brush operations.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetTransparency(System.Single,System.Single,Spire.Pdf.Graphics.PdfBlendMode)">
            <summary>
            Sets the transparency.
            </summary>
            <param name="alphaPen">The alpha value for pen operations.</param>
            <param name="alphaBrush">The alpha value for brush operations.</param>
            <param name="blendMode">The blend mode.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.TransparencyData.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and
            represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.TransparencyData.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfGraphicsState">
            <summary>
            Represents the state of a Graphics object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfMargins">
            <summary>
            A class representing page margins.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.Left">
            <summary>
            Gets or sets the left margin size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.Top">
            <summary>
            Gets or sets the top margin size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.Right">
            <summary>
            Gets or sets the right margin size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.Bottom">
            <summary>
            Gets or sets the bottom margin size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.All">
            <summary>
            Sets margin of each side.
            </summary>
            <value>Margin of each side.</value>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.#ctor(System.Single)">
            <summary>
            Create and initialize margin.
            </summary>
            <param name="margin">The margin size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.#ctor(System.Single,System.Single)">
            <summary>
            Create and initialize margin.
            </summary>
            <param name="leftRight">The left right.</param>
            <param name="topBottom">The top bottom.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create and initialize margin.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>The cloned object.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPen">
            <summary>
            A class defining settings for drawing operations.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.Brush">
            <summary>
            Gets or sets the brush, which specifies the pen behaviour.
            </summary>
            <remarks>If the brush is set, the color values are ignored,
            except for PdfSolidBrush.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.Color">
            <summary>
            Gets or sets the color of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.DashOffset">
            <summary>
            Gets or sets the dash offset of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.DashPattern">
            <summary>
            Gets or sets the dash pattern of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.DashStyle">
            <summary>
            Gets or sets the dash style of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.LineCap">
            <summary>
            Gets or sets the line cap of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.LineJoin">
            <summary>
            Gets or sets the line join style of the pen.
            </summary>
            <value>The line join.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.Width">
            <summary>
            Gets or sets the width of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.MiterLimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.Graphics.PdfRGBColor,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">Color of the pen.</param>
            <param name="width">Width of the pen's line.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">Width of the pen's line.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.ColorSpace.PdfComplexColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A new pen with the same properties.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfUnitConvertor">
            <summary>
            Class allowing to convert different unit metrics. Converting is 
            based on Graphics object DPI settings that is why for differ
            graphics settings must be created new instance. For example:
            printers often has 300 and greater dpi resolution, for compare
            default display screen dpi is 96.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBrush">
            <summary>
            Represents the abstract brush, which containing a basic functionality of a brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBrush.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfGradientBrush">
            <summary>
            Implements gradient brush capabilities.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGradientBrush.Background">
            <summary>
            Gets or sets the background color of the brush.
            </summary>
            <remarks>This value is optional. If null is assigned to it,
            the associated entry is removed from the appropriate dictionary.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGradientBrush.AntiAlias">
            <summary>
            Gets or sets a value indicating whether use anti aliasing algorithm.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGradientBrush.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLinearGradientBrush">
            <summary>
            Implements linear gradient brush by using PDF axial shading pattern.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="point1">The starting point of the gradient.</param>
            <param name="point2">The end point of the gradient.</param>
            <param name="color1">The starting color of the gradient.</param>
            <param name="color2">The end color of the gradient.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfLinearGradientMode)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rect">A RectangleF structure that specifies the bounds of the linear gradient. </param>
            <param name="color1">The starting color for the gradient.</param>
            <param name="color2">The ending color for the gradient.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rect">A RectangleF structure that specifies the bounds of the linear gradient.</param>
            <param name="color1">The starting color for the gradient.</param>
            <param name="color2">The ending color for the gradient.</param>
            <param name="angle">The angle, measured in degrees clockwise from the x-axis,
            of the gradient's orientation line.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.Blend">
            <summary>
            Gets or sets a PdfBlend that specifies positions
            and factors that define a custom falloff for the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.InterpolationColors">
            <summary>
            Gets or sets a ColorBlend that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.LinearColors">
            <summary>
            Gets or sets the starting and ending colors of the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.Rectangle">
            <summary>
            Gets a rectangular region that defines
            the boundaries of the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.Extend">
            <summary>
            Gets or sets the value indicating whether the gradient
            should extend starting and ending points.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLinearGradientBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfRadialGradientBrush">
            <summary>
            Represent radial gradient brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRadialGradientBrush.#ctor(System.Drawing.PointF,System.Single,System.Drawing.PointF,System.Single,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="centreStart">The start centre.</param>
            <param name="radiusStart">The start radius.</param>
            <param name="centreEnd">The end centre.</param>
            <param name="radiusEnd">The end radius.</param>
            <param name="colorStart">The start color.</param>
            <param name="colorEnd">The end color.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.Blend">
            <summary>
            Gets or sets a PdfBlend that specifies positions
            and factors that define a custom falloff for the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.InterpolationColors">
            <summary>
            Gets or sets a ColorBlend that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.LinearColors">
            <summary>
            Gets or sets the starting and ending colors of the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.Rectangle">
            <summary>
            Gets or sets the rectangle.
            </summary>
            <value>The rectangle.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.Extend">
            <summary>
            Gets or sets the value indicating whether the gradient
            should extend starting and ending points.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRadialGradientBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfSolidBrush">
            <summary>
            Represents a brush that fills any object with a solid colour.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSolidBrush.#ctor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSolidBrush.#ctor(Spire.Pdf.ColorSpace.PdfComplexColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">color</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfSolidBrush.Color">
            <summary>
            Gets or sets the color of the brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSolidBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTilingBrush">
            <summary>
            Implements a colored tiling brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The boundaries of the smallest brush cell.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.RectangleF,Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The boundaries of the smallest brush cell.</param>
            <param name="page">The Current Page Object.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size of the smallest brush cell.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.SizeF,Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size of the smallest brush cell.</param>
            <param name="page">The Current Page Object.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTilingBrush.Rectangle">
            <summary>
            Gets the boundary box of the smallest brush cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTilingBrush.Size">
            <summary>
            Gets the size of the smallest brush cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTilingBrush.Graphics">
            <summary>
            Gets Graphics context of the brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTilingBrush.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfArc">
            <summary>
            Represents an arc shape.
            </summary>
            <remarks>It ignores brush setting.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBezierCurve">
            <summary>
            Implements Bezier curve shape.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBezierCurve.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBezierCurve.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBezierCurve.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBezierCurve.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBezierCurve.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBezierCurve.FirstControlPoint">
            <summary>
            Gets or sets the first control point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBezierCurve.SecondControlPoint">
            <summary>
            Gets or sets the second control point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBezierCurve.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfEllipse">
            <summary>
            Describes an ellipse shape.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipse.RadiusX">
            <summary>
            Gets the radius X.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipse.RadiusY">
            <summary>
            Gets the radius Y.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipse.Center">
            <summary>
            Gets the center point.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfEllipsePart">
            <summary>
            The base class of arc and pie shapes.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipsePart.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipsePart.SweepAngle">
            <summary>
            Gets or sets the sweep angle.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLine">
            <summary>
            Represents a line shape.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLine.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLine.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLine.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLine.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLine.X1">
            <summary>
            Gets or sets the x coordinate of the start point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLine.Y1">
            <summary>
            Gets or sets the y coordinate of the start point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLine.X2">
            <summary>
            Gets or sets the x coordinate of the end point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLine.Y2">
            <summary>
            Gets or sets the y coordinate of the end point.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPath">
            <summary>
            Implements graphics path, which is a sequence of primitive graphics elements.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfFillMode)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfFillMode,System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfFillMode)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.PathPoints">
            <summary>
            Gets the path points.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.PathTypes">
            <summary>
            Gets the path point types.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.PointCount">
            <summary>
            Gets the point count.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.LastPoint">
            <summary>
            Gets the last point.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Adds an arc.
            </summary>
            <param name="rectangle">The boundaries of the arc.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds an arc.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds a bezier curve.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds a bezier curve.
            </summary>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddEllipse(System.Drawing.RectangleF)">
            <summary>
            Adds an ellipse.
            </summary>
            <param name="rectangle">The boundaries of the ellipse.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds an ellipse.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds a line.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds a line.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPath(Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Appends the path specified to this one.
            </summary>
            <param name="path">The path, which should be appended.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPath(System.Drawing.PointF[],System.Byte[])">
            <summary>
            Appends the path specified by the points and their types to this one.
            </summary>
            <param name="pathPoints">The points.</param>
            <param name="pathTypes">The path point types.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Appends the pie to this path.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Appends the pie to this path.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPolygon(System.Drawing.PointF[])">
            <summary>
            Append the closed polygon to this path.
            </summary>
            <param name="points">The points of the polygon.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddRectangle(System.Drawing.RectangleF)">
            <summary>
            Appends the rectangle to this path.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Appends the rectangle to this path.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.StartFigure">
            <summary>
            Starts a new figure.
            </summary>
            <remarks>The next added primitive will start a new figure.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.CloseFigure">
            <summary>
            Closes the last figure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.CloseAllFigures">
            <summary>
            Closes all non-closed figures.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.GetLastPoint">
            <summary>
            Gets the last point.
            </summary>
            <returns>The last point.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.GetRectangleF">
            <summary>
            Calc Point w/h
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.GetBound">
            <summary>
            get this path's bound.
            </summary>
            <returns>return this path's bound</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTemplate">
            <summary>
            Represents Pdf Template object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTemplate.m_origin">
            <summary>
            the origin location of the template
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.#ctor(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="annotation"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.#ctor(System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="isPdfAppearance">Indicates if the template is used for PdfAppearance.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Graphics">
            <summary>
            Gets graphics context of the template.
            </summary>
            <remarks>It will return null, if the template is read-only.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Size">
            <summary>
            Gets the size of the template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Width">
            <summary>
            Gets the width of the template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Height">
            <summary>
            Gets the height of the template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.ReadOnly">
            <summary>
            Gets a value indicating whether the template is read-only.
            </summary>
            <value><c>true</c> if the template is read-only; otherwise, <c>false</c>.</value>
            <remarks>Read-only templates does not expose graphics. They just return null.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.Reset(System.Drawing.SizeF)">
            <summary>
            Resets the template and sets the specified size.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.Reset">
            <summary>
            Resets an instance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPie">
            <summary>
            Represents a pie shape.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPolygon">
            <summary>
            Represents a set of points connected with lines, could be drawn and filled.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.#ctor(System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPolygon.Points">
            <summary>
            Gets or sets the points of the polygon.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPolygon.Count">
            <summary>
            Gets a number of the points in the polygon.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.AddPoint(System.Drawing.PointF)">
            <summary>
            Adds a point to the polygon.
            </summary>
            <param name="point">The last point of the polygon.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfRectangle">
            <summary>
            Represents a simple rectangle that could be drawn and/or filled.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfRectangleArea">
            <summary>
            Represents an area bound by a rectangle.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.X">
            <summary>
            Gets or sets the X co-ordinate of the upper-left corner of this the element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Y">
            <summary>
            Gets or sets the Y co-ordinate of the upper-left corner of this the element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Width">
            <summary>
            Gets or sets the width of this element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Height">
            <summary>
            Gets or sets the height of this element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Size">
            <summary>
            Gets or sets the size of this element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Bounds">
            <summary>
            Gets or sets bounds of this element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBitmap">
            <summary>
            Represents the bitmap images.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBitmap.m_Tag">
            <summary>
            When replacing the picture,use this property
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.ActiveFrame">
            <summary>
            Gets or sets the active frame of the bitmap.
            </summary>
            <value>The active frame index.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.FrameCount">
            <summary>
            Gets the number of frames in the bitmap.
            </summary>
            <value>The frame count.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.Mask">
            <summary>
            Gets or sets the mask of bitmap.
            </summary>
            <value>New PdfMask.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.Quality">
            <summary>
            Gets or sets the quality.
            The range is from 0 to 100, 100 is the best quality.
            </summary>
            <remarks>
            When the image is stored into PDF not as a mask,
            you may reduce its quality, which saves the disk space.
            </remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.Tag">
            <summary>
            When replacing the picture,use this property
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.#ctor(System.String)">
            <summary>
            Creates new PdfBitmap instance.
            </summary>
            <param name="path">The image path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.#ctor(System.IO.Stream)">
            <summary>
            Creates new PdfBitmap instance.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
             is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.CanSaveAsRawImageForIndexedFormat">
            <summary>
            define method "SaveAsRawImageForIndexedFormat" supported IndexedFormat
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.SaveAsRawImageForIndexedFormat">
            <summary>
            save indexed bitmap to raw image
            support PixelFormat: Format1bppIndexed Format4bppIndexed Format8bppIndexed
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.SetBit(System.Byte,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="index"></param>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.BitmapRgbToCmyk">
            <summary>
            rgb image to cmyk
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfColorMask">
            <summary>
            Represents the color mask for bitmaps.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfColorMask.StartColor">
            <summary>
            Gets or sets the start color.
            </summary>
            <value>The start color.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfColorMask.EndColor">
            <summary>
            Gets or sets the end color.
            </summary>
            <value>The end color.</value>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfColorMask.#ctor(Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Creates new PdfColorMask object.
            </summary>
            <param name="startColor">The start color.</param>
            <param name="endColor">The end color.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfImage">
            <summary>
            Represents the base class for images.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.PngDirectToJpeg">
            <summary>
            If True, png direct convert to Jpx and no mask.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.HorizontalResolution">
            <summary>
            Gets the horizontal resolution, in pixels per inch, of this Image. 
            </summary>
            <value>The horizontal resolution.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.VerticalResolution">
            <summary>
            Gets the vertical resolution, in pixels per inch, of this Image. 
            </summary>
            <value>The vertical resolution.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.PhysicalDimension">
            <summary>
            Returns the size of the image in points.
            </summary>
            <remarks>This property uses HorizontalResolution and VerticalResolution for calculating the size in points.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.ActiveFrame">
            <summary>
            Gets or sets the active frame of the image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.FrameCount">
            <summary>
            Gets the number of frames in the image.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromFile(System.String)">
            <summary>
            Creates PdfImage from a file.
            </summary>
            <param name="path">Path to a file.</param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromStream(System.IO.Stream)">
            <summary>
            Creates PdfImage from stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromImage(System.Drawing.Image)">
            <summary>
            Converts a  object into a PDF image.
            </summary>
            <param name="image">The image.</param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,Spire.Pdf.Graphics.PdfImageType,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Creates a new image instance from RTF text.
            </summary>
            <param name="rtf">RTF text data.</param>
            <param name="width">Width of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <param name="format">The text string format.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,Spire.Pdf.Graphics.PdfImageType)">
            <summary>
            Creates a new image instance from RTF text.
            </summary>
            <param name="rtf">RTF text data.</param>
            <param name="width">Width of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,System.Single,Spire.Pdf.Graphics.PdfImageType)">
            <summary>
            Creates a new image instance from RTF text.
            </summary>
            <param name="rtf">RTF text data.</param>
            <param name="width">Width of the image in points.</param>
            <param name="height">Height of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,System.Single,Spire.Pdf.Graphics.PdfImageType,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Creates a new image instance from RTF text.
            </summary>
            <param name="rtf">RTF text data.</param>
            <param name="width">Width of the image in points.</param>
            <param name="height">Height of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <param name="format">The text string format.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfImageMask">
            <summary>
            Represents the image mask object for bitmaps.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImageMask.Mask">
            <summary>
            Gets the image mask.
            </summary>
            <value>The image mask.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImageMask.SoftMask">
            <summary>
            Gets the mask type.
            </summary>
            <value><c>true</c> if soft mask; otherwise, hard mask <c>false</c>.</value>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImageMask.#ctor(Spire.Pdf.Graphics.PdfBitmap)">
            <summary>
            Creates new PdfImageMask object.
            </summary>
            <param name="imageMask">The image mask.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfMask">
            <summary>
            Base class for bitmap masking objects.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfMetafile">
            <summary>
            Class representing metafiles.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Utils.IsPUAUnicode(System.Char)">
            <summary>
            Check whether is unicode in private use areas.
            </summary>
            <param name="text">The text string.</param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.BitFile.blocks_">
            note this also indicates gif format BITFile. *
        </member>
        <member name="M:Spire.Pdf.BitFile.#ctor(System.IO.Stream,System.Boolean)">
             @param output destination for output data
             @param blocks GIF LZW requires block counts for output data
            
        </member>
        <member name="F:Spire.Pdf.LZWStringTable.RES_CODES">
            codesize + Reserved Codes 
        </member>
        <member name="F:Spire.Pdf.LZWStringTable.strLen_">
             each entry corresponds to a code and contains the length of data
             that the code expands to when decoded.
            
        </member>
        <member name="M:Spire.Pdf.LZWStringTable.#ctor">
             Constructor allocate memory for string store data
            
        </member>
        <member name="M:Spire.Pdf.LZWStringTable.AddCharString(System.Int16,System.Byte)">
             @param index value of -1 indicates no predecessor [used in initialisation]
             @param b the byte [character] to add to the string store which follows
             the predecessor string specified the index.
             @return 0xFFFF if no space in table left for addition of predecesor
             index and byte b. Else return the code allocated for combination index + b.
            
        </member>
        <member name="M:Spire.Pdf.LZWStringTable.FindCharString(System.Int16,System.Byte)">
             @param index index to prefix string
             @param b the character that follws the index prefix
             @return b if param index is HASH_FREE. Else return the code
             for this prefix and byte successor
            
        </member>
        <member name="M:Spire.Pdf.LZWStringTable.ClearTable(System.Int32)">
             @param codesize the size of code to be preallocated for the
             string store.
            
        </member>
        <member name="M:Spire.Pdf.LZWStringTable.ExpandCode(System.Byte[],System.Int32,System.Int16,System.Int32)">
             If expanded data doesnt fit into array only what will fit is written
             to buf and the return value indicates how much of the expanded code has
             been written to the buf. The next call to ExpandCode() should be with 
             the same code and have the skip parameter set the negated value of the 
             previous return. Succesive negative return values should be negated and
             added together for next skip parameter value with same code.
            
             @param buf buffer to place expanded data into
             @param offset offset to place expanded data
             @param code the code to expand to the byte array it represents.
             PRECONDITION This code must allready be in the LZSS
             @param skipHead is the number of bytes at the start of the expanded code to 
             be skipped before data is written to buf. It is possible that skipHead is
             equal to codeLen.
             @return the length of data expanded into buf. If the expanded code is longer
             than space left in buf then the value returned is a negative number which when
             negated is equal to the number of bytes that were used of the code being expanded.
             This negative value also indicates the buffer is full.
            
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.codeSize_">
            base underlying code size of data being compressed 8 for TIFF, 1 to 8 for GIF *
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.clearCode_">
            reserved clear code based on code size *
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.endOfInfo_">
            reserved end of data code based on code size *
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.numBits_">
            current number bits output for each code *
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.limit_">
            limit at which current number of bits code size has to be increased *
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.prefix_">
            the prefix code which represents the predecessor string to current input point *
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.bf_">
            output destination for bit codes *
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.lzss_">
            general purpose LZW string table *
        </member>
        <member name="F:Spire.Pdf.LZWCompressor.tiffFudge_">
            modify the limits of the code values in LZW encoding due to TIFF bug / feature *
        </member>
        <member name="M:Spire.Pdf.LZWCompressor.#ctor(System.IO.Stream,System.Int32,System.Boolean)">
             @param outp destination for compressed data
             @param codeSize the initial code size for the LZW compressor
             @param TIFF flag indicating that TIFF lzw fudge needs to be applied
             @exception IOException if underlying output stream error
            
        </member>
        <member name="M:Spire.Pdf.LZWCompressor.Compress(System.Byte[],System.Int32,System.Int32)">
             @param buf data to be compressed to output stream
             @exception IOException if underlying output stream error
            
        </member>
        <member name="M:Spire.Pdf.LZWCompressor.Flush">
             Indicate to compressor that no more data to go so write outp
             any remaining buffered data.
            
             @exception IOException if underlying output stream error
            
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.m_loadHtmlTimeout">
            <summary>
            load URL time out
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.m_IsWaiting">
            <summary>
            load URL whether Waiting 
            </summary>
        </member>
        <!-- 对于成员“F:Spire.Pdf.HtmlConverter.HtmlConverter.m_HtmlType”忽略有格式错误的 XML 注释 -->
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.m_LoadComplete">
            <summary>
            WebBrowser load Complete
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.m_PageSettings">
            <summary>
            Gets or sets page settings of the section.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.start">
            <summary>
            Get html page  start time
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.IsWaiting">
            <summary>
            load URL whether Waiting
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.WaitingTime">
             <summary>
            webBrowser load html  whether  Waiting time in milliseconds.
             </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.HtmlType">
            <summary>
            load ScouceCode or URL
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.LoadComplete">
            <summary>
            WebBrowser load Complete
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.PageSettings">
            <summary>
            Gets or sets page settings of the section.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.Clip">
            <summary>
            Options of converting html to pdf
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Clip.None">
            <summary>
            Not clip
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Clip.Width">
            <summary>
            Clips width
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Clip.Height">
            <summary>
            Clips height
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Clip.Both">
            <summary>
            Clips width and height
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.m_loadHtmlTimeout">
            <summary>
            default 30 s
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.m_IsWaiting">
            <summary>
            load URL whether Waiting
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.m_HtmlType">
            <summary>
            load ScouceCode or URL
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.m_LoadComplete">
            <summary>
            WebBrowser load Complete
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.Layout">
            <summary>
            Gets or sets layout type of the element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.FitToPage">
            <summary>
            If html view is larger than pdf page, zooms out it to fit pdf page.
            But if html view is smaller than, will not zoom in it.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.FitToHtml">
            <summary>
            If html view is larger than page, resize pdf page to fit html view.
            But if html view is smaller than, will not resize pdf page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.TrimPage">
            <summary>
            If html view is smaller than page, trim pdf page to fit html view.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.LoadHtmlTimeout">
            <summary>
            The maximum time in milliseconds to wait the completion of loading html.
            Default is 30000.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.IsWaiting">
             <summary>
            webBrowser load html  whether  Waiting
             </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.WaitingTime">
             <summary>
            webBrowser load html  whether  Waiting time  in milliseconds.
             </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.HtmlType">
            <summary>
            load ScouceCode or URL
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.LoadComplete">
            <summary>
            WebBrowser load Complete
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.LoadHtmlType">
            <summary>
            load from  content type
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.LoadHtmlType.URL">
            <summary>
            load from ulr or file
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.LoadHtmlType.SourceCode">
            <summary>
            load html SourceCode
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Clip.None">
            None -> 0
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Clip.Width">
            Width -> 1
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Clip.Height">
            Height -> 2
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Clip.Both">
            Both -> 4
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Margins.Left">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Margins.Top">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Margins.Right">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Margins.Bottom">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.InitViewSize">
            Size
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.PageSize">
            Size
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.PageMargins">
            Margins
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.Layout">
            PdfLayoutType
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.FitToPage">
            Clip
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.FitToHtml">
            Clip
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.TrimPage">
            Clip
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.LoadHtmlTimeout">
            int
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.FRect.Left">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.FRect.Top">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.FRect.Width">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.FRect.Height">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.PdfLayoutHTMLResult.Bounds">
            FRect
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.PdfLayoutHTMLResult.Page">
            int
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.PdfLayoutHTMLResult.HTMLViewBounds">
            FRect
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Proxy.pLogInfoMethod">
            <summary>
            Pointer to DebugLog.CLogInfo, C module uses it to write log message.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Proxy.hLib">
            <summary>
            Pointer to HTMLConverter.dll
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Proxy.ConvertToHTMLMethod">
            <summary>
            Pointer to ConvertToHTML method.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Proxy.dllPath">
            <summary>
            Path of dll folder, which contains HTMLConverter.dll
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.Qt.HtmlConverter">
            <summary>
            Convert HTML to PDF with plugin. 
            <para>For more details, please check https://www.e-iceblue.com/Tutorials/Spire.PDF/Spire.PDF-Program-Guide/Convert-HTML-to-PDF-with-New-Plugin.html </para>
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.PluginPath">
            <summary>
            Sets the path of the folder which cantains the HTMLConverter.dll
            and other dll files required for conversion.
            </summary>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.String)">
             <summary>
             Convert an html page to a pdf file. The Qt html engine plugin is required.
             During conversion, JavaScript is enabled, default timeout is 30 seconds.
             The page size of output pdf file is A4 and margin is 90 (left-right) and 72 (top-bottom).
             </summary>
             <param name="url">Url address of the html page.</param>
             <param name="fileName">The output pdf file name.</param>
            [Obsolete("This method may be removed in the future.")]
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.IO.Stream)">
             <summary>
             Convert an html page to a pdf file. The Qt html engine plugin is required.
             During conversion, JavaScript is enabled, default timeout is 30 seconds.
             The page size of output pdf file is A4 and margin is 90 (left-right) and 72 (top-bottom).
             </summary>
             <param name="url">Url address of the html page.</param>
             <param name="stream">The output pdf Stream.</param>
            [Obsolete("This method may be removed in the future.")]
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.String,Spire.Pdf.HtmlConverter.LoadHtmlType)">
            <summary>
            Convert an html page to a pdf file. The Qt html engine plugin is required.
            During conversion, JavaScript is enabled, default timeout is 30 seconds.
            The page size of output pdf file is A4 and margin is 90 (left-right) and 72 (top-bottom).
            </summary>
            <param name="url">Url address of the html page.</param>
            <param name="fileName">The output pdf file name.</param>
            <param name="urlHtml">the load htmlcode or url </param>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.IO.Stream,Spire.Pdf.HtmlConverter.LoadHtmlType)">
            <summary>
            Convert an html page to a pdf stream. The Qt html engine plugin is required.
            During conversion, JavaScript is enabled, default timeout is 30 seconds.
            The page size of output pdf file is A4 and margin is 90 (left-right) and 72 (top-bottom).
            </summary>
            <param name="url">Url address of the html page.</param>
            <param name="stream">The output pdf stream.</param>
            <param name="urlHtml">the load htmlcode or url </param>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.String,System.Boolean,System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins)">
             <summary>
             Convert an html page to a pdf file. The Qt html engine plugin is required.
             </summary>
             <param name="url">Url address of the html page.</param>
             <param name="fileName">The output pdf file name.</param>
             <param name="enableJavaScript">Indicates whether enable JavaScript.</param>
             <param name="timeout">The timeout of loading html.</param>
             <param name="pageSize">The page size of output pdf file.</param>
             <param name="margins">The margins of output pdf file.</param>
            [Obsolete("This method may be removed in the future.")]
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.IO.Stream,System.Boolean,System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins)">
             <summary>
             Convert an html page to a pdf stream. The Qt html engine plugin is required.
             </summary>
             <param name="url">Url address of the html page.</param>
             <param name="stream">The output pdf stream.</param>
             <param name="enableJavaScript">Indicates whether enable JavaScript.</param>
             <param name="timeout">The timeout of loading html.</param>
             <param name="pageSize">The page size of output pdf file.</param>
             <param name="margins">The margins of output pdf file.</param>
            [Obsolete("This method may be removed in the future.")]
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.init(System.String,System.Boolean,System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins)">
            <summary>
            init HTML2PDFOption param
            </summary>
            <param name="url">Url address of the html page.</param>
            <param name="enableJavaScript">Indicates whether enable JavaScript.</param>
            <param name="timeout">The timeout of loading html.</param>
            <param name="pageSize">The page size of output pdf file.</param>
            <param name="margins">The margins of output pdf file.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.String,System.Boolean,System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.HtmlConverter.LoadHtmlType)">
            <summary>
             Convert an html page to a pdf file. The Qt html engine plugin is required.
            </summary>
            <param name="url">Url address of the html page.</param>
            <param name="fileName">The output pdf file name.</param>
            <param name="enableJavaScript">Indicates whether enable JavaScript.</param>
            <param name="timeout">The timeout of loading html.</param>
            <param name="pageSize">The page size of output pdf file.</param>
            <param name="margins">The margins of output pdf file.</param>
            <param name="urlHtml">url or htmlcontent</param>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.IO.Stream,System.Boolean,System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.HtmlConverter.LoadHtmlType)">
            <summary>
            Convert an html page to a pdf file. The Qt html engine plugin is required.
            </summary>
            <param name="url">Url address of the html page.</param>
            <param name="stream">The output pdf stream.</param>
            <param name="enableJavaScript">Indicates whether enable JavaScript.</param>
            <param name="timeout">The timeout of loading html.</param>
            <param name="pageSize">The page size of output pdf file.</param>
            <param name="margins">The margins of output pdf file.</param>
            <param name="urlHtml">url or htmlcontent</param>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary">
            <summary>
            Support functions about Qt plugin library.
            </summary>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.LoadLibrary(System.String)">
            <summary>
            Load plugin library from plugin directory.
            </summary>
            <param name="pluginDirectory">The plugin directory.</param>
            <returns>The plugin library ptr.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.FreeLibrary(System.IntPtr)">
            <summary>
            Free plugin library.
            </summary>
            <param name="libraryPtr">The plugin library ptr.</param>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.GetMethod``1(System.IntPtr,System.String)">
            <summary>
            Get method delegate from plugin library.
            </summary>
            <typeparam name="T">The method delegate type.</typeparam>
            <param name="libraryPtr">The plugin library ptr.</param>
            <param name="method">The method name. (avoid obfuscated code error)</param>
            <returns>The method delegate.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.GetDefaultPluginDirectory">
            <summary>
            Get default plugin directory.
            </summary>
            <returns>The default plugin directory.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.GetAbsolutePath(System.String)">
            <summary>
            Get the absolute path.
            </summary>
            <param name="path">The path.</param>
            <returns>The absolute path.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.GenerateTempFileAbsolutePath(System.String)">
            <summary>
            Generate temp file absolute path.
            </summary>
            <param name="tempFileName">The temp file name.</param>
            <returns>The temp file absolute path.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.GetPlatformInstance">
            <summary>
            Get plugin library helper on current platform.
            </summary>
            <returns>The plugin library helper.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.Load(System.String)">
            <summary>
            Load library.
            </summary>
            <param name="fullLibraryFileName">The full library file path.</param>
            <returns>The plugin library ptr.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.Free(System.IntPtr)">
            <summary>
            Free library.
            </summary>
            <param name="libraryPtr">The plugin library ptr.</param>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.GetMethod(System.IntPtr,System.String)">
            <summary>
            Get method ptr.
            </summary>
            <param name="libraryPtr">The plugin library ptr.</param>
            <param name="method">The method name.</param>
            <returns>The method ptr.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.GetError">
            <summary>
            Get error.
            </summary>
            <returns>The error.</returns>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.QtPluginLibrary.PrepareFullLibraryFileName(System.String,System.String)">
            <summary>
            Prepare full library file name.
            </summary>
            <param name="libraryDirectory">The library directory.</param>
            <param name="libraryFileName">The library file name,not include extensions.</param>
            <returns>The full library file name.</returns>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.Qt.QtWindowsPluginLibrary">
            <summary>
            Support functions about qt plugin library on windows.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.Qt.QtLinuxPluginLibrary">
            <summary>
            Support functions about qt plugin library on linux.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.Qt.QtMacxPluginLibrary">
            <summary>
            Support functions about qt plugin library on unix-like.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams">
            <summary>
            Represents the layout parameters.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Page">
            <summary>
            Gets or sets the starting layout page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Bounds">
            <summary>
            Gets or sets the lay outing bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.VerticalOffsets">
            <summary>
            Gets or sets the vertical offsets.
            </summary>
            <value>The vertical offsets.</value>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Format">
            <summary>
            Gets or sets the lay outing settings.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlToPdf.HtmlTags">
            <summary>
            HTML tags
            </summary>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.ForeachTags(System.String,System.Drawing.PointF,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            parsing html tags
            </summary>
            <param name="s">html content</param>
            <param name="point"></param>
            <param name="fontBase">drawing font</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.ProcessHtml(System.String@,System.Int32,System.Drawing.PointF,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            parsing html tags
            </summary>
            <param name="s">html content</param>
            <param name="index"></param>
            <param name="point"></param>
            <param name="fontBase"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.SetHtmlTagsType(Spire.Pdf.HtmlToPdf.HtmlTags,System.String)">
            <summary>
            set html type
            </summary>
            <param name="htmlTags"></param>
            <param name="type"></param>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.SetHtmlTagsFont(Spire.Pdf.HtmlToPdf.HtmlTags)">
            <summary>
            set text font
            </summary>
            <param name="htmlTags"></param>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.SetFontStyle(Spire.Pdf.HtmlToPdf.HtmlTags,System.Single,System.Drawing.FontStyle)">
            <summary>
            set font style
            </summary>
            <param name="htmlTags"></param>
            <param name="size"></param>
            <param name="style"></param>
        </member>
        <member name="T:Spire.Pdf.HtmlToPdf.HtmlToPdfResult">
            <summary>
            Represents the result of html to pdf conversion.
            </summary>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlToPdfResult.#ctor(System.Drawing.Image[],System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="image">The image.</param>
            <param name="pageBreaks">The page breaks.</param>
            <param name="anchors">The anchors.</param>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfResult.RenderedImage">
            <summary>
            Gets the rendered image.
            </summary>
            <value>The rendered image.</value>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlToPdfResult.Render(Spire.Pdf.PdfPageBase,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the HtmlToPdfResults on to the document.
            </summary>
            <param name="page">The Pdf Page.</param>
            <param name="format">The Metafile layout format.</param>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlToPdfResult.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Spire.Pdf.IO.PrimitiveStatus">
            <summary>
            Specfies the status of the IPdfPrmitive.
            </summary>
        </member>
        <member name="F:Spire.Pdf.IO.CrossTable.m_isCrossReferenceStream">
            <summary>
            The information of cross-reference store in a cross-referebnce stream
            </summary>
        </member>
        <member name="F:Spire.Pdf.IO.CrossTable.m_reProcessObjectInfo">
            <summary>
            The reprocess object infomation
            </summary>
        </member>
        <!-- 对于成员“F:Spire.Pdf.IO.CrossTable.m_initialNumberOfSubsection”忽略有格式错误的 XML 注释 -->
        <member name="F:Spire.Pdf.IO.CrossTable.m_loadState">
            <summary>
            The current load state
            </summary>
        </member>
        <member name="F:Spire.Pdf.IO.CrossTable.m_highestObjectNumber">
            <summary>
            The highest object number in the document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.IO.CrossTable.LoadStates">
            <summary>
            The load state
            </summary>
        </member>
        <member name="P:Spire.Pdf.IO.CrossTable.ReProcessObjectInfo">
            <summary>
            Gets the ReProcess Object infomation
            </summary>
        </member>
        <member name="M:Spire.Pdf.IO.CrossTable.ParseCrossStreamOfHybridReference(System.Int32)">
            <summary>
            Parse the cross reference stream in hybrid reference
            </summary>
            <param name="XRefStmPosition">the position of the XRefstm object</param>
            <param name="m_objects">the object</param>
        </member>
        <member name="M:Spire.Pdf.IO.CrossTable.CheckCrossReferenceStreamEntries">
            <summary>
            Check whether the entry of cross reference stream is in correct place  
            </summary>
            <returns>if correct return true ,otherwise false</returns>
        </member>
        <member name="M:Spire.Pdf.IO.CrossTable.CheckCrossReferenceTableEntries">
            <summary>
            Check whether the entry of cross reference table is in correct place  
            </summary>
            <returns>If correct return true ,otherwise false</returns>
        </member>
        <member name="M:Spire.Pdf.IO.CrossTable.CheckCrossReferenceEntries">
            <summary>
            Check whether the entry`s offset that in cross reference table or cross reference stream is
            in correct place
            </summary>
            <returns>If correct return true ,otherwise false</returns>
        </member>
        <member name="M:Spire.Pdf.IO.CrossTable.GetObject(Spire.Pdf.IO.CrossTable.ObjectInformation,System.Int64)">
            <summary>
            Get object.
            </summary>
            <param name="oi">The object information</param>
            <param name="objectNumber">The object number</param>
            <returns>The object</returns>
        </member>
        <member name="M:Spire.Pdf.IO.CrossTable.ReParseOject(System.Int64)">
            <summary>
            Reparse object
            </summary>
            <param name="objectNumber">The object number</param>
            <returns>The object</returns>
        </member>
        <member name="M:Spire.Pdf.IO.PdfCrossTable.GetobjNumbersStack">
            <summary>
            Get the current object number stack
            </summary>
            <returns>The current object number stack</returns>
        </member>
        <member name="M:Spire.Pdf.IO.PdfCrossTable.GetPdfReference">
            <summary>
            Get the reference.
            </summary>
            <returns>The reference</returns>
        </member>
        <member name="M:Spire.Pdf.IO.PdfCrossTable.AddDocumentInfo">
            <summary>
            add the document info to the pdfObjects
            </summary>
        </member>
        <member name="M:Spire.Pdf.IO.PdfLexer.FixedUnicodeString">
            <summary>
            Fixed TokenType.UnicodeString mismatch.
            </summary>
        </member>
        <member name="F:Spire.Pdf.IO.PdfMainObjectCollection.m_objectIndexCollection">
            <summary>
            The collection of index objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.IO.PdfMainObjectCollection.AddObjectIndex(Spire.Pdf.Interfaces.IPdfPrimitive,System.Int32)">
            <summary>
            Add object index.
            </summary>
            <param name="element">The element</param>
            <param name="index">The index</param>
        </member>
        <member name="P:Spire.Pdf.IO.PdfParser.IntegerQueue">
            <summary>
            Get Holds all integers that have been read ahead.
            </summary>
        </member>
        <member name="M:Spire.Pdf.IO.PdfParser.CheckIndirectObjectPosition(System.Int64,System.Int64)">
            <summary>
            Check whether the indirect object`s position in file are same as the offset
            </summary>
            <param name="offset">The indirect object`offset</param>
            <param name="objNum">The object number</param>
            <returns>If correct return true ,otherwise return false</returns>
        </member>
        <member name="M:Spire.Pdf.IO.PdfParser.ParseXRefStm">
            <summary>
            Get the stream of the XRefStm object
            </summary>
            <returns>a stream</returns>
        </member>
        <member name="M:Spire.Pdf.IO.PdfReader.Reset">
            <summary>
            Reset the fields value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.LicenseProtector.MaxFreeConvertPages">
            <summary>
            Max free convert pages.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoType.CT_TYPE1">
            <summary>
            Retrieves character type info
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoType.CT_TYPE2">
            <summary>
            Retrieves bi-directional layout info
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoType.CT_TYPE3">
            <summary>
            Retrieves text processing info
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_UPPER">
            <summary>
            Uppercase
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_LOWER">
            <summary>
            Lowercase
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_DIGIT">
            <summary>
            Decimal digits
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_SPACE">
            <summary>
            Space characters
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_PUNCT">
            <summary>
            Punctuation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_CNTRL">
            <summary>
            Control characters
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_BLANK">
            <summary>
            Blank characters
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_XDIGIT">
            <summary>
            Hexadecimal digits
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_ALPHA">
            <summary>
            Any linguistic character: alphabetic, syllabary, or ideographic
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_LEFTTORIGHT">
            <summary>
            Left to right
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_RIGHTTOLEFT">
            <summary>
            Right to left
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_EUROPENUMBER">
            <summary>
            European number, European digit
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_EUROPESEPARATOR">
            <summary>
            European numeric separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_EUROPETERMINATOR">
            <summary>
            European numeric terminator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_ARABICNUMBER">
            <summary>
            Arabic number
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_COMMONSEPARATOR">
            <summary>
            Common numeric separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_BLOCKSEPARATOR">
            <summary>
            Block separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_SEGMENTSEPARATOR">
            <summary>
            Segment separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_WHITESPACE">
            <summary>
            White space
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_OTHERNEUTRAL">
            <summary>
            Other neutrals
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_NOTAPPLICABLE">
            <summary>
            No implicit directionality (for example, control codes)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_DIACRITIC">
            <summary>
            Diacritic nonspacing mark
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_VOWELMARK">
            <summary>
            Vowel nonspacing mark
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_SYMBOL">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_KATAKANA">
            <summary>
            Katakana character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_HIRAGANA">
            <summary>
            Hiragana character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_HALFWIDTH">
            <summary>
            Half-width (narrow) character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_FULLWIDTH">
            <summary>
            Full-width (wide) character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_IDEOGRAPH">
            <summary>
            Ideographic character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_KASHIDA">
            <summary>
            Arabic Kashida character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_LEXICAL">
            <summary>
            Punctuation which is counted as part of the word
            (Kashida, hyphen, feminine/masculine ordinal indicators, equal sign, and so forth)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_ALPHA">
            <summary>
            All linguistic characters (alphabetical, syllabary, and ideographic)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_NOTAPPLICABLE">
            <summary>
            Not applicable
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.FormatMessageFlags">
            <summary>
            Native enum.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETMITERLIMIT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.EMR_SETMITERLIMIT.eMiterLimit">
            <summary>
            New miter limit.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_MODIFYWORLDTRANSFORM">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.XFORM">
            <summary>
            The XFORM structure specifies a world-space to page-space transformation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eM11">
            <summary>
            Specifies scaling/rotation/reflection
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eM12">
            <summary>
            Specified shear/rotation
            </summary>   
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eM21">
            <summary>
            Specified shear/rotation
            </summary>   
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eM22">
            <summary>
            Specifies scaling/rotation/reflection
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eDx">
            <summary>
            Specifies the horizontal translation component, in logical units.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eDy">
            <summary>
            Specifies the vertical translation component, in logical units.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_EXTCREATEPEN">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EXTLOGPEN">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Native.POINT.#ctor(System.Int32)">
            <summary>
            Point creation from lParam's data.
            </summary>
            <param name="lParam">lParam's data for initialing point structure.</param>
        </member>
        <member name="M:Spire.Pdf.Native.POINT.op_Implicit(Spire.Pdf.Native.POINT)~System.Drawing.Point">
            <summary>
            Performs an implicit conversion from  to <see cref="T:System.Drawing.Point"/>.
            </summary>
            <param name="p">The p.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Spire.Pdf.Native.POINT.op_Implicit(Spire.Pdf.Native.POINT)~System.Drawing.PointF">
            <summary>
            Performs an implicit conversion from  to <see cref="T:System.Drawing.PointF"/>.
            </summary>
            <param name="p">The p.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Spire.Pdf.Native.POINT.op_Implicit(System.Drawing.Point)~Spire.Pdf.Native.POINT">
            <summary>
            Performs an implicit conversion from  to <see cref="T:Spire.Pdf.Native.POINT"/>.
            </summary>
            <param name="p">The p.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Spire.Pdf.Native.LOGBRUSH32">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_CREATEBRUSHINDIRECT">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SELECTCLIPPATH">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.ABC">
            <summary>
            ABC structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.ColorDataEx">
            <summary>
            Structure for 32 bit images saving.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorDataEx.Blue">
            <summary>
            Value of Blue chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorDataEx.Green">
            <summary>
            Value of Green chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorDataEx.Red">
            <summary>
            Value of Red chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorDataEx.Alpha">
            <summary>
            Value of Alpha chanel.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.ColorData">
            <summary>
            Structure for 24 bit images saving.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData.Blue">
            <summary>
            Value of Blue chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData.Green">
            <summary>
            Value of Green chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData.Red">
            <summary>
            Value of Red chanel.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.ColorData16">
            <summary>
            Structure for 24 bit images saving.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData16.Blue">
            <summary>
            Value of Blue chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData16.Green">
            <summary>
            Value of Green chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData16.Red">
            <summary>
            Value of Red chanel.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_POLYPOLYLINE16">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_POLYPOLYLINE">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETVIEWPORTEXTEX">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETVIEWPORTORGEX">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SCALEVIEWPORTEXTEX">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_LINETO">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_POLYLINE16">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_POLYLINE">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_ALPHABLEND">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_OFFSETCLIPRGN">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_EXCLUDECLIPRECT">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETARCDIRECTION">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_FILLRGN">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.RGNDATA">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.RGNDATAHEADER">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_INVERTRGN">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_EXTSELECTCLIPRGN">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETTEXTCOLOR">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETWORLDTRANSFORM">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_CREATEPEN">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.LOGPEN">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_ANGLEARC">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_RECTANGLE">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_ROUNDRECT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_ARC">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_FILLPATH">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.RGBQUAD">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.BITMAPINFOHEADER">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.BITMAPINFO">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.BITMAP">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_STRETCHDIBITS">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_BITBLT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_STRETCHBLT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_MASKBLT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.LOGFONT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PageAddedEventHandler">
            <summary>
            Represents the  method that executes on a PdfNewDocument when a new page is created.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">A  that contains the event data.</param>
        </member>
        <member name="T:Spire.Pdf.PageAddedEventArgs">
            <summary>
            Provides data for PageAdded event.
            </summary>
            <remarks>
            This event raised on adding the pages. 
            </remarks> 
        </member>
        <member name="P:Spire.Pdf.PageAddedEventArgs.Page">
            <summary>
            Gets the newly added page.
            </summary>
            <value>a  object representing the page which is added in the document.</value>
        </member>
        <member name="M:Spire.Pdf.PageAddedEventArgs.#ctor(Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">a  object representing the page which is added in the document.</param>
        </member>
        <member name="T:Spire.Pdf.PdfDocumentTemplate">
            <summary>
            Encapsulates a page template for all the pages in the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Left">
            <summary>
            Gets or sets a left page template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Top">
            <summary>
            Gets or sets a top page template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Right">
            <summary>
            Gets or sets a right page template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Bottom">
            <summary>
            Gets or sets a bottom page template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.EvenLeft">
            <summary>
            Gets or sets a left page template using on the even pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.EvenTop">
            <summary>
            Gets or sets a top page template using on the even pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.EvenRight">
            <summary>
            Gets or sets a right page template using on the even pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.EvenBottom">
            <summary>
            Gets or sets a bottom page template using on the even pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.OddLeft">
            <summary>
            Gets or sets a left page template using on the odd pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.OddTop">
            <summary>
            Gets or sets a top page template using on the odd pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.OddRight">
            <summary>
            Gets or sets a right page template using on the odd pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.OddBottom">
            <summary>
            Gets or sets a bottom page template using on the odd pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Stamps">
            <summary>
            Gets a collection of stamp elements.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentTemplate.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageBase">
            <summary>
            The base class for all pages.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageBase.m_pagePieceInfo">
            <summary>
            The page pieces info.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.CropBox">
            <summary>
            Returns the visible region of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.BleedBox">
            <summary>
            Returns page region after clipping.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.MediaBox">
            <summary>
            Returns page region mediabox.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.TrimBox">
            <summary>
            Returns page region after trimming.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.ArtBox">
            <summary>
            Returns page region containing content.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.AnnotationsWidget">
            <summary>
            Gets the field collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.PagePieceInfo">
            <summary>
            Get the page piece info.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.BackgroundColor">
            <summary>
            Gets or sets page's background color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.BackgroundRegion">
            <summary>
            The position and size of the background 
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.ImagesInfo">
            <summary>
            Gets the information about the extracted image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.Canvas">
            <summary>
            Gets the graphics of the .
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.AddStreamToContents(Spire.Pdf.Primitives.PdfArray,Spire.Pdf.Core.PdfStream,System.Boolean,Spire.Pdf.Core.PdfStream)">
            <summary>
            Add content stream to page contents.
            </summary>
            <param name="contents">The page contents.</param>
            <param name="contentStream">The content stream.</param>
            <param name="isBackground">The flag which specify the content stream is background content.</param>
            <param name="contentOpacityStream">The stream which contain content opacity operators.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.CreateGraphics(System.Boolean,System.Boolean,Spire.Pdf.Graphics.PdfCanvas@)">
            <summary>
            Create Graphics context.
            </summary>
            <param name="clipPageTemplates"></param>
            <param name="isBackground">The flag which specify the content stream is background content.</param>
            <param name="contentOpacity">The graphics which can set content opacity.</param>
            <returns>The Graphics context.</returns>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.Section">
            <summary>
            Gets the parent section of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.DefaultLayerIndex">
            <summary>
            Gets or sets index of the default layer.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.Size">
            <summary>
            Gets the size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.ActualSize">
            <summary>
            Gets the actual size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.BackgroundImage">
            <summary>
            Gets or sets page's background image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.PageLabel">
            <summary>
            Get the page label.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.IsBlank">
            <summary>
            Returns page is blank flag for page's content.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.GetClientSize">
            <summary>
            Returns a page size reduced by page margins and page template dimensions.
            </summary>
            <remarks>It's the actual size of the page where some output can be performed.</remarks>
            <returns>Returns a page size reduced by page margins and page template dimensions.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ReplaceImage(System.Int32,Spire.Pdf.Graphics.PdfImage)">
            <summary>
            Replace the Image at index's Position.
            </summary>
            <param name="imageIndex">The index of original image.</param>
            <param name="image">The new replace image.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ReplaceImage(System.Drawing.Image,Spire.Pdf.Graphics.PdfImage)">
            <summary>
            Replace the Image through the original image.   
            </summary>
            <param name="originalImage">The original image</param>
            <param name="image">The New Replace image</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.IsImageDictionary(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Whether it is a image dictionary.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The dictionary is an image or not.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.UsedOnCurrentPage(Spire.Pdf.Primitives.PdfName)">
            <summary>
            Detemine whether the image in resource dictionary is used on current page
            </summary>
            <param name="resourceImgName">the resource image name</param>
            <returns>if be used return true or false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.CreateTemplate">
            <summary>
            Creates a template from page content and all annotation appearances.
            </summary>
            <returns>The created template.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.FindText(System.String,System.Boolean)">
            <summary>
            Find text 
            </summary>
            <param name="searchPatternText"> The text intends to search. </param>
            <param name="isSearchWholeWord">
            Indicate the expected result is the whole word or not, which means, if it is true, only the word is exactly the same with the 
            searching word will be found;if it is false, any word including the searching word will be found. For instance,the text is "is this a pen?" 
            and the target is "is", if true, one result will be returned; if false, two results will be returned.
            </param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.FindText(System.String)">
            <summary>
            Find text
            </summary>
            <param name="searchPatternText">string searchPatternText</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.FindText(System.String,System.Boolean,System.Boolean)">
            <summary>
            Find text
            </summary>
            <param name="searchPatternText"></param>
            <param name="isSearchWholeWord"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.PdfPageBase.FindText(System.String,Spire.Pdf.General.Find.TextFindParameter)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.PdfPageBase.FindText(System.String,Spire.Pdf.General.Find.TextFindParameter,Spire.Pdf.Texts.PdfTextFindOptions)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.PdfPageBase.FindText(System.Drawing.RectangleF,System.String,Spire.Pdf.General.Find.TextFindParameter)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Pdf.PdfPageBase.FindText(System.String,System.Boolean,Spire.Pdf.General.Find.TextFindParameter)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Pdf.PdfPageBase.FindAllText">
            <summary>
            Find all text and position.
            </summary>
            <returns>All text find in the page.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractText">
            <summary>
            Extracts text from the Page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractText(Spire.Pdf.Exporting.Text.SimpleTextExtractionStrategy)">
            <summary>
            Extracts text from the given PDF Page by SimpleTextExtractionStrategy.
            </summary>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractText(System.Drawing.RectangleF)">
            <summary>
            Extracts text in the range of rectangle from the given PDF Page.
            The unit is Point,1/72 inch default.
            the coordinate origin is top left corner of the page.
            </summary>
            <param name="rectangleF">Provide a rangle to extract text.</param>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractText(System.Drawing.RectangleF,Spire.Pdf.Exporting.Text.SimpleTextExtractionStrategy)">
            <summary>
            Extracts text in the range of rectangle from the given PDF page by SimpleTextExtractionStrategy.
            the coordinate origin is top left corner of the page.
            </summary>
            <param name="rectangleF">Provide a rangle to extract text.</param>
            <param name="sim">Provide simple text extraction policy</param>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractText(System.Boolean)">
            <summary>
            Extracts text from the given PDF Page.
            </summary>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractText(Spire.Pdf.Texts.PdfTextExtractOptions)">
            <summary>
            Extracts text from the given PDF Page.
            </summary>
            <param name="options">textExtractContext</param>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ForeachFont(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            foreach font from Dictionary
            </summary>
            <param name="pagedic">pagedic</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractImages">
            <summary>
            Extracts images from the given PDF Page.
            The name of a image in the resources save in the Tag attribute of the iamge.
            </summary>
            <returns>Returns the extracted image as Image[].</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractImages(System.Boolean)">
            <summary>
            Extracts images from the given PDF Page. and image is not processed.
            The name of a image in the resources save in the Tag attribute of the image.
            </summary>
            <returns>Returns the extracted image as Image[].</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.DeleteImage(System.Drawing.Image)">
            <summary>
            Delete an image.
            The value of the image's Tag attribute is the name of the image in the resources.
            If the value of Tag is null,the sample image is an inline image type.
            </summary>
            <param name="image">The image to be delete.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.DeleteImage(System.Drawing.Image,System.Boolean)">
            <summary>
            Delete an image.
            The value of the image's Tag attribute is the name of the image in the resources.
            If the value of Tag is null,the sample image is an inline image type.
            Warning : You must make sure that the image resource you are removing is the only
            one referenced,otherwise an error will occur.
            </summary>
            <param name="image">The image to be delete.</param>
            <param name="deleteResource">whether to delete the image resource.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.DeleteImage(System.String)">
            <summary>
            Delete an image in a page.
            </summary>
            <param name="imageName">The image's name.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.DeleteImage(System.String,System.Boolean)">
            <summary>
            Delete an image in a page.
            </summary>
            <param name="imageName">The image's name.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.DeleteImageInChildXObject(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary,System.String,System.Collections.Generic.KeyValuePair{Spire.Pdf.Primitives.PdfName,Spire.Pdf.Interfaces.IPdfPrimitive})">
            <summary>
             Delete image's paint operator and image's resource in XObject stream.
            </summary>
            <param name="xobjsDic">The XObject's dictionary of the page.</param>
            <param name="resource">The resource dicionary in the XObject.</param>
            <param name="imageName">The name of image that going to remove.</param>
            <param name="xobjItem">The child XObject's item.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.DeleteImagePaintOperator(Spire.Pdf.Primitives.PdfDictionary,System.String,System.Collections.Generic.KeyValuePair{Spire.Pdf.Primitives.PdfName,Spire.Pdf.Interfaces.IPdfPrimitive})">
            <summary>
             Delete image's paint operator in XObject stream.
            </summary>
            <param name="xobjsDic">The XObject's dictionary of the page.</param>
            <param name="imageName">The name of image that going to remove.</param>
            <param name="xobjItem">The child XObject's item.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.DeleteImage(System.Int32)">
            <summary>
             Delete an image by index in a page.
            </summary>
            <param name="imageIndex">The image index.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.TryCompressImage(System.Int32)">
            <summary>
            Try to compress images(except inline image).
            </summary>
            <param name="index">The image index</param>
            <returns>If success, return true; otherwise false.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.SetTabOrder(Spire.Pdf.TabOrder)">
            <summary>
            Set tab order.
            </summary>
            <param name="tabOrder">The order name</param>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.GetCombinedContents">
            <summary>
            Get page content. bug3787/1212
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.IsUsedBlendModeInContent">
            <summary>
            Whether this page exist blend mode.
            </summary>
            <returns>If exist ,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExistBlendModeInPageContent">
            <summary>
            Whether exist blend mode in page content.
            </summary>
            <returns>If exist ,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExistBlendModeInAnnotationsContent">
            <summary>
            Whether exist blend mode in page annotations content.
            </summary>
            <returns>If exist ,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExistBlendModeInXobject(Spire.Pdf.Primitives.PdfDictionary,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Whether exist blend mode in Xobject.
            </summary>
            <param name="xobjectDictionary">The xobject dictionary</param>
            <param name="validatedResource">The resource has validated.</param>
            <returns>If exist ,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExistBlendModeInForm(Spire.Pdf.Core.PdfStream,System.Collections.Generic.List{Spire.Pdf.Primitives.PdfDictionary})">
            <summary>
            Whether exist blend mode in form.
            </summary>
            <param name="formStream">The form stream</param>
            <param name="validatedResource">The resource has validated.</param>
            <returns>if exist,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.GetFormsType(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get forms type.
            </summary>
            <param name="resourceDictionary">The resource dictionary</param>
            <returns>forms type dictionary</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.IsApplyExtGStateRecord(Spire.Pdf.Core.Contents.PdfRecordCollection,System.Collections.Generic.Dictionary{System.String,System.Boolean},System.String)">
            <summary>
            Whether is apply the extgstate.
            </summary>
            <param name="recordCollection">The record collection</param>
            <param name="formsType">The forms type</param>
            <param name="gsName">The gs name</param>
            <returns>If apply,return true,or false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.LoadFromRTF(System.String,System.Single,System.Boolean)">
            <summary>
            Insert rich text to page
            </summary>
            <param name="rtf">rich text</param>
            <param name="width">width</param>
            <param name="IsSplitLine">IsSplitLine</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.LoadFromRTF(System.String,System.Single,System.Boolean,System.Drawing.PointF)">
            <summary>
            Insert rich text to page
            </summary>
            <param name="rtf">rich text</param>
            <param name="width">width</param>
            <param name="IsSplitLine">IsSplitLine</param>
            <param name="point">Draw text x,y point</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.LoadFromRTF(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Insert rich text to page
            </summary>
            <param name="rtf">rich text</param>
            <param name="width">width</param>
            <param name="IsSplitLine">IsSplitLine</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.LoadFromRTF(System.String,System.Single,System.Single,System.Boolean,System.Drawing.PointF)">
            <summary>
            Insert rich text to page
            </summary>
            <param name="rtf">rich text</param>
            <param name="width">width</param>
            <param name="IsSplitLine">IsSplitLine</param>
            <param name="point">Draw text x,y point</param>
        </member>
        <member name="E:Spire.Pdf.PdfPageBase.BeginSave">
            <summary>
            Raises before the page saves.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageTransition">
            <summary>
            Represents parameters how to display the page in the presentation mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Style">
            <summary>
            Gets or sets the transition style to use when moving to this page from another 
            during a presentation.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Duration">
            <summary>
            Gets or sets the duration of the transition effect, in seconds.
            </summary>
            <value>The transition duration.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Dimension">
            <summary>
            Gets or sets the dimension in which the specified transition effect occurs.
            </summary>
            <value>The dimension.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Motion">
            <summary>
            Gets or sets the the direction of motion for the specified transition effect.
            </summary>
            <value>The motion.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Direction">
            <summary>
            The direction in which the specified transition effect moves, expressed in degrees counter 
            clockwise starting from a left-to-right direction. (This differs from the page objects 
            Rotate property, which is measured clockwise from the top.)
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Scale">
            <summary>
            Gets or sets the starting or ending scale at which the changes are drawn. 
            If Motion property specifies an inward transition, the scale of the changes drawn progresses 
            from Scale to 1.0 over the course of the transition. If Motion specifies an outward 
            transition, the scale of the changes drawn progresses from 1.0 to Scale over the course 
            of the transition.
            </summary>
            <remarks>
            This property has effect for Fly transition style only.
            </remarks>
            <value>The scale.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.PageDuration">
            <summary>
            Gets or sets The pages display duration (also called its advance timing): the maximum 
            length of time, in seconds, that the page is displayed during presentations before 
            the viewer application automatically advances to the next page. By default, 
            the viewer does not advance automatically.
            </summary>
            <value>The page duration.</value>
        </member>
        <member name="M:Spire.Pdf.PdfPageTransition.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Pdf.PdfPageTransition.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:Spire.Pdf.PdfSectionPageCollection">
            <summary>
            Manipulates pages within a section.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionPageCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionPageCollection.Count">
            <summary>
            Gets the count of the pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Add">
            <summary>
            Creates a new page and adds it into the collection.
            </summary>
            <returns>The new page.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Add(Spire.Pdf.PdfNewPage)">
            <summary>
            Adds a page into collection.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Insert(System.Int32,Spire.Pdf.PdfNewPage)">
            <summary>
            Inserts a page at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.IndexOf(Spire.Pdf.PdfNewPage)">
            <summary>
            Returns the index of the specified page.
            </summary>
            <param name="page">The page.</param>
            <returns>The index of the page.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Contains(Spire.Pdf.PdfNewPage)">
            <summary>
            Determines whether the specified page is within the collection.
            </summary>
            <param name="page">The page.</param>
            <returns>
            	<c>true</c> if the collection contains the specified page; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Remove(Spire.Pdf.PdfNewPage)">
            <summary>
            Removes the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a page at the index specified.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Clear">
            <summary>
            Clears this collection.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.PdfSectionPageCollection.System#Collections#IEnumerable#GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Pdf.PdfSectionTemplate">
            <summary>
            Encapsulates a page template for all the pages in the section.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentLeftTemplate">
            <summary>
            Gets or sets value indicating whether parent Left page template should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentTopTemplate">
            <summary>
            Gets or sets value indicating whether parent Top page template should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentRightTemplate">
            <summary>
            Gets or sets value indicating whether parent Right page template should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentBottomTemplate">
            <summary>
            Gets or sets value indicating whether parent Bottom page template should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentStamps">
            <summary>
            Gets or sets value indicating whether 
            the parent stamp elements should be used or not.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSectionTemplate.#ctor">
            <summary>
            Creates a new object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfStampCollection">
            <summary>
            A collection of stamps that are applied to the page templates.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfStampCollection.Item(System.Int32)">
            <summary>
            Gets a stamp element by its index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.#ctor">
            <summary>
            Creates a new stamp collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Add(Spire.Pdf.PdfPageTemplateElement)">
            <summary>
            Adds a stamp element to the collection.
            </summary>
            <param name="template">The stamp element.</param>
            <returns>The index of the stamp element.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Add(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a stamp element and adds it to the collection.
            </summary>
            <param name="x">X co-ordinate of the stamp.</param>
            <param name="y">Y co-ordinate of the stamp.</param>
            <param name="width">Width of the stamp.</param>
            <param name="height">Height of the stamp.</param>
            <returns>The created stamp element.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Contains(Spire.Pdf.PdfPageTemplateElement)">
            <summary>
            Checks whether the stamp element exists in the collection.
            </summary>
            <param name="template">Stamp element.</param>
            <returns>True - if stamp element exists in the collection, False otherwise.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Insert(System.Int32,Spire.Pdf.PdfPageTemplateElement)">
            <summary>
            Inserts a stamp element to the collection at the specified position.
            </summary>
            <param name="index">The index of the stamp in the collection.</param>
            <param name="template">The stamp element.</param>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Remove(Spire.Pdf.PdfPageTemplateElement)">
            <summary>
            Removes the stamp element from the collection.
            </summary>
            <param name="template">The stamp element.</param>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a stamp element from the specified position in the collection.
            </summary>
            <param name="index">The index of the stamp in the collection.</param>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Clear">
            <summary>
            Cleares the collection.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.PdfStampCollection.GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.PdfStampCollection.PdfPageTemplateEnumerator.Current">
            <summary>
            Gets the current section.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.PdfPageTemplateEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.PdfPageTemplateEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentWidget.m_bookmark">
            <summary>
            Collection of loaded and created pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.FindAndCreateForm">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentWidget.Conformance">
            <summary>
            Gets the conformance level applied in the document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Load from Stream ,And Used by PdfViewer-Asp
            </summary>
            <param name="file"></param>
            <param name="isDisposedStream"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.#ctor(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Load from Stream  with password,And Used by PdfViewer-Asp
            </summary>
            <param name="file"></param>
            <param name="password"></param>
            <param name="isDisposedStream"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.VerifySignature(System.String)">
            <summary>
            Verify PDF Document regarding signature.
            </summary>
            <param name="sigName">Signature field name.</param>
            <returns>signature is validated return true,otherwise false</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.VerifyDocModified(System.String)">
            <summary>
            Check if the document was altered after signed. True if modified; otherwise false.
            </summary>
            <param name="signName">Signature field name.</param>
            <returns>signature is validated return false,otherwise true</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.GetSignatureFieldWidget(Spire.Pdf.Widget.PdfFormWidget,System.String)">
            <summary>
            Get PdfSignatureFieldWidget obj from form  by signName
            </summary>
            <param name="form"></param>
            <param name="signName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.RemoveExtendedRight">
            <summary>
            Remove Extended right.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.GetNextSignatureFieldWidget(Spire.Pdf.Widget.PdfFormWidget,System.String)">
            <summary>
            Get next PdfSignatureFieldWidget obj from form  by signName
            </summary>
            <param name="form"></param>
            <param name="signName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.GetCertificateData(System.String)">
            <summary>
            Get PDF Document regarding CertificateData
            </summary>
            <param name="sigName">Signature field name.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.GetSignatureContent(System.String)">
            <summary>
            Get PDF Document regarding signature.
            </summary>
            <param name="sigName">Signature field name.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.GetSignatureDicitionary(System.String)">
            <summary>
            Get the signature dictionary
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.getContents(Spire.Pdf.Primitives.PdfArray)">
            <summary>
            
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentWidget.ReadBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.PdfNewDocument">
            <summary>
            Represents a logic to create Pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>        
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.#ctor(Spire.Pdf.PdfConformanceLevel)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="conformance">The conformance level.</param>
            <remarks>Not Supported under Medium Trust environment.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.SetConformanceValue(Spire.Pdf.PdfConformanceLevel)">
            <summary>
            set conformance value.
            </summary>
            <param name="conformance">The Conformance level.</param>
        </member>
        <member name="T:Spire.Pdf.PdfNewDocument.ProgressEventHandler">
            <summary>
            Delegate for the  event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="E:Spire.Pdf.PdfNewDocument.SaveProgress">
            <summary>
            Occurs when the document is being saved.
            </summary>
            <remarks>
            This event raised on saving the document. It will keep track of the save progress of the document.
            </remarks> 
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.Bookmarks">
            <summary>
            Gets the root of the bookmark tree in the document.
            </summary>
            <value>A  object specifying the document's bookmarks. </value>
            <remarks>Creates an bookmark root instance
            if it's called for first time.</remarks>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.Attachments">
            <summary>
            Gets the attachments of the document.
            </summary>
            <value>The  object contains list of files which are attached in the PDF document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.Form">
            <summary>
            Gets the interactive form of the document.
            </summary>
            <value>The  object contains the list of form elements of the document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.ColorSpace">
            <summary>
            Gets or sets the color space of the document.
            </summary>
            <remarks>This property has impact on the new created pages only.
            If a page was created it remains its colour space obliviously
            to this property changes.</remarks>
            <value>The  of the document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.DefaultFont">
            <summary>
            Gets the default font. It is used for complex objects when font is 
            not explicitly defined.
            </summary>
            <value>The default font.</value>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.IsMergedDocument">
            <summary>
            Indicates the document is a merged document or not, defalut value: false.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.WasEncrypted">
            <summary>
            Gets a value indicating whether the document was encrypted.
            </summary>
            <value><c>true</c> if the document was encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.Conformance">
            <summary>
            Gets or Sets the Pdf Conformance level.
            Supported : PDF/A-1b - Level B compliance in Part 1
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.Save(System.IO.Stream)">
            <summary>
            Saves the document to the specified stream.
            </summary>
            <param name="stream">The stream object where PDF document will be saved.</param>    
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.Close(System.Boolean)">
            <summary>
            Closes the document.
            </summary>
            <param name="completely">if set to <c>true</c> the document should be disposed completely.</param>
            <remarks>The document is disposed after calling the Close method. So, the document can not be saved if Close method was invoked.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <value>A new object that is a copy of this instance.</value>        
            <remarks>The resulting clone must be of the same type as or a compatible type to the original instance.</remarks>
        </member>
        <member name="T:Spire.Pdf.ProgressEventArgs">
            <summary>
            Shows the saving progress.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ProgressEventArgs.Total">
            <summary>
            Gets the total number of the elements (pages) that need to be saved.
            </summary>     
        </member>
        <member name="P:Spire.Pdf.ProgressEventArgs.Current">
            <summary>
            Gets the current element (page) index that just was saved.
            </summary>
            <remarks>The index value increases constantly from 0 to Total.</remarks>
        </member>
        <member name="P:Spire.Pdf.ProgressEventArgs.Progress">
            <summary>
            Gets the progress.
            </summary>
            <remarks>Progress constantly increases from 0.0 to 1.0.
            1.0 value means that entire document has been saved.</remarks>
        </member>
        <member name="T:Spire.Pdf.PdfDocumentInformation">
            <summary>
            A class containing the information about the document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentInformation.PREDEFINED_PROPERTIES">
            <summary>
            Predefined properties in document info.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentInformation.m_metadata">
            <summary>
            The metadata in catalog.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.CreationDate">
            <summary>
            Gets or sets the creation date.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.ModificationDate">
            <summary>
            Gets or sets the modification date.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Author">
            <summary>
            Gets or sets the author.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Creator">
            <summary>
            Gets or sets the creator.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Producer">
            <summary>
            Gets or sets the producer.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.RemoveCustomProperty(System.String)">
            <summary>
            Remove custom property.
            </summary>
            <param name="name">
            The property name.
            Name not be Title,Author,Subject,Keywords,Creator,Producer,CreationDate,ModificationDate,Trap.
            </param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SetCustomProperty(System.String,System.String)">
            <summary>
            Set custom property.
            </summary>
            <param name="name">
            The property name.
            Name not be Title,Author,Subject,Keywords,Creator,Producer,CreationDate,ModificationDate,Trap.
            </param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.GetCustomProperty(System.String)">
            <summary>
            Get custom property.
            </summary>
            <param name="name">
            The property name.
            Name not be Title,Author,Subject,Keywords,Creator,Producer,CreationDate,ModificationDate,Trap.
            </param>
            <returns>The property value.null if property not exist.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.GetAllCustomProperties">
            <summary>
            Get all custom properties.
            </summary>
            <returns>The all properties.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SetPdfUA1Identification">
            <summary>
            Make pdf/UA identification.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.Dictionary_BeginSave(System.Object,Spire.Pdf.Primitives.SavePdfPrimitiveEventArgs)">
            <summary>
            Trigger when pdf wrappered element saving.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="ars">The arguments of event.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata">
            <summary>
            Synchronize metadata.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_Author">
            <summary>
            Synchronize metadata's author.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_CreateDate">
            <summary>
            Synchronize metadata's create date.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_Creator">
            <summary>
            Synchronize metadata's creator.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_Keywords">
            <summary>
            Synchronize metadata's keywords.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_ModificationDate">
            <summary>
            Synchronize metadata's modification date.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_Producer">
            <summary>
            Synchronize metadata's producer.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_Subject">
            <summary>
            Synchronize metadata's subject.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_Title">
            <summary>
            Synchronize metadata's title.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentInformation.SyncMetadata_CustomProperties">
            <summary>
            Synchronize metadata's customProperties.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfXmpMetadata">
            <summary>
            A metadata stream containing metadata for document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfXmpMetadata.CUSTOM_PROPERTY_SPECIAL_CHAR_MAP">
            <summary>
            Special char mapping in custom property name. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfXmpMetadata.ISO8601_DATE_FORMAT">
            <summary>
            ISO8601 datetime format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfXmpMetadata.m_stream">
            <summary>
            The metadata stream.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfXmpMetadata.m_xmpMeta">
            <summary>
            The xmp metadata structure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.#ctor">
            <summary>
            A constructor for new metadata stream.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.#ctor(Spire.Pdf.Core.PdfStream)">
            <summary>
            A constructor for a existing metadata stream.
            </summary>
            <param name="stream">A existing metadata stream.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetAuthor(System.String)">
            <summary>
            Set author. If value is null, delete the property.
            </summary>
            <param name="value">The author.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetAuthor">
            <summary>
            Get author.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistAuthor">
            <summary>
            Whether exist author property.
            </summary>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetCreateDate(System.Nullable{System.DateTime})">
            <summary>
            Set create date.If value is null, delete the property.
            </summary>
            <param name="value">The create date.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetCreateDate(System.String)">
            <summary>
            Set create date.If value is null, delete the property.
            </summary>
            <param name="value">the date  in the format yyyy-MM-ddTHH:mm:sszzz</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetCreateDate">
            <summary>
            Get create date.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistCreateDate">
            <summary>
            Whether exist create date property.
            </summary>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetCreator(System.String)">
            <summary>
            Set creator. If value is null, delete the property.
            </summary>
            <param name="value">The creator.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetCreator">
            <summary>
            Get creator.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistCreator">
            <summary>
            Whether exist creator property.
            </summary>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetKeywords(System.String)">
            <summary>
            Set keywords. If value is null, delete the property.
            </summary>
            <param name="value">The keywords.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetKeywords">
            <summary>
            Get keywords.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistKeywords">
            <summary>
            Whether exist keywords property.
            </summary>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetModifyDate(System.Nullable{System.DateTime})">
            <summary>
            Set modify date. If value is null, delete the property.
            </summary>
            <param name="value">The modify date.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetModifyDate(System.String)">
            <summary>
            Set modify date. If value is null, delete the property.
            </summary>
            <param name="value">the date  in the format yyyy-MM-ddTHH:mm:sszzz</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetModifyDate">
            <summary>
            Get modify date.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistModifyDate">
            <summary>
            Whether exist modify date property.
            </summary>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetProducer(System.String)">
            <summary>
            Set producer. If value is null, delete the property.
            </summary>
            <param name="value">The producer</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetProducer">
            <summary>
            Get producer.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistProducer">
            <summary>
            Whether exist producer property.
            </summary>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetSubject(System.String)">
            <summary>
            Set subject. If value is null, delete the property.
            </summary>
            <param name="value">The subject.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetSubject">
            <summary>
            Get subject.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistSubject">
            <summary>
            Whether exist subject property.
            </summary>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetTitle(System.String)">
            <summary>
            Set title. If value is null, delete the property.
            </summary>
            <param name="value">The title.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetTitle">
            <summary>
            Get title.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistTitle">
            <summary>
            Whether exist title property.
            </summary>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetCustomProperty(System.String,System.String)">
            <summary>
            Set custom property. If value is null, delete the property.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetCustomProperty(System.String)">
            <summary>
            Get custom property.
            </summary>
            <param name="name">The property name.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ExistCustomProperty(System.String)">
            <summary>
            Whether xxist custom property.
            </summary>
            <param name="name">The property name.</param>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetCustomProperties">
            <summary>
            Get all custom properties.
            </summary>
            <returns>The custom properties.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetConformanceLevel(Spire.Pdf.PdfConformanceLevel)">
            <summary>
            Set pdf conformanceLevel.
            </summary>
            <param name="conformanceLevel">The pdf conformanceLevel.</param>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.GetConformanceLevel">
            <summary>
            Get pdf conformanceLevel.
            </summary>
            <returns>The pdf conformanceLevel.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.SetPdfUA1Identification">
            <summary>
            Make pdf/UA identification.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.UnescapeCustomProperty(System.String)">
            <summary>
            Unescape special char in the escaped property name.
            </summary>
            <param name="name">The escaped property name.</param>
            <returns>The property name.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ProcessFirstCharcter(System.String)">
            <summary>
            The first character of an xml node name can only be a letter or a short underscore.
            </summary>
            <param name="name">The name</param>
            <returns>Processed string</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.UnProcessFirstCharcter(System.String)">
            <summary>
            The first character of an xml node name can only be a letter or a short underscore.
            </summary>
            <param name="name">The name</param>
            <returns>UnProcessed string</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.EscapeCustomProperty(System.String)">
            <summary>
            Escape special char in the property name.
            </summary>
            <param name="name">The property name.</param>
            <returns>The escaped property name.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfXmpMetadata.ConvertXmpDateTime(Spire.Xmp.IXmpDateTime)">
            <summary>
            Convert xmp date time to .net DateTime
            </summary>
            <param name="xmpDateTime">The xmp date time.</param>
            <returns>The .net DateTime</returns>
        </member>
        <member name="P:Spire.Pdf.PdfXmpMetadata.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.PdfViewerPreferences">
            <summary>
            Defines the way the document is to be presented on the screen or in print.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.CenterWindow">
            <summary>
            A flag specifying whether to position the documents window in the center of the screen.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfViewerPreferences.SetBookMarkExpandOrCollapse(Spire.Pdf.Primitives.PdfDictionary,System.Boolean)">
            <summary>
            Set Expand or Collapse
            </summary>
            <param name="dictionary"></param>
            <param name="open"></param>
        </member>
        <member name="M:Spire.Pdf.PdfViewerPreferences.FineNodeTree(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfName)">
            <summary>
            Find Node Tree
            </summary>
            <param name="dicNodeTree"></param>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfViewerPreferences.ForeachTree(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfName,Spire.Pdf.Primitives.PdfName,System.Boolean)">
            <summary>
            iterates Bookmark,Set Expand or Collapse
            </summary>
            <param name="dictionary"></param>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="open"></param>
        </member>
        <member name="M:Spire.Pdf.PdfViewerPreferences.FindFloorNode(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfName,Spire.Pdf.Primitives.PdfName)">
            <summary>
            Find the click node
            </summary>
            <param name="dictionary"></param>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.BookMarkExpandOrCollapse">
            <summary>
            It's true,expand node
            It's false,collapse node
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.DisplayTitle">
            <summary>
            A flag specifying whether the windows title bar should display the document title taken 
            from the Title entry of the document information dictionary. If false, the title bar 
            should instead display the name of the Pdf file containing the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.FitWindow">
            <summary>
            A flag specifying whether to resize the documents window to fit the size of the first 
            displayed page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.HideMenubar">
            <summary>
            A flag specifying whether to hide the viewer applications menu bar when the 
            document is active.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.HideToolbar">
            <summary>
            A flag specifying whether to hide the viewer applications tool bars when the document is active.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.HideWindowUI">
            <summary>
            A flag specifying whether to hide user interface elements in the documents window 
            (such as scroll bars and navigation controls), leaving only the documents contents displayed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.PageMode">
            <summary>
            A name object specifying how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.PageLayout">
            <summary>
            A name object specifying the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.PrintScaling">
            <summary>
            Gets or Set the page scaling option to be selected 
            when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.PdfCollection">
            <summary>
            Base collection of the pdf objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfCollection.Count">
            <summary>
            Gets number of the elements in the collection.
            </summary>
            <value>The total number of elements in the collection.</value>
        </member>
        <member name="P:Spire.Pdf.PdfCollection.List">
            <summary>
            Gets internal list of the collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>Returns an enumerator that iterates through a collection.</returns>
        </member>
        <member name="P:Spire.Pdf.PdfResources.Item(System.String,Spire.Pdf.PdfResourceType)">
            <summary>
            Get a resource.
            </summary>
            <param name="resourceName">The resource name.</param>
            <param name="resourceType">The resource type.</param>
            <returns>A resource.return null if not exist.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfResources.GetResource(System.String,Spire.Pdf.PdfResourceType)">
            <summary>
            Get the resource.
            </summary>
            <param name="resourceName">The resource name.</param>
            <param name="resourceType">The resource type.</param>
            <returns>The resource.Return null,if not contain a resource with the name.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfResources.AddResource(System.String,Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.PdfResourceType)">
            <summary>
            Add a resource.
            </summary>
            <param name="name">The resource name.</param>
            <param name="resource">The resource.</param>
            <param name="resourceType">The resource type.</param>
        </member>
        <member name="M:Spire.Pdf.PdfResources.AddResource(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.PdfResourceType)">
            <summary>
            Add a resource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="resourceType">The resource type.</param>
        </member>
        <member name="M:Spire.Pdf.PdfResources.RemoveResource(System.String,Spire.Pdf.PdfResourceType)">
            <summary>
            Remove a resource.
            </summary>
            <param name="resourceName">The resource name.</param>
            <param name="resourceType">The resource type.</param>
        </member>
        <member name="M:Spire.Pdf.PdfResources.ContainResource(Spire.Pdf.Interfaces.IPdfPrimitive,Spire.Pdf.PdfResourceType)">
            <summary>
            Whether to contain the resource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="resourceType">The resource type.</param>
            <returns>True,if contain the resource;False,otherwise.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfResources.GetResources(Spire.Pdf.PdfResourceType)">
            <summary>
            Get the resources.
            </summary>
            <param name="resourceType">The resource type.</param>
            <returns>The resources dictionary of the resource type.</returns>
        </member>
        <member name="T:Spire.Pdf.PdfPageOrientation">
            <summary>
            Enumerator that implements page orientations.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageOrientation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageOrientation.Landscape">
            <summary>
            Landscape orientation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageRotateAngle">
            <summary>
            The number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageRotateAngle.RotateAngle0">
            <summary>
            The page is rotated as 0 angle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageRotateAngle.RotateAngle90">
            <summary>
            The page is rotated as 90 angle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageRotateAngle.RotateAngle180">
            <summary>
            The page is rotated as 180 angle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageRotateAngle.RotateAngle270">
            <summary>
            The page is rotated as 270 angle.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfNumberStyle">
            <summary>
            Specifies numbering style of page labels.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.None">
            <summary>
            No numbering at all.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.Numeric">
            <summary>
            Decimal arabic numerals.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.LowerLatin">
            <summary>
            Lowercase letters a-z.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.LowerRoman">
            <summary>
            Lowercase roman numerals.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.UpperLatin">
            <summary>
            Uppercase letters A-Z.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.UpperRoman">
            <summary>
            Uppercase roman numerals.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfDockStyle">
            <summary>
            Specifies the docking style of the page template.
            </summary>
            <remarks>This enumeration is used in  class.</remarks>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.None">
            <summary>
            The page template is not docked.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Bottom">
            <summary>
            The page template edge is docked to the bottom page's side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Top">
            <summary>
            The page template edge is docked to the top page's side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Left">
            <summary>
            The page template edge is docked to the left page's side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Right">
            <summary>
            The page template edge is docked to the right page's side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Fill">
            <summary>
            The page template stretch on full page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfAlignmentStyle">
            <summary>
            Specifies how the page template is aligned relative to the template area.    
            </summary>
            <remarks>This enumeration is used in  class.</remarks>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.None">
            <summary>
            Specifies no alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.TopLeft">
            <summary>
            The template is top left aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.TopCenter">
            <summary>
            The template is top center aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.TopRight">
            <summary>
            The template is top right aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.MiddleLeft">
            <summary>
            The template is middle left aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.MiddleCenter">
            <summary>
            The template is middle center aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.MiddleRight">
            <summary>
            The template is middle right aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.BottomLeft">
            <summary>
            The template is bottom left aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.BottomCenter">
            <summary>
            The template is bottom center aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.BottomRight">
            <summary>
             The template is bottom right aligned.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageLayout">
            <summary>
            A name object specifying the page layout to be used when the
            document is opened.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.SinglePage">
            <summary>
            Default Value. Display one page at a time.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.OneColumn">
            <summary>
            Display the pages in one column.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.TwoColumnLeft">
            <summary>
            Display the pages in two columns, with odd numbered
            pages on the left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.TwoColumnRight">
            <summary>
            Display the pages in two columns, with odd numbered
            pages on the right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.TwoPageLeft">
            <summary>
            Display the pages two at a time, with odd-numbered pages on the left
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.TwoPageRight">
            <summary>
            Display the pages two at a time, with odd-numbered pages on the right
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageMode">
            <summary>
            Represents mode of document displaying.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseNone">
            <summary>
            Default value. Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseOutlines">
            <summary>
            Document outline visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseThumbs">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.FullScreen">
            <summary>
            Full-screen mode, with no menu bar, window
            controls, or any other window visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseOC">
            <summary>
            Optional content group panel visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseAttachments">
            <summary>
            Attachments are visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.None">
            <summary>
            Page template is not used as header.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.Top">
            <summary>
            Page template is used as Top.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.Bottom">
            <summary>
            Page template is used as Bottom.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.Left">
            <summary>
            Page template is used as Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.Right">
            <summary>
            Page template is used as Right.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfTransitionStyle">
            <summary>
            Enumeration of possible transition styles when moving to the page from another 
            during a presentation
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Split">
            <summary>
            Two lines sweep across the screen, revealing the new page. The lines may be either 
            horizontal or vertical and may move inward from the edges of the page or outward 
            from the center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Blinds">
            <summary>
            Multiple lines, evenly spaced across the screen, synchronously sweep in the same 
            direction to reveal the new page. The lines may be either horizontal or vertical.
            Horizontal lines move downward; vertical lines move to the right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Box">
            <summary>
            A rectangular box sweeps inward from the edges of the page or outward from the center,
            revealing the new page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Wipe">
            <summary>
            A single line sweeps across the screen from one edge to the other, revealing the new page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Dissolve">
            <summary>
            The old page dissolves gradually to reveal the new one.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Glitter">
            <summary>
            Similar to Dissolve, except that the effect sweeps across the page in a wide band moving from 
            one side of the screen to the other.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Replace">
            <summary>
            The new page simply replaces the old one with no special transition effect.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Fly">
            <summary>
            Changes are flown out or in, to or from a location that is offscreen.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Push">
            <summary>
            The old page slides off the screen while the new page slides in, pushing the old page out.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Cover">
            <summary>
            The new page slides on to the screen, covering the old page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Uncover">
            <summary>
            The old page slides off the screen, uncovering the new page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Fade">
            <summary>
            The new page gradually becomes visible through the old one.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfTransitionDimension">
            <summary>
            Enumeration of transition dimensions.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDimension.Horizontal">
            <summary>
            Horizontal effect.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDimension.Vertical">
            <summary>
            Vertical effect.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfTransitionMotion">
            <summary>
            Enumeration of transition motions.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionMotion.Inward">
            <summary>
            Inward motion from the edges of the page to center..
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionMotion.Outward">
            <summary>
            Outward motion from the center of the page to edges.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfTransitionDirection">
            <summary>
            Enumeration of transition directions.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.LeftToRight">
            <summary>
            Left to Right direction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.BottomToTop">
            <summary>
            Bottom to Top direction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.RightToLeft">
            <summary>
            Right to Left direction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.TopToBottom">
            <summary>
            Top to Bottom direction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.TopLeftToBottomRight">
            <summary>
            TopLeft to BottomRight direction.
            </summary>
        </member>
        <member name="T:Spire.Pdf.TabOrder">
            <summary>
            A name specifying the tab order to be used for annotations on the page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TabOrder.Row">
            <summary>
            Row Order
            </summary>
        </member>
        <member name="F:Spire.Pdf.TabOrder.Column">
            <summary>
            Column Order
            </summary>
        </member>
        <member name="F:Spire.Pdf.TabOrder.Structure">
            <summary>
            Structure Order
            </summary>
        </member>
        <member name="F:Spire.Pdf.TabOrder.Unspecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageSize">
            <summary>
            Represents information about page size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Letter">
            <summary>
            Letter format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Note">
            <summary>
            Note format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Legal">
            <summary>
            Legal format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A0">
            <summary>
            A0 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A1">
            <summary>
            A1 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A2">
            <summary>
            A2 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A3">
            <summary>
            A3 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A4">
            <summary>
            A4 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A5">
            <summary>
            A5 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A6">
            <summary>
            A6 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A7">
            <summary>
            A7 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A8">
            <summary>
            A8 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A9">
            <summary>
            A9 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A10">
            <summary>
            A10 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B0">
            <summary>
            B0 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B1">
            <summary>
            B1 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B2">
            <summary>
            B2 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B3">
            <summary>
            B3 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B4">
            <summary>
            B4 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B5">
            <summary>
            B5 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchE">
            <summary>
            ArchE format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchD">
            <summary>
            ArchD format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchC">
            <summary>
            ArchC format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchB">
            <summary>
            ArchB format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchA">
            <summary>
            ArchA format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Flsa">
            <summary>
            The American Foolscap format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.HalfLetter">
            <summary>
            HalfLetter format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Letter11x17">
            <summary>
            11x17 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Ledger">
            <summary>
            Ledger format.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageWidget">
            <summary>
            Represents a page loaded from a document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageWidget.Size">
            <summary>
            Gets the size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageWidget.ActualSize">
            <summary>
            Get the visible region of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageWidget.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageWidget.RemoveFromDictionaries(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Raises before the page saves.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfNewPage">
            <summary>
            Represents a single PDF page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfNewPage.Size">
            <summary>
            Gets the size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfNewPage.Annotations">
            <summary>
            Gets a collection of the annotations of the page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfNewPage.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfNewPage.DropCropBox(System.Drawing.RectangleF)">
            <summary>
            Sets crop box.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfNewPage.GetXObjectDictionary(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            get xobject
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfNewPage.CreateXObjectDictionary(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            create xobject
            </summary>
            <param name="dictionary"></param>
            <param name="newDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfNewPage.RefactoringResources">
            <summary>
            refactoring resources,exclusion does not require resources
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfNewPage.ForeachPdfRecord(Spire.Pdf.Core.PdfStream,Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            execute commond
            </summary>
            <param name="stream"></param>
            <param name="xObject"></param>
            <param name="newXObject"></param>
        </member>
        <member name="M:Spire.Pdf.PdfNewPage.ExecuteXObject(System.String,Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            execute xobject
            </summary>
            <param name="operatorkey"></param>
            <param name="xObject"></param>
            <param name="newXObject"></param>
        </member>
        <member name="T:Spire.Pdf.PdfDocumentPageCollection">
            <summary>
            Implements a virtual collection of all pages in the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentPageCollection.Count">
            <summary>
            Gets the total number of the pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentPageCollection.Item(System.Int32)">
            <summary>
            Gets a page by its index in the document.
            </summary>
        </member>
        <member name="E:Spire.Pdf.PdfDocumentPageCollection.PageAdded">
            <summary>
            Represents the  method that executes on a PdfNewDocument when a new page is created.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.Add">
            <summary>
            Creates a page and adds it to the last section in the document.
            </summary>
            <returns>Created page object.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.Insert(System.Int32,Spire.Pdf.PdfNewPage)">
            <summary>
            Inserts a page at the specified index to the last section in the document.
            </summary>
            <param name="index">The index of the page in the section.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.IndexOf(Spire.Pdf.PdfNewPage)">
            <summary>
            Gets the index of the page in the document.
            </summary>
            <param name="page">The current page.</param>
            <returns>Index of the page in the document if exists, -1 otherwise.</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.PdfDocumentPageCollection.GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.PdfDocumentPageCollection.PdfPageEnumerator.Current">
            <summary>
            Gets the current section.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.PdfPageEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.PdfPageEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="T:Spire.Pdf.PdfPageSettings">
            <summary>
            Represent class with setting of page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Orientation">
            <summary>
            Gets or sets the page orientation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Size">
            <summary>
            Gets or sets the size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Width">
            <summary>
            Gets or sets the width of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Height">
            <summary>
            Gets or sets the height of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Margins">
            <summary>
            Gets or sets the margins of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Rotate">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Transition">
            <summary>
            Gets or sets the transition.
            </summary>
            <value>The transition.</value>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(Spire.Pdf.PdfPageOrientation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pageOrientation">The page orientation.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,Spire.Pdf.PdfPageOrientation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,Spire.Pdf.PdfPageOrientation,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,Spire.Pdf.PdfPageOrientation,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.SetMargins(System.Single)">
            <summary>
            Sets the margins.
            </summary>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.SetMargins(System.Single,System.Single)">
            <summary>
            Sets the margins.
            </summary>
            <param name="leftRight">The left right.</param>
            <param name="topBottom">The top bottom.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.SetMargins(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the margins.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.Clone">
            <summary>
            Creates a clone of the object.
            </summary>
            <returns>Cloned object.</returns>
        </member>
        <member name="T:Spire.Pdf.PdfPaperSourceTray">
            <summary>
            Specifies the paper tray when the document is printed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPaperSourceTray.StartPage">
            <summary>
            Gets or sets the page number (non zero-based) of the first page to print.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPaperSourceTray.EndPage">
            <summary>
            Gets or sets the page number (non zero-based) of the last page to print.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPaperSourceTray.PrintPaperSource">
            <summary>
            Specifies the paper tray from which the printer gets paper.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageTemplateElement">
            <summary>
            Describes a page template object that can be used as header/footer, watermark or stamp.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Dock">
            <summary>
            Gets or sets the dock style of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Alignment">
            <summary>
            Gets or sets alignment of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Foreground">
            <summary>
            Indicates whether the page template is located in front of 
            the page layers or behind of it.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Background">
            <summary>
            Indicates whether the page template is located behind of 
            the page layers or in front of it.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Location">
            <summary>
            Gets or sets location of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.X">
            <summary>
            Gets or sets X co-ordinate of the template element on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Y">
            <summary>
            Gets or sets Y co-ordinate of the template element on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Size">
            <summary>
            Gets or sets size of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Width">
            <summary>
            Gets or sets width of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Height">
            <summary>
            Gets or sets height of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Bounds">
            <summary>
            Gets or sets bounds of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Graphics">
            <summary>
            Gets graphics context of the page template element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.RectangleF)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="bounds">Bounds of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.RectangleF,Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="location">Location of the template.</param>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF,Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.SizeF)">
            <summary>
            Creates new page template object.
            </summary>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,Spire.Pdf.PdfNewPage)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
            <param name="page">The Current Page object.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="x">X co-ordinate of the template.</param>
            <param name="y">Y co-ordinate of the template.</param>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,System.Single,System.Single,Spire.Pdf.PdfNewPage)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="x">X co-ordinate of the template.</param>
            <param name="y">Y co-ordinate of the template.</param>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
            <param name="page">The Current Page object.</param>
        </member>
        <member name="T:Spire.Pdf.PdfSection">
            <summary>
            Represents a section entity. A section it's a set of the pages with similar page settings.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.Pages">
            <summary>
            Gets the pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.PageSettings">
            <summary>
            Gets or sets page settings of the section.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.Template">
            <summary>
            Gets or sets a template for the pages in the section.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.Document">
            <summary>
            Gets the owner document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="E:Spire.Pdf.PdfSection.PageAdded">
            <summary>
            Event rises when the new page has been added
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Pdf.PdfSection.GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.PdfSection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSection.ResizePageCanvas(Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat,System.Drawing.SizeF)">
            <summary>
            Resize the canvas of page according to html view size.
            </summary>
            <param name="layoutFormat"></param>
            <param name="htmlViewSize"></param>
            <returns>Return the new size of canvas.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSection.SetLayoutFormat(Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat,System.Boolean)">
            <summary>
            set PdfHtmlLayoutFormat
            </summary>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
            <param name="autoDetectPageBreak">bool autoDetectPageBreak</param>
        </member>
        <member name="M:Spire.Pdf.PdfSection.LoadFromHTML(System.String,System.Boolean,System.Boolean,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat)">
            <summary>
            Draws HTML to PDF
            </summary>
            <param name="url">Url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="layoutFormat">Layouts html view format</param>
        </member>
        <member name="M:Spire.Pdf.PdfSection.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat)">
            <summary>
             Draws HTML to PDF
            </summary>
            <param name="URLOrSourceCode">url address or socuce code</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Enable autoDetectPageBreak</param>
            <param name="layoutFormat">Layouts html view format</param>
        </member>
        <member name="M:Spire.Pdf.PdfSection.SplitImage(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Split by page height image
            </summary>
            <param name="bitmap"></param>
            <param name="signleImageHeight"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfSection.Scan0Bitmap(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Scan image data 
            </summary>
            <param name="buffer"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="offset"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.PdfSection.PdfPageEnumerator.Current">
            <summary>
            Gets the current.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSection.PdfPageEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfSection.PdfPageEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfSection.GetPageCount(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get the number of leaf nodes (page objects) that are descendants of this node within the page tree.
            </summary>
            <param name="pageTreeNode">this node within the page tree.</param>
            <returns>the number of leaf nodes (page objects).</returns>
        </member>
        <member name="T:Spire.Pdf.PdfSectionCollection">
            <summary>
            The collection of the sections.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.PdfSectionCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.Add(Spire.Pdf.PdfPageSettings)">
            <summary>
            Creates a section and adds it to the collection.
            </summary>
            <returns>Created section object.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.IndexOf(Spire.Pdf.PdfSection)">
            <summary>
            Determines the index of the section.
            </summary>
            <param name="section">The section.</param>
            <returns>The index of the section.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.Insert(System.Int32,Spire.Pdf.PdfSection)">
            <summary>
            Inserts the section at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="section">The section.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.Contains(Spire.Pdf.PdfSection)">
            <summary>
            Checks whether the collection contains the section.
            </summary>
            <param name="section">The section object.</param>
            <returns>True - if the sections belongs to the collection, False otherwise.</returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.PdfSectionCollection.GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.PdfSectionCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionCollection.PdfSectionEnumerator.Current">
            <summary>
            Gets the current section.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.PdfSectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.PdfSectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.Primitives.PdfArray.ToFloatArray">
            <summary>
            Convet pdf array to float array
            </summary>
            <returns>float array</returns>
        </member>
        <member name="F:Spire.Pdf.Primitives.PdfName.m_escapedCharacterSequence">
            <summary>
            The escaped character sequence.
            !!!BaselineFile_79  BaselineFile_90
            </summary>
        </member>
        <member name="M:Spire.Pdf.Primitives.PdfName.IsHexadecimalChar(System.String)">
            <summary>
            Is the current string a hexadecimal string?
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Primitives.PdfName.Clone">
            <summary>
            Clone PdfName.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Primitives.PdfNumber.Clone">
            <summary>
            Clone PdfNumber.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Primitives.PdfNumber.Parse(System.String)">
            <summary>
            Parse a number string.
            </summary>
            <remarks>
            Rule1: --234.23 -> 0
            Rule2: 123.45-456 -> 123.45
            </remarks>
            <param name="s">The number string.</param>
            <returns>A Number.</returns>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.Rows">
            <summary>
            Gets the rows.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.DataMember">
            <summary>
            Gets or sets the data member.
            </summary>
            <value>The data member.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.RepeatHeader">
            <summary>
            Gets or sets a value indicating whether [repeat header].
            </summary>
            <value><c>true</c> if [repeat header]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.AllowCrossPages">
            <summary>
            Gets or sets whether to cross a page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.PointF,System.Single)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="location">The location.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single,System.Single)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.RectangleF)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF,Spire.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF,Spire.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,Spire.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,System.Single)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,System.Single,Spire.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.RowSpan">
            <summary>
            Gets or sets the row span.
            </summary>
            <value>The row span.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.ColumnSpan">
            <summary>
            Gets or sets the column span.
            </summary>
            <value>The column span.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.Style">
            <summary>
            Gets or sets the cell style.
            </summary>
            <value>The cell style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCell.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCell.#ctor(Spire.Pdf.Grid.PdfGridRow)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCell.CalculateSingleLineHeight">
            <summary>
            Calculate the minimum drawable height.
            If the available height in the page less than the value, the grid needs to drawn on a new page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCell.IsContainMultipleLineText">
            <summary>
            Whether this cell contains multiple lines of text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCell.AdjustPrecision(System.Single)">
            <summary>
            Keep four decimals.
            Avoid the loss of precision when calcullating cell width and height,
            resulting in the loss of content.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCellCollection.IndexOf(Spire.Pdf.Grid.PdfGridCell)">
            <summary>
            Returns the index of a particular cell in the collection.
            </summary>
            <param name="cell">The cell.</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Grid.PdfGridCellCollection.GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.Grid.PdfGridCellCollection.PdfGridCellEnumerator.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCellCollection.PdfGridCellEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCellCollection.PdfGridCellEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumn.Width">
            <summary>
            Gets or sets the width. The with is equal to the content 
            width plus margin plus half of the left and right borders.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumn.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumn.Grid">
            <summary>
            Gets the grid.
            </summary>
            <value>The grid.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumn.#ctor(Spire.Pdf.Grid.PdfGrid)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumnCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumnCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.Add">
            <summary>
            Adds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.Add(System.Int32)">
            <summary>
            Adds the specified count.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.Add(Spire.Pdf.Grid.PdfGridColumn)">
            <summary>
            Adds the specified column.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.Remove(Spire.Pdf.Grid.PdfGridColumn)">
            <summary>
            Removes the first occurrence of a specific object from the PdfGridColumnCollection.
            </summary>
            <param name="item">The object to remove from the PdfGridColumnCollection.
            </param>
            <returns>true if item is successfully removed; otherwise, false</returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the PdfGridColumnCollection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Grid.PdfGridColumnCollection.GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.Grid.PdfGridColumnCollection.PdfGridColumnEnumerator.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.PdfGridColumnEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.PdfGridColumnEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRow.Cells">
            <summary>
            Gets the cells.
            </summary>
            <value>The cells.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRow.Style">
            <summary>
            Gets or sets the row style.
            </summary>
            <value>The row style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRow.Height">
            <summary>
            Gets or sets the height.The height is equal to the content 
            height plus margin plus half of the top and bottom borders.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRow.AllowCrossPages">
            <summary>
            Gets or sets whether to cross a page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRow.#ctor(Spire.Pdf.Grid.PdfGrid)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="parentGrid">The parent grid.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRow.ApplyStyle(Spire.Pdf.Grid.PdfGridCellStyle)">
            <summary>
            Applies the cell style to all the cells present in a row.
            </summary>
            <param name="cellStyle">The cell style.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRowCollection.Add">
            <summary>
            Adds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRowCollection.SetSpan(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the span.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="cellIndex">Index of the cell.</param>
            <param name="rowSpan">The row span.</param>
            <param name="colSpan">The col span.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRowCollection.ApplyStyle(Spire.Pdf.Grid.PdfGridStyleBase)">
            <summary>
            Applies the style.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridHeaderCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridHeaderCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridHeaderCollection.Rows">
            <summary>
            Gets the rows.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.Add(System.Int32)">
            <summary>
            Adds the specified count.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.ApplyStyle(Spire.Pdf.Grid.PdfGridStyleBase)">
            <summary>
            Applies the style.
            </summary>
            <param name="style">The style.</param>
        </member>
        <!-- 对于成员“M:Spire.Pdf.Grid.PdfGridHeaderCollection.GetEnumerator”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Pdf.Grid.PdfGridHeaderCollection.PdfGridHeaderRowEnumerator.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.PdfGridHeaderRowEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.PdfGridHeaderRowEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridStyleBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.CellPadding">
            <summary>
            Sets the cell padding.
            </summary>
            <value>The cell padding.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.BackgroundBrush">
            <summary>
            Gets or sets the background brush.
            </summary>
            <value>The background brush.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.TextBrush">
            <summary>
            Gets or sets the text brush.
            </summary>
            <value>The text brush.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.TextPen">
            <summary>
            Gets or sets the text pen.
            </summary>
            <value>The text pen.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridStyleBase.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridStyle">
            <summary>
            Grid style
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.CellSpacing">
            <summary>
            Gets or sets the cell spacing.
            </summary>
            <value>The cell spacing.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
            <value>The cell padding.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.BorderOverlapStyle">
            <summary>
            Gets or sets the border overlap style.
            </summary>
            <value>The border overlap style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.AllowHorizontalOverflow">
            <summary>
            Gets or sets a value indicating whether to allow horizontal overflow.
            </summary>
            <value>
            	<c>true</c> if [allow horizontal overflow]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.HorizontalOverflowType">
            <summary>
            Gets or sets the type of the horizontal overflow.
            </summary>
            <value>The type of the horizontal overflow.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridRowStyle">
            <summary>
            Grid row style
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRowStyle.CellPadding">
            <summary>
            Get or sets the cell padding.
            </summary>
            <returns>The cell padding.</returns>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRowStyle.GridStyle">
            <summary>
            Sets the grid style.
            </summary>
            <value>The grid style.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRowStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridCellStyle">
            <summary>
            Grid cell style
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellStyle.CellPadding">
            <summary>
            Get or sets the cell padding.
            </summary>
            <returns>The cell padding.</returns>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellStyle.RowStyle">
            <summary>
            Sets the row style.
            </summary>
            <value>The row style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellStyle.StringFormat">
            <summary>
            Gets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellStyle.Borders">
            <summary>
            Gets or sets the border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellStyle.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCellStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridCellContent">
            <summary>
            Represents the content that can be written in a grid cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellContent.ImageLocation">
            <summary>
            Set the image's location in a grid cell.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridCellContentList">
            <summary>
            It is a collection of PdfGridCellContent classes
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfHorizontalOverflowType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Grid.PdfHorizontalOverflowType.NextPage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Grid.PdfHorizontalOverflowType.LastPage">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridBeginPageLayoutEventArgs">
            <summary>
            Arguments of BeginPageLayoutEvent.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridBeginPageLayoutEventArgs.StartRowIndex">
            <summary>
            Gets the start row.
            </summary>
            <value>The start row.</value>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridEndPageLayoutEventArgs">
            <summary>
            Arguments of EndPageLayoutEvent.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.All">
            <summary>
            Sets all.
            </summary>
            <value>All.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.All">
            <summary>
            Sets all.
            </summary>
            <value>All.</value>
        </member>
        <member name="M:Spire.Pdf.PdfEdges.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfEdges.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="top">The top.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.All">
            <summary>
            Sets all.
            </summary>
            <value>All.</value>
        </member>
        <member name="M:Spire.Pdf.PdfPaddings.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPaddings.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="top">The top.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfMarkerBase">
            <summary>
            Represents base class for markers.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.Font">
            <summary>
            Gets or sets marker font.
            </summary>		
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.Brush">
            <summary>
            Gets or sets marker brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.Pen">
            <summary>
            Gets or sets marker pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.StringFormat">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.Alignment">
            <summary>
            Gets or sets a value indicating whether the marker is
            situated at the left of the list or at the right of the list.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfOrderedMarker">
            <summary>
            Represents marker for ordered list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfOrderedMarker.Style">
            <summary>
            Gets or sets the list numbering style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfOrderedMarker.StartNumber">
            <summary>
            Gets ar sets start number for ordered list. Default value is 1.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfOrderedMarker.Delimiter">
            <summary>
            Gets or sets the delimiter.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfOrderedMarker.Suffix">
            <summary>
            Gets or sets the suffix of the marker.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfOrderedMarker.#ctor(Spire.Pdf.PdfNumberStyle,System.String,System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="delimiter">Number delimiter of marker.</param>
            <param name="suffix">Number suffix of marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfOrderedMarker.#ctor(Spire.Pdf.PdfNumberStyle,System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="suffix">Number suffix of the marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfOrderedMarker.#ctor(Spire.Pdf.PdfNumberStyle,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfMarker">
            <summary>
            Represents bullet for the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarker.Template">
            <summary>
            Gets or sets template of the marker.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarker.Image">
            <summary>
            Gets or sets image of the marker.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarker.Text">
            <summary>
            Gets or sets marker text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarker.Style">
            <summary>
            Gets or sets the style.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfMarker.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text of the marker.</param>
            <param name="font">Marker font.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfMarker.#ctor(Spire.Pdf.Lists.PdfUnorderedMarkerStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">The style of the marker.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfMarker.#ctor(Spire.Pdf.Graphics.PdfImage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="image">The image of the marker.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfMarker.#ctor(Spire.Pdf.Graphics.PdfTemplate)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="template">Template of the marker.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfUnorderedMarkerStyle">
            <summary>
            Specifies the marker style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.None">
            <summary>
            Marker have  no style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.Disk">
            <summary>
            Marker is like a disk.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.Square">
            <summary>
            Marker is like a square.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.Asterisk">
            <summary>
            Marker is like a Asterisk.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.Circle">
            <summary>
            Marker is like a circle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.CustomString">
            <summary>
            Marker is custom string.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.CustomImage">
            <summary>
            Marker is custom image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.CustomTemplate">
            <summary>
            Marker is custom template.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfListMarkerAlignment">
            <summary>
            Represents marker alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfListMarkerAlignment.Left">
            <summary>
            Left alignment for marker.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfListMarkerAlignment.Right">
            <summary>
            Right alignment for marker.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfListBase">
            <summary>
            Represents base class for lists.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Items">
            <summary>
            Gets items of the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Indent">
            <summary>
            Gets or sets tabulation for the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.TextIndent">
            <summary>
            Gets or sets the indent from the marker to the list item text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Font">
            <summary>
            Gets or sets the list font.
            </summary>		
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Brush">
            <summary>
            Gets or sets list brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Pen">
            <summary>
            Gets or sets list pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.StringFormat">
            <summary>
            Gets or sets the format of the list.
            </summary>
            <value>The format.</value>
        </member>
        <member name="E:Spire.Pdf.Lists.PdfListBase.BeginItemLayout">
            <summary>
            Event that rises when item begin layout.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Lists.PdfListBase.EndItemLayout">
            <summary>
            Event that rises when item end layout.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListBase.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single)">
            <summary>
            Draws an list on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the list should be printed.</param>
            <param name="x">X co-ordinate of the list.</param>
            <param name="y">Y co-ordinate of the list.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfListItem">
            <summary>
            Represents the list item of the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.Font">
            <summary>
            Gets or sets item font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.Text">
            <summary>
            Gets or sets item text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.StringFormat">
            <summary>
            Gets or sets item string format.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.Pen">
            <summary>
            Gets or sets list item pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.Brush">
            <summary>
            Gets or sets list item brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.SubList">
            <summary>
            Gets or sets sublist for item. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.TextIndent">
            <summary>
            Gets or sets indent for item.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor">
            <summary>
            Creates new empty pdf list item.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor(System.String)">
            <summary>
            Creates new pdf list item with default settings.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text of item.</param>
            <param name="font">The font of item.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text of item.</param>
            <param name="font">The font of item.</param>
            <param name="format">The string format.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfStringFormat,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Creates new list item.
            </summary>
            <param name="text">The item text.</param>
            <param name="font">The item font.</param>
            <param name="format">The string format of item.</param>
            <param name="pen">The item pen.</param>
            <param name="brush">The item brush.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfListItemCollection">
            <summary>
            Represents collection of list items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItemCollection.Item(System.Int32)">
            <summary>
            Gets the PdfListItem from collection at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="items">A string array that contains items separated by the new line character.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(Spire.Pdf.Lists.PdfListItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>The item index in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(Spire.Pdf.Lists.PdfListItem,System.Single)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="itemIndent">The item indent.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(System.String)">
            <summary>
            Adds the item with a specified text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(System.String,System.Single)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="itemIndent">The item indent.</param>
            <returns>List item.</returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <returns>The item index in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(System.String,Spire.Pdf.Graphics.PdfFontBase,System.Single)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="itemIndent">The item indent.</param>
            <returns>List item.</returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Insert(System.Int32,Spire.Pdf.Lists.PdfListItem)">
            <summary>
            Inserts item at the specified index.
            </summary>
            <param name="index">The specified index.</param>
            <param name="item">The item.</param>
            <returns>The item index </returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Insert(System.Int32,Spire.Pdf.Lists.PdfListItem,System.Single)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
            <param name="itemIndent">The item indent.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Remove(Spire.Pdf.Lists.PdfListItem)">
            <summary>
            Removes the specified item from the list.
            </summary>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from the list.
            </summary>
            <param name="index">he specified index.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.IndexOf(Spire.Pdf.Lists.PdfListItem)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="item">The item to locate in the list. </param>
            <returns>The index of item if found in the list; otherwise, -1. </returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Clear">
            <summary>
            Clears collection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfSortedList">
            <summary>
            Represents the ordered list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfSortedList.Marker">
            <summary>
            Gets or sets marker of the list items.
            </summary>       
        </member>
        <member name="P:Spire.Pdf.Lists.PdfSortedList.MarkerHierarchy">
            <summary>
            True if user want to use numbering hierarchy, otherwise false.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor">
            <summary>
            Creates ordered list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.PdfNumberStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.Lists.PdfListItemCollection)">
            <summary>
            Creates ordered list using items.
            </summary>
            <param name="items">Items for a list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.Lists.PdfOrderedMarker)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.Lists.PdfListItemCollection,Spire.Pdf.Lists.PdfOrderedMarker)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="items">The item collection.</param>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The formatted text.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(System.String,Spire.Pdf.Lists.PdfOrderedMarker)">
            <summary>
            Initializes a new instance of the  class
            from formatted text that is splitted by new lines.
            </summary>
            <param name="text">The formatted text.</param>
            <param name="marker">The marker.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfList">
            <summary>
            Represents unordered list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfList.Marker">
            <summary>
            Gets or sets the marker.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(Spire.Pdf.Lists.PdfListItemCollection)">
            <summary>
            Creates unordered list using items.
            </summary>
            <param name="items">Items for a list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(Spire.Pdf.Lists.PdfMarker)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(Spire.Pdf.Lists.PdfListItemCollection,Spire.Pdf.Lists.PdfMarker)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="items">The items collection.</param>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The formatted text.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(System.String,Spire.Pdf.Lists.PdfMarker)">
            <summary>
            Initializes a new instance of the  class
            from formatted text that is splitted by new lines.
            </summary>
            <param name="text">The formatted text.</param>
            <param name="marker">The marker.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.BeginItemLayoutEventHandler">
            <summary>
            Delegate for handling BeginItemLayoutEvent.
            </summary>
            <param name="sender">The item that begin layout.</param>
            <param name="args">Begin Item Layout arguments.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.EndItemLayoutEventHandler">
            <summary>
            Delegate for handling EndItemLayoutEvent.
            </summary>
            <param name="sender">The item that end layout.</param>
            <param name="args">End Item Layout arguments.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.BeginItemLayoutEventArgs">
            <summary>
            Represents begin layout event arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.BeginItemLayoutEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item that layout.</value>
        </member>
        <member name="P:Spire.Pdf.Lists.BeginItemLayoutEventArgs.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page in which item start layout.</value>
        </member>
        <member name="T:Spire.Pdf.Lists.EndItemLayoutEventArgs">
            <summary>
            Represents end layout event arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.EndItemLayoutEventArgs.Item">
            <summary>
            Gets the item that layout.
            </summary>
            <value>The item that layout.</value>
        </member>
        <member name="P:Spire.Pdf.Lists.EndItemLayoutEventArgs.Page">
            <summary>
            Gets the page in which item ended layout.
            </summary>
            <value>The page in which item ended layout.</value>
        </member>
        <member name="M:Spire.Pdf.Tables.LightTableLayouter.GetWidths(System.Single)">
            <summary>
            Gets the widths.
            </summary>
            <param name="totalWidth">The total width</param>
            <returns>An array containing widths.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.LightTableLayouter.ZoomWidth(System.Single[]@,System.Single)">
            <summary>
            Zoom in or out the width.
            </summary>
            <param name="widths">The width</param>
            <param name="factor">The zoom factor</param>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTable">
            <summary>
            Represents fast table with few features.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The table column collection</value>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.DataMember">
            <summary>
            Gets or sets the data member.
            </summary>
            <value>The data member.</value>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.DataSourceType">
            <summary>
            Gets or sets the datasource type of the PdfTable
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.Style">
            <summary>
            Gets or sets the properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.IgnoreSorting">
            <summary>
            Gets or sets a value indicating whether
            PdfTable should ignore sorting in data table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.AllowCrossPages">
            <summary>
            Gets a value Indicates whether can cross a page.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.BeginRowLayout">
            <summary>
            The event raised on starting row lay outing.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.EndRowLayout">
            <summary>
            The event raised on having finished row lay outing.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.BeginCellLayout">
            <summary>
            The event raised on starting cell lay outing.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.EndCellLayout">
            <summary>
            The event raised on having finished cell layout.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.QueryNextRow">
            <summary>
            The event raised when the next row data is requested.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.QueryColumnCount">
            <summary>
            The event raised when the column number is requested.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.QueryRowCount">
            <summary>
            The event raised when the row number is requested.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.PointF,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="location">The location of the element.</param>
            <param name="width">The width of the table.</param>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
            <param name="width">The width of the table.</param>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.RectangleF)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF,Spire.Pdf.Tables.PdfTableLayoutFormat)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <param name="format">The format.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF,Spire.Pdf.Tables.PdfTableLayoutFormat)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <param name="format">The format.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,Spire.Pdf.Tables.PdfTableLayoutFormat)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="format">The format.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,System.Single)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,System.Single,Spire.Pdf.Tables.PdfTableLayoutFormat)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width.</param>
            <param name="format">The format.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTableStyle">
            <summary>
            Represents parameters of PdfTable.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfTableStyle.m_isFixWidth">
            <summary>
            Specifies whehther the table populates the entire page
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.IsFixWidth">
            <summary>
            get or set the value of fitWidth.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.DefaultStyle">
            <summary>
            Gets or sets the default cell style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.AlternateStyle">
            <summary>
            Gets or sets the odd row cell style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.HeaderSource">
            <summary>
            Gets or sets a value indicating whether
            to use rows or column captions for forming header.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.HeaderRowCount">
            <summary>
            Gets or sets the header rows count.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.HeaderStyle">
            <summary>
            Gets or sets the header cell style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.RepeatHeader">
            <summary>
            Gets or sets a value indicating whether to repeat header on each page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.ShowHeader">
            <summary>
            Gets or sets a value indicating whether the header is visible.
            </summary>
            <remarks>If the header is made up with ordinary rows they aren't visible
            while this property is set to false.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.CellSpacing">
            <summary>
            Gets or sets the cell spacing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.BorderOverlapStyle">
            <summary>
            Gets or sets a value indicating whether the cell borders
            should overlap its neighbour's borders or be drawn in the cell interior.
            </summary>
            <remarks>Please, use this property with caution,
            because it might cause unexpected results if borders
            are not the same width and colour.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.BorderPen">
            <summary>
            Gets or sets the pen of the table border.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTableStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfCellStyle">
            <summary>
            Represents information about cell style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.StringFormat">
            <summary>
            Gets or sets the string format of the cell text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.TextPen">
            <summary>
            Gets or sets the font which will be used to draw text outlines.
            </summary>
            <remarks>It should be null for default text representation.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.TextBrush">
            <summary>
            Gets or sets the brush which will be used to draw font.
            </summary>
            <remarks>This brush will be used to fill glyphs interior, which is the default.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.BorderPen">
            <summary>
            Gets or sets the pen with which the border will be drawn.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.BackgroundBrush">
            <summary>
            Gets or sets the brush with which the background will be drawn.
            </summary>
            <remarks>It's null by default.</remarks>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfCellStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfCellStyle.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="fontBrush">The font brush.</param>
            <param name="borderPen">The border pen.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfColumnCollection">
            <summary>
            Represents the collection of the columns.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfColumnCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfColumnCollection.Add(Spire.Pdf.Tables.PdfColumn)">
            <summary>
            Adds the specified column.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfColumnCollection.GetWidths(System.Int32,System.Int32)">
            <summary>
            Gets the widths of the columns.
            </summary>
            <param name="startColumn">The start column.</param>
            <param name="endColumn">The end column.</param>
            <returns>An array containing widths.</returns>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfColumn">
            <summary>
            Represents a single column of the table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfColumn.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfColumn.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfColumn.ColumnName">
            <summary>
            Gets or sets the column name.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfColumn.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfColumn.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfRow">
            <summary>
            Represents a single column of the table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfRow.Values">
            <summary>
            The array of values that are used to create the new row.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfRowCollection">
            <summary>
            Represents the collection of the columns.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfRowCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfRowCollection.Add(Spire.Pdf.Tables.PdfRow)">
            <summary>
            Adds the specified row.
            </summary>
            <param name="row">The row.</param> 
        </member>
        <member name="M:Spire.Pdf.Tables.PdfRowCollection.Add(System.Object[])">
            <summary>
            The array of values that are used to create the new row.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTableException">
            <summary>
            Represents as a message deliverer from PdfTable class to the user.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTableLayoutFormat">
            <summary>
            Represents the parameters for Light Table layout.
            </summary>  
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableLayoutFormat.StartColumnIndex">
            <summary>
            Gets or sets the start column index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableLayoutFormat.EndColumnIndex">
            <summary>
            Gets or sets the end column index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTableLayoutFormat.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTableLayoutFormat.#ctor(Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="baseFormat">The base format.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.BeginRowLayoutEventHandler">
            <summary>
            Delegate for handling StartRowLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when starting a row in a layout.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.EndRowLayoutEventHandler">
            <summary>
            Delegate for handling EndRowLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when you are finished laying out a row on a page.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.BeginCellLayoutEventHandler">
            <summary>
            Delegate for handling StartCellLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when laying out a cell on a page.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.EndCellLayoutEventHandler">
            <summary>
            Delegate for handling EndCellLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when you have finished laying out a page.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryNextRowEventHandler">
            <summary>
            Delegate for handling NextRowEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryColumnCountEventHandler">
            <summary>
            Delegate for handling GettingColumnNumber Event.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryRowCountEventHandler">
            <summary>
            Delegate for handling GettingRowNumber Event.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.BeginRowLayoutEventArgs">
            <summary>
            Represents StartRowLayout Event arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.CellStyle">
            <summary>
            Gets or sets the cell style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.ColumnSpanMap">
            <summary>
            Gets or sets the span map.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether table drawing should stop.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether this row should be ignored.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.IgnoreColumnFormat">
            <summary>
            Gets or sets a value indicating whether column string format should be ignored.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.MinimalHeight">
            <summary>
            Sets the minimal height of the row.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.EndRowLayoutEventArgs">
            <summary>
            Represents arguments of EndRowLayoutEvent.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.EndRowLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.EndRowLayoutEventArgs.LayoutCompleted">
            <summary>
            Gets a value indicating whether the row was drawn completely
            (nothing should be printed on the next page).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.EndRowLayoutEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this row should be the last one printed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.EndRowLayoutEventArgs.Bounds">
            <summary>
            Gets or sets the row bounds.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.CellLayoutEventArgs">
            <summary>
            The base class for cell layout arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.CellIndex">
            <summary>
            Gets the index of the cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.Value">
            <summary>
            Gets the value.
            </summary>
            <remarks>The value might be null or an empty string,
            which means that either no text were acquired or all
            text was on the previous page.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.Bounds">
            <summary>
            Gets the bounds of the cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.Graphics">
            <summary>
            Gets the graphics, on which the cell should be drawn.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.BeginCellLayoutEventArgs">
            <summary>
            Represents arguments of StartCellLayout Event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginCellLayoutEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether the value of this cell should be skipped.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.EndCellLayoutEventArgs">
            <summary>
            Represents arguments of EndCellLayout Event.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryNextRowEventArgs">
            <summary>
            Represents arguments of the NextRow Event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryNextRowEventArgs.RowData">
            <summary>
            Gets or sets the row data.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryNextRowEventArgs.ColumnCount">
            <summary>
            Gets the column count.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryNextRowEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryColumnCountEventArgs">
            <summary>
            The arguments of the GettingColumnNumber Event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryColumnCountEventArgs.ColumnCount">
            <summary>
            Gets or sets the column number.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryRowCountEventArgs">
            <summary>
            The arguments of the GettingRowNumber Event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryRowCountEventArgs.RowCount">
            <summary>
            Gets or sets the column number.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfHeaderSource">
            <summary>
            Specifies values specifying where the header should formed from.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfHeaderSource.ColumnCaptions">
            <summary>
            The header is formed from column captions' values.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfHeaderSource.Rows">
            <summary>
            The header is formed from rows.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.TableWidthType">
            <summary>
            Specifies type for table width.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.TableWidthType.FitPageWidth">
            <summary>
            Use the fit page width 
            each width of columns will zoom in or out 
            using the ratio of totall width of the table to the width of page
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.TableWidthType.Customs">
            <summary>
            use the Coustom width 
            takes the totall width of the set column as the width of the table,no zoom.
            notes:if set this type but does not set the column width it will use default column width
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTableDataSourceType">
            <summary>
            Specifies the datasource type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfTableDataSourceType.External">
            <summary>
            Specifies that the PdfTable has been binded to an external datasource.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfTableDataSourceType.TableDirect">
            <summary>
            Specifies that the values are directly binded to the PdfTable.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfBorderOverlapStyle">
            <summary>
            Specifies values of the border overlap style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfBorderOverlapStyle.Overlap">
            <summary>
            Cell borders overlap (are drawn using the same coordinates).
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfBorderOverlapStyle.Inside">
            <summary>
            Cell borders are drawns in the cell's interior.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Xmp.CustomMetadata">
            <summary>
            Represents custom Metadata.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.CustomMetadata.Item(System.String)">
            <summary>
            Sets the xmp property.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.CustomMetadata.SchemaType">
            <summary>
            Gets type of the schema.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Xmp.CustomMetadata.#ctor(Spire.Pdf.Xmp.XmpMetadata,System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
            <param name="xmlNamespace">The XML namespace.</param>
            <param name="namespaceUri">The namespace URI.</param>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpStructureType">
            <summary>
            Enumerates types of the xmp structure.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Dimensions">
            <summary>
            A structure containing dimensions for a drawn object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Font">
            <summary>
            A structure containing the characteristics of a font used in a document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Colorant">
            <summary>
            A structure containing the characteristics of a Coloring (swatch) used in a document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Thumbnail">
            <summary>
            A thumbnail image for a file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Job">
            <summary>
            Job structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpSchemaType">
            <summary>
            Enumerates types of the xmp schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.DublinCoreSchema">
            <summary>
            Dublin Core Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.BasicSchema">
            <summary>
            Basic Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.RightsManagementSchema">
            <summary>
            Rights Management Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.BasicJobTicketSchema">
            <summary>
            Basic Job Ticket Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.PagedTextSchema">
            <summary>
            Paged Text Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.PDFSchema">
            <summary>
            Adobe PDF Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.Custom">
            <summary>
            Custom schema.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpArrayType">
            <summary>
            Types of the xmp arrays.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpArrayType.Unknown">
            <summary>
            Unknown array type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpArrayType.Bag">
            <summary>
            Unordered array.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpArrayType.Seq">
            <summary>
            Ordered array.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpArrayType.Alt">
            <summary>
            Alternative array.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpEntityBase">
            <summary>
            Base class for the xmp entities.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.XmpEntityBase.XmlData">
            <summary>
            Gets Xml data of the entity.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpMetadata">
            <summary>
            Represents XMP metadata of the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.XmpMetadata.XmlData">
            <summary>
            Gets XMP data in XML format.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.XmpMetadata.NamespaceManager">
            <summary>
            Gets namespace manager of the Xmp metadata.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.#ctor(Spire.Pdf.PdfDocumentInformation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.#ctor(System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="xmp">The XMP.</param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.Add(System.Xml.XmlElement)">
            <summary>
            Adds schema to the XMP in XML format.
            </summary>
            <param name="schema">XMP schema in XML format.</param>
            <remarks>If XMP already contains such schema - there will be two equal schemas at the xmp.</remarks>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetTitle">
            <summary>
            Return title if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetSubject">
            <summary>
            Return subject if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetAuthor">
            <summary>
            Return author if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetProducer">
            <summary>
            Return producer if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetKeywords">
            <summary>
            return keywords if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetCustomProperty(System.String)">
            <summary>
            Return specified custom field value if exists; otherwise return null
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetAllCustomProperties">
            <summary>
            Return all custom properties if exsit; otherwise return empty Dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetCreateDate">
            <summary>
            Return create date if exists; otherwise return default DateTime
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetCreator">
            <summary>
            Return creator if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetModifyDate">
            <summary>
            Return modify date if exists; otherwise return System.DateTime.MinValue
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetTitle(System.String)">
            <summary>
            Set title to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetSubject(System.String)">
            <summary>
            Set subject to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetAuthor(System.String)">
            <summary>
            Set subject to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetProducer(System.String)">
            <summary>
            Set producer to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetKeywords(System.String)">
            <summary>
            Set keywords to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetCustomProperty(System.String,System.String)">
            <summary>
            Set custom property to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetCreateDate(System.DateTime)">
            <summary>
            Set title to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetCreator(System.String)">
            <summary>
            Set Creator to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetModifyDate(System.DateTime)">
            <summary>
            Set ModifyDates to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="dt"></param>
        </member>
        <member name="P:Spire.Pdf.Xmp.XmpMetadata.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.RichTextCore.RichText">
            <summary>
            Represents the rich text.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichText.Xmlns">
            <summary>
            Gets or set the xmls.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichText.Xfa">
            <summary>
             Gets or set the xfa.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichText.Apiversion">
            <summary>
             Gets or set the apiversion.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichText.Spec">
            <summary>
             Gets or set the spec.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichText.Style">
            <summary>
             Gets or set the style.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichText.Paragraphs">
            <summary>
            Gets the paragraphs.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.#ctor(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Represents the rich text.
            </summary>
            <param name="annotation"></param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.ToApDictionary">
            <summary>
            To ap dictionary.
            </summary>
            <returns>The ap dictionary</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GenerateApDictionary">
            <summary>
            Generate ap dictionary.
            </summary>
            <returns>The ap dictionary</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GenerateNormalDictionary">
            <summary>
            Generate normal dictionary.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.Initialize">
            <summary>
            Initialize.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.ClientBound">
            <summary>
            Initialize the client bound.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.InitializeNormalDictionary">
            <summary>
            Initialize the normal dictionary.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetBbox">
            <summary>
            Get bbox.
            </summary>
            <returns>The bbox</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetTransparency">
            <summary>
            Get the transparency.
            </summary>
            <returns>the transparency</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GenerateApContent">
            <summary>
            Generate ap content.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.InitializeState">
            <summary>
            Initialize state.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.DrawBorderArea">
            <summary>
            Draw border area.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.AppendContent">
            <summary>
            Append content.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.DrawContents">
            <summary>
            Draw contents.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.DrawContents(System.String,Spire.RichTextCore.RichTextStyle)">
            <summary>
            Drae contents.
            </summary>
            <param name="text">The text</param>
            <param name="style">The rich text style</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.DrawText(System.String,Spire.RichTextCore.RichTextStyle)">
            <summary>
            Draw text.
            </summary>
            <param name="text">The text</param>
            <param name="style">The style</param>
            <returns>The float type list</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.DrawLine(System.Collections.Generic.List{System.Single},Spire.RichTextCore.RichTextStyle)">
            <summary>
            Draw lines.
            </summary>
            <param name="list">The list</param>
            <param name="style">The rich text style</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetFontResourceName(Spire.RichTextCore.RichTextStyle)">
            <summary>
            Get font resource name.
            </summary>
            <param name="style">The rich text style</param>
            <returns>The resource name</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.CreateFontDictionary(Spire.Pdf.Primitives.PdfName,System.String)">
            <summary>
            Create font dictionary.
            </summary>
            <param name="fontResourceName">The font resource name</param>
            <param name="fontName">The font name</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetFontName(Spire.RichTextCore.RichTextStyle)">
            <summary>
            Get font name.
            </summary>
            <param name="style">The rich style</param>
            <returns>The font name</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetStorkingPath">
            <summary>
            Get the the stroking path.
            </summary>
            <returns>The stroking path</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetFillPath">
            <summary>
            Get the the fill path.
            </summary>
            <returns>The fill path</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetLineWidth">
            <summary>
            Get line width.
            </summary>
            <returns>Line width</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetBackGroundColor">
            <summary>
            Get back ground color.
            </summary>
            <returns>The back ground color</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetBorderColor">
            <summary>
            Get the border color.
            </summary>
            <returns>The border color</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetBaseLine(System.Drawing.Font)">
            <summary>
            Get font base line.
            </summary>
            <param name="font">The font</param>
            <returns>The font base line</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetLineSpace(System.Drawing.Font)">
            <summary>
            Get the font line space.
            </summary>
            <param name="font">The font</param>
            <returns>The font line space</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.GetFont(System.String,System.Single)">
            <summary>
            Get font.
            </summary>
            <param name="fontName">The font name</param>
            <param name="fontSize">The font size</param>
            <returns>The font</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.MeasureTextWidth(System.String,System.Drawing.Font)">
            <summary>
            Measure text width
            </summary>
            <param name="text">The text</param>
            <param name="font">The font</param>
            <returns>The text width</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichText.Clear(System.Text.StringBuilder)">
            <summary>
            Clear the string builder content.
            </summary>
            <param name="sb">The string builder instance</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.MoveTo(System.Drawing.PointF)">
            <summary>
            Move the point to.
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.LineTo(System.Drawing.PointF)">
            <summary>
            Make current point to anthor point.
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.RestoreState">
            <summary>
            Restore curernt state.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.SaveState">
            <summary>
            Save the current state.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.BeginText">
            <summary>
            Begin draw text.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.EndText">
            <summary>
            End draw text.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.CTM(System.Drawing.Drawing2D.Matrix)">
            <summary>
            The ctm.
            </summary>
            <param name="m">The martix</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.SetCurrentColorSpace">
            <summary>
            Set the current color space.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.Tf(Spire.Pdf.Primitives.PdfName,System.Single)">
            <summary>
            Set curernt font name and font size.
            </summary>
            <param name="fontName">The font name</param>
            <param name="fontSize">The font size</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.TD(System.Single,System.Single)">
            <summary>
            The TD.
            </summary>
            <param name="x">The x</param>
            <param name="y">The y</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.TextShow(System.String)">
            <summary>
            Show text.
            </summary>
            <param name="charCodes">char codes</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.NonZeroOldFill">
            <summary>
            Use non-zero Fill the current path.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.StrokenPath">
            <summary>
            Storken the current path.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.CloseStrokePath">
            <summary>
            Close the stroke path.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.IntroduceRGBColor(Spire.Pdf.Graphics.PdfRGBColor,System.Boolean)">
            <summary>
            Introduce rgb color.
            </summary>
            <param name="color">The color</param>
            <param name="isStroking">The is stroking</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.SetGrapchicsState">
            <summary>
            Set the graphics state.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichText.AppendRectangleF(System.Drawing.RectangleF)">
            <summary>
            Append rectangle
            </summary>
            <param name="bbox">The rectangle</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.SetLineWidth(System.Single)">
            <summary>
            Set line width.
            </summary>
            <param name="lineWidth">The line width</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.TextLeading(System.Single)">
            <summary>
            Set the text leading.
            </summary>
            <param name="lineSpace">The linespace</param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.SetCharacterSpace(System.Single)">
            <summary>
            Set character space.
            </summary>
            <param name="characterSpace"></param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.SetWordSpace(System.Single)">
            <summary>
            Set the word space.
            </summary>
            <param name="wordSpace"></param>
        </member>
        <member name="M:Spire.RichTextCore.RichText.EvenOddFill">
            <summary>
            Use even-odd Fill the current path.
            </summary>
        </member>
        <member name="T:Spire.RichTextCore.RichTextBuilder">
            <summary>
            Represents the rich text builder.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.#ctor">
            <summary>
            Represents the rich text builder instance.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.BuildRichText(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Builder richtext.
            </summary>
            <param name="annotation">The annotation</param>
            <returns>The richtext instance</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.GetRichContents(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get the rich content.
            </summary>
            <param name="annotation">The annotation</param>
            <returns>The rich content</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.GetDefaultStyle(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Get default style string.
            </summary>
            <param name="annotation">The annotation</param>
            <returns>The default style string</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.BuildDefaultStyle(System.String)">
            <summary>
            Builder default style.
            </summary>
            <param name="defaultStyle">The defaultStyle</param>
            <returns>The rich text style</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.StringToStream(System.String)">
            <summary>
            String to stream.
            </summary>
            <param name="richText">The rich text</param>
            <returns>The stream</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.ParseXmlToRichText(System.Xml.XmlDocument)">
            <summary>
            Parese xml to richtext.
            </summary>
            <param name="richXml">The xml</param>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.ParseBodyNode(System.Xml.XmlElement)">
            <summary>
            Parse body node.
            </summary>
            <param name="body">The body node</param>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.ParseBodyNode(System.Xml.XmlNodeList)">
            <summary>
            Parse body node.
            </summary>
            <param name="paragraph">The paragraph</param>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.ParseParagraph(System.Xml.XmlNode)">
            <summary>
            Parse paragraph.
            </summary>
            <param name="paragraph">The paragraph</param>
        </member>
        <!-- 对于成员“M:Spire.RichTextCore.RichTextBuilder.ParseParagraphNode(System.Xml.XmlNodeList,Spire.RichTextCore.Paragraph@)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.RichTextCore.RichTextBuilder.ParseSpan(System.Xml.XmlNode,Spire.RichTextCore.Paragraph@)">
            <summary>
            Parse span.
            </summary>
            <param name="span">The span</param>
            <param name="paragraph">The paragraph</param>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.ParseAttributes(System.Xml.XmlAttributeCollection)">
            <summary>
            Parse attributes.
            </summary>
            <param name="attributes">The attribute</param>
        </member>
        <member name="M:Spire.RichTextCore.RichTextBuilder.ParseAttribute(System.Xml.XmlAttribute)">
            <summary>
            Parse attributes.
            </summary>
            <param name="att">The attribute</param>
        </member>
        <member name="T:Spire.RichTextCore.RichTextStyle">
            <summary>
            Implements structures and routines working with rich text style.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichTextStyle.FontSize">
            <summary>
             Gets the font size.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichTextStyle.FontStyle">
            <summary>
             Gets the font style.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichTextStyle.FontWeight">
            <summary>
             Gets the font weight.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichTextStyle.FontFamily">
            <summary>
             Gets the font family.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichTextStyle.Color">
            <summary>
             Gets the color.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichTextStyle.TextDecoration">
            <summary>
            Gets the text deciration.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.RichTextStyle.FontStretch">
            <summary>
            Gets the font stretch.
            </summary>
        </member>
        <member name="M:Spire.RichTextCore.RichTextStyle.ReplaceStyle(Spire.RichTextCore.RichTextStyle)">
            <summary>
            Replace the style.
            </summary>
            <param name="baseStyle">The base style</param>
            <returns>The rich style</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextStyle.ParseDefaultStyle(System.String)">
            <summary>
            Parse default style.
            </summary>
            <param name="ds">The ds</param>
        </member>
        <member name="M:Spire.RichTextCore.RichTextStyle.ParseStyle(System.String)">
            <summary>
            Parse style
            </summary>
            <param name="styleString">The styleString</param>
        </member>
        <member name="M:Spire.RichTextCore.RichTextStyle.ParseFontWeight(System.String)">
            <summary>
            Parse font weight.
            </summary>
            <param name="weight">The wight</param>
            <returns>The font weight</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextStyle.ParseList(System.String)">
            <summary>
            Parse the list.
            </summary>
            <param name="val">The value</param>
            <returns>The list</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextStyle.ParseColor(System.String)">
            <summary>
            Parse color.
            </summary>
            <param name="color">The color</param>
            <returns>The color</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextStyle.ParseFloat(System.String)">
            <summary>
            Parse float.
            </summary>
            <param name="val">The value</param>
            <returns>A float value</returns>
        </member>
        <member name="M:Spire.RichTextCore.RichTextStyle.ParseEnums``1(System.String)">
            <summary>
            Parse enums.
            </summary>
            <typeparam name="T">The unknow type</typeparam>
            <param name="loFormat"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.RichTextCore.Paragraph">
            <summary>
            Implements structures and routines working with paragraph.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.Paragraph.Spans">
            <summary>
            Gets the spans.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.Paragraph.Style">
            <summary>
            Gets or set the style.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.Paragraph.Content">
            <summary>
            Gets or set the content.
            </summary>
        </member>
        <member name="T:Spire.RichTextCore.Span">
            <summary>
            Implements structures and routines working with span.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.Span.Style">
            <summary>
            Gets or set the style.
            </summary>
        </member>
        <member name="P:Spire.RichTextCore.Span.Content">
            <summary>
            Gets or set the content.
            </summary>
        </member>
        <member name="T:Spire.RichTextCore.TextAlign">
            <summary>
            The text align enum.
            </summary>
        </member>
        <member name="T:Spire.RichTextCore.FontStyle">
            <summary>
            The font style enum.
            </summary>
        </member>
        <member name="T:Spire.RichTextCore.TextDecoration">
            <summary>
            The text decoration enum.
            </summary>
        </member>
        <member name="T:Spire.RichTextCore.FontStretch">
            <summary>
            The font stretch enum.
            </summary>
        </member>
        <member name="T:Spire.Xmp.Impl.ByteBuffer">
            <summary>Byte buffer container including length of valid data.</summary>
            <author>Stefan Makswit</author>
            <since>11.10.2006</since>
        </member>
        <member name="P:Spire.Xmp.Impl.ByteBuffer.Length">
            <value>
            Returns the length, that means the number of valid bytes, of the buffer;
            the inner byte array might be bigger than that.
            the inner byte array might be bigger than that.
            </value>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.#ctor(System.Int32)">
            <param name="initialCapacity">the initial capacity for this buffer</param>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.#ctor(System.Byte[])">
            <param name="buffer">a byte array that will be wrapped with <c>ByteBuffer</c>.</param>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.#ctor(System.Byte[],System.Int32)">
            <param name="buffer">a byte array that will be wrapped with <c>ByteBuffer</c>.</param>
            <param name="length">the length of valid bytes in the array</param>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.#ctor(System.IO.Stream)">
            <summary>Loads the stream into a buffer.</summary>
            <param name="stream">an Stream</param>
            <exception cref="T:System.IO.IOException">If the stream cannot be read.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.#ctor(System.Byte[],System.Int32,System.Int32)">
            <param name="buffer">a byte array that will be wrapped with <c>ByteBuffer</c>.</param>
            <param name="offset">the offset of the provided buffer.</param>
            <param name="length">the length of valid bytes in the array</param>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.GetByteStream">
            <returns>Returns a byte stream that is limited to the valid amount of bytes.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.ByteAt(System.Int32)">
            <param name="index">the index to retrieve the byte from</param>
            <returns>Returns a byte from the buffer</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.CharAt(System.Int32)">
            <param name="index">the index to retrieve a byte as int or char.</param>
            <returns>Returns a byte from the buffer</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.Append(System.Byte)">
            <summary>Appends a byte to the buffer.</summary>
            <param name="b">a byte</param>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.Append(System.Byte[],System.Int32,System.Int32)">
            <summary>Appends a byte array or part of to the buffer.</summary>
            <param name="bytes">a byte array</param>
            <param name="offset">an offset with</param>
            <param name="len" />
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.Append(System.Byte[])">
            <summary>Append a byte array to the buffer</summary>
            <param name="bytes">a byte array</param>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.Append(Spire.Xmp.Impl.ByteBuffer)">
            <summary>Append another buffer to this buffer.</summary>
            <param name="anotherBuffer">another <c>ByteBuffer</c></param>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.GetEncoding">
            <summary>Detects the encoding of the byte buffer, stores and returns it.</summary>
            <remarks>
            Detects the encoding of the byte buffer, stores and returns it.
            Only UTF-8, UTF-16LE/BE and UTF-32LE/BE are recognized.
            </remarks>
            <returns>Returns the encoding string.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ByteBuffer.EnsureCapacity(System.Int32)">
            <summary>
            Ensures the requested capacity by increasing the buffer size when the
            current length is exceeded.
            </summary>
            <param name="requestedLength">requested new buffer length</param>
        </member>
        <member name="T:Spire.Xmp.Impl.FixAsciiControlsReader">
            <author>Stefan Makswit</author>
            <since>22.08.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.FixAsciiControlsReader._state">
            <summary>the state of the automaton</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.FixAsciiControlsReader._control">
            <summary>the result of the escaping sequence</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.FixAsciiControlsReader._digits">
            <summary>count the digits of the sequence</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.FixAsciiControlsReader.#ctor(System.IO.StreamReader)">
            <summary>The look-ahead size is 6 at maximum (&amp;#xAB;)</summary>
            <seealso cref="M:Spire.Xmp.Sharpen.PushbackReader.#ctor(System.IO.StreamReader,System.Int32)" />
            <param name="reader">a Reader</param>
        </member>
        <member name="M:Spire.Xmp.Impl.FixAsciiControlsReader.Read(System.Char[],System.Int32,System.Int32)">
            <exception cref="T:System.IO.IOException" />
        </member>
        <member name="M:Spire.Xmp.Impl.FixAsciiControlsReader.ProcessChar(System.Char)">
            <summary>Processes numeric escaped chars to find out if they are a control character.</summary>
            <param name="ch">a char</param>
            <returns>Returns the char directly or as replacement for the escaped sequence.</returns>
        </member>
        <member name="T:Spire.Xmp.Impl.Iso8601Converter">
            <summary>Converts between ISO 8601 Strings and <c>Calendar</c> with millisecond resolution.</summary>
            <author>Stefan Makswit</author>
            <since>16.02.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.Iso8601Converter.Parse(System.String)">
            <summary>Converts an ISO 8601 string to an <c>XMPDateTime</c>.</summary>
            <remarks>
            Converts an ISO 8601 string to an <c>XMPDateTime</c>.
            Parse a date according to ISO 8601 and
            http://www.w3.org/TR/NOTE-datetime:
            <list type="bullet">
            <item>YYYY</item>
            <item>YYYY-MM</item>
            <item>YYYY-MM-DD</item>
            <item>YYYY-MM-DDThh:mmTZD</item>
            <item>YYYY-MM-DDThh:mm:ssTZD</item>
            <item>YYYY-MM-DDThh:mm:ss.sTZD</item>
            </list>
            Data fields:
            <list type="bullet">
            <item>YYYY = four-digit year</item>
            <item>MM = two-digit month (01=January, etc.)</item>
            <item>DD = two-digit day of month (01 through 31)</item>
            <item>hh = two digits of hour (00 through 23)</item>
            <item>mm = two digits of minute (00 through 59)</item>
            <item>ss = two digits of second (00 through 59)</item>
            <item>s = one or more digits representing a decimal fraction of a second</item>
            <item>TZD = time zone designator (Z or +hh:mm or -hh:mm)</item>
            </list>
            Note that ISO 8601 does not seem to allow years less than 1000 or greater
            than 9999. We allow any year, even negative ones. The year is formatted
            as "%.4d".
            <para />
            <em>Note:</em> Tolerate missing TZD, assume is UTC. Photoshop 8 writes
            dates like this for exif:GPSTimeStamp.
            <para />
            <em>Note:</em> DOES NOT APPLY ANYMORE.
            Tolerate missing date portion, in case someone foolishly
            writes a time-only value that way.
            </remarks>
            <param name="iso8601String">a date string that is ISO 8601 conform.</param>
            <returns>Returns a <c>Calendar</c>.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Is thrown when the string is non-conform.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.Iso8601Converter.Parse(System.String,Spire.Xmp.IXmpDateTime)">
            <param name="iso8601String">a date string that is ISO 8601 conform.</param>
            <param name="binValue">an existing XMPDateTime to set with the parsed date</param>
            <returns>Returns an XMPDateTime-object containing the ISO8601-date.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Is thrown when the string is non-conform.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.Iso8601Converter.Render(Spire.Xmp.IXmpDateTime)">
            <summary>Converts a <c>Calendar</c> into an ISO 8601 string.</summary>
            <remarks>
            Converts a <c>Calendar</c> into an ISO 8601 string.
            Format a date according to ISO 8601 and http://www.w3.org/TR/NOTE-datetime:
            <list type="bullet">
            <item>YYYY</item>
            <item>YYYY-MM</item>
            <item>YYYY-MM-DD</item>
            <item>YYYY-MM-DDThh:mmTZD</item>
            <item>YYYY-MM-DDThh:mm:ssTZD</item>
            <item>YYYY-MM-DDThh:mm:ss.sTZD</item>
            </list>
            Data fields:
            <list type="bullet">
            <item>YYYY = four-digit year</item>
            <item>MM     = two-digit month (01=January, etc.)</item>
            <item>DD     = two-digit day of month (01 through 31)</item>
            <item>hh     = two digits of hour (00 through 23)</item>
            <item>mm     = two digits of minute (00 through 59)</item>
            <item>ss     = two digits of second (00 through 59)</item>
            <item>s     = one or more digits representing a decimal fraction of a second</item>
            <item>TZD     = time zone designator (Z or +hh:mm or -hh:mm)</item>
            </list>
            <para />
            <em>Note:</em> ISO 8601 does not seem to allow years less than 1000 or greater than 9999.
            We allow any year, even negative ones. The year is formatted as "%.4d".
            <para />
            <em>Note:</em> Fix for bug 1269463 (silently fix out of range values) included in parsing.
            The quasi-bogus "time only" values from Photoshop CS are not supported.
            </remarks>
            <param name="dateTime">an XMPDateTime-object.</param>
            <returns>Returns an ISO 8601 string.</returns>
        </member>
        <member name="T:Spire.Xmp.Impl.ParseState">
            <author>Stefan Makswit</author>
            <since>22.08.2006</since>
        </member>
        <member name="P:Spire.Xmp.Impl.ParseState.Pos">
            <returns>Returns the current position.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseState.#ctor(System.String)">
            <param name="str">initializes the parser container</param>
        </member>
        <member name="P:Spire.Xmp.Impl.ParseState.HasNext">
            <value>Returns whether there are more chars to come.</value>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseState.Ch(System.Int32)">
            <param name="index">index of char</param>
            <returns>Returns char at a certain index.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseState.Ch">
            <returns>Returns the current char or 0x0000 if there are no more chars.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseState.Skip">
            <summary>Skips the next char.</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseState.GatherInt(System.String,System.Int32)">
            <summary>Parses a integer from the source and sets the pointer after it.</summary>
            <param name="errorMsg">Error message to put in the exception if no number can be found</param>
            <param name="maxValue">the max value of the number to return</param>
            <returns>Returns the parsed integer.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if no integer can be found.</exception>
        </member>
        <member name="T:Spire.Xmp.Impl.Latin1Converter">
            <author>Stefan Makswit</author>
            <since>12.10.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.Latin1Converter.Convert(Spire.Xmp.Impl.ByteBuffer)">
            <summary>A converter that processes a byte buffer containing a mix of UTF8 and Latin-1/Cp1252 chars.</summary>
            <remarks>
            A converter that processes a byte buffer containing a mix of UTF8 and Latin-1/Cp1252 chars.
            The result is a buffer where those chars have been converted to UTF-8;
            that means it contains only valid UTF-8 chars.
            <para />
            <em>Explanation of the processing:</em> First the encoding of the buffer is detected looking
            at the first four bytes (that works only if the buffer starts with an ASCII-char,
            like xmls &apos;&lt;&apos;). UTF-16/32 flavours do not require further proccessing.
            <para />
            In the case, UTF-8 is detected, it assumes wrong UTF8 chars to be a sequence of
            Latin-1/Cp1252 encoded bytes and converts the chars to their corresponding UTF-8 byte
            sequence.
            <para />
            The 0x80..0x9F range is undefined in Latin-1, but is defined in Windows code
            page 1252. The bytes 0x81, 0x8D, 0x8F, 0x90, and 0x9D are formally undefined
            by Windows 1252. These are in XML's RestrictedChar set, so we map them to a
            space.
            <para />
            The official Latin-1 characters in the range 0xA0..0xFF are converted into
            the Unicode Latin Supplement range U+00A0 - U+00FF.
            <para />
            <em>Example:</em> If an Euro-symbol (€) appears in the byte buffer (0xE2, 0x82, 0xAC),
            it will be left as is. But if only the first two bytes are appearing,
            followed by an ASCII char a (0xE2 - 0x82 - 0x41), it will be converted to
            0xC3, 0xA2 (â) - 0xE2, 0x80, 0x9A (‚) - 0x41 (a).
            </remarks>
            <param name="buffer">a byte buffer contain</param>
            <returns>Returns a new buffer containing valid UTF-8</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Latin1Converter.ConvertToUtf8(System.Byte)">
            <summary>
            Converts a Cp1252 char (contains all Latin-1 chars above 0x80) into a
            UTF-8 byte sequence.
            </summary>
            <remarks>
            Converts a Cp1252 char (contains all Latin-1 chars above 0x80) into a
            UTF-8 byte sequence. The bytes 0x81, 0x8D, 0x8F, 0x90, and 0x9D are
            formally undefined by Windows 1252 and therefore replaced by a space
            (0x20).
            </remarks>
            <param name="ch">an Cp1252 / Latin-1 byte</param>
            <returns>Returns a byte array containing a UTF-8 byte sequence.</returns>
        </member>
        <member name="T:Spire.Xmp.Impl.ParameterAsserts">
            <author>Stefan Makswit</author>
            <since>11.08.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertArrayName(System.String)">
            <summary>Asserts that an array name is set.</summary>
            <param name="arrayName">an array name</param>
            <exception cref="T:Spire.Xmp.XmpException">Array name is null or empty</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertPropName(System.String)">
            <summary>Asserts that a property name is set.</summary>
            <param name="propName">a property name or path</param>
            <exception cref="T:Spire.Xmp.XmpException">Property name is null or empty</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertSchemaNs(System.String)">
            <summary>Asserts that a schema namespace is set.</summary>
            <param name="schemaNs">a schema namespace</param>
            <exception cref="T:Spire.Xmp.XmpException">Schema is null or empty</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertPrefix(System.String)">
            <summary>Asserts that a prefix is set.</summary>
            <param name="prefix">a prefix</param>
            <exception cref="T:Spire.Xmp.XmpException">Prefix is null or empty</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertSpecificLang(System.String)">
            <summary>Asserts that a specific language is set.</summary>
            <param name="specificLang">a specific lang</param>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertStructName(System.String)">
            <summary>Asserts that a struct name is set.</summary>
            <param name="structName">a struct name</param>
            <exception cref="T:Spire.Xmp.XmpException">Struct name is null or empty</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertNotNull(System.Object)">
            <summary>Asserts that a parameter is not null.</summary>
            <param name="param">the parameter's value</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the parameter is null.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertNotNullOrEmpty(System.String)">
            <summary>Asserts that any string parameter is not null or empty.</summary>
            <param name="param">a string parameter's value</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the parameter is null or has length 0.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParameterAsserts.AssertImplementation(Spire.Xmp.IXmpMeta)">
            <summary>Asserts that the xmp object is of this implemention (<see cref="T:Spire.Xmp.Impl.XmpMeta" />).</summary>
            <param name="xmp">the XMP object</param>
            <exception cref="T:Spire.Xmp.XmpException">A wrong implentaion is used.</exception>
        </member>
        <member name="F:Spire.Xmp.Impl.RdfTerm.Rdf">
            <summary>Start of coreSyntaxTerms.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.RdfTerm.Datatype">
            <summary>End of coreSyntaxTerms</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.RdfTerm.Description">
            <summary>Start of additions for syntax Terms.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.RdfTerm.Li">
            <summary>End of of additions for syntaxTerms.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.RdfTerm.AboutEach">
            <summary>Start of oldTerms.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.RdfTerm.BagId">
            <summary>End of oldTerms.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.RdfTerm.FirstSyntax">
            <summary>! Yes, the syntax terms include the core terms.</summary>
        </member>
        <member name="T:Spire.Xmp.Impl.ParseRdf">
            <summary>Parser for "normal" XML serialisation of RDF.</summary>
            <author>Stefan Makswit</author>
            <since>14.07.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.ParseRdf.DefaultPrefix">
            <summary>this prefix is used for default namespaces</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Parse(System.Xml.XmlElement,Spire.Xmp.Options.ParseOptions)">
            <summary>The main parsing method.</summary>
            <remarks>
            The main parsing method. The XML tree is walked through from the root node and and XMP tree
            is created. This is a raw parse, the normalisation of the XMP tree happens outside.
            </remarks>
            <param name="xmlRoot">the XML root node</param>
            <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <returns>Returns an XMP metadata object (not normalized)</returns>
            <exception cref="T:Spire.Xmp.XmpException">Occurs if the parsing fails for any reason.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_RDF(Spire.Xmp.Impl.XmpMeta,System.Xml.XmlElement,Spire.Xmp.Options.ParseOptions)">
            <summary>
            Each of these parsing methods is responsible for recognizing an RDF
            syntax production and adding the appropriate structure to the XMP tree.
            </summary>
            <remarks>
            Each of these parsing methods is responsible for recognizing an RDF
            syntax production and adding the appropriate structure to the XMP tree.
            They simply return for success, failures will throw an exception.
            </remarks>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="rdfRdfNode">the top-level xml node</param>
            <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_NodeElementList(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,Spire.Xmp.Options.ParseOptions)">
            <summary>
            7.2.10 nodeElementList
            <para />
            ws* ( nodeElement ws* )
            </summary>
            <remarks>
            This method is only called from the rdf:RDF-node (top level).
            </remarks>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="rdfRdfNode">the top-level xml node</param>
            /// <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_NodeElement(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.Boolean,Spire.Xmp.Options.ParseOptions)">
            <summary>
            7.2.5 nodeElementURIs
            anyURI - ( coreSyntaxTerms | rdf:li | oldTerms )
            7.2.11 nodeElement
            start-element ( URI == nodeElementURIs,
            attributes == set ( ( idAttr | nodeIdAttr | aboutAttr )?, propertyAttr* ) )
            propertyEltList
            end-element()
            A node element URI is rdf:Description or anything else that is not an RDF
            term.
            </summary>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlNode">the currently processed XML node</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_NodeElementAttrs(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.Boolean,Spire.Xmp.Options.ParseOptions)">
            <remarks>
            7.2.7 propertyAttributeURIs
            anyURI - ( coreSyntaxTerms | rdf:Description | rdf:li | oldTerms )
            7.2.11 nodeElement
            start-element ( URI == nodeElementURIs,
            attributes == set ( ( idAttr | nodeIdAttr | aboutAttr )?, propertyAttr* ) )
            propertyEltList
            end-element()
            Process the attribute list for an RDF node element. A property attribute URI is
            anything other than an RDF term. The rdf:ID and rdf:nodeID attributes are simply ignored,
            as are rdf:about attributes on inner nodes.
            </remarks>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlNode">the currently processed XML node</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_PropertyElementList(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.Boolean,Spire.Xmp.Options.ParseOptions)">
            <summary>
            7.2.13 propertyEltList
            ws* ( propertyElt ws* )
            </summary>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlParent">the currently processed XML node</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_PropertyElement(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.Boolean,Spire.Xmp.Options.ParseOptions)">
            <remarks>
            7.2.14 propertyElt
            resourcePropertyElt | literalPropertyElt | parseTypeLiteralPropertyElt |
            parseTypeResourcePropertyElt | parseTypeCollectionPropertyElt |
            parseTypeOtherPropertyElt | emptyPropertyElt
            7.2.15 resourcePropertyElt
            start-element ( URI == propertyElementURIs, attributes == set ( idAttr? ) )
            ws* nodeElement ws
            end-element()
            7.2.16 literalPropertyElt
            start-element (
            URI == propertyElementURIs, attributes == set ( idAttr?, datatypeAttr?) )
            text()
            end-element()
            7.2.17 parseTypeLiteralPropertyElt
            start-element (
            URI == propertyElementURIs, attributes == set ( idAttr?, parseLiteral ) )
            literal
            end-element()
            7.2.18 parseTypeResourcePropertyElt
            start-element (
            URI == propertyElementURIs, attributes == set ( idAttr?, parseResource ) )
            propertyEltList
            end-element()
            7.2.19 parseTypeCollectionPropertyElt
            start-element (
            URI == propertyElementURIs, attributes == set ( idAttr?, parseCollection ) )
            nodeElementList
            end-element()
            7.2.20 parseTypeOtherPropertyElt
            start-element ( URI == propertyElementURIs, attributes == set ( idAttr?, parseOther ) )
            propertyEltList
            end-element()
            7.2.21 emptyPropertyElt
            start-element ( URI == propertyElementURIs,
            attributes == set ( idAttr?, ( resourceAttr | nodeIdAttr )?, propertyAttr* ) )
            end-element()
            The various property element forms are not distinguished by the XML element name,
            but by their attributes for the most part. The exceptions are resourcePropertyElt and
            literalPropertyElt. They are distinguished by their XML element content.
            NOTE: The RDF syntax does not explicitly include the xml:lang attribute although it can
            appear in many of these. We have to allow for it in the attribute counts below.
            </remarks>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlNode">the currently processed XML node</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_ResourcePropertyElement(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.Boolean,Spire.Xmp.Options.ParseOptions)">
            <remarks>
            7.2.15 resourcePropertyElt
            start-element ( URI == propertyElementURIs, attributes == set ( idAttr? ) )
            ws* nodeElement ws
            end-element()
            This handles structs using an rdf:Description node,
            arrays using rdf:Bag/Seq/Alt, and typedNodes. It also catches and cleans up qualified
            properties written with rdf:Description and rdf:value.
            </remarks>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlNode">the currently processed XML node</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_LiteralPropertyElement(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.Boolean)">
            <summary>
            7.2.16 literalPropertyElt
            start-element ( URI == propertyElementURIs,
            attributes == set ( idAttr?, datatypeAttr?) )
            text()
            end-element()
            Add a leaf node with the text value and qualifiers for the attributes.
            </summary>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlNode">the currently processed XML node</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_ParseTypeLiteralPropertyElement">
            <summary>
            7.2.17 parseTypeLiteralPropertyElt
            start-element ( URI == propertyElementURIs,
            attributes == set ( idAttr?, parseLiteral ) )
            literal
            end-element()
            </summary>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_ParseTypeResourcePropertyElement(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.Boolean,Spire.Xmp.Options.ParseOptions)">
            <remarks>
            7.2.18 parseTypeResourcePropertyElt
            start-element ( URI == propertyElementURIs,
            attributes == set ( idAttr?, parseResource ) )
            propertyEltList
            end-element()
            Add a new struct node with a qualifier for the possible rdf:ID attribute.
            Then process the XML child nodes to get the struct fields.
            </remarks>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlNode">the currently processed XML node</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <param name="options">ParseOptions to indicate the parse options provided by the client</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_ParseTypeCollectionPropertyElement">
            <summary>
            7.2.19 parseTypeCollectionPropertyElt
            start-element ( URI == propertyElementURIs,
            attributes == set ( idAttr?, parseCollection ) )
            nodeElementList
            end-element()
            </summary>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_ParseTypeOtherPropertyElement">
            <summary>
            7.2.20 parseTypeOtherPropertyElt
            start-element ( URI == propertyElementURIs, attributes == set ( idAttr?, parseOther ) )
            propertyEltList
            end-element()
            </summary>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.Rdf_EmptyPropertyElement(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.Boolean)">
            <remarks>
            7.2.21 emptyPropertyElt
            start-element ( URI == propertyElementURIs,
            attributes == set (
            idAttr?, ( resourceAttr | nodeIdAttr )?, propertyAttr* ) )
            end-element()
            &lt;ns:Prop1/&gt;  &lt;!-- a simple property with an empty value --&gt;
            &lt;ns:Prop2 rdf:resource="http: *www.adobe.com/"/&gt; &lt;!-- a URI value --&gt;
            &lt;ns:Prop3 rdf:value="..." ns:Qual="..."/&gt; &lt;!-- a simple qualified property --&gt;
            &lt;ns:Prop4 ns:Field1="..." ns:Field2="..."/&gt; &lt;!-- a struct with simple fields --&gt;
            An emptyPropertyElt is an element with no contained content, just a possibly empty set of
            attributes. An emptyPropertyElt can represent three special cases of simple XMP properties: a
            simple property with an empty value (ns:Prop1), a simple property whose value is a URI
            (ns:Prop2), or a simple property with simple qualifiers (ns:Prop3).
            An emptyPropertyElt can also represent an XMP struct whose fields are all simple and
            unqualified (ns:Prop4).
            It is an error to use both rdf:value and rdf:resource - that can lead to invalid  RDF in the
            verbose form written using a literalPropertyElt.
            The XMP mapping for an emptyPropertyElt is a bit different from generic RDF, partly for
            design reasons and partly for historical reasons. The XMP mapping rules are:
            <list type="bullet">
            <item> If there is an rdf:value attribute then this is a simple property
            with a text value.
            All other attributes are qualifiers.</item>
            <item> If there is an rdf:resource attribute then this is a simple property
            with a URI value.
            All other attributes are qualifiers.</item>
            <item> If there are no attributes other than xml:lang, rdf:ID, or rdf:nodeID
            then this is a simple
            property with an empty value.</item>
            <item> Otherwise this is a struct, the attributes other than xml:lang, rdf:ID,
            or rdf:nodeID are fields.</item>
            </list>
            </remarks>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlNode">the currently processed XML node</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.AddChildNode(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,System.Xml.XmlElement,System.String,System.Boolean)">
            <summary>Adds a child node.</summary>
            <param name="xmp">the xmp metadata object that is generated</param>
            <param name="xmpParent">the parent xmp node</param>
            <param name="xmlNode">the currently processed XML node</param>
            <param name="value">Node value</param>
            <param name="isTopLevel">Flag if the node is a top-level node</param>
            <returns>Returns the newly created child node.</returns>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.AddQualifierNode(Spire.Xmp.Impl.XmpNode,System.String,System.String)">
            <summary>Adds a qualifier node.</summary>
            <param name="xmpParent">the parent xmp node</param>
            <param name="name">
            the name of the qualifier which has to be
            QName including the <b>default prefix</b>
            </param>
            <param name="value">the value of the qualifier</param>
            <returns>Returns the newly created child node.</returns>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.FixupQualifiedNode(Spire.Xmp.Impl.XmpNode)">
            <summary>The parent is an RDF pseudo-struct containing an rdf:value field.</summary>
            <remarks>
            The parent is an RDF pseudo-struct containing an rdf:value field. Fix the
            XMP data model. The rdf:value node must be the first child, the other
            children are qualifiers. The form, value, and children of the rdf:value
            node are the real ones. The rdf:value node's qualifiers must be added to
            the others.
            </remarks>
            <param name="xmpParent">the parent xmp node</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown on parsing errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.IsWhitespaceNode(System.Xml.XmlNode)">
            <summary>Checks if the node is a white space.</summary>
            <param name="node">an XML-node</param>
            <returns>
            Returns whether the node is a whitespace node,
            i.e. a text node that contains only whitespaces.
            </returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.IsPropertyElementName(Spire.Xmp.Impl.RdfTerm)">
            <summary>
            7.2.6 propertyElementURIs
            anyURI - ( coreSyntaxTerms | rdf:Description | oldTerms )
            </summary>
            <param name="term">the term id</param>
            <returns>Return true if the term is a property element name.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.IsOldTerm(Spire.Xmp.Impl.RdfTerm)">
            <summary>
            7.2.4 oldTerms
            <para />
            rdf:aboutEach | rdf:aboutEachPrefix | rdf:bagID
            </summary>
            <param name="term">the term id</param>
            <returns>Returns true if the term is an old term.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.IsCoreSyntaxTerm(Spire.Xmp.Impl.RdfTerm)">
            <summary>
            7.2.2 coreSyntaxTerms
            <para />
            rdf:RDF | rdf:ID | rdf:about | rdf:parseType | rdf:resource | rdf:nodeID |
            rdf:datatype
            </summary>
            <param name="term">the term id</param>
            <returns>Return true if the term is a core syntax term</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.GetRdfTermKind(System.Xml.XmlElement)">
            <summary>Determines the ID for a certain RDF Term.</summary>
            <remarks>Arranged to hopefully minimize the parse time for large XMP.</remarks>
            <param name="node">an XML node</param>
            <returns>Returns the term ID.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.ParseRdf.IsNumberedArrayItemName(System.String)">
            <summary>Check if the child name</summary>
            <param name="nodeName">an XML node</param>
            <returns>Returns bool</returns>
        </member>
        <member name="T:Spire.Xmp.Impl.QName">
            <author>Stefan Makswit</author>
            <since>09.11.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.QName.#ctor(System.String)">
            <summary>Splits a qname into prefix and localname.</summary>
            <param name="qname">a QName</param>
        </member>
        <member name="M:Spire.Xmp.Impl.QName.#ctor(System.String,System.String)">
            <summary>Constructor that initializes the fields</summary>
            <param name="prefix">the prefix</param>
            <param name="localName">the name</param>
        </member>
        <member name="P:Spire.Xmp.Impl.QName.HasPrefix">
            <value>Returns whether the QName has a prefix.</value>
        </member>
        <member name="P:Spire.Xmp.Impl.QName.LocalName">
            <summary>XML localname</summary>
            <value>the localName</value>
        </member>
        <member name="P:Spire.Xmp.Impl.QName.Prefix">
            <summary>XML namespace prefix</summary>
            <value>the prefix</value>
        </member>
        <member name="T:Spire.Xmp.Impl.Utils">
            <summary>Utility functions for the XMPToolkit implementation.</summary>
            <author>Stefan Makswit</author>
            <since>06.06.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.Utils.UuidSegmentCount">
            <summary>segments of a UUID</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.Utils.UuidLength">
            <summary>length of a UUID</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.Utils._xmlNameStartChars">
            <summary>table of XML name start chars (&lt;= 0xFF)</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.Utils._xmlNameChars">
            <summary>table of XML name chars (&lt;= 0xFF)</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.NormalizeLangValue(System.String)">
            <summary>
            Normalize an xml:lang value so that comparisons are effectively case
            insensitive as required by RFC 3066 (which supersedes RFC 1766).
            </summary>
            <remarks>
            The normalization rules:
            <list type="bullet">
              <item>The primary subtag is lower case, the suggested practice of ISO 639.</item>
              <item>All 2 letter secondary subtags are upper case, the suggested practice of ISO 3166.</item>
              <item>All other subtags are lower case.</item>
            </list>
            </remarks>
            <param name="value">raw value</param>
            <returns>Returns the normalized value.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.SplitNameAndValue(System.String,System.String@,System.String@)">
            <summary>
            Split the name and value parts for field and qualifier selectors.
            </summary>
            <remarks>
            <list type="bullet">
              <item><c>[qualName="value"]</c> - An element in an array of structs, chosen by a field value.</item>
              <item><c>[?qualName="value"]</c> - An element in an array, chosen by a qualifier value.</item>
            </list>
            The value portion is a string quoted by <c>'</c> or <c>"</c>. The value may contain
            any character including a doubled quoting character. The value may be
            empty.
            <para />
            <em>Note:</em> It is assumed that the expression is formal correct.
            </remarks>
            <param name="selector">The selector</param>
            <param name="name">The name string</param>
            <param name="value">The value string</param>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.IsInternalProperty(System.String,System.String)">
            <param name="schema">a schema namespace</param>
            <param name="prop">an XMP Property</param>
            <returns>
            Returns true if the property is defined as &quot;Internal
            Property&quot;, see XMP Specification.
            </returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.CheckUuidFormat(System.String)">
            <summary>
            Check some requirements for an UUID:
            <list type="bullet">
              <item>Length of the UUID is 32</item>
              <item>The Delimiter count is 4 and all the 4 delimiter are on their right position (8,13,18,23)</item>
            </list>
            </summary>
            <param name="uuid">uuid to test</param>
            <returns>true - this is a well formed UUID, false - UUID has not the expected format</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.IsXmlName(System.String)">
            <summary>Simple check for valid XML names.</summary>
            <remarks>
            Within ASCII range
            <para />
            ":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6]
            <para />
            are accepted, above all characters (which is not entirely
            correct according to the XML Spec.
            </remarks>
            <param name="name">an XML Name</param>
            <returns>Return <c>true</c> if the name is correct.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.IsXmlNameNs(System.String)">
            <summary>
            Checks if the value is a legal "unqualified" XML name, as
            defined in the XML Namespaces proposed recommendation.
            </summary>
            <remarks>
            These are XML names, except that they must not contain a colon.
            </remarks>
            <param name="name">the value to check</param>
            <returns>Returns true if the name is a valid "unqualified" XML name.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.IsControlChar(System.Char)">
            <param name="c">a char</param>
            <returns>Returns true if the char is an ASCII control char.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.EscapeXml(System.String,System.Boolean,System.Boolean)">
            <summary>Serializes the node value in XML encoding.</summary>
            <remarks>
            Its used for tag bodies and attributes.
            <para />
            <em>Note:</em> The attribute is always limited by quotes,
            thats why <c>&amp;apos;</c> is never serialized.
            <para />
            <em>Note:</em> Control chars are written unescaped, but if the user uses others than tab, LF
            and CR the resulting XML will become invalid.
            </remarks>
            <param name="value">a string</param>
            <param name="forAttribute">flag if string is attribute value (need to additional escape quotes)</param>
            <param name="escapeWhitespaces">Decides if LF, CR and TAB are escaped.</param>
            <returns>Returns the value ready for XML output.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.RemoveControlChars(System.String)">
            <summary>Replaces the ASCII control chars with a space.</summary>
            <param name="value">a node value</param>
            <returns>Returns the cleaned up value</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.IsNameStartChar(System.Char)">
            <summary>Simple check if a character is a valid XML start name char.</summary>
            <remarks>
            Simple check if a character is a valid XML start name char.
            All characters according to the XML Spec 1.1 are accepted:
            http://www.w3.org/TR/xml11/#NT-NameStartChar
            </remarks>
            <param name="ch">a character</param>
            <returns>Returns true if the character is a valid first char of an XML name.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.Utils.IsNameChar(System.Char)">
            <summary>
            Simple check if a character is a valid XML name char
            (every char except the first one), according to the XML Spec 1.1:
            http://www.w3.org/TR/xml11/#NT-NameChar
            </summary>
            <param name="ch">a character</param>
            <returns>Returns true if the character is a valid char of an XML name.</returns>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpDateTime">
            <summary>The default implementation of <see cref="T:Spire.Xmp.IXmpDateTime" />.</summary>
            <author>Stefan Makswit</author>
            <since>16.02.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpDateTime._nanoseconds">
            <summary>The nanoseconds take micro and nano seconds, while the milliseconds are in the calendar.</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpDateTime.#ctor">
            <summary>
            Creates an <c>XMPDateTime</c>-instance with the current time in the default time zone.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpDateTime.#ctor(Spire.Xmp.Sharpen.Calendar)">
            <summary>Creates an <c>XMPDateTime</c>-instance from a calendar.</summary>
            <param name="calendar">a <c>Calendar</c></param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpDateTime.#ctor(System.String)">
            <summary>Creates an <c>XMPDateTime</c>-instance from an ISO 8601 string.</summary>
            <param name="strValue">an ISO 8601 string</param>
            <exception cref="T:Spire.Xmp.XmpException">If the string is a non-conform ISO 8601 string, an exception is thrown</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpDateTime.ToString">
            <returns>Returns the ISO string representation.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpDateTime.UnixTimeToDateTime(System.Int64)">
            <param name="unixTime">Number of milliseconds since the Unix epoch (1970-01-01 00:00:00).</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpDateTime.UnixTimeToDateTimeOffset(System.Int64)">
            <param name="unixTime">Number of milliseconds since the Unix epoch (1970-01-01 00:00:00).</param>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpIterator">
            <summary>The <c>XMPIterator</c> implementation.</summary>
            <remarks>
            The <c>XMPIterator</c> implementation.
            Iterates the XMP Tree according to a set of options.
            During the iteration the XMPMeta-object must not be changed.
            Calls to <c>skipSubtree()</c> / <c>skipSiblings()</c> will affect the iteration.
            </remarks>
            <author>Stefan Makswit</author>
            <since>29.06.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator._skipSiblings">
            <summary>flag to indicate that skipSiblings() has been called.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator._nodeIterator">
            <summary>the node iterator doing the work</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.#ctor(Spire.Xmp.Impl.XmpMeta,System.String,System.String,Spire.Xmp.Options.IteratorOptions)">
            <summary>Constructor with optional initial values.</summary>
            <remarks>If <c>propName</c> is provided, <c>schemaNS</c> has also be provided.</remarks>
            <param name="xmp">the iterated metadata object.</param>
            <param name="schemaNs">the iteration is reduced to this schema (optional)</param>
            <param name="propPath">the iteration is reduced to this property within the <c>schemaNS</c></param>
            <param name="options">advanced iteration options, see <see cref="T:Spire.Xmp.Options.IteratorOptions" /></param>
            <exception cref="T:Spire.Xmp.XmpException">If the node defined by the parameters is not existing.</exception>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpIterator.BaseNamespace">
            <summary>the base namespace of the property path, will be changed during the iteration</summary>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpIterator.NodeIterator">
            <summary>The <c>XMPIterator</c> implementation.</summary>
            <remarks>
            The <c>XMPIterator</c> implementation.
            It first returns the node itself, then recursively the children and qualifier of the node.
            </remarks>
            <author>Stefan Makswit</author>
            <since>29.06.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator.IterateNode">
            <summary>iteration state</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator.IterateChildren">
            <summary>iteration state</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator.IterateQualifier">
            <summary>iteration state</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator._state">
            <summary>the state of the iteration</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator._visitedNode">
            <summary>the currently visited node</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator._path">
            <summary>the recursively accumulated path</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator._childrenIterator">
            <summary>the iterator that goes through the children and qualifier list</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator._index">
            <summary>index of node with parent, only interesting for arrays</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator._subIterator">
            <summary>the iterator for each child</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpIterator.NodeIterator._returnProperty">
            <summary>the cached <c>PropertyInfo</c> to return</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.#ctor(Spire.Xmp.Impl.XmpIterator)">
            <summary>Default constructor</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.#ctor(Spire.Xmp.Impl.XmpIterator,Spire.Xmp.Impl.XmpNode,System.String,System.Int32)">
            <summary>Constructor for the node iterator.</summary>
            <param name="enclosing"></param>
            <param name="visitedNode">the currently visited node</param>
            <param name="parentPath">the accumulated path of the node</param>
            <param name="index">the index within the parent node (only for arrays)</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.HasNext">
            <summary>Prepares the next node to return if not already done.</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.ReportNode">
            <summary>Sets the returnProperty as next item or recurses into <c>hasNext()</c>.</summary>
            <returns>Returns if there is a next item to return.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.IterateChildrenMethod(Spire.Xmp.Sharpen.IIterator)">
            <summary>Handles the iteration of the children or qualfier</summary>
            <param name="iterator">an iterator</param>
            <returns>Returns if there are more elements available.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.Next">
            <summary>Calls hasNext() and returns the prepared node.</summary>
            <remarks>
            Calls hasNext() and returns the prepared node. Afterward it's set to null.
            The existence of returnProperty indicates if there is a next node, otherwise
            an exception is thrown.
            </remarks>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.Remove">
            <summary>Not supported.</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.AccumulatePath(Spire.Xmp.Impl.XmpNode,System.String,System.Int32)">
            <param name="currNode">the node that will be added to the path.</param>
            <param name="parentPath">the path up to this node.</param>
            <param name="currentIndex">the current array index if an array is traversed</param>
            <returns>Returns the updated path.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.CreatePropertyInfo(Spire.Xmp.Impl.XmpNode,System.String,System.String)">
            <summary>Creates a property info object from an <c>XMPNode</c>.</summary>
            <param name="node">an <c>XMPNode</c></param>
            <param name="baseNs">the base namespace to report</param>
            <param name="path">the full property path</param>
            <returns>Returns a <c>XMPProperty</c>-object that serves representation of the node.</returns>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpIterator.NodeIterator.XmpPropertyInfo">
            <remarks>
            Originally called "XmpPropertyInfo450"
            "450" was the line number in XMPIteratorImpl.java of the Adobe Java 5.1.2 source file
            This class was anonymous, but that is unnecessary here
            </remarks>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.GetReturnProperty">
            <returns>Returns the returnProperty.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIterator.SetReturnProperty(Spire.Xmp.IXmpPropertyInfo)">
            <param name="returnProperty">the returnProperty to set</param>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpIterator.NodeIteratorChildren">
            <summary>
            This iterator is derived from the default <c>NodeIterator</c>,
            and is only used for the option <see cref="F:Spire.Xmp.Options.IteratorOptions.JustChildren"/>.
            </summary>
            <author>Stefan Makswit</author>
            <since>02.10.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIteratorChildren.#ctor(Spire.Xmp.Impl.XmpIterator,Spire.Xmp.Impl.XmpNode,System.String)">
            <summary>Constructor</summary>
            <param name="enclosing"></param>
            <param name="parentNode">the node which children shall be iterated.</param>
            <param name="parentPath">the full path of the former node without the leaf node.</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpIterator.NodeIteratorChildren.HasNext">
            <summary>Prepares the next node to return if not already done.</summary>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpMeta">
            <summary>
            Implementation of <see cref="T:Spire.Xmp.IXmpMeta"/>.
            </summary>
            <author>Stefan Makswit</author>
            <since>17.02.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpMeta.ValueType.String">
            <summary>Property values are Strings by default</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpMeta._tree">
            <summary>root of the metadata tree</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpMeta._packetHeader">
            <summary>the xpacket processing instructions content</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.#ctor">
            <summary>Constructor for an empty metadata object.</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.#ctor(Spire.Xmp.Impl.XmpNode)">
            <summary>Constructor for a cloned metadata tree.</summary>
            <param name="tree">
            an prefilled metadata tree which fulfills all
            <c>XMPNode</c> contracts.
            </param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.AppendArrayItem(System.String,System.String,Spire.Xmp.Options.PropertyOptions,System.String,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.AppendArrayItem(System.String,System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.CountArrayItems(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetArrayItem(System.String,System.String,System.Int32)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetLocalizedText(System.String,System.String,System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetLocalizedText(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetLocalizedText(System.String,System.String,System.String,System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetProperty(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetProperty(System.String,System.String,Spire.Xmp.Impl.XmpMeta.ValueType)">
            <summary>Returns a property, but the result value can be requested.</summary>
            <remarks>
            Returns a property, but the result value can be requested.
            </remarks>
            <param name="schemaNs">a schema namespace</param>
            <param name="propName">a property name or path</param>
            <param name="valueType">the type of the value, see VALUE_...</param>
            <returns>Returns an <c>XMPProperty</c></returns>
            <exception cref="T:Spire.Xmp.XmpException">Collects any exception that occurs.</exception>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpMeta.XmpProperty">
            <remarks>
            Combines the two ported classes XmpProperty407 and XmpProperty682
            "407" and "682" were the line numbers in XMPMetaImpl.java of the Adobe Java 5.1.2 source file
            These classes were anonymous, and that is unnecessary here
            </remarks>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyObject(System.String,System.String,Spire.Xmp.Impl.XmpMeta.ValueType)">
            <summary>Returns a property, but the result value can be requested.</summary>
            <param name="schemaNs">a schema namespace</param>
            <param name="propName">a property name or path</param>
            <param name="valueType">the type of the value, see VALUE_...</param>
            <returns>
            Returns the node value as an object according to the
            <c>valueType</c>.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Collects any exception that occurs.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyBoolean(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyBoolean(System.String,System.String,System.Boolean,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyBoolean(System.String,System.String,System.Boolean)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyInteger(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyInteger(System.String,System.String,System.Int32,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyInteger(System.String,System.String,System.Int32)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyLong(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyLong(System.String,System.String,System.Int64,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyLong(System.String,System.String,System.Int64)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyDouble(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyDouble(System.String,System.String,System.Double,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyDouble(System.String,System.String,System.Double)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyDate(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyDate(System.String,System.String,Spire.Xmp.IXmpDateTime,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyDate(System.String,System.String,Spire.Xmp.IXmpDateTime)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyCalendar(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyCalendar(System.String,System.String,Spire.Xmp.Sharpen.Calendar,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyCalendar(System.String,System.String,Spire.Xmp.Sharpen.Calendar)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyBase64(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetPropertyString(System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyBase64(System.String,System.String,System.Byte[],Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPropertyBase64(System.String,System.String,System.Byte[])">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetQualifier(System.String,System.String,System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetStructField(System.String,System.String,System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetArrayItem(System.String,System.String,System.Int32,System.String,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetArrayItem(System.String,System.String,System.Int32,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.InsertArrayItem(System.String,System.String,System.Int32,System.String,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.InsertArrayItem(System.String,System.String,System.Int32,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetProperty(System.String,System.String,System.Object,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetProperty(System.String,System.String,System.Object)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetQualifier(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetQualifier(System.String,System.String,System.String,System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetStructField(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetStructField(System.String,System.String,System.String,System.String,System.String)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetPacketHeader(System.String)">
            <summary>Sets the packetHeader attributes, only used by the parser.</summary>
            <param name="packetHeader">the processing instruction content</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.Clone">
            <summary>Performs a deep clone of the XMPMeta-object</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.Normalize(Spire.Xmp.Options.ParseOptions)">
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.GetRoot">
            <returns>Returns the root node of the XMP tree.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.DoSetArrayItem(Spire.Xmp.Impl.XmpNode,System.Int32,System.String,Spire.Xmp.Options.PropertyOptions,System.Boolean)">
            <summary>Locate or create the item node and set the value.</summary>
            <remarks>
            Locate or create the item node and set the value. Note the index
            parameter is one-based! The index can be in the range [1..size + 1] or
            "last()", normalize it and check the insert flags. The order of the
            normalization checks is important. If the array is empty we end up with
            an index and location to set item size + 1.
            </remarks>
            <param name="arrayNode">an array node</param>
            <param name="itemIndex">the index where to insert the item</param>
            <param name="itemValue">the item value</param>
            <param name="itemOptions">the options for the new item</param>
            <param name="insert">insert oder overwrite at index position?</param>
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.SetNode(Spire.Xmp.Impl.XmpNode,System.Object,Spire.Xmp.Options.PropertyOptions,System.Boolean)">
            <summary>
            The internals for setProperty() and related calls, used after the node is
            found or created.
            </summary>
            <param name="node">the newly created node</param>
            <param name="value">the node value, can be <c>null</c></param>
            <param name="newOptions">options for the new node, must not be <c>null</c>.</param>
            <param name="deleteExisting">flag if the existing value is to be overwritten</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown if options and value do not correspond</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMeta.EvaluateNodeValue(Spire.Xmp.Impl.XmpMeta.ValueType,Spire.Xmp.Impl.XmpNode)">
            <summary>
            Evaluates a raw node value to the given value type, apply special
            conversions for defined types in XMP.
            </summary>
            <param name="valueType">an int indicating the value type</param>
            <param name="propNode">the node containing the value</param>
            <returns>Returns a literal value for the node.</returns>
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="T:Spire.Xmp.Impl.XmpMetaParser">
            <summary>
            This class replaces the <c>ExpatAdapter.cpp</c> and does the
            XML-parsing and fixes the prefix.
            </summary>
            <remarks>
            After the parsing several normalisations are applied to the XMP tree.
            </remarks>
            <author>Stefan Makswit</author>
            <since>01.02.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.Parse(System.IO.Stream,Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses an XMP metadata object from a stream, including de-aliasing and normalisation.
            </summary>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if parsing or normalisation fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.Parse(System.Byte[],Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses an XMP metadata object from a stream, including de-aliasing and normalisation.
            </summary>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if parsing or normalisation fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.Parse(Spire.Xmp.Impl.ByteBuffer,Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses an XMP metadata object from a stream, including de-aliasing and normalisation.
            </summary>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if parsing or normalisation fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.Parse(System.String,Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses an XMP metadata object from a stream, including de-aliasing and normalisation.
            </summary>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if parsing or normalisation fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.Parse(System.Xml.XmlDocument,Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses an XMP metadata object from a XDocument, including de-aliasing and normalisation.
            </summary>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if parsing or normalisation fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.Extract(System.Byte[],Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses XML from a byte buffer,
            fixing the encoding (Latin-1 to UTF-8) and illegal control character optionally.
            </summary>
            <param name="bytes">a byte buffer containing the XMP packet</param>
            <param name="options">the parsing options</param>
            <returns>Returns an XML DOM-Document.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown when the parsing fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.ParseXmlFromInputStream(System.IO.Stream,Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses XML from an <see cref="T:System.IO.Stream"/>,
            fixing the encoding (Latin-1 to UTF-8) and illegal control character optionally.
            </summary>
            <param name="stream">an <c>Stream</c></param>
            <param name="options">the parsing options</param>
            <returns>Returns an XML DOM-Document.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown when the parsing fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.ParseXmlFromByteBuffer(Spire.Xmp.Impl.ByteBuffer,Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses XML from a byte buffer,
            fixing the encoding (Latin-1 to UTF-8) and illegal control character optionally.
            To improve the performance on legal files, it is first tried to parse normally,
            while the character fixing is only done when the first pass fails.
            </summary>
            <param name="buffer">a byte buffer containing the XMP packet</param>
            <param name="options">the parsing options</param>
            <returns>Returns an XML DOM-Document.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown when the parsing fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.ParseXmlString(System.String,Spire.Xmp.Options.ParseOptions)">
            <summary>
            Parses XML from a <see cref="T:System.String"/>, fixing the illegal control character optionally.
            </summary>
            <param name="input">a <c>String</c> containing the XMP packet</param>
            <param name="options">the parsing options</param>
            <returns>Returns an XML DOM-Document.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown when the parsing fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.ParseStream(System.IO.Stream,Spire.Xmp.Options.ParseOptions)">
            <exception cref="T:Spire.Xmp.XmpException">Wraps parsing and I/O-exceptions into an XMPException.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.ParseTextReader(System.IO.TextReader,Spire.Xmp.Options.ParseOptions)">
            <exception cref="T:Spire.Xmp.XmpException">Wraps parsing and I/O-exceptions into an XMPException.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpMetaParser.FindRootNode(System.Collections.IEnumerable,System.Boolean,System.Object[])">
            <summary>Find the XML node that is the root of the XMP data tree.</summary>
            <remarks>
            Find the XML node that is the root of the XMP data tree. Generally this
            will be an outer node, but it could be anywhere if a general XML document
            is parsed (e.g. SVG). The XML parser counted all rdf:RDF and
            pxmp:XMP_Packet nodes, and kept a pointer to the last one. If there is
            more than one possible root use PickBestRoot to choose among them.
            <para />
            If there is a root node, try to extract the version of the previous XMP
            toolkit.
            <para />
            Pick the first x:xmpmeta among multiple root candidates. If there aren't
            any, pick the first bare rdf:RDF if that is allowed. The returned root is
            the rdf:RDF child if an x:xmpmeta element was chosen. The search is
            breadth first, so a higher level candidate is chosen over a lower level
            one that was textually earlier in the serialized XML.
            </remarks>
            <param name="nodes">initially, the root of the xml document as a list</param>
            <param name="xmpmetaRequired">
            flag if the xmpmeta-tag is still required, might be set
            initially to <c>true</c>, if the parse option "REQUIRE_XMP_META" is set
            </param>
            <param name="result">The result array that is filled during the recursive process.</param>
            <returns>
            Returns an array that contains the result or <c>null</c>.
            The array contains:
            <list type="bullet">
            <item>[0] - the rdf:RDF-node</item>
            <item>[1] - an object that is either XMP_RDF or XMP_PLAIN (the latter is deprecated)</item>
            <item>[2] - the body text of the xpacket-instruction.</item>
            </list>
            </returns>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpNode">
            <summary>
            A node in the internally XMP tree, which can be a schema node, a property node, an array node,
            an array item, a struct node or a qualifier node (without '?').
            </summary>
            <remarks>
            Possible improvements:
            1. The kind Node of node might be better represented by a class-hierarchy of different nodes.
            2. The array type should be an enum
            3. isImplicitNode should be removed completely and replaced by return values of fi.
            4. hasLanguage, hasType should be automatically maintained by XMPNode
            </remarks>
            <author>Stefan Makswit</author>
            <since>21.02.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpNode._children">
            <summary>list of child nodes, lazy initialized</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpNode._childrenLookup">
            <summary>list of child node references for faster lookup. Only initialized when the original _children list exceeds 9 entries</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpNode._qualifier">
            <summary>list of qualifier of the node, lazy initialized</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpNode._options">
            <summary>options describing the kind of the node</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.#ctor(System.String,System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Creates an <c>XMPNode</c> with initial values.</summary>
            <param name="name">the name of the node</param>
            <param name="value">the value of the node</param>
            <param name="options">the options of the node</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.#ctor(System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Constructor for the node without value.</summary>
            <param name="name">the name of the node</param>
            <param name="options">the options of the node</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.Clear">
            <summary>Resets the node.</summary>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.Parent">
            <summary>
            Get the parent node.
            </summary>
            <remarks>
            Set internally by <see cref="M:Spire.Xmp.Impl.XmpNode.AddChild(Spire.Xmp.Impl.XmpNode)"/>, <see cref="M:Spire.Xmp.Impl.XmpNode.AddChild(Spire.Xmp.Impl.XmpNode)"/> and <see cref="M:Spire.Xmp.Impl.XmpNode.AddQualifier(Spire.Xmp.Impl.XmpNode)"/>.
            </remarks>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.GetChild(System.Int32)">
            <param name="index">an index [1..size]</param>
            <returns>Returns the child with the requested index.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.AddChild(Spire.Xmp.Impl.XmpNode)">
            <summary>Adds a node as child to this node.</summary>
            <param name="node">an XMPNode</param>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.AddChild(System.Int32,Spire.Xmp.Impl.XmpNode)">
            <summary>Adds a node as child to this node.</summary>
            <param name="index">
            the index of the node <em>before</em> which the new one is inserted.
            <em>Note:</em> The node children are indexed from [1..size]!
            An index of size + 1 appends a node.
            </param>
            <param name="node">an XMPNode</param>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.ReplaceChild(System.Int32,Spire.Xmp.Impl.XmpNode)">
            <summary>Replaces a node with another one.</summary>
            <param name="index">
            the index of the node that will be replaced.
            <em>Note:</em> The node children are indexed from [1..size]!
            </param>
            <param name="node">the replacement XMPNode</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.RemoveChild(System.Int32)">
            <summary>Removes a child at the requested index.</summary>
            <param name="itemIndex">the index to remove [1..size]</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.RemoveChild(Spire.Xmp.Impl.XmpNode)">
            <summary>Removes a child node.</summary>
            <remarks>
            Removes a child node.
            If its a schema node and doesn't have any children anymore, its deleted.
            </remarks>
            <param name="node">the child node to delete.</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.CleanupChildren">
            <summary>
            Removes the children list if this node has no children anymore;
            checks if the provided node is a schema node and doesn't have any children anymore,
            its deleted.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.RemoveChildren">
            <summary>Removes all children from the node.</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.GetChildrenLength">
            <returns>Returns the number of children without necessarily creating a list.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.FindChildByName(System.String)">
            <param name="expr">child node name to look for</param>
            <returns>Returns an <c>XMPNode</c> if node has been found, <c>null</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.GetQualifier(System.Int32)">
            <param name="index">an index [1..size]</param>
            <returns>Returns the qualifier with the requested index.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.GetQualifierLength">
            <returns>Returns the number of qualifier without necessarily creating a list.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.AddQualifier(Spire.Xmp.Impl.XmpNode)">
            <summary>Appends a qualifier to the qualifier list and sets respective options.</summary>
            <param name="qualNode">a qualifier node.</param>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.RemoveQualifier(Spire.Xmp.Impl.XmpNode)">
            <summary>Removes one qualifier node and fixes the options.</summary>
            <param name="qualNode">qualifier to remove</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.RemoveQualifiers">
            <summary>Removes all qualifiers from the node and sets the options appropriate.</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.FindQualifierByName(System.String)">
            <param name="expr">qualifier node name to look for</param>
            <returns>
            Returns a qualifier <c>XMPNode</c> if node has been found,
            <c>null</c> otherwise.
            </returns>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.HasChildren">
            <summary>
            Get whether the node has children.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.IterateChildren">
            <returns>
            Returns an iterator for the children.
            <em>Note:</em> take care to use it.remove(), as the flag are not adjusted in that case.
            </returns>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.HasQualifier">
            <summary>
            Returns whether the node has qualifier attached.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.IterateQualifier">
            <returns>
            Returns an iterator for the qualifier.
            <em>Note:</em> take care to use it.remove(), as the flag are not adjusted in that case.
            </returns>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpNode.Iterator391">
            <summary>
            Iterator that disallows removal.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.Clone">
            <summary>Performs a <b>deep clone</b> of the node and the complete subtree.</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.Clone(System.Boolean)">
            <summary>Performs a <b>deep clone</b> of the node and the complete subtree.
            if <c>skipEmpty</c> is true, it will not clone node which has empty child and empty value.</summary>
            <param name="skipEmpty">If true, it will not clone those nodes with empty value and empty children</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.CloneSubtree(Spire.Xmp.Impl.XmpNode,System.Boolean)">
            <summary>
            Performs a <b>deep clone</b> of the complete subtree (children and
            qualifier )into and add it to the destination node.
            if <c>skipEmpty</c> is true, it will not clone node which has empty child and empty value.
            </summary>
            <param name="destination">the node to add the cloned subtree</param>
            <param name="skipEmpty">If true, it will not clone those nodes with empty value and empty children</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.DumpNode(System.Boolean)">
            <summary>Renders this node and the tree under this node in a human readable form.</summary>
            <param name="recursive">Flag is qualifier and child nodes shall be rendered too</param>
            <returns>Returns a multiline string containing the dump.</returns>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.IsImplicit">
            <summary>
            Get and set the implicit node flag.
            </summary>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.HasAliases">
            <summary>
            Get and set whether the node contains aliases (applies only to schema nodes).
            </summary>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.IsAlias">
            <summary>
            Get and set whether this node is an alias (applies only to schema nodes).
            </summary>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.HasValueChild">
            <summary>
            Get and set whether this node has an <c>rdf:value</c> child node.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.Sort">
            <summary>
            Sorts the XMP node and its children, recursively.
            </summary>
            <remarks>
            Sorting occurs according to the following rules:
            <list type="bullet">
            <item>Nodes at one level are sorted by name, that is prefix + local name</item>
            <item>Starting at the root node the children and qualifier are sorted recursively,
            which the following exceptions.</item>
            <item>Sorting will not be used for arrays.</item>
            <item>Within qualifier "xml:lang" and/or "rdf:type" stay at the top in that order,
            all others are sorted.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.DumpNode(System.Text.StringBuilder,System.Boolean,System.Int32,System.Int32)">
            <summary>Dumps this node and its qualifier and children recursively.</summary>
            <remarks>
            Dumps this node and its qualifier and children recursively.
            <em>Note:</em> It creates empty options on every node.
            FfF: sort schemas and properties on each level if and only if it would increase performance
            </remarks>
            <param name="result">the buffer to append the dump.</param>
            <param name="recursive">Flag is qualifier and child nodes shall be rendered too</param>
            <param name="indent">the current indent level.</param>
            <param name="index">the index within the parent node (important for arrays)</param>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.IsLanguageNode">
            <summary>
            Get whether this node is a language qualifier.
            </summary>
        </member>
        <member name="P:Spire.Xmp.Impl.XmpNode.IsTypeNode">
            <summary>
            Get whether this node is a type qualifier.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.GetChildren">
            <summary>
            <em>Note:</em> This method should always be called when accessing 'children' to be sure
            that its initialized.
            </summary>
            <returns>Returns list of children that is lazy initialized.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.GetUnmodifiableChildren">
            <returns>Returns a read-only copy of child nodes list.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.GetQualifier">
            <returns>Returns list of qualifier that is lazy initialized.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.Find(System.Collections.Generic.IEnumerable{Spire.Xmp.Impl.XmpNode},System.String)">
            <summary>Internal find.</summary>
            <param name="list">the list to search in</param>
            <param name="expr">the search expression</param>
            <returns>Returns the found node or <c>nulls</c>.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.FindChild(System.Collections.Generic.List{Spire.Xmp.Impl.XmpNode},System.Collections.Generic.Dictionary{System.String,Spire.Xmp.Impl.XmpNode}@,System.String)">
            <summary>Internal child find.</summary>
            <param name="children">the child list to search in</param>
            <param name="lookup">the child dictionary ref to initialize or search. Needs to be a ref parameter or it won't update the original Dictionary</param>
            <param name="expr">the search expression</param>
            <returns>Returns the found node or <c>null</c>.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.AssertChildNotExisting(System.String)">
            <summary>Checks that a node name is not existing on the same level, except for array items.</summary>
            <param name="childName">the node name to check</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if a node with the same name is existing.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNode.AssertQualifierNotExisting(System.String)">
            <summary>Checks that a qualifier name is not existing on the same level.</summary>
            <param name="qualifierName">the new qualifier name</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if a node with the same name is existing.</exception>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpNodeUtils">
            <summary>Utilities for <c>XMPNode</c>.</summary>
            <author>Stefan Makswit</author>
            <since>Aug 28, 2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.FindSchemaNode(Spire.Xmp.Impl.XmpNode,System.String,System.Boolean)">
            <summary>Find or create a schema node if <c>createNodes</c> is false and</summary>
            <param name="tree">the root of the xmp tree.</param>
            <param name="namespaceUri">a namespace</param>
            <param name="createNodes">
            a flag indicating if the node shall be created if not found.
            <em>Note:</em> The namespace must be registered prior to this call.
            </param>
            <returns>
            Returns the schema node if found, <c>null</c> otherwise.
            Note: If <c>createNodes</c> is <c>true</c>, it is <b>always</b>
            returned a valid node.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">
            An exception is only thrown if an error occurred, not if a
            node was not found.
            </exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.FindSchemaNode(Spire.Xmp.Impl.XmpNode,System.String,System.String,System.Boolean)">
            <summary>Find or create a schema node if <c>createNodes</c> is true.</summary>
            <param name="tree">the root of the xmp tree.</param>
            <param name="namespaceUri">a namespace</param>
            <param name="suggestedPrefix">If a prefix is suggested, the namespace is allowed to be registered.</param>
            <param name="createNodes">
            a flag indicating if the node shall be created if not found.
            <em>Note:</em> The namespace must be registered prior to this call.
            </param>
            <returns>
            Returns the schema node if found, <c>null</c> otherwise.
            Note: If <c>createNodes</c> is <c>true</c>, it is <b>always</b>
            returned a valid node.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">
            An exception is only thrown if an error occurred, not if a
            node was not found.
            </exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.FindChildNode(Spire.Xmp.Impl.XmpNode,System.String,System.Boolean)">
            <summary>Find or create a child node under a given parent node.</summary>
            <remarks>
            Find or create a child node under a given parent node. If the parent node is no
            Returns the found or created child node.
            </remarks>
            <param name="parent">the parent node</param>
            <param name="childName">the node name to find</param>
            <param name="createNodes">flag, if new nodes shall be created.</param>
            <returns>Returns the found or created node or <c>null</c>.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.FindNode(Spire.Xmp.Impl.XmpNode,Spire.Xmp.Impl.XPath.XmpPath,System.Boolean,Spire.Xmp.Options.PropertyOptions)">
            <summary>Follow an expanded path expression to find or create a node.</summary>
            <param name="xmpTree">the node to begin the search.</param>
            <param name="xpath">the complete xpath</param>
            <param name="createNodes">
            flag if nodes shall be created
            (when called by <c>setProperty()</c>)
            </param>
            <param name="leafOptions">
            the options for the created leaf nodes (only when
            <c>createNodes == true</c>).
            </param>
            <returns>Returns the node if found or created or <c>null</c>.</returns>
            <exception cref="T:Spire.Xmp.XmpException">
            An exception is only thrown if an error occurred,
            not if a node was not found.
            </exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.DeleteNode(Spire.Xmp.Impl.XmpNode)">
            <summary>Deletes the the given node and its children from its parent.</summary>
            <remarks>
            Deletes the the given node and its children from its parent.
            Takes care about adjusting the flags.
            FfF: think about moving is to XMPNode... (make removeChild/Qualifier private and
            FfF: publish just deleteNode(XMPNode)
            </remarks>
            <param name="node">the top-most node to delete.</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.SetNodeValue(Spire.Xmp.Impl.XmpNode,System.Object)">
            <summary>This is setting the value of a leaf node.</summary>
            <param name="node">an XMPNode</param>
            <param name="value">a value</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.VerifySetOptions(Spire.Xmp.Options.PropertyOptions,System.Object)">
            <summary>Verifies the PropertyOptions for consistency and updates them as needed.</summary>
            <remarks>
            Verifies the PropertyOptions for consistency and updates them as needed.
            If options are <c>null</c> they are created with default values.
            FfF: add an kind of autofix options to PropertyOptions and remove this method!!!
            </remarks>
            <param name="options">the <c>PropertyOptions</c></param>
            <param name="itemValue">the node value to set</param>
            <returns>Returns the updated options.</returns>
            <exception cref="T:Spire.Xmp.XmpException">If the options are not consistant.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.SerializeNodeValue(System.Object)">
            <summary>
            Converts the node value to string, apply special conversions for defined
            types in XMP.
            </summary>
            <param name="value">the node value to set</param>
            <returns>Returns the String representation of the node value.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.FollowXPathStep(Spire.Xmp.Impl.XmpNode,Spire.Xmp.Impl.XPath.XmpPathSegment,System.Boolean)">
            <summary>
            After processing by ExpandXPath, a step can be of these forms:
            </summary>
            <remarks>
            After processing by ExpandXPath, a step can be of these forms:
            <list type="bullet">
            <item>qualName - A top level property or struct field.</item>
            <item>[index] - An element of an array.</item>
            <item>[last()] - The last element of an array.</item>
            <item>[qualName="value"] - An element in an array of structs, chosen by a field value.</item>
            <item>[?qualName="value"] - An element in an array, chosen by a qualifier value.</item>
            <item>?qualName - A general qualifier.</item>
            </list>
            Find the appropriate child node, resolving aliases, and optionally creating nodes.
            </remarks>
            <param name="parentNode">the node to start to start from</param>
            <param name="nextStep">the xpath segment</param>
            <param name="createNodes"></param>
            <returns>returns the found or created <see cref="T:Spire.Xmp.Impl.XPath.XmpPath"/> node</returns>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.FindQualifierNode(Spire.Xmp.Impl.XmpNode,System.String,System.Boolean)">
            <summary>Find or create a qualifier node under a given parent node.</summary>
            <remarks>
            Find or create a qualifier node under a given parent node. Returns a pointer to the
            qualifier node, and optionally an iterator for the node's position in
            the parent's vector of qualifiers. The iterator is unchanged if no qualifier node (null)
            is returned.
            <em>Note:</em> On entry, the qualName parameter must not have the leading '?' from the
            <see cref="T:Spire.Xmp.Impl.XPath.XmpPath"/> step.
            </remarks>
            <param name="parent">the parent XMPNode</param>
            <param name="qualName">the qualifier name</param>
            <param name="createNodes">flag if nodes shall be created</param>
            <returns>Returns the qualifier node if found or created, <c>null</c> otherwise.</returns>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.FindIndexedItem(Spire.Xmp.Impl.XmpNode,System.String,System.Boolean)">
            <param name="arrayNode">an array node</param>
            <param name="segment">the segment containing the array index</param>
            <param name="createNodes">flag if new nodes are allowed to be created.</param>
            <returns>Returns the index or index = -1 if not found</returns>
            <exception cref="T:Spire.Xmp.XmpException">Throws Exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.LookupFieldSelector(Spire.Xmp.Impl.XmpNode,System.String,System.String)">
            <summary>
            Searches for a field selector in a node:
            [fieldName="value] - an element in an array of structs, chosen by a field value.
            </summary>
            <remarks>
            Searches for a field selector in a node:
            [fieldName="value] - an element in an array of structs, chosen by a field value.
            No implicit nodes are created by field selectors.
            </remarks>
            <param name="arrayNode" />
            <param name="fieldName" />
            <param name="fieldValue" />
            <returns>Returns the index of the field if found, otherwise -1.</returns>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.LookupQualSelector(Spire.Xmp.Impl.XmpNode,System.String,System.String,System.Int32)">
            <summary>
            Searches for a qualifier selector in a node:
            [?qualName="value"] - an element in an array, chosen by a qualifier value.
            </summary>
            <remarks>
            Searches for a qualifier selector in a node:
            [?qualName="value"] - an element in an array, chosen by a qualifier value.
            No implicit nodes are created for qualifier selectors,
            except for an alias to an x-default item.
            </remarks>
            <param name="arrayNode">an array node</param>
            <param name="qualName">the qualifier name</param>
            <param name="qualValue">the qualifier value</param>
            <param name="aliasForm">
            in case the qual selector results from an alias,
            an x-default node is created if there has not been one.
            </param>
            <returns>Returns the index of th</returns>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.NormalizeLangArray(Spire.Xmp.Impl.XmpNode)">
            <summary>Make sure the x-default item is first.</summary>
            <remarks>
            Make sure the x-default item is first. Touch up &quot;single value&quot;
            arrays that have a default plus one real language. This case should have
            the same value for both items. Older Adobe apps were hardwired to only
            use the &quot;x-default&quot; item, so we copy that value to the other
            item.
            </remarks>
            <param name="arrayNode">an alt text array node</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.DetectAltText(Spire.Xmp.Impl.XmpNode)">
            <summary>See if an array is an alt-text array.</summary>
            <remarks>
            See if an array is an alt-text array. If so, make sure the x-default item
            is first.
            </remarks>
            <param name="arrayNode">the array node to check if its an alt-text array</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.AppendLangItem(Spire.Xmp.Impl.XmpNode,System.String,System.String)">
            <summary>Appends a language item to an alt text array.</summary>
            <param name="arrayNode">the language array</param>
            <param name="itemLang">the language of the item</param>
            <param name="itemValue">the content of the item</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if a duplicate property is added</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.ChooseLocalizedText(Spire.Xmp.Impl.XmpNode,System.String,System.String)">
            <summary>
            </summary>
            <remarks>
            <list>
            <item>Look for an exact match with the specific language.</item>
            <item>If a generic language is given, look for partial matches.</item>
            <item>Look for an "x-default"-item.</item>
            <item>Choose the first item.</item>
            </list>
            </remarks>
            <param name="arrayNode">the alt text array node</param>
            <param name="genericLang">the generic language</param>
            <param name="specificLang">the specific language</param>
            <returns>
            Returns the kind of match as an Integer and the found node in an
            array.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNodeUtils.LookupLanguageItem(Spire.Xmp.Impl.XmpNode,System.String)">
            <summary>Looks for the appropriate language item in a text alternative array.item</summary>
            <param name="arrayNode">an array node</param>
            <param name="language">the requested language</param>
            <returns>Returns the index if the language has been found, -1 otherwise.</returns>
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="T:Spire.Xmp.Impl.XmpNormalizer">
            <author>Stefan Makswit</author>
            <since>Aug 18, 2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpNormalizer._dcArrayForms">
            <summary>caches the correct dc-property array forms</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.Process(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Options.ParseOptions)">
            <summary>Normalizes a raw parsed XMPMeta-Object</summary>
            <param name="xmp">the raw metadata object</param>
            <param name="options">the parsing options</param>
            <returns>Returns the normalized metadata object</returns>
            <exception cref="T:Spire.Xmp.XmpException">Collects all severe processing errors.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.TweakOldXmp(Spire.Xmp.Impl.XmpNode)">
            <summary>
            Tweak old XMP: Move an instance ID from rdf:about to the
            <em>xmpMM:InstanceID</em> property.
            </summary>
            <remarks>
            Tweak old XMP: Move an instance ID from rdf:about to the
            <em>xmpMM:InstanceID</em> property. An old instance ID usually looks
            like &quot;uuid:bac965c4-9d87-11d9-9a30-000d936b79c4&quot;, plus InDesign
            3.0 wrote them like &quot;bac965c4-9d87-11d9-9a30-000d936b79c4&quot;. If
            the name looks like a UUID simply move it to <em>xmpMM:InstanceID</em>,
            don't worry about any existing <em>xmpMM:InstanceID</em>. Both will
            only be present when a newer file with the <em>xmpMM:InstanceID</em>
            property is updated by an old app that uses <em>rdf:about</em>.
            </remarks>
            <param name="tree">the root of the metadata tree</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if tweaking fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.TouchUpDataModel(Spire.Xmp.Impl.XmpMeta)">
            <summary>Visit all schemas to do general fixes and handle special cases.</summary>
            <param name="xmp">the metadata object implementation</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the normalisation fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.NormalizeDcArrays(Spire.Xmp.Impl.XmpNode)">
            <summary>
            Undo the denormalization performed by the XMP used in Acrobat 5.
            </summary>
            <remarks>
            If a Dublin Core array had only one item, it was serialized as a simple
            property.
            <para />
            The <c>xml:lang</c> attribute was dropped from an
            <c>alt-text</c> item if the language was <c>x-default</c>.
            </remarks>
            <param name="dcSchema">the DC schema node</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if normalization fails</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.RepairAltText(Spire.Xmp.Impl.XmpNode)">
            <summary>Make sure that the array is well-formed AltText.</summary>
            <remarks>
            Make sure that the array is well-formed AltText. Each item must be simple
            and have an "xml:lang" qualifier. If repairs are needed, keep simple
            non-empty items by adding the "xml:lang" with value "x-repair".
            </remarks>
            <param name="arrayNode">the property node of the array to repair.</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards unexpected exceptions.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.MoveExplicitAliases(Spire.Xmp.Impl.XmpNode,Spire.Xmp.Options.ParseOptions)">
            <summary>Visit all of the top level nodes looking for aliases.</summary>
            <remarks>
            Visit all of the top level nodes looking for aliases. If there is
            no base, transplant the alias subtree. If there is a base and strict
            aliasing is on, make sure the alias and base subtrees match.
            </remarks>
            <param name="tree">the root of the metadata tree</param>
            <param name="options">th parsing options</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards XMP errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.TransplantArrayItemAlias(Spire.Xmp.Sharpen.IIterator,Spire.Xmp.Impl.XmpNode,Spire.Xmp.Impl.XmpNode)">
            <summary>Moves an alias node of array form to another schema into an array</summary>
            <param name="propertyIt">the property iterator of the old schema (used to delete the property)</param>
            <param name="childNode">the node to be moved</param>
            <param name="baseArray">the base array for the array item</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards XMP errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.FixGpsTimeStamp(Spire.Xmp.Impl.XmpNode)">
            <summary>Fixes the GPS Timestamp in EXIF.</summary>
            <param name="exifSchema">the EXIF schema node</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the date conversion fails.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.DeleteEmptySchemas(Spire.Xmp.Impl.XmpNode)">
            <summary>Remove all empty schemas from the metadata tree that were generated during the rdf parsing.</summary>
            <param name="tree">the root of the metadata tree</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.CompareAliasedSubtrees(Spire.Xmp.Impl.XmpNode,Spire.Xmp.Impl.XmpNode,System.Boolean)">
            <summary>The outermost call is special.</summary>
            <remarks>
            The outermost call is special. The names almost certainly differ. The
            qualifiers (and hence options) will differ for an alias to the x-default
            item of a langAlt array.
            </remarks>
            <param name="aliasNode">the alias node</param>
            <param name="baseNode">the base node of the alias</param>
            <param name="outerCall">marks the outer call of the recursion</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards XMP errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpNormalizer.MigrateAudioCopyright(Spire.Xmp.IXmpMeta,Spire.Xmp.Impl.XmpNode)">
            <summary>
            The initial support for WAV files mapped a legacy ID3 audio copyright
            into a new xmpDM:copyright property.
            </summary>
            <remarks>
            The initial support for WAV files mapped a legacy ID3 audio copyright
            into a new xmpDM:copyright property. This is special case code to migrate
            that into dc:rights['x-default']. The rules:
            <list type="number">
              <item>
                If there is no dc:rights array, or an empty array -
                Create one with dc:rights['x-default'] set from double linefeed and xmpDM:copyright.
              </item>
              <item>
                If there is a dc:rights array but it has no x-default item -
                Create an x-default item as a copy of the first item then apply rule #3.
              </item>
              <item>
                If there is a dc:rights array with an x-default item,
                Look for a double linefeed in the value.
                <list type="bullet">
                  <item>If no double linefeed, compare the x-default value to the xmpDM:copyright value.
                    <list type="bullet">
                      <item>If they match then leave the x-default value alone.</item>
                      <item>Otherwise, append a double linefeed and the xmpDM:copyright value to the x-default value.</item>
                    </list>
                  </item>
                  <item>If there is a double linefeed, compare the trailing text to the xmpDM:copyright value.
                    <list type="bullet">
                      <item>If they match then leave the x-default value alone.</item>
                      <item>Otherwise, replace the trailing x-default text with the xmpDM:copyright value.</item>
                    </list>
                  </item>
                </list>
              </item>
              <item>In all cases, delete the xmpDM:copyright property.</item>
            </list>
            </remarks>
            <param name="xmp">the metadata object</param>
            <param name="dmCopyright">the "dm:copyright"-property</param>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpSchemaRegistry">
            <summary>The schema registry handles the namespaces, aliases and global options for the XMP Toolkit.</summary>
            <remarks>
            There is only one singleton instance used by the toolkit, accessed via <see cref="P:Spire.Xmp.XmpMetaFactory.SchemaRegistry"/>.
            </remarks>
            <author>Stefan Makswit</author>
            <since>27.01.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSchemaRegistry._namespaceToPrefixMap">
            <summary>a map from a namespace URI to its registered prefix.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSchemaRegistry._prefixToNamespaceMap">
            <summary>a map from a prefix to the associated namespace URI.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSchemaRegistry._aliasMap">
            <summary>A map of all registered aliases, from qname to IXmpAliasInfo.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSchemaRegistry._p">
            <summary>The pattern that must not be contained in simple properties</summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSchemaRegistry.#ctor">
            <summary>
            Performs the initialisation of the registry with the default namespaces, aliases and global
            options.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSchemaRegistry.RegisterStandardNamespaces">
            <summary>
            Register the standard namespaces of schemas and types that are included in the XMP
            Specification and some other Adobe private namespaces.
            </summary>
            <remarks>
            Register the standard namespaces of schemas and types that are included in the XMP
            Specification and some other Adobe private namespaces.
            Note: This method is not lock because only called by the constructor.
            </remarks>
            <exception cref="T:Spire.Xmp.XmpException">Forwards processing exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSchemaRegistry.RegisterAlias(System.String,System.String,System.String,System.String,Spire.Xmp.Options.AliasOptions)">
            <summary>Associates an alias name with an actual name.</summary>
            <remarks>
            Associates an alias name with an actual name.
            <para />
            Define a alias mapping from one namespace/property to another. Both
            property names must be simple names. An alias can be a direct mapping,
            where the alias and actual have the same data type. It is also possible
            to map a simple alias to an item in an array. This can either be to the
            first item in the array, or to the 'x-default' item in an alt-text array.
            Multiple alias names may map to the same actual, as long as the forms
            match. It is a no-op to reregister an alias in an identical fashion.
            Note: This method is not locking because only called by registerStandardAliases
            which is only called by the constructor.
            Note2: The method is only package-private so that it can be tested with unittests
            </remarks>
            <param name="aliasNs">The namespace URI for the alias. Must not be null or the empty string.</param>
            <param name="aliasProp">The name of the alias. Must be a simple name, not null or the empty string and not a general path expression.</param>
            <param name="actualNs">The namespace URI for the actual. Must not be null or the empty string.</param>
            <param name="actualProp">The name of the actual. Must be a simple name, not null or the empty string and not a general path expression.</param>
            <param name="aliasForm">Provides options for aliases for simple aliases to array items. This is needed to know what kind of array to create if
            set for the first time via the simple alias. Pass <c>XMP_NoOptions</c>, the default value, for all direct aliases regardless of whether the actual
            data type is an array or not (see <see cref="T:Spire.Xmp.Options.AliasOptions"/>).</param>
            <exception cref="T:Spire.Xmp.XmpException">for inconsistant aliases.</exception>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpSerializerHelper">
            <summary>
            Serializes the <c>XMPMeta</c>-object to an <c>OutputStream</c> according to the
            <c>SerializeOptions</c>.
            </summary>
            <author>Stefan Makswit</author>
            <since>11.07.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerHelper.Serialize(Spire.Xmp.Impl.XmpMeta,System.IO.Stream,Spire.Xmp.Options.SerializeOptions)">
            <summary>Static method to serialize the metadata object.</summary>
            <remarks>
            For each serialisation, a new XMPSerializer
            instance is created, either XMPSerializerRDF or XMPSerializerPlain so that its possible to
            serialize the same XMPMeta objects in two threads.
            </remarks>
            <param name="xmp">a metadata implementation object</param>
            <param name="stream">the output stream to serialize to</param>
            <param name="options">serialization options, can be <c>null</c> for default.</param>
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerHelper.SerializeToString(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Options.SerializeOptions)">
            <summary>Serializes an <c>XMPMeta</c>-object as RDF into a string.</summary>
            <remarks>
            <em>Note:</em> Encoding is forced to UTF-16 when serializing to a
            string to ensure the correctness of &quot;exact packet size&quot;.
            </remarks>
            <param name="xmp">a metadata implementation object</param>
            <param name="options">Options to control the serialization (see <see cref="T:Spire.Xmp.Options.SerializeOptions"/>).</param>
            <returns>Returns a string containing the serialized RDF.</returns>
            <exception cref="T:Spire.Xmp.XmpException">on serialization errors.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerHelper.SerializeToBuffer(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Options.SerializeOptions)">
            <summary>Serializes an <c>XMPMeta</c>-object as RDF into a byte buffer.</summary>
            <param name="xmp">a metadata implementation object</param>
            <param name="options">Options to control the serialization (see <see cref="T:Spire.Xmp.Options.SerializeOptions"/>).</param>
            <returns>Returns a byte buffer containing the serialized RDF.</returns>
            <exception cref="T:Spire.Xmp.XmpException">on serialization errors.</exception>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpSerializerRdf">
            <summary>Serializes the <c>XMPMeta</c>-object using the standard RDF serialization format.</summary>
            <remarks>
            Serializes the <c>XMPMeta</c>-object using the standard RDF serialization format.
            The output is written to an <c>OutputStream</c>
            according to the <c>SerializeOptions</c>.
            FfF: Move to XMLStreamWriter (a lot of test would break due to slight format change).
            </remarks>
            <author>Stefan Makswit</author>
            <since>11.07.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf.DefaultPad">
            <summary>default padding</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf.PacketTrailer">
            <summary>The w/r is missing inbetween</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf.RdfAttrQualifier">
            <summary>a set of all rdf attribute qualifier</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf._xmp">
            <summary>the metadata object to be serialized.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf._stream">
            <summary>the output stream to serialize to</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf._writer">
            <summary>this writer is used to do the actual serialization</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf._options">
            <summary>the stored serialization options</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf._unicodeSize">
            <summary>
            the size of one unicode char, for UTF-8 set to 1
            (Note: only valid for ASCII chars lower than 0x80),
            set to 2 in case of UTF-16
            </summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpSerializerRdf._padding">
            <summary>
            the padding in the XMP Packet, or the length of the complete packet in
            case of option <em>exactPacketLength</em>.
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.Serialize(Spire.Xmp.IXmpMeta,System.IO.Stream,Spire.Xmp.Options.SerializeOptions)">
            <summary>The actual serialization.</summary>
            <param name="xmp">the metadata object to be serialized</param>
            <param name="stream">outputStream the output stream to serialize to</param>
            <param name="options">the serialization options</param>
            <exception cref="T:Spire.Xmp.XmpException">If case of wrong options or any other serialization error.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.AddPadding(System.Int32)">
            <summary>Calculates the padding according to the options and write it to the stream.</summary>
            <param name="tailLength">the length of the tail string</param>
            <exception cref="T:Spire.Xmp.XmpException">thrown if packet size is to small to fit the padding</exception>
            <exception cref="T:System.IO.IOException">forwards writer errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.CheckOptionsConsistence">
            <summary>Checks if the supplied options are consistent.</summary>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if options are conflicting</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeAsRdf">
            <summary>Writes the (optional) packet header and the outer rdf-tags.</summary>
            <returns>Returns the packet end processing instraction to be written after the padding.</returns>
            <exception cref="T:System.IO.IOException">Forwarded writer exceptions.</exception>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCanonicalRdfSchemas(System.Int32)">
            <summary>Serializes the metadata in pretty-printed manner.</summary>
            <param name="level">indent level</param>
            <exception cref="T:System.IO.IOException">Forwarded writer exceptions</exception>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.WriteTreeName">
            <exception cref="T:System.IO.IOException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCompactRdfSchemas(System.Int32)">
            <summary>Serializes the metadata in compact manner.</summary>
            <param name="level">indent level to start with</param>
            <exception cref="T:System.IO.IOException">Forwarded writer exceptions</exception>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCompactRdfAttrProps(Spire.Xmp.Impl.XmpNode,System.Int32)">
            <summary>Write each of the parent's simple unqualified properties as an attribute.</summary>
            <remarks>
            Write each of the parent's simple unqualified properties as an attribute. Returns true if all
            of the properties are written as attributes.
            </remarks>
            <param name="parentNode">the parent property node</param>
            <param name="indent">the current indent level</param>
            <returns>Returns true if all properties can be rendered as RDF attribute.</returns>
            <exception cref="T:System.IO.IOException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCompactRdfElementProps(Spire.Xmp.Impl.XmpNode,System.Int32)">
            <summary>
            Recursively handles the "value" for a node that must be written as an RDF
            property element.
            </summary>
            <remarks>
            Recursively handles the "value" for a node that must be written as an RDF
            property element. It does not matter if it is a top level property, a
            field of a struct, or an item of an array. The indent is that for the
            property element. The patterns below ignore attribute qualifiers such as
            xml:lang, they don't affect the output form.
            <code>
            &lt;ns:UnqualifiedStructProperty-1
            ... The fields as attributes, if all are simple and unqualified
            /&gt;
            &lt;ns:UnqualifiedStructProperty-2 rdf:parseType=&quot;Resource&quot;&gt;
            ... The fields as elements, if none are simple and unqualified
            &lt;/ns:UnqualifiedStructProperty-2&gt;
            &lt;ns:UnqualifiedStructProperty-3&gt;
            &lt;rdf:Description
            ... The simple and unqualified fields as attributes
            &gt;
            ... The compound or qualified fields as elements
            &lt;/rdf:Description&gt;
            &lt;/ns:UnqualifiedStructProperty-3&gt;
            &lt;ns:UnqualifiedArrayProperty&gt;
            &lt;rdf:Bag&gt; or Seq or Alt
            ... Array items as rdf:li elements, same forms as top level properties
            &lt;/rdf:Bag&gt;
            &lt;/ns:UnqualifiedArrayProperty&gt;
            &lt;ns:QualifiedProperty rdf:parseType=&quot;Resource&quot;&gt;
            &lt;rdf:value&gt; ... Property &quot;value&quot;
            following the unqualified forms ... &lt;/rdf:value&gt;
            ... Qualifiers looking like named struct fields
            &lt;/ns:QualifiedProperty&gt;
            </code>
            *** Consider numbered array items, but has compatibility problems.
            Consider qualified form with rdf:Description and attributes.
            </remarks>
            <param name="parentNode">the parent node</param>
            <param name="indent">the current indent level</param>
            <exception cref="T:System.IO.IOException">Forwards writer exceptions</exception>
            <exception cref="T:Spire.Xmp.XmpException">If qualifier and element fields are mixed.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCompactRdfSimpleProp(Spire.Xmp.Impl.XmpNode)">
            <summary>Serializes a simple property.</summary>
            <param name="node">an XMPNode</param>
            <returns>Returns an array containing the flags emitEndTag and indentEndTag.</returns>
            <exception cref="T:System.IO.IOException">Forwards the writer exceptions.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCompactRdfArrayProp(Spire.Xmp.Impl.XmpNode,System.Int32)">
            <summary>Serializes an array property.</summary>
            <param name="node">an XMPNode</param>
            <param name="indent">the current indent level</param>
            <exception cref="T:System.IO.IOException">Forwards the writer exceptions.</exception>
            <exception cref="T:Spire.Xmp.XmpException">If qualifier and element fields are mixed.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCompactRdfStructProp(Spire.Xmp.Impl.XmpNode,System.Int32,System.Boolean)">
            <summary>Serializes a struct property.</summary>
            <param name="node">an XMPNode</param>
            <param name="indent">the current indent level</param>
            <param name="hasRdfResourceQual">Flag if the element has resource qualifier</param>
            <returns>Returns true if an end flag shall be emitted.</returns>
            <exception cref="T:System.IO.IOException">Forwards the writer exceptions.</exception>
            <exception cref="T:Spire.Xmp.XmpException">If qualifier and element fields are mixed.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCompactRdfGeneralQualifier(System.Int32,Spire.Xmp.Impl.XmpNode)">
            <summary>Serializes the general qualifier.</summary>
            <param name="node">the root node of the subtree</param>
            <param name="indent">the current indent level</param>
            <exception cref="T:System.IO.IOException">Forwards all writer exceptions.</exception>
            <exception cref="T:Spire.Xmp.XmpException">If qualifier and element fields are mixed.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCanonicalRdfSchema(Spire.Xmp.Impl.XmpNode,System.Int32)">
            <summary>
            Serializes one schema with all contained properties in pretty-printed manner.
            </summary>
            <remarks>
            Each schema's properties are written to a single
            rdf:Description element. All of the necessary namespaces are declared in
            the rdf:Description element. The baseIndent is the base level for the
            entire serialization, that of the x:xmpmeta element. An xml:lang
            qualifier is written as an attribute of the property start tag, not by
            itself forcing the qualified property form.
            <code>
            &lt;rdf:Description rdf:about=&quot;TreeName&quot; xmlns:ns=&quot;URI&quot; ... &gt;
            ... The actual properties of the schema, see SerializePrettyRDFProperty
            &lt;!-- ns1:Alias is aliased to ns2:Actual --&gt;  ... If alias comments are wanted
            &lt;/rdf:Description&gt;
            </code>
            </remarks>
            <param name="schemaNode">a schema node</param>
            <param name="level"></param>
            <exception cref="T:System.IO.IOException">Forwarded writer exceptions</exception>
            <exception cref="T:Spire.Xmp.XmpException"></exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.DeclareUsedNamespaces(Spire.Xmp.Impl.XmpNode,System.Collections.Generic.ICollection{System.Object},System.Int32)">
            <summary>Writes all used namespaces of the subtree in node to the output.</summary>
            <remarks>
            Writes all used namespaces of the subtree in node to the output.
            The subtree is recursively traversed.
            </remarks>
            <param name="node">the root node of the subtree</param>
            <param name="usedPrefixes">a set containing currently used prefixes</param>
            <param name="indent">the current indent level</param>
            <exception cref="T:System.IO.IOException">Forwards all writer exceptions.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.DeclareNamespace(System.String,System.String,System.Collections.Generic.ICollection{System.Object},System.Int32)">
            <summary>Writes one namespace declaration to the output.</summary>
            <param name="prefix">a namespace prefix (without colon) or a complete qname (when namespace == null)</param>
            <param name="ns">the a namespace</param>
            <param name="usedPrefixes">a set containing currently used prefixes</param>
            <param name="indent">the current indent level</param>
            <exception cref="T:System.IO.IOException">Forwards all writer exceptions.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.StartOuterRdfDescription(Spire.Xmp.Impl.XmpNode,System.Int32)">
            <summary>Start the outer rdf:Description element, including all needed xmlns attributes.</summary>
            <remarks>
            Start the outer rdf:Description element, including all needed xmlns attributes.
            Leave the element open so that the compact form can add property attributes.
            </remarks>
            <exception cref="T:System.IO.IOException">If the writing to</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.EndOuterRdfDescription(System.Int32)">
            <summary>Write the <c>&lt;/rdf:Description&gt;</c> end tag.</summary>
            <exception cref="T:System.IO.IOException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.SerializeCanonicalRdfProperty(Spire.Xmp.Impl.XmpNode,System.Boolean,System.Boolean,System.Int32)">
            <summary>Recursively handles the "value" for a node.</summary>
            <remarks>
            Recursively handles the "value" for a node. It does not matter if it is a
            top level property, a field of a struct, or an item of an array. The
            indent is that for the property element. An xml:lang qualifier is written
            as an attribute of the property start tag, not by itself forcing the
            qualified property form. The patterns below mostly ignore attribute
            qualifiers like xml:lang. Except for the one struct case, attribute
            qualifiers don't affect the output form.
            <code>
            &lt;ns:UnqualifiedSimpleProperty&gt;value&lt;/ns:UnqualifiedSimpleProperty&gt;
            &lt;ns:UnqualifiedStructProperty&gt; (If no rdf:resource qualifier)
            &lt;rdf:Description&gt;
            ... Fields, same forms as top level properties
            &lt;/rdf:Description&gt;
            &lt;/ns:UnqualifiedStructProperty&gt;
            &lt;ns:ResourceStructProperty rdf:resource=&quot;URI&quot;
            ... Fields as attributes
            &gt;
            &lt;ns:UnqualifiedArrayProperty&gt;
            &lt;rdf:Bag&gt; or Seq or Alt
            ... Array items as rdf:li elements, same forms as top level properties
            &lt;/rdf:Bag&gt;
            &lt;/ns:UnqualifiedArrayProperty&gt;
            &lt;ns:QualifiedProperty&gt;
            &lt;rdf:Description&gt;
            &lt;rdf:value&gt; ... Property &quot;value&quot; following the unqualified
            forms ... &lt;/rdf:value&gt;
            ... Qualifiers looking like named struct fields
            &lt;/rdf:Description&gt;
            &lt;/ns:QualifiedProperty&gt;
            </code>
            </remarks>
            <param name="node">the property node</param>
            <param name="emitAsRdfValue">property shall be rendered as attribute rather than tag</param>
            <param name="useCanonicalRdf">
            use canonical form with inner description tag or
            the compact form with rdf:ParseType=&quot;resource&quot; attribute.
            </param>
            <param name="indent">the current indent level</param>
            <exception cref="T:System.IO.IOException">Forwards all writer exceptions.</exception>
            <exception cref="T:Spire.Xmp.XmpException">If &quot;rdf:resource&quot; and general qualifiers are mixed.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.EmitRdfArrayTag(Spire.Xmp.Impl.XmpNode,System.Boolean,System.Int32)">
            <summary>Writes the array start and end tags.</summary>
            <param name="arrayNode">an array node</param>
            <param name="isStartTag">flag if its the start or end tag</param>
            <param name="indent">the current indent level</param>
            <exception cref="T:System.IO.IOException">forwards writer exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.AppendNodeValue(System.String,System.Boolean)">
            <summary>Serializes the node value in XML encoding.</summary>
            <remarks>
            Serializes the node value in XML encoding. Its used for tag bodies and
            attributes. <em>Note:</em> The attribute is always limited by quotes,
            thats why <c>&amp;apos;</c> is never serialized. <em>Note:</em>
            Control chars are written unescaped, but if the user uses others than tab, LF
            and CR the resulting XML will become invalid.
            </remarks>
            <param name="value">the value of the node</param>
            <param name="forAttribute">flag if value is an attribute value</param>
            <exception cref="T:System.IO.IOException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.CanBeRdfAttrProp(Spire.Xmp.Impl.XmpNode)">
            <summary>
            A node can be serialized as RDF-Attribute, if it meets the following conditions:
            <list type="bullet">
            <item>is not array item</item>
            <item>don't has qualifier</item>
            <item>is no URI</item>
            <item>is no composite property</item>
            </list>
            </summary>
            <param name="node">an XMPNode</param>
            <returns>Returns true if the node serialized as RDF-Attribute</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.WriteIndent(System.Int32)">
            <summary>Writes indents and automatically includes the base indent from the options.</summary>
            <param name="times">number of indents to write</param>
            <exception cref="T:System.IO.IOException">forwards exception</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.Write(System.Int32)">
            <summary>Writes an int to the output.</summary>
            <param name="c">an int</param>
            <exception cref="T:System.IO.IOException">forwards writer exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.Write(System.Char)">
            <summary>Writes a char to the output.</summary>
            <param name="c">a char</param>
            <exception cref="T:System.IO.IOException">forwards writer exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.Write(System.String)">
            <summary>Writes a String to the output.</summary>
            <param name="str">a String</param>
            <exception cref="T:System.IO.IOException">forwards writer exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.WriteChars(System.Int32,System.Char)">
            <summary>Writes an amount of chars, mostly spaces</summary>
            <param name="number">number of chars</param>
            <param name="c">a char</param>
            <exception cref="T:System.IO.IOException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpSerializerRdf.WriteNewline">
            <summary>Writes a newline according to the options.</summary>
            <exception cref="T:System.IO.IOException">Forwards exception</exception>
        </member>
        <member name="T:Spire.Xmp.Impl.XmpUtils">
            <author>Stefan Makswit</author>
            <since>11.08.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.CatenateArrayItems(Spire.Xmp.IXmpMeta,System.String,System.String,System.String,System.String,System.Boolean)">
            <param name="xmp">The XMP object containing the array to be catenated.</param>
            <param name="schemaNs">
            The schema namespace URI for the array. Must not be null or
            the empty string.
            </param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must
            not be null or the empty string. Each item in the array must
            be a simple string value.
            </param>
            <param name="separator">
            The string to be used to separate the items in the catenated
            string. Defaults to &quot;; &quot;, ASCII semicolon and space
            (U+003B, U+0020).
            </param>
            <param name="quotes">
            The characters to be used as quotes around array items that
            contain a separator. Defaults to &apos;&quot;&apos;
            </param>
            <param name="allowCommas">Option flag to control the catenation.</param>
            <returns>Returns the string containing the catenated array items.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.SeparateArrayItems(Spire.Xmp.IXmpMeta,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions,System.Boolean)">
            <summary>
            See <see cref="M:Spire.Xmp.XmpUtils.SeparateArrayItems(Spire.Xmp.IXmpMeta,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions,System.Boolean)"/>.
            </summary>
            <param name="xmp">The XMP object containing the array to be updated.</param>
            <param name="schemaNs">
            The schema namespace URI for the array. Must not be null or the empty string.
            </param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must
            not be null or the empty string. Each item in the array must
            be a simple string value.
            </param>
            <param name="catedStr">The string to be separated into the array items.</param>
            <param name="arrayOptions">Option flags to control the separation.</param>
            <param name="preserveCommas">Flag if commas shall be preserved</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.SeparateFindCreateArray(System.String,System.String,Spire.Xmp.Options.PropertyOptions,Spire.Xmp.Impl.XmpMeta)">
            <summary>Utility to find or create the array used by <c>separateArrayItems()</c>.</summary>
            <param name="schemaNs">a the namespace fo the array</param>
            <param name="arrayName">the name of the array</param>
            <param name="arrayOptions">the options for the array if newly created</param>
            <param name="xmp">the xmp object</param>
            <returns>Returns the array node.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Forwards exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.RemoveProperties(Spire.Xmp.IXmpMeta,System.String,System.String,System.Boolean,System.Boolean)">
            <param name="xmp">The XMP object containing the properties to be removed.</param>
            <param name="schemaNs">
            Optional schema namespace URI for the properties to be
            removed.
            </param>
            <param name="propName">Optional path expression for the property to be removed.</param>
            <param name="doAllProperties">
            Option flag to control the deletion: do internal properties in
            addition to external properties.
            </param>
            <param name="includeAliases">
            Option flag to control the deletion: Include aliases in the
            "named schema" case above.
            </param>
            <exception cref="T:Spire.Xmp.XmpException">If metadata processing fails</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.AppendProperties(Spire.Xmp.IXmpMeta,Spire.Xmp.IXmpMeta,System.Boolean,System.Boolean,System.Boolean)">
            <param name="source">The source XMP object.</param>
            <param name="destination">The destination XMP object.</param>
            <param name="doAllProperties">Do internal properties in addition to external properties.</param>
            <param name="replaceOldValues">Replace the values of existing properties.</param>
            <param name="deleteEmptyValues">Delete destination values if source property is empty.</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.RemoveSchemaChildren(Spire.Xmp.Impl.XmpNode,System.Boolean)">
            <summary>Remove all schema children according to the flag <c>doAllProperties</c>.</summary>
            <remarks>Empty schemas are automatically remove by <c>XMPNode</c>.</remarks>
            <param name="schemaNode">a schema node</param>
            <param name="doAllProperties">flag if all properties or only externals shall be removed.</param>
            <returns>Returns true if the schema is empty after the operation.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.AppendSubtree(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpNode,Spire.Xmp.Impl.XmpNode,System.Boolean,System.Boolean,System.Boolean)">
            <param name="destXmp">The destination XMP object.</param>
            <param name="sourceNode">the source node</param>
            <param name="destParent">the parent of the destination node</param>
            <param name="mergeCompound"></param>
            <param name="replaceOldValues">Replace the values of existing properties.</param>
            <param name="deleteEmptyValues">flag if properties with empty values should be deleted in the destination object.</param>
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.ItemValuesMatch(Spire.Xmp.Impl.XmpNode,Spire.Xmp.Impl.XmpNode)">
            <summary>Compares two nodes including its children and qualifier.</summary>
            <param name="leftNode">an <c>XMPNode</c></param>
            <param name="rightNode">an <c>XMPNode</c></param>
            <returns>Returns true if the nodes are equal, false otherwise.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Forwards exceptions to the calling method.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.CheckSeparator(System.String)">
            <summary>Make sure the separator is OK.</summary>
            <remarks>
            Separators must be one semicolon surrounded by zero or more spaces. Any of the recognized semicolons or spaces are allowed.
            </remarks>
            <param name="separator" />
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.CheckQuotes(System.String,System.Char)">
            <summary>
            Make sure the open and close quotes are a legitimate pair and return the
            correct closing quote or an exception.
            </summary>
            <param name="quotes">opened and closing quote in a string</param>
            <param name="openQuote">the open quote</param>
            <returns>Returns a corresponding closing quote.</returns>
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.ClassifyCharacter(System.Char)">
            <summary>
            Classifies the character into normal chars, spaces, semicola, quotes,
            control chars.
            </summary>
            <param name="ch">a char</param>
            <returns>Return the character kind.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.GetClosingQuote(System.Char)">
            <param name="openQuote">the open quote char</param>
            <returns>Returns the matching closing quote for an open quote.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.ApplyQuotes(System.String,System.Char,System.Char,System.Boolean)">
            <summary>Add quotes to the item.</summary>
            <param name="item">the array item</param>
            <param name="openQuote">the open quote character</param>
            <param name="closeQuote">the closing quote character</param>
            <param name="allowCommas">flag if commas are allowed</param>
            <returns>Returns the value in quotes.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.IsSurroundingQuote(System.Char,System.Char,System.Char)">
            <param name="ch">a character</param>
            <param name="openQuote">the opening quote char</param>
            <param name="closeQuote">the closing quote char</param>
            <returns>Return it the character is a surrounding quote.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.IsClosingQuote(System.Char,System.Char,System.Char)">
            <param name="ch">a character</param>
            <param name="openQuote">the opening quote char</param>
            <param name="closeQuote">the closing quote char</param>
            <returns>Returns true if the character is a closing quote.</returns>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpUtils.Spaces">
            <summary>
            <list type="bullet">
              <item>U+0022 ASCII space</item>
              <item>U+3000, ideographic space</item>
              <item>U+303F, ideographic half fill space</item>
              <item>U+2000..U+200B, en quad through zero width space</item>
            </list>
            </summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpUtils.Commas">
            <summary>
            <list type="bullet">
              <item>U+002C, ASCII comma</item>
              <item>U+FF0C, full width comma</item>
              <item>U+FF64, half width ideographic comma</item>
              <item>U+FE50, small comma</item>
              <item>U+FE51, small ideographic comma</item>
              <item>U+3001, ideographic comma</item>
              <item>U+060C, Arabic comma</item>
              <item>U+055D, Armenian comma</item>
            </list>
            </summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpUtils.Semicola">
            <summary>
            <list type="bullet">
              <item>U+003B, ASCII semicolon</item>
              <item>U+FF1B, full width semicolon</item>
              <item>U+FE54, small semicolon</item>
              <item>U+061B, Arabic semicolon</item>
              <item>U+037E, Greek "semicolon" (really a question mark)</item>
            </list>
            </summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpUtils.Quotes">
            <summary>
            <list type="bullet">
              <item>U+0022 ASCII quote</item>
              <item>U+00AB and U+00BB, guillemet quotes</item>
              <item>U+3008..U+300F, various quotes</item>
              <item>U+301D..U+301F, double prime quotes</item>
              <item>U+2015, dash quote</item>
              <item>U+2018..U+201F, various quotes</item>
              <item>U+2039 and U+203A, guillemet quotes</item>
            </list>
            </summary>
            <remarks>
            The square brackets are not interpreted as quotes anymore (bug #2674672)
            (ASCII '[' (0x5B) and ']' (0x5D) are used as quotes in Chinese and
            Korean.)<br />
            </remarks>
        </member>
        <member name="F:Spire.Xmp.Impl.XmpUtils.Controls">
            <summary>
            <list type="bullet">
              <item>U+0000..U+001F ASCII controls</item>
              <item>U+2028, line separator</item>
              <item>U+2029, paragraph separator</item>
            </list>
            </summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.MoveOneProperty(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpMeta,System.String,System.String)">
            <summary>Moves the specified Property from one Meta to another.</summary>
            <param name="stdXMP">Meta Object from where the property needs to move</param>
            <param name="extXMP">Meta Object to where the property needs to move</param>
            <param name="schemaURI">Schema of the specified property</param>
            <param name="propName">Name of the property</param>
            <returns>true in case of success otherwise false.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.EstimateSizeForJPEG(Spire.Xmp.Impl.XmpNode)">
            <summary>estimates the size of an xmp node</summary>
            <param name="xmpNode">XMP Node Object</param>
            <returns>the estimated size of the node</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.PutObjectsInMultiMap(System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}},System.Int32,System.Collections.Generic.List{System.String})">
            <summary>Utility function for placing objects in a Map. It behaves like a multi map.</summary>
            <param name="multiMap">A Map object which takes int as a key and list of list of string as value</param>
            <param name="key">A key for the map</param>
            <param name="stringPair">A value for the map</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.GetBiggestEntryInMultiMap(System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}})">
            <summary>Utility function for retrieving biggest entry in the multimap</summary>
            <remarks>see EstimateSizeForJPEG for size calculation</remarks>
            <param name="multiMap">A Map object which takes int as a key and list of list of string as value</param>
            <returns>the list with the maximum size.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.CreateEstimatedSizeMap(Spire.Xmp.Impl.XmpMeta,System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}})">
            <summary>Utility function for creating esimated size map for different properties of XMP Packet.</summary>
            <remarks>see PackageForJPEG</remarks>
            <param name="stdXMP">Meta Object whose property sizes needs to calculate.</param>
            <param name="propSizes">A treeMap Object which takes int as a key and list of list of string as values</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.MoveLargestProperty(Spire.Xmp.Impl.XmpMeta,Spire.Xmp.Impl.XmpMeta,System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}})">
            <summary>Utility function for moving the largest property from One XMP Packet to another.</summary>
            <remarks>see MoveOneProperty and PackageForJPEG</remarks>
            <param name="stdXMP">Meta Object from where property moves.</param>
            <param name="extXMP">Meta Object to where property moves.</param>
            <param name="propSizes">A treeMap Object which holds the estimated sizes of the property of stdXMP as a key and their string representation as map values.</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.PackageForJPEG(Spire.Xmp.IXmpMeta,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder)">
            <summary>creates XMP serializations appropriate for a JPEG file.</summary>
            <remarks>
            The standard XMP in a JPEG file is limited to 64K bytes. This function
            serializes the XMP metadata in an XMP object into a string of RDF.If
            the data does not fit into the 64K byte limit, it creates a second packet
            string with the extended data.
            </remarks>
            <param name="origXMPImpl">The XMP object containing the metadata.</param>
            <param name="stdStr">A string object in which to return the full standard XMP packet.</param>
            <param name="extStr">A string object in which to return the serialized extended XMP, empty if not needed.</param>
            <param name="digestStr">A string object in which to return an MD5 digest of the serialized extended XMP, empty if not needed.</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.MergeFromJPEG(Spire.Xmp.IXmpMeta,Spire.Xmp.IXmpMeta)">
            <summary>merges standard and extended XMP retrieved from a JPEG file.</summary>
            <remarks>
            When an extended partition stores properties that do not fit into the
            JPEG file limitation of 64K bytes, this function integrates those
            properties back into the same XMP object with those from the standard XMP
            packet.
            </remarks>
            <param name="fullXMP">An XMP object which the caller has initialized from the standard XMP packet in a JPEG file. The extended XMP is added to this object.</param>
            <param name="extendedXMP">An XMP object which the caller has initialized from the extended XMP packet in a JPEG file.</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XmpUtils.ApplyTemplate(Spire.Xmp.IXmpMeta,Spire.Xmp.IXmpMeta,Spire.Xmp.Options.TemplateOptions)">
            <summary>modifies a working XMP object according to a template object.</summary>
            <remarks>
            The XMP template can be used to add, replace or delete properties from
            the working XMP object. The actions that you specify determine how the
            template is applied.Each action can be applied individually or combined;
            if you do not specify any actions, the properties and values in the
            working XMP object do not change.
            </remarks>
            <param name="origXMP">The destination XMP object.</param>
            <param name="tempXMP">The template to apply to the destination XMP object.</param>
            <param name="actions">Option flags to control the copying. If none are specified,
               the properties and values in the working XMP do not change. A logical OR of these bit-flag constants:
               <ul>
               <li><code> CLEAR_UNNAMED_PROPERTIES</code> Delete anything that is not in the template.</li>
               <li><code> ADD_NEW_PROPERTIES</code> Add properties; see detailed description.</li>
               <li><code> REPLACE_EXISTING_PROPERTIES</code> Replace the values of existing properties.</li>
               <li><code> REPLACE_WITH_DELETE_EMPTY</code> Replace the values of existing properties and delete properties if the new value is empty.</li>
               <li><code> INCLUDE_INTERNAL_PROPERTIES</code> Operate on internal properties as well as external properties.</li>
               </ul>
            </param>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.XmpPathStepType.StructFieldStep">
            <summary>Marks a struct field step, also for top level nodes (schema "fields").</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.XmpPathStepType.QualifierStep">
            <summary>Marks a qualifier step.</summary>
            <remarks>
            Marks a qualifier step.
            Note: Order is significant to separate struct/qual from array kinds!
            </remarks>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.XmpPathStepType.ArrayIndexStep">
            <summary>Marks an array index step</summary>
        </member>
        <member name="T:Spire.Xmp.Impl.XPath.XmpPath">
            <summary>Represents an XMP XmpPath with segment accessor methods.</summary>
            <since>28.02.2006</since>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.XmpPath._segments">
            <summary>stores the segments of an <see cref="T:Spire.Xmp.Impl.XPath.XmpPath"/></summary>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPath.Add(Spire.Xmp.Impl.XPath.XmpPathSegment)">
            <summary>Append a path segment</summary>
            <param name="segment">the segment to add</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPath.GetSegment(System.Int32)">
            <param name="index">the index of the segment to return</param>
            <returns>Returns a path segment.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPath.Size">
            <returns>Returns the size of the xmp path.</returns>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPath.ToString">
            <summary>Serializes the normalized XMP-path.</summary>
        </member>
        <member name="T:Spire.Xmp.Impl.XPath.XmpPathParser">
            <summary>Parser for XMP XPaths.</summary>
            <since>01.03.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathParser.ExpandXPath(System.String,System.String)">
            <summary>
            Split an <see cref="T:Spire.Xmp.Impl.XPath.XmpPath"/> expression apart at the conceptual steps, adding the
            root namespace prefix to the first property component.
            </summary>
            <remarks>
            The schema URI is put in the first (0th) slot in the expanded <see cref="T:Spire.Xmp.Impl.XPath.XmpPath"/>.
            Check if the top level component is an alias, but don't resolve it.
            <para />
            In the most verbose case steps are separated by '/', and each step can be
            of these forms:
            <list>
              <item>
                <term>prefix:name</term>
                <description>A top level property or struct field.</description>
              </item>
              <item>
                <term>[index]</term>
                <description>An element of an array.</description>
              </item>
              <item>
                <term>[last()]</term>
                <description>The last element of an array.</description>
              </item>
              <item>
                <term>[fieldName=&quot;value&quot;]</term>
                <description>An element in an array of structs, chosen by a field value.</description>
              </item>
              <item>
                <term>[@xml:lang=&quot;value&quot;]</term>
                <description>An element in an alt-text array, chosen by the xml:lang qualifier.</description>
              </item>
              <item>
                <term>[?qualName=&quot;value&quot;]</term>
                <description>An element in an array, chosen by a qualifier value.</description>
              </item>
              <item>
                <term>@xml:lang</term>
                <description>An xml:lang qualifier.</description>
              </item>
              <item>
                <term>?qualName</term>
                <description>A general qualifier.</description>
              </item>
            </list>
            <para />
            The logic is complicated though by shorthand for arrays, the separating
            '/' and leading '*' are optional. These are all equivalent: array/*[2]
            array/[2] array*[2] array[2] All of these are broken into the 2 steps
            "array" and "[2]".
            <para />
            The value portion in the array selector forms is a string quoted by '''
            or '"'. The value may contain any character including a doubled quoting
            character. The value may be empty.
            <para />
            The syntax isn't checked, but an XML name begins with a letter or '_',
            and contains letters, digits, '.', '-', '_', and a bunch of special
            non-ASCII Unicode characters. An XML qualified name is a pair of names
            separated by a colon.
            </remarks>
            <param name="schemaNs">schema namespace</param>
            <param name="path">property name</param>
            <returns>Returns the expanded <see cref="T:Spire.Xmp.Impl.XPath.XmpPath"/>.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the format is not correct somehow.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathParser.SkipPathDelimiter(System.String,Spire.Xmp.Impl.XPath.PathPosition)">
            <param name="path" />
            <param name="pos" />
            <exception cref="T:Spire.Xmp.XmpException" />
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathParser.ParseStructSegment(Spire.Xmp.Impl.XPath.PathPosition)">
            <summary>Parses a struct segment</summary>
            <param name="pos">the current position in the path</param>
            <returns>The segment or an error</returns>
            <exception cref="T:Spire.Xmp.XmpException">If the segment is empty</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathParser.ParseIndexSegment(Spire.Xmp.Impl.XPath.PathPosition)">
            <summary>Parses an array index segment.</summary>
            <param name="pos">the xmp path</param>
            <returns>Returns the segment or an error</returns>
            <exception cref="T:Spire.Xmp.XmpException">thrown on xmp path errors</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathParser.ParseRootNode(System.String,Spire.Xmp.Impl.XPath.PathPosition,Spire.Xmp.Impl.XPath.XmpPath)">
            <summary>
            Parses the root node of an XMP Path, checks if namespace and prefix fit together
            and resolve the property to the base property if it is an alias.
            </summary>
            <param name="schemaNs">the root namespace</param>
            <param name="pos">the parsing position helper</param>
            <param name="expandedXPath">the path to contribute to</param>
            <exception cref="T:Spire.Xmp.XmpException">If the path is not valid.</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathParser.VerifyQualName(System.String)">
            <summary>
            Verifies whether the qualifier name is not XML conformant or the
            namespace prefix has not been registered.
            </summary>
            <param name="qualName">a qualifier name</param>
            <exception cref="T:Spire.Xmp.XmpException">If the name is not conformant</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathParser.VerifySimpleXmlName(System.String)">
            <summary>Verify if an XML name is conformant.</summary>
            <param name="name">an XML name</param>
            <exception cref="T:Spire.Xmp.XmpException">When the name is not XML conformant</exception>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathParser.VerifyXPathRoot(System.String,System.String)">
            <summary>Set up the first 2 components of the expanded <see cref="T:Spire.Xmp.Impl.XPath.XmpPath"/>.</summary>
            <remarks>
            Normalizes the various cases of using
            the full schema URI and/or a qualified root property name. Returns true for normal
            processing. If allowUnknownSchemaNS is true and the schema namespace is not registered, false
            is returned. If allowUnknownSchemaNS is false and the schema namespace is not registered, an
            exception is thrown
            <para />
            (Should someday check the full syntax:)
            </remarks>
            <param name="schemaNs">schema namespace</param>
            <param name="rootProp">the root xpath segment</param>
            <returns>Returns root QName.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the format is not correct somehow.</exception>
        </member>
        <member name="T:Spire.Xmp.Impl.XPath.PathPosition">
            <summary>This objects contains all needed char positions to parse.</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.PathPosition.Path">
            <summary>the complete path</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.PathPosition.NameStart">
            <summary>the start of a segment name</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.PathPosition.NameEnd">
            <summary>the end of a segment name</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.PathPosition.StepBegin">
            <summary>the begin of a step</summary>
        </member>
        <member name="F:Spire.Xmp.Impl.XPath.PathPosition.StepEnd">
            <summary>the end of a step</summary>
        </member>
        <member name="T:Spire.Xmp.Impl.XPath.XmpPathSegment">
            <summary>A segment of a parsed <see cref="T:Spire.Xmp.Impl.XPath.XmpPath"/>.</summary>
            <since>23.06.2006</since>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathSegment.#ctor(System.String)">
            <summary>Constructor with initial values.</summary>
            <param name="name">the name of the segment</param>
        </member>
        <member name="M:Spire.Xmp.Impl.XPath.XmpPathSegment.#ctor(System.String,Spire.Xmp.Impl.XPath.XmpPathStepType)">
            <summary>Constructor with initial values.</summary>
            <param name="name">the name of the segment</param>
            <param name="kind">the kind of the segment</param>
        </member>
        <member name="P:Spire.Xmp.Impl.XPath.XmpPathSegment.Kind">
            <value>Get and set the kind of the path segment.</value>
        </member>
        <member name="P:Spire.Xmp.Impl.XPath.XmpPathSegment.Name">
            <value>Get and set the name of the path segment.</value>
        </member>
        <member name="P:Spire.Xmp.Impl.XPath.XmpPathSegment.IsAlias">
            <value>Get and set whether the segment is an alias.</value>
        </member>
        <member name="P:Spire.Xmp.Impl.XPath.XmpPathSegment.AliasForm">
            <value>Get and set the alias form, if this segment has been created by an alias.</value>
        </member>
        <member name="T:Spire.Xmp.IXmpAliasInfo">
            <summary>This interface is used to return info about an alias.</summary>
            <author>Stefan Makswit</author>
            <since>27.01.2006</since>
        </member>
        <member name="P:Spire.Xmp.IXmpAliasInfo.Namespace">
            <value>Gets the namespace URI for the base property.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpAliasInfo.Prefix">
            <value>Gets the default prefix for the given base property.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpAliasInfo.PropName">
            <value>Gets the path of the base property.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpAliasInfo.AliasForm">
            <value>
            Gets the kind of the alias. This can be a direct alias
            (ARRAY), a simple property to an ordered array
            (ARRAY_ORDERED), to an alternate array
            (ARRAY_ALTERNATE) or to an alternate text array
            (ARRAY_ALT_TEXT).
            </value>
        </member>
        <member name="T:Spire.Xmp.IXmpDateTime">
            <summary>
            The <c>XMPDateTime</c>-class represents a point in time up to a resolution of nanoseconds.
            </summary>
            <remarks>
            Dates and time in the serialized XMP are ISO 8601 strings. There are utility functions
            to convert to the ISO format, a <c>Calendar</c> or get the Timezone. The fields of
            <c>XMPDateTime</c> are:
            <list type="bullet">
            <item>month - The month in the range 1..12.</item>
            <item>day - The day of the month in the range 1..31.</item>
            <item>minute - The minute in the range 0..59.</item>
            <item>hour - The time zone hour in the range 0..23.</item>
            <item>minute - The time zone minute in the range 0..59.</item>
            <item>nanosecond - The nanoseconds within a second. <em>Note:</em> if the XMPDateTime is
            converted into a calendar, the resolution is reduced to milliseconds.</item>
            <item>timeZone - a <c>TimeZone</c>-object.</item>
            </list>
            DateTime values are occasionally used in cases with only a date or only a time component. A date
            without a time has zeros for all the time fields. A time without a date has zeros for all date
            fields (year, month, and day).
            </remarks>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Year">
            <value>Get and set the year value. Can be negative.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Month">
            <value>Get and set the month, within range 1..12.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Day">
            <value>Get and set the day of the month, within range 1..31.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Hour">
            <value>Returns hour - The hour in the range 0..23.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Minute">
            <value>Get and set the minute, within range 0..59.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Second">
            <value>Get and set the second, within range 0..59.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Nanosecond">
            <value>Get and set the sub-second period, in nanoseconds.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Offset">
            <value>Get and set the offset, primarily for ISO8601 converter.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.HasDate">
            <summary>This flag is set either by parsing or by setting year, month or day.</summary>
            <value>Returns true if the XMPDateTime object has a date portion.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.HasTime">
            <summary>This flag is set either by parsing or by setting hours, minutes, seconds or milliseconds.</summary>
            <value>Returns true if the XMPDateTime object has a time portion.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.HasTimeZone">
            <summary>This flag is set either by parsing or by setting hours, minutes, seconds or milliseconds.</summary>
            <value>Returns true if the XMPDateTime object has a defined timezone.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpDateTime.Calendar">
            <summary>
            Returns a <c>Calendar</c> (only with millisecond precision).
            </summary>
            <remarks>
            Dates before Oct 15th 1585 (which normally fall into validity of
            the Julian calendar) are also rendered internally as Gregorian dates.
            </remarks>
        </member>
        <member name="M:Spire.Xmp.IXmpDateTime.ToIso8601String">
            <returns>Returns the ISO 8601 string representation of the date and time.</returns>
        </member>
        <member name="T:Spire.Xmp.IXmpIterator">
            <summary>Interface for the <c>XMPMeta</c> iteration services.</summary>
            <remarks>
            <c>XMPIterator</c> provides a uniform means to iterate over the
            schema and properties within an XMP object.
            <para />
            The iteration over the schema and properties within an XMP object is very
            complex. It is helpful to have a thorough understanding of the XMP data tree.
            One way to learn this is to create some complex XMP and examine the output of
            <c>XMPMeta#toString</c>. This is also described in the XMP
            Specification, in the XMP Data Model chapter.
            <para />
            The top of the XMP data tree is a single root node. This does not explicitly
            appear in the dump and is never visited by an iterator (that is, it is never
            returned from <c>XMPIterator#next()</c>). Beneath the root are
            schema nodes. These are just collectors for top level properties in the same
            namespace. They are created and destroyed implicitly. Beneath the schema
            nodes are the property nodes. The nodes below a property node depend on its
            type (simple, struct, or array) and whether it has qualifiers.
            <para />
            An <c>XMPIterator</c> is created by XMPMeta#iterator() constructor
            defines a starting point for the iteration and options that control how it
            proceeds. By default the iteration starts at the root and visits all nodes
            beneath it in a depth first manner. The root node is not visited, the first
            visited node is a schema node. You can provide a schema name or property path
            to select a different starting node. By default this visits the named root
            node first then all nodes beneath it in a depth first manner.
            <para />
            The <c>XMPIterator#next()</c> method delivers the schema URI, path,
            and option flags for the node being visited. If the node is simple it also
            delivers the value. Qualifiers for this node are visited next. The fields of
            a struct or items of an array are visited after the qualifiers of the parent.
            <para />
            The options to control the iteration are:
            <list type="bullet">
            <item>JUST_CHILDREN - Visit just the immediate children of the root. Skip
            the root itself and all nodes below the immediate children. This omits the
            qualifiers of the immediate children, the qualifier nodes being below what
            they qualify, default is to visit the complete subtree.</item>
            <item>JUST_LEAFNODES - Visit just the leaf property nodes and their
            qualifiers.</item>
            <item>JUST_LEAFNAME - Return just the leaf component of the node names.
            The default is to return the full xmp path.</item>
            <item>OMIT_QUALIFIERS - Do not visit the qualifiers.</item>
            <item>INCLUDE_ALIASES - Adds known alias properties to the properties in the iteration.
            <em>Note:</em> Not supported in Java or .NET Spire.Xmp!</item>
            </list>
            <para />
            <c>next()</c> returns <c>XMPPropertyInfo</c>-objects and throws
            a <c>NoSuchElementException</c> if there are no more properties to
            return.
            </remarks>
            <author>Stefan Makswit</author>
            <since>25.01.2006</since>
        </member>
        <member name="M:Spire.Xmp.IXmpIterator.SkipSubtree">
            <summary>
            Skip the subtree below the current node when <c>next()</c> is
            called.
            </summary>
        </member>
        <member name="M:Spire.Xmp.IXmpIterator.SkipSiblings">
            <summary>
            Skip the subtree below and remaining siblings of the current node when
            <c>next()</c> is called.
            </summary>
        </member>
        <member name="T:Spire.Xmp.IXmpMeta">
            <summary>This class represents the set of XMP metadata as a DOM representation.</summary>
            <remarks>
            It has methods to read and modify all kinds of properties, create an iterator over all properties
            and serialize the metadata to a string, byte array or stream.
            </remarks>
            <author>Stefan Makswit</author>
            <since>20.01.2006</since>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)">
            <summary>
            The property value getter-methods all take a property specification: the first two parameters
            are always the top level namespace URI (the &quot;schema&quot; namespace) and the basic name
            of the property being referenced.
            </summary>
            <remarks>
            See the introductory discussion of path expression usage for more information.
            <para />
            All of the functions return an object inherited from <c>PropertyBase</c> or
            <c>null</c> if the property does not exists. The result object contains the value of
            the property and option flags describing the property. Arrays and the non-leaf levels of
            nodes do not have values.
            <para />
            See <see cref="T:Spire.Xmp.Options.PropertyOptions"/> for detailed information about the options.
            <para />
            This is the simplest property getter, mainly for top level simple properties or after using
            the path composition functions in <see cref="T:Spire.Xmp.XmpPathFactory"/>.
            </remarks>
            <param name="schemaNs">
            The namespace URI for the property. May be <c>null</c> or the empty
            string if the first component of the propName path contains a namespace prefix. The
            URI must be for a registered namespace.
            </param>
            <param name="propName">
            The name of the property. May be a general path expression, must not be
            <c>null</c> or the empty string. Using a namespace prefix on the first
            component is optional. If present without a schemaNS value then the prefix specifies
            the namespace. The prefix must be for a registered namespace. If both a schemaNS URI
            and propName prefix are present, they must be corresponding parts of a registered
            namespace.
            </param>
            <returns>
            Returns an <see cref="T:Spire.Xmp.IXmpProperty"/> containing the value and the options, or
            <c>null</c> if the property does not exist.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetArrayItem(System.String,System.String,System.Int32)">
            <summary>Provides access to items within an array.</summary>
            <remarks>
            The index is passed as an integer, you need not
            worry about the path string syntax for array items, convert a loop index to a string, etc.
            </remarks>
            <param name="schemaNs">The namespace URI for the array. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="itemIndex">
            The index of the desired item. Arrays in XMP are indexed from 1. The constant
            <see cref="F:Spire.Xmp.XmpConstants.ArrayLastItem"/> always refers to the last existing array item.
            </param>
            <returns>
            Returns an <see cref="T:Spire.Xmp.IXmpProperty"/> containing the value and the options or
            <c>null</c> if the property does not exist.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.CountArrayItems(System.String,System.String)">
            <summary>Returns the number of items in the array.</summary>
            <param name="schemaNs">The namespace URI for the array. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <returns>Returns the number of items in the array.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetStructField(System.String,System.String,System.String,System.String)">
            <summary>Provides access to fields within a nested structure.</summary>
            <remarks>
            The namespace for the field is passed as a URI, you need not worry about the path string syntax.
            <para />
            The names of fields should be XML qualified names, that is within an XML namespace. The path
            syntax for a qualified name uses the namespace prefix. This is unreliable since the prefix is
            never guaranteed. The URI is the formal name, the prefix is just a local shorthand in a given
            sequence of XML text.
            </remarks>
            <param name="schemaNs">The namespace URI for the struct. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="structName">
            The name of the struct. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="fieldNs">
            The namespace URI for the field. Has the same URI and prefix usage as the
            schemaNS parameter.
            </param>
            <param name="fieldName">
            The name of the field. Must be a single XML name, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as the
            structName parameter.
            </param>
            <returns>
            Returns an <see cref="T:Spire.Xmp.IXmpProperty"/> containing the value and the options or
            <c>null</c> if the property does not exist. Arrays and non-leaf levels of
            structs do not have values.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetQualifier(System.String,System.String,System.String,System.String)">
            <summary>Provides access to a qualifier attached to a property.</summary>
            <remarks>
            The namespace for the qualifier is passed as a URI, you need not worry about the path string syntax.
            In many regards qualifiers are like struct fields. See the introductory discussion of qualified
            properties for more information.
            <para />
            The names of qualifiers should be XML qualified names, that is within an XML namespace. The
            path syntax for a qualified name uses the namespace prefix. This is unreliable since the
            prefix is never guaranteed. The URI is the formal name, the prefix is just a local shorthand
            in a given sequence of XML text.
            <para />
            <em>Note:</em> Qualifiers are only supported for simple leaf properties at this time.
            </remarks>
            <param name="schemaNs">The namespace URI for the struct. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">
            The name of the property to which the qualifier is attached. May be a general
            path expression, must not be <c>null</c> or the empty string. Has the same
            namespace prefix usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="qualNs">
            The namespace URI for the qualifier. Has the same URI and prefix usage as the
            schemaNS parameter.
            </param>
            <param name="qualName">
            The name of the qualifier. Must be a single XML name, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as the
            propName parameter.
            </param>
            <returns>
            Returns an <see cref="T:Spire.Xmp.IXmpProperty"/> containing the value and the options of the
            qualifier or <c>null</c> if the property does not exist. The name of the
            qualifier must be a single XML name, must not be <c>null</c> or the empty
            string. Has the same namespace prefix usage as the propName parameter.
            <para />
            The value of the qualifier is only set if it has one (Arrays and non-leaf levels of
            structs do not have values).
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetProperty(System.String,System.String,System.Object,Spire.Xmp.Options.PropertyOptions)">
            <summary>
            The property value setters all take a property specification, their
            differences are in the form of this.
            </summary>
            <remarks>
            The first two parameters are always the top level namespace URI (the <c>schema</c> namespace) and
            the basic name of the property being referenced. See the introductory discussion of path expression
            usage for more information.
            <para />
            All of the functions take a string value for the property and option flags describing the
            property. The value must be Unicode in UTF-8 encoding. Arrays and non-leaf levels of structs
            do not have values. Empty arrays and structs may be created using appropriate option flags.
            All levels of structs that is assigned implicitly are created if necessary. appendArayItem
            implicitly creates the named array if necessary.
            <para />
            See <see cref="T:Spire.Xmp.Options.PropertyOptions"/> for detailed information about the options.
            <para />
            This is the simplest property setter, mainly for top level simple properties or after using
            the path composition functions in <see cref="T:Spire.Xmp.XmpPathFactory"/>.
            </remarks>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">
            The name of the property.
            Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="propValue">
            the value for the property (only leaf properties have a value).
            Arrays and non-leaf levels of structs do not have values.
            Must be <c>null</c> if the value is not relevant.<br/>
            The value is automatically detected: Boolean, Integer, Long, Double, <see cref="T:Spire.Xmp.IXmpDateTime"/> and
            byte[] are handled, on all other <see cref="M:System.Object.ToString"/> is called.
            </param>
            <param name="options">Option flags describing the property. See the earlier description.</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetProperty(System.String,System.String,System.Object)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetProperty(System.String,System.String,System.Object,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI</param>
            <param name="propName">The name of the property</param>
            <param name="propValue">the value for the property</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetArrayItem(System.String,System.String,System.Int32,System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Replaces an item within an array.</summary>
            <remarks>
            The index is passed as an integer, you need not worry about
            the path string syntax for array items, convert a loop index to a string, etc. The array
            passed must already exist. In normal usage the selected array item is modified. A new item is
            automatically appended if the index is the array size plus 1.
            </remarks>
            <param name="schemaNs">The namespace URI for the array. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="itemIndex">
            The index of the desired item. Arrays in XMP are indexed from 1. To address
            the last existing item, use
            <see cref="M:Spire.Xmp.IXmpMeta.CountArrayItems(System.String,System.String)"/>
            to find
            out the length of the array.
            </param>
            <param name="itemValue">
            the new value of the array item. Has the same usage as propValue in
            <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="options">the set options for the item.</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetArrayItem(System.String,System.String,System.Int32,System.String)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetArrayItem(System.String,System.String,System.Int32,System.String,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI</param>
            <param name="arrayName">The name of the array</param>
            <param name="itemIndex">The index to insert the new item</param>
            <param name="itemValue">the new value of the array item</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.InsertArrayItem(System.String,System.String,System.Int32,System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Inserts an item into an array previous to the given index.</summary>
            <remarks>
            The index is passed as an integer,
            you need not worry about the path string syntax for array items, convert a loop index to a
            string, etc. The array passed must already exist. In normal usage the selected array item is
            modified. A new item is automatically appended if the index is the array size plus 1.
            </remarks>
            <param name="schemaNs">The namespace URI for the array. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="itemIndex">
            The index to insert the new item. Arrays in XMP are indexed from 1. Use
            <see cref="F:Spire.Xmp.XmpConstants.ArrayLastItem"/> to append items.
            </param>
            <param name="itemValue">
            the new value of the array item. Has the same usage as
            propValue in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="options">the set options that decide about the kind of the node.</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.InsertArrayItem(System.String,System.String,System.Int32,System.String)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.InsertArrayItem(System.String,System.String,System.Int32,System.String,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the array</param>
            <param name="arrayName">The name of the array</param>
            <param name="itemIndex">The index to insert the new item</param>
            <param name="itemValue">the value of the array item</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.AppendArrayItem(System.String,System.String,Spire.Xmp.Options.PropertyOptions,System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Simplifies the construction of an array by not requiring that you pre-create an empty array.</summary>
            <remarks>
            The array that is assigned is created automatically if it does not yet exist. Each call to
            appendArrayItem() appends an item to the array. The corresponding parameters have the same
            use as setArrayItem(). The arrayOptions parameter is used to specify what kind of array. If
            the array exists, it must have the specified form.
            </remarks>
            <param name="schemaNs">The namespace URI for the array. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be null or
            the empty string. Has the same namespace prefix usage as propPath in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="arrayOptions">
            Option flags describing the array form. The only valid options are
            <list type="bullet">
            <item><see cref="F:Spire.Xmp.Options.PropertyOptions.ArrayFlag"/>,</item>
            <item><see cref="F:Spire.Xmp.Options.PropertyOptions.ArrayOrderedFlag"/>,</item>
            <item><see cref="F:Spire.Xmp.Options.PropertyOptions.ArrayAlternateFlag"/> or</item>
            <item><see cref="F:Spire.Xmp.Options.PropertyOptions.ArrayAltTextFlag"/>.</item>
            </list>
            <em>Note:</em> the array options only need to be provided if the array is not
            already existing, otherwise you can set them to <c>null</c> or use
            <see cref="M:Spire.Xmp.IXmpMeta.AppendArrayItem(System.String,System.String,System.String)"/>.
            </param>
            <param name="itemValue">the value of the array item. Has the same usage as propValue in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="itemOptions">Option flags describing the item to append (<see cref="T:Spire.Xmp.Options.PropertyOptions"/>)</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.AppendArrayItem(System.String,System.String,System.String)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.AppendArrayItem(System.String,System.String,Spire.Xmp.Options.PropertyOptions,System.String,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the array</param>
            <param name="arrayName">The name of the array</param>
            <param name="itemValue">the value of the array item</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetStructField(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Provides access to fields within a nested structure.</summary>
            <remarks>
            The namespace for the field is passed as
            a URI, you need not worry about the path string syntax. The names of fields should be XML
            qualified names, that is within an XML namespace. The path syntax for a qualified name uses
            the namespace prefix, which is unreliable because the prefix is never guaranteed. The URI is
            the formal name, the prefix is just a local shorthand in a given sequence of XML text.
            </remarks>
            <param name="schemaNs">The namespace URI for the struct. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="structName">
            The name of the struct. May be a general path expression, must not be null
            or the empty string. Has the same namespace prefix usage as propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="fieldNs">
            The namespace URI for the field. Has the same URI and prefix usage as the
            schemaNS parameter.
            </param>
            <param name="fieldName">
            The name of the field. Must be a single XML name, must not be null or the
            empty string. Has the same namespace prefix usage as the structName parameter.
            </param>
            <param name="fieldValue">
            the value of thefield, if the field has a value.
            Has the same usage as propValue in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="options">Option flags describing the field. See the earlier description.</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetStructField(System.String,System.String,System.String,System.String,System.String)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetStructField(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the struct</param>
            <param name="structName">The name of the struct</param>
            <param name="fieldNs">The namespace URI for the field</param>
            <param name="fieldName">The name of the field</param>
            <param name="fieldValue">the value of the field</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetQualifier(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Provides access to a qualifier attached to a property.</summary>
            <remarks>
            The namespace for the qualifier is passed as a URI, you need not worry about the path string syntax.
            In many regards qualifiers are like struct fields. See the introductory discussion of qualified properties
            for more information. The names of qualifiers should be XML qualified names, that is within an XML
            namespace. The path syntax for a qualified name uses the namespace prefix, which is
            unreliable because the prefix is never guaranteed. The URI is the formal name, the prefix is
            just a local shorthand in a given sequence of XML text. The property the qualifier
            will be attached has to exist.
            </remarks>
            <param name="schemaNs">The namespace URI for the struct. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property to which the qualifier is attached. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="qualNs">The namespace URI for the qualifier. Has the same URI and prefix usage as the schemaNS parameter.</param>
            <param name="qualName">
            The name of the qualifier. Must be a single XML name, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as the
            propName parameter.
            </param>
            <param name="qualValue">
            A pointer to the <c>null</c> terminated UTF-8 string that is the
            value of the qualifier, if the qualifier has a value. Has the same usage as propValue
            in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="options">Option flags describing the qualifier. See the earlier description.</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetQualifier(System.String,System.String,System.String,System.String,System.String)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetQualifier(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the struct</param>
            <param name="propName">The name of the property to which the qualifier is attached</param>
            <param name="qualNs">The namespace URI for the qualifier</param>
            <param name="qualName">The name of the qualifier</param>
            <param name="qualValue">the value of the qualifier</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DeleteProperty(System.String,System.String)">
            <summary>Deletes the given XMP subtree rooted at the given property.</summary>
            <remarks>It is not an error if the property does not exist.</remarks>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DeleteArrayItem(System.String,System.String,System.Int32)">
            <summary>Deletes the given XMP subtree rooted at the given array item.</summary>
            <remarks>It is not an error if the array item does not exist.</remarks>
            <param name="schemaNs">The namespace URI for the array. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="itemIndex">
            The index of the desired item. Arrays in XMP are indexed from 1. The
            constant <see cref="F:Spire.Xmp.XmpConstants.ArrayLastItem"/> always refers to the last
            existing array item.
            </param>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DeleteStructField(System.String,System.String,System.String,System.String)">
            <summary>Deletes the given XMP subtree rooted at the given struct field.</summary>
            <remarks>It is not an error if the field does not exist.</remarks>
            <param name="schemaNs">The namespace URI for the struct. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="structName">
            The name of the struct. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="fieldNs">The namespace URI for the field. Has the same URI and prefix usage as the schemaNS parameter.</param>
            <param name="fieldName">
            The name of the field. Must be a single XML name, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as the
            structName parameter.
            </param>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DeleteQualifier(System.String,System.String,System.String,System.String)">
            <summary>Deletes the given XMP subtree rooted at the given qualifier.</summary>
            <remarks>
            Deletes the given XMP subtree rooted at the given qualifier. It is not an error if the
            qualifier does not exist.
            </remarks>
            <param name="schemaNs">The namespace URI for the struct. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property to which the qualifier is attached. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="qualNs">The namespace URI for the qualifier. Has the same URI and prefix usage as the schemaNS parameter.</param>
            <param name="qualName">
            The name of the qualifier. Must be a single XML name, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as the
            propName parameter.
            </param>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DoesPropertyExist(System.String,System.String)">
            <summary>Returns whether the property exists.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns true if the property exists.</returns>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DoesArrayItemExist(System.String,System.String,System.Int32)">
            <summary>Tells if the array item exists.</summary>
            <param name="schemaNs">The namespace URI for the array. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="itemIndex">
            The index of the desired item. Arrays in XMP are indexed from 1. The
            constant <see cref="F:Spire.Xmp.XmpConstants.ArrayLastItem"/> always refers to the last
            existing array item.
            </param>
            <returns>Returns <c>true</c> if the array exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DoesStructFieldExist(System.String,System.String,System.String,System.String)">
            <summary>DoesStructFieldExist tells if the struct field exists.</summary>
            <param name="schemaNs">The namespace URI for the struct. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="structName">
            The name of the struct. May be a general path expression, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="fieldNs">The namespace URI for the field. Has the same URI and prefix usage as the schemaNS parameter.</param>
            <param name="fieldName">
            The name of the field. Must be a single XML name, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as the
            structName parameter.
            </param>
            <returns>Returns true if the field exists.</returns>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DoesQualifierExist(System.String,System.String,System.String,System.String)">
            <summary>DoesQualifierExist tells if the qualifier exists.</summary>
            <param name="schemaNs">The namespace URI for the struct. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property to which the qualifier is attached. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="qualNs">The namespace URI for the qualifier. Has the same URI and prefix usage as the schemaNS parameter.</param>
            <param name="qualName">
            The name of the qualifier. Must be a single XML name, must not be
            <c>null</c> or the empty string. Has the same namespace prefix usage as the
            propName parameter.
            </param>
            <returns>Returns true if the qualifier exists.</returns>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetLocalizedText(System.String,System.String,System.String,System.String)">
            <summary>
            These functions provide convenient support for localized text properties, including a number
            of special and obscure aspects.
            </summary>
            <remarks>
            Localized text properties are stored in alt-text arrays. They
            allow multiple concurrent localizations of a property value, for example a document title or
            copyright in several languages. The most important aspect of these functions is that they
            select an appropriate array item based on one or two RFC 3066 language tags. One of these
            languages, the "specific" language, is preferred and selected if there is an exact match. For
            many languages it is also possible to define a "generic" language that may be used if there
            is no specific language match. The generic language must be a valid RFC 3066 primary subtag,
            or the empty string. For example, a specific language of "en-US" should be used in the US,
            and a specific language of "en-UK" should be used in England. It is also appropriate to use
            "en" as the generic language in each case. If a US document goes to England, the "en-US"
            title is selected by using the "en" generic language and the "en-UK" specific language. It is
            considered poor practice, but allowed, to pass a specific language that is just an RFC 3066
            primary tag. For example "en" is not a good specific language, it should only be used as a
            generic language. Passing "i" or "x" as the generic language is also considered poor practice
            but allowed. Advice from the W3C about the use of RFC 3066 language tags can be found at:
            http://www.w3.org/International/articles/language-tags/
            <para />
            <em>Note:</em> RFC 3066 language tags must be treated in a case insensitive manner. The XMP
            Toolkit does this by normalizing their capitalization:
            <list type="bullet">
            <item> The primary subtag is lower case, the suggested practice of ISO 639.</item>
            <item> All 2 letter secondary subtags are upper case, the suggested practice of ISO 3166.</item>
            <item> All other subtags are lower case. The XMP specification defines an artificial language,</item>
            <item>"x-default", that is used to explicitly denote a default item in an alt-text array.</item>
            </list>
            The XMP toolkit normalizes alt-text arrays such that the x-default item is the first item.
            The SetLocalizedText function has several special features related to the x-default item, see
            its description for details. The selection of the array item is the same for GetLocalizedText
            and SetLocalizedText:
            <list type="bullet">
            <item> Look for an exact match with the specific language.</item>
            <item> If a generic language is given, look for a partial match.</item>
            <item> Look for an x-default item.</item>
            <item> Choose the first item.</item>
            </list>
            A partial match with the generic language is where the start of the item's language matches
            the generic string and the next character is '-'. An exact match is also recognized as a
            degenerate case. It is fine to pass x-default as the specific language. In this case,
            selection of an x-default item is an exact match by the first rule, not a selection by the
            3rd rule. The last 2 rules are fallbacks used when the specific and generic languages fail to
            produce a match. <c>getLocalizedText</c> returns information about a selected item in
            an alt-text array. The array item is selected according to the rules given above.
            </remarks>
            <param name="schemaNs">
            The namespace URI for the alt-text array. Has the same usage as in
            <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="altTextName">
            The name of the alt-text array. May be a general path expression, must not
            be <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="genericLang">
            The name of the generic language as an RFC 3066 primary subtag. May be
            <c>null</c> or the empty string if no generic language is wanted.
            </param>
            <param name="specificLang">
            The name of the specific language as an RFC 3066 tag. Must not be
            <c>null</c> or the empty string.
            </param>
            <returns>
            Returns an <see cref="T:Spire.Xmp.IXmpProperty"/> containing the value, the actual language and
            the options if an appropriate alternate collection item exists, <c>null</c>
            if the property.
            does not exist.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetLocalizedText(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Modifies the value of a selected item in an alt-text array.</summary>
            <remarks>
            Creates an appropriate array item
            if necessary, and handles special cases for the x-default item. If the selected item is from
            a match with the specific language, the value of that item is modified. If the existing value
            of that item matches the existing value of the x-default item, the x-default item is also
            modified. If the array only has 1 existing item (which is not x-default), an x-default item
            is added with the given value. If the selected item is from a match with the generic language
            and there are no other generic matches, the value of that item is modified. If the existing
            value of that item matches the existing value of the x-default item, the x-default item is
            also modified. If the array only has 1 existing item (which is not x-default), an x-default
            item is added with the given value. If the selected item is from a partial match with the
            generic language and there are other partial matches, a new item is created for the specific
            language. The x-default item is not modified. If the selected item is from the last 2 rules
            then a new item is created for the specific language. If the array only had an x-default
            item, the x-default item is also modified. If the array was empty, items are created for the
            specific language and x-default.
            </remarks>
            <param name="schemaNs">
            The namespace URI for the alt-text array. Has the same usage as in
            <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="altTextName">
            The name of the alt-text array. May be a general path expression, must not
            be <c>null</c> or the empty string. Has the same namespace prefix usage as
            propName in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.
            </param>
            <param name="genericLang">
            The name of the generic language as an RFC 3066 primary subtag. May be
            <c>null</c> or the empty string if no generic language is wanted.
            </param>
            <param name="specificLang">
            The name of the specific language as an RFC 3066 tag. Must not be
            <c>null</c> or the empty string.
            </param>
            <param name="itemValue">
            A pointer to the <c>null</c> terminated UTF-8 string that is the new
            value for the appropriate array item.
            </param>
            <param name="options">Option flags, none are defined at present.</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetLocalizedText(System.String,System.String,System.String,System.String,System.String)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetLocalizedText(System.String,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the alt-text array</param>
            <param name="altTextName">The name of the alt-text array</param>
            <param name="genericLang">The name of the generic language</param>
            <param name="specificLang">The name of the specific language</param>
            <param name="itemValue">the new value for the appropriate array item</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPropertyBoolean(System.String,System.String)">
            <summary>
            These are very similar to <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/> and <see cref="M:Spire.Xmp.IXmpMeta.SetProperty(System.String,System.String,System.Object)"/> above,
            but the value is returned or provided in a literal form instead of as a UTF-8 string.
            </summary>
            <remarks>
            The path composition functions in <see cref="T:Spire.Xmp.XmpPathFactory"/> may be used to compose an path
            expression for fields in nested structures, items in arrays, or qualifiers.
            </remarks>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns a <c>bool</c> value or <c>null</c> if the property does not exist.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur, especially conversion errors.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPropertyInteger(System.String,System.String)">
            <summary>Convenience method to retrieve the literal value of a property.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns an <c>int</c> value or <c>null</c> if the property does not exist.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur, especially conversion errors.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPropertyLong(System.String,System.String)">
            <summary>Convenience method to retrieve the literal value of a property.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns a <c>long</c> value or <c>null</c> if the property does not exist.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur, especially conversion errors.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPropertyDouble(System.String,System.String)">
            <summary>Convenience method to retrieve the literal value of a property.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns a <c>double</c> value or <c>null</c> if the property does not exist.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur, especially conversion errors.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPropertyDate(System.String,System.String)">
            <summary>Convenience method to retrieve the literal value of a property.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns a <c>IXmpDateTime</c> object or <c>null</c> if the property does not exist.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur, especially conversion errors.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPropertyCalendar(System.String,System.String)">
            <summary>Convenience method to retrieve the literal value of a property.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns a <c>Calendar</c>-object or <c>null</c> if the property does not exist.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur, especially conversion errors.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPropertyBase64(System.String,System.String)">
            <summary>Convenience method to retrieve the literal value of a property.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns a <c>byte[]</c>-array contained the decoded base64 value or <c>null</c> if the property does not exist.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur, especially conversion errors.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPropertyString(System.String,System.String)">
            <summary>Convenience method to retrieve the literal value of a property.</summary>
            <remarks>Note that there is no <c>setPropertyString()</c>z, because <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/> sets a string value.</remarks>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <returns>Returns a <c>string</c> value or <c>null</c> if the property does not exist.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur, especially conversion errors.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyBoolean(System.String,System.String,System.Boolean,Spire.Xmp.Options.PropertyOptions)">
            <summary>Convenience method to set a property to a literal <c>boolean</c> value.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propValue">the literal property value as <c>boolean</c>.</param>
            <param name="options">options of the property to set (optional).</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyBoolean(System.String,System.String,System.Boolean)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetPropertyBoolean(System.String,System.String,System.Boolean,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the property</param>
            <param name="propName">The name of the property</param>
            <param name="propValue">the literal property value as <c>boolean</c></param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyInteger(System.String,System.String,System.Int32,Spire.Xmp.Options.PropertyOptions)">
            <summary>Convenience method to set a property to a literal <c>int</c> value.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propValue">the literal property value as <c>int</c>.</param>
            <param name="options">options of the property to set (optional).</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyInteger(System.String,System.String,System.Int32)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetPropertyInteger(System.String,System.String,System.Int32,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the property</param>
            <param name="propName">The name of the property</param>
            <param name="propValue">the literal property value as <c>int</c></param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyLong(System.String,System.String,System.Int64,Spire.Xmp.Options.PropertyOptions)">
            <summary>Convenience method to set a property to a literal <c>long</c> value.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propValue">the literal property value as <c>long</c>.</param>
            <param name="options">options of the property to set (optional).</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyLong(System.String,System.String,System.Int64)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetPropertyLong(System.String,System.String,System.Int64,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the property</param>
            <param name="propName">The name of the property</param>
            <param name="propValue">the literal property value as <c>long</c></param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyDouble(System.String,System.String,System.Double,Spire.Xmp.Options.PropertyOptions)">
            <summary>Convenience method to set a property to a literal <c>double</c> value.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propValue">the literal property value as <c>double</c>.</param>
            <param name="options">options of the property to set (optional).</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyDouble(System.String,System.String,System.Double)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetPropertyDouble(System.String,System.String,System.Double,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the property</param>
            <param name="propName">The name of the property</param>
            <param name="propValue">the literal property value as <c>double</c></param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyDate(System.String,System.String,Spire.Xmp.IXmpDateTime,Spire.Xmp.Options.PropertyOptions)">
            <summary>Convenience method to set a property with an XMPDateTime-object, which is serialized to an ISO8601 date.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in<see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propValue">the property value as <c>XMPDateTime</c>.</param>
            <param name="options">options of the property to set (optional).</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyDate(System.String,System.String,Spire.Xmp.IXmpDateTime)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetPropertyDate(System.String,System.String,Spire.Xmp.IXmpDateTime,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the property</param>
            <param name="propName">The name of the property</param>
            <param name="propValue">the property value as <c>XMPDateTime</c></param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyCalendar(System.String,System.String,Spire.Xmp.Sharpen.Calendar,Spire.Xmp.Options.PropertyOptions)">
            <summary>Convenience method to set a property with a Calendar-object, which is serialized to an ISO8601 date.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propValue">the property value as <c>Calendar</c>.</param>
            <param name="options">options of the property to set (optional).</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyCalendar(System.String,System.String,Spire.Xmp.Sharpen.Calendar)">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetPropertyCalendar(System.String,System.String,Spire.Xmp.Sharpen.Calendar,Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the property</param>
            <param name="propName">The name of the property</param>
            <param name="propValue">the property value as <c>Calendar</c></param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyBase64(System.String,System.String,System.Byte[],Spire.Xmp.Options.PropertyOptions)">
            <summary>Convenience method to set a property from a binary <c>byte[]</c>-array, which is serialized as base64-string.</summary>
            <param name="schemaNs">The namespace URI for the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propName">The name of the property. Has the same usage as in <see cref="M:Spire.Xmp.IXmpMeta.GetProperty(System.String,System.String)"/>.</param>
            <param name="propValue">the literal property value as byte array.</param>
            <param name="options">options of the property to set (optional).</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetPropertyBase64(System.String,System.String,System.Byte[])">
            <seealso cref="M:Spire.Xmp.IXmpMeta.SetPropertyBase64(System.String,System.String,System.Byte[],Spire.Xmp.Options.PropertyOptions)"/>
            <param name="schemaNs">The namespace URI for the property</param>
            <param name="propName">The name of the property</param>
            <param name="propValue">the literal property value as byte array</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all exceptions</exception>
        </member>
        <member name="P:Spire.Xmp.IXmpMeta.Properties">
            <summary>Constructs an enumerable for the properties within this XMP object.</summary>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetObjectName">
            <summary>This correlates to the about-attribute, returns the empty String if no name is set.</summary>
            <returns>Returns the name of the XMP object.</returns>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.SetObjectName(System.String)">
            <param name="name">Sets the name of the XMP object.</param>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.GetPacketHeader">
            <returns>
            Returns the unparsed content of the &lt;?xpacket&gt; processing instruction.
            This contains normally the attribute-like elements 'begin="&lt;BOM&gt;"
            id="W5M0MpCehiHzreSzNTczkc9d"' and possibly the deprecated elements 'bytes="1234"' or
            'encoding="XXX"'. If the parsed packet has not been wrapped into an xpacket,
            <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.Sort">
            <remarks>
            Sorts the complete datamodel according to the following rules:
            <list type="bullet">
            <item>Schema nodes are sorted by prefix.</item>
            <item>Properties at top level and within structs are sorted by full name, that is prefix + local name.</item>
            <item>Array items are not sorted, even if they have no certain order such as bags.</item>
            <item>Qualifier are sorted, with the exception of "xml:lang" and/or "rdf:type" that stay at the top of the list in that order.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.Normalize(Spire.Xmp.Options.ParseOptions)">
            <summary>Perform the normalization as a separate parsing step.</summary>
            <remarks>
            Normally it is done during parsing, unless <see cref="P:Spire.Xmp.Options.ParseOptions.OmitNormalization"/> is set to <c>true</c>.
            <para />
            Note: It does no harm to call this method to an already normalized xmp object.
            It was a PDF/A requirement to get hand on the unnormalized <c>XMPMeta</c> object.
            </remarks>
            <param name="options">optional parsing options.</param>
            <exception cref="T:Spire.Xmp.XmpException">Wraps all errors and exceptions that may occur.</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpMeta.DumpObject">
            <summary>Renders this node and the tree under this node in a human readable form.</summary>
            <returns>Returns a multiline string containing the dump.</returns>
        </member>
        <member name="T:Spire.Xmp.IXmpProperty">
            <summary>Models a a text property together with its language and options.</summary>
            <author>Stefan Makswit</author>
            <since>23.01.2006</since>
        </member>
        <member name="P:Spire.Xmp.IXmpProperty.Value">
            <value>Returns the value of the property.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpProperty.Options">
            <value>Returns the options of the property.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpProperty.Language">
            <summary>
            Only set by <see cref="M:Spire.Xmp.IXmpMeta.GetLocalizedText(System.String,System.String,System.String,System.String)"/>.
            </summary>
            <value>Returns the language of the alt-text item.</value>
        </member>
        <member name="T:Spire.Xmp.IXmpPropertyInfo">
            <summary>Models a property together with its path and namespace.</summary>
            <remarks>Instances of this type are are iterated via <see cref="T:Spire.Xmp.IXmpIterator"/>.</remarks>
            <author>Stefan Makswit</author>
            <since>06.07.2006</since>
        </member>
        <member name="P:Spire.Xmp.IXmpPropertyInfo.Namespace">
            <value>Returns the namespace of the property</value>
        </member>
        <member name="P:Spire.Xmp.IXmpPropertyInfo.Path">
            <value>Returns the path of the property, but only if returned by the iterator.</value>
        </member>
        <member name="T:Spire.Xmp.IXmpSchemaRegistry">
            <summary>
            The schema registry keeps track of all namespaces and aliases used in the XMP
            metadata.
            </summary>
            <remarks>
            At initialisation time, the default namespaces and default aliases
            are automatically registered. <b>Namespaces</b> must be registered before
            used in namespace URI parameters or path expressions. Within the XMP Toolkit
            the registered namespace URIs and prefixes must be unique. Additional
            namespaces encountered when parsing RDF are automatically registered. The
            namespace URI should always end in an XML name separator such as '/' or '#'.
            This is because some forms of RDF shorthand catenate a namespace URI with an
            element name to form a new URI.
            <para />
            <b>Aliases</b> in XMP serve the same purpose as Windows file shortcuts,
            Macintosh file aliases, or UNIX file symbolic links. The aliases are simply
            multiple names for the same property. One distinction of XMP aliases is that
            they are ordered, there is an alias name pointing to an actual name. The
            primary significance of the actual name is that it is the preferred name for
            output, generally the most widely recognized name.
            <para />
            The names that can be aliased in XMP are restricted. The alias must be a top
            level property name, not a field within a structure or an element within an
            array. The actual may be a top level property name, the first element within
            a top level array, or the default element in an alt-text array. This does not
            mean the alias can only be a simple property. It is OK to alias a top level
            structure or array to an identical top level structure or array, or to the
            first item of an array of structures.
            </remarks>
            <author>Stefan Makswit</author>
            <since>27.01.2006</since>
        </member>
        <member name="M:Spire.Xmp.IXmpSchemaRegistry.RegisterNamespace(System.String,System.String)">
            <summary>Register a namespace URI with a suggested prefix.</summary>
            <remarks>
            It is not an error if the URI is already registered, no matter what the prefix is.
            If the URI is not registered but the suggested prefix is in use, a unique prefix is
            created from the suggested one. The actual registered prefix is always
            returned. The function result tells if the registered prefix is the
            suggested one.
            <para />
            Note: No checking is presently done on either the URI or the prefix.
            </remarks>
            <param name="namespaceUri">The URI for the namespace. Must be a valid XML URI.</param>
            <param name="suggestedPrefix">
            The suggested prefix to be used if the URI is not yet
            registered. Must be a valid XML name.
            </param>
            <returns>
            Returns the registered prefix for this URI, is equal to the
            suggestedPrefix if the namespace hasn't been registered before,
            otherwise the existing prefix.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">If the parameters are not accordingly set</exception>
        </member>
        <member name="M:Spire.Xmp.IXmpSchemaRegistry.GetNamespacePrefix(System.String)">
            <summary>Obtain the prefix for a registered namespace URI.</summary>
            <remarks>
            It is not an error if the namespace URI is not registered.
            </remarks>
            <param name="namespaceUri">
            The URI for the namespace. Must not be null or the empty
            string.
            </param>
            <returns>Returns the prefix registered for this namespace URI or null.</returns>
        </member>
        <member name="M:Spire.Xmp.IXmpSchemaRegistry.GetNamespaceUri(System.String)">
            <summary>Obtain the URI for a registered namespace prefix.</summary>
            <remarks>
            It is not an error if the namespace prefix is not registered.
            </remarks>
            <param name="namespacePrefix">
            The prefix for the namespace. Must not be null or the empty
            string.
            </param>
            <returns>Returns the URI registered for this prefix or null.</returns>
        </member>
        <member name="P:Spire.Xmp.IXmpSchemaRegistry.Namespaces">
            <summary>
            Returns the registered prefix/namespace-pairs as map, where the keys are the
            namespaces and the values are the prefixes.
            </summary>
        </member>
        <member name="P:Spire.Xmp.IXmpSchemaRegistry.Prefixes">
            <summary>
            Returns the registered namespace/prefix-pairs as map, where the keys are the
            prefixes and the values are the namespaces.
            </summary>
        </member>
        <member name="M:Spire.Xmp.IXmpSchemaRegistry.DeleteNamespace(System.String)">
            <summary>Deletes a namespace from the registry.</summary>
            <remarks>
            Does nothing if the URI is not registered, or if the namespaceURI
            parameter is null or the empty string.
            <para />
            Note: Not yet implemented.
            </remarks>
            <param name="namespaceUri">The URI for the namespace.</param>
        </member>
        <member name="M:Spire.Xmp.IXmpSchemaRegistry.ResolveAlias(System.String,System.String)">
            <summary>Determines if a name is an alias, and what it is aliased to.</summary>
            <param name="aliasNs">
            The namespace URI of the alias. Must not be <c>null</c> or the empty string.
            </param>
            <param name="aliasProp">
            The name of the alias. May be an arbitrary path expression
            path, must not be <c>null</c> or the empty string.
            </param>
            <returns>
            Returns the <c>XMPAliasInfo</c> for the given alias namespace and property or
            <c>null</c> if there is no such alias.
            </returns>
        </member>
        <member name="M:Spire.Xmp.IXmpSchemaRegistry.FindAliases(System.String)">
            <summary>Collects all aliases that are contained in the provided namespace.</summary>
            <remarks>
            Collects all aliases that are contained in the provided namespace.
            If nothing is found, an empty array is returned.
            </remarks>
            <param name="aliasNs">a schema namespace URI</param>
            <returns>Returns all alias infos from aliases that are contained in the provided namespace.</returns>
        </member>
        <member name="M:Spire.Xmp.IXmpSchemaRegistry.FindAlias(System.String)">
            <summary>Searches for registered aliases.</summary>
            <param name="qname">an XML conform qname</param>
            <returns>
            Returns if an alias definition for the given qname to another
            schema and property is registered.
            </returns>
        </member>
        <member name="P:Spire.Xmp.IXmpSchemaRegistry.Aliases">
            <summary>
            Returns the registered aliases as map, where the key is the "qname" (prefix and name)
            and the value an <c>XMPAliasInfo</c>-object.
            </summary>
        </member>
        <member name="T:Spire.Xmp.IXmpVersionInfo">
            <summary>XMP Toolkit Version Information.</summary>
            <remarks>
            Version information for the XMP toolkit is available at runtime via <see cref="P:Spire.Xmp.XmpMetaFactory.VersionInfo"/>.
            </remarks>
            <author>Stefan Makswit</author>
            <since>23.01.2006</since>
        </member>
        <member name="P:Spire.Xmp.IXmpVersionInfo.Major">
            <value>Returns the primary release number, the "1" in version "1.2.3".</value>
        </member>
        <member name="P:Spire.Xmp.IXmpVersionInfo.Minor">
            <value>Returns the secondary release number, the "2" in version "1.2.3".</value>
        </member>
        <member name="P:Spire.Xmp.IXmpVersionInfo.Micro">
            <value>Returns the tertiary release number, the "3" in version "1.2.3".</value>
        </member>
        <member name="P:Spire.Xmp.IXmpVersionInfo.Build">
            <value>Returns a rolling build number, monotonically increasing in a release.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpVersionInfo.IsDebug">
            <value>Returns true if this is a debug build.</value>
        </member>
        <member name="P:Spire.Xmp.IXmpVersionInfo.Message">
            <value>Returns a comprehensive version information string.</value>
        </member>
        <member name="T:Spire.Xmp.Options.AliasOptions">
            <summary>Options for XMPSchemaRegistryImpl#registerAlias.</summary>
            <author>Stefan Makswit</author>
            <since>20.02.2006</since>
        </member>
        <member name="F:Spire.Xmp.Options.AliasOptions.PropDirect">
            <summary>This is a direct mapping.</summary>
            <remarks>This is a direct mapping. The actual data type does not matter.</remarks>
        </member>
        <member name="F:Spire.Xmp.Options.AliasOptions.PropArray">
            <summary>The actual is an unordered array, the alias is to the first element of the array.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.AliasOptions.PropArrayOrdered">
            <summary>The actual is an ordered array, the alias is to the first element of the array.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.AliasOptions.PropArrayAlternate">
            <summary>The actual is an alternate array, the alias is to the first element of the array.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.AliasOptions.PropArrayAltText">
            <summary>The actual is an alternate text array, the alias is to the 'x-default' element of the array.</summary>
        </member>
        <member name="M:Spire.Xmp.Options.AliasOptions.#ctor(System.Int32)">
            <param name="options">the options to init with</param>
            <exception cref="T:Spire.Xmp.XmpException">If options are not consistant</exception>
        </member>
        <member name="M:Spire.Xmp.Options.AliasOptions.IsSimple">
            <returns>Returns if the alias is of the simple form.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.AliasOptions.ToPropertyOptions">
            <returns>
            Returns a <see cref="T:Spire.Xmp.Options.PropertyOptions"/> object
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">If the options are not consistant.</exception>
        </member>
        <member name="T:Spire.Xmp.Options.IteratorOptions">
            <summary>Options for <c>XMPIterator</c> construction.</summary>
            <author>Stefan Makswit</author>
            <since>24.01.2006</since>
        </member>
        <member name="F:Spire.Xmp.Options.IteratorOptions.JustChildren">
            <summary>Just do the immediate children of the root, default is subtree.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.IteratorOptions.JustLeafNodes">
            <summary>Just do the leaf nodes, default is all nodes in the subtree.</summary>
            <remarks>
            Just do the leaf nodes, default is all nodes in the subtree.
            Bugfix #2658965: If this option is set the Iterator returns the namespace
            of the leaf instead of the namespace of the base property.
            </remarks>
        </member>
        <member name="F:Spire.Xmp.Options.IteratorOptions.JustLeafName">
            <summary>Return just the leaf part of the path, default is the full path.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.IteratorOptions.OmitQualifiers">
            <summary>Omit all qualifiers.</summary>
        </member>
        <member name="T:Spire.Xmp.Options.Options">
            <summary>The base class for a collection of 32 flag bits.</summary>
            <remarks>
            The base class for a collection of 32 flag bits. Individual flags are defined as enum value bit
            masks. Inheriting classes add convenience accessor methods.
            </remarks>
            <author>Stefan Makswit</author>
            <since>24.01.2006</since>
        </member>
        <member name="F:Spire.Xmp.Options.Options._options">
            <summary>the internal int containing all options</summary>
        </member>
        <member name="F:Spire.Xmp.Options.Options._optionNames">
            <summary>a map containing the bit names</summary>
        </member>
        <member name="M:Spire.Xmp.Options.Options.#ctor">
            <summary>The default constructor.</summary>
        </member>
        <member name="M:Spire.Xmp.Options.Options.#ctor(System.Int32)">
            <summary>Constructor with the options bit mask.</summary>
            <param name="options">the options bit mask</param>
            <exception cref="T:Spire.Xmp.XmpException">If the options are not correct</exception>
        </member>
        <member name="M:Spire.Xmp.Options.Options.Clear">
            <summary>Resets the options.</summary>
        </member>
        <member name="M:Spire.Xmp.Options.Options.IsExactly(System.Int32)">
            <param name="optionBits">an option bitmask</param>
            <returns>Returns true, if this object is equal to the given options.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.ContainsAllOptions(System.Int32)">
            <param name="optionBits">an option bitmask</param>
            <returns>Returns true, if this object contains all given options.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.ContainsOneOf(System.Int32)">
            <param name="optionBits">an option bitmask</param>
            <returns>Returns true, if this object contain at least one of the given options.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.GetOption(System.Int32)">
            <param name="optionBit">the binary bit or bits that are requested</param>
            <returns>Returns if <emp>all</emp> of the requested bits are set or not.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.SetOption(System.Int32,System.Boolean)">
            <param name="optionBits">the binary bit or bits that shall be set to the given value</param>
            <param name="value">the boolean value to set</param>
        </member>
        <member name="M:Spire.Xmp.Options.Options.GetOptions">
            <summary>Is friendly to access it during the tests.</summary>
            <returns>Returns the options.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.SetOptions(System.Int32)">
            <param name="options">The options to set.</param>
            <exception cref="T:Spire.Xmp.XmpException">If the options are not correct</exception>
        </member>
        <member name="M:Spire.Xmp.Options.Options.GetOptionsString">
            <summary>Creates a human readable string from the set options.</summary>
            <remarks>
            <em>Note:</em> This method is quite expensive and should only be used within tests or as
            </remarks>
            <returns>
            Returns a string listing all options that are set to <c>true</c> by their name,
            like "option1 | option4".
            </returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.ToString">
            <returns>Returns the options as hex bitmask.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.GetValidOptions">
            <summary>To be implemented by inheritants.</summary>
            <returns>Returns a bit mask where all valid option bits are set.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.DefineOptionName(System.Int32)">
            <summary>To be implemented by inheritants.</summary>
            <param name="option">a single, valid option bit.</param>
            <returns>Returns a human readable name for an option bit.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.AssertConsistency(System.Int32)">
            <summary>The inheriting option class can do additional checks on the options.</summary>
            <remarks>
            The inheriting option class can do additional checks on the options.
            <em>Note:</em> For performance reasons this method is only called
            when setting bitmasks directly.
            When get- and set-methods are used, this method must be called manually,
            normally only when the Options-object has been created from a client
            (it has to be made public therefore).
            </remarks>
            <param name="options">the bitmask to check.</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the options are not consistent.</exception>
        </member>
        <member name="M:Spire.Xmp.Options.Options.AssertOptionsValid(System.Int32)">
            <summary>Checks options before they are set.</summary>
            <remarks>
            First it is checked if only defined options are used, second the additional
            <see cref="M:Spire.Xmp.Options.Options.AssertConsistency(System.Int32)"/>-method is called.
            </remarks>
            <param name="options">the options to check</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the options are invalid.</exception>
        </member>
        <member name="M:Spire.Xmp.Options.Options.GetOptionName(System.Int32)">
            <summary>Looks up or asks the inherited class for the name of an option bit.</summary>
            <remarks>
            Looks up or asks the inherited class for the name of an option bit.
            Its save that there is only one valid option handed into the method.
            </remarks>
            <param name="option">a single option bit</param>
            <returns>Returns the option name or undefined.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.Options.ProcureOptionNames">
            <returns>Returns the optionNames map and creates it if required.</returns>
        </member>
        <member name="T:Spire.Xmp.Options.ParseOptions">
            <summary>
            Options for <see cref="M:Spire.Xmp.XmpMetaFactory.Parse(System.IO.Stream,Spire.Xmp.Options.ParseOptions)"/>.
            </summary>
            <author>Stefan Makswit</author>
            <since>24.01.2006</since>
        </member>
        <member name="F:Spire.Xmp.Options.ParseOptions.RequireXmpMetaFlag">
            <summary>Require a surrounding &quot;x:xmpmeta&quot; element in the xml-document.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.ParseOptions.StrictAliasingFlag">
            <summary>Do not reconcile alias differences, throw an exception instead.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.ParseOptions.FixControlCharsFlag">
            <summary>Convert ASCII control characters 0x01 - 0x1F (except tab, cr, and lf) to spaces.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.ParseOptions.AcceptLatin1Flag">
            <summary>If the input is not unicode, try to parse it as ISO-8859-1.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.ParseOptions.OmitNormalizationFlag">
            <summary>Do not carry run the XMPNormalizer on a packet, leave it as it is.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.ParseOptions.DisallowDoctypeFlag">
            <summary>Disallow DOCTYPE declarations to prevent entity expansion attacks.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.ParseOptions.mXMPNodesToLimit">
            <summary>Map of nodes whose children are to be limited.</summary>
        </member>
        <member name="M:Spire.Xmp.Options.ParseOptions.#ctor">
            <summary>Sets the options to the default values.</summary>
        </member>
        <member name="P:Spire.Xmp.Options.ParseOptions.AreXMPNodesLimited">
            <summary>Returns true if some XMP nodes have been limited.</summary>
        </member>
        <member name="M:Spire.Xmp.Options.ParseOptions.SetXMPNodesToLimit(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <param name="nodeMap">the Map with name of nodes and number-of-items to limit them to</param>
            <summary>Returns the instance to call more set-methods.</summary>
        </member>
        <member name="M:Spire.Xmp.Options.ParseOptions.GetXMPNodesToLimit">
            <summary>Returns map containing names oF XMP nodes to limit and number-of-items limit corresponding to the XMP nodes.</summary>
        </member>
        <member name="T:Spire.Xmp.Options.PropertyOptions">
            <summary>
            The property flags are used when properties are fetched from the <c>XMPMeta</c>-object
            and provide more detailed information about the property.
            </summary>
            <author>Stefan Makswit</author>
            <since>03.07.2006</since>
        </member>
        <member name="F:Spire.Xmp.Options.PropertyOptions.DeleteExisting">
            <summary>may be used in the future</summary>
        </member>
        <member name="M:Spire.Xmp.Options.PropertyOptions.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:Spire.Xmp.Options.PropertyOptions.#ctor(System.Int32)">
            <summary>Initialization constructor</summary>
            <param name="options">the initialization options</param>
            <exception cref="T:Spire.Xmp.XmpException">If the options are not valid</exception>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsUri">
            <summary>
            Get and set whether the property value is a URI. It is serialized to RDF using the
            <c>rdf:resource</c> attribute. Not mandatory for URIs, but considered RDF-savvy.
            </summary>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.HasQualifiers">
            <value>
              Return whether the property has qualifiers. These could be an <tt>xml:lang</tt>
              attribute, an <tt>rdf:type</tt> property, or a general qualifier. See the
              introductory discussion of qualified properties for more information.
            </value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsQualifier">
            <value>
              Return whether this property is a qualifier for some other property. Note that if the
              qualifier itself has a structured value, this flag is only set for the top node of
              the qualifier's subtree. Qualifiers may have arbitrary structure, and may even have
              qualifiers.
            </value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.HasLanguage">
            <value>Return whether this property has an <tt>xml:lang</tt> qualifier.</value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.HasType">
            <value>Return whether this property has an <tt>rdf:type</tt> qualifier.</value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsStruct">
            <value>Return whether this property contains nested fields.</value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsArray">
            <value>
              Return whether this property is an array. By itself this indicates a general
              unordered array. It is serialized using an <tt>rdf:Bag</tt> container.
            </value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsArrayOrdered">
            <value>
              Return whether this property is an ordered array. Appears in conjunction with
              getPropValueIsArray(). It is serialized using an <tt>rdf:Seq</tt> container.
            </value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsArrayAlternate">
            <value>
              Return whether this property is an alternative array. Appears in conjunction with
              getPropValueIsArray(). It is serialized using an <tt>rdf:Alt</tt> container.
            </value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsArrayAltText">
            <value>
              Return whether this property is an alt-text array. Appears in conjunction with
              getPropArrayIsAlternate(). It is serialized using an <tt>rdf:Alt</tt> container.
              Each array element is a simple property with an <tt>xml:lang</tt> attribute.
            </value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsArrayLimited">
            <value>Return whether this property is an array with a limit on number-of-elements.</value>
        </member>
        <member name="M:Spire.Xmp.Options.PropertyOptions.SetArrayElementLimit(System.Int32)">
            <param name="arrayLimit">the limit to set on number-of-elements</param>
            <value>Returns this to enable cascaded options.</value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.ArrayElementsLimit">
            <value>Returns the current limit on number-of-elements</value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsSchemaNode">
            <value>Returns whether the SCHEMA_NODE option is set.</value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsCompositeProperty">
            <value>Returns whether the property is of composite type - an array or a struct.</value>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsSimple">
            <value>Returns whether the property is of composite type - an array or a struct.</value>
        </member>
        <member name="M:Spire.Xmp.Options.PropertyOptions.EqualArrayTypes(Spire.Xmp.Options.PropertyOptions)">
            <summary>Compares two options set for array compatibility.</summary>
            <param name="options">other options</param>
            <returns>Returns true if the array options of the sets are equal.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.PropertyOptions.MergeWith(Spire.Xmp.Options.PropertyOptions)">
            <summary>Merges the set options of a another options object with this.</summary>
            <remarks>
            Merges the set options of a another options object with this.
            If the other options set is null, this objects stays the same.
            </remarks>
            <param name="options">other options</param>
            <exception cref="T:Spire.Xmp.XmpException">If illegal options are provided</exception>
        </member>
        <member name="P:Spire.Xmp.Options.PropertyOptions.IsOnlyArrayOptions">
            <value>Returns true if only array options are set.</value>
        </member>
        <member name="M:Spire.Xmp.Options.PropertyOptions.AssertConsistency(System.Int32)">
            <summary>
            Checks that a node not a struct and array at the same time;
            and URI cannot be a struct.
            </summary>
            <param name="options">the bitmask to check.</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the options are not consistent.</exception>
        </member>
        <member name="T:Spire.Xmp.Options.SerializeOptions">
            <summary>
            Options for <see cref="M:Spire.Xmp.XmpMetaFactory.SerializeToBuffer(Spire.Xmp.IXmpMeta,Spire.Xmp.Options.SerializeOptions)"/>.
            </summary>
            /// <author>Stefan Makswit</author>
            <since>24.01.2006</since>
        </member>
        <member name="F:Spire.Xmp.Options.SerializeOptions.LittleEndianBit">
            <summary>Bit indicating little endian encoding, unset is big endian</summary>
        </member>
        <member name="F:Spire.Xmp.Options.SerializeOptions.Utf16Bit">
            <summary>Bit indication UTF16 encoding.</summary>
        </member>
        <member name="F:Spire.Xmp.Options.SerializeOptions.EncodeUtf8">
            <summary>UTF8 encoding; this is the default</summary>
        </member>
        <member name="M:Spire.Xmp.Options.SerializeOptions.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Spire.Xmp.Options.SerializeOptions.#ctor(System.Int32)">
            <summary>Constructor using initial options</summary>
            <param name="options">the initial options</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if options are not consistent.</exception>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.OmitPacketWrapper">
            <summary>Omit the XML packet wrapper.</summary>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.OmitXmpMetaElement">
            <summary>Omit the &lt;x:xmpmeta&gt; tag.</summary>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.ReadOnlyPacket">
            <summary>Mark packet as read-only.</summary>
            <remarks>Default is a writeable packet.</remarks>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.UseCompactFormat">
            <summary>Use a compact form of RDF.</summary>
            <remarks>
            Use a compact form of RDF.
            The compact form is the default serialization format (this flag is technically ignored).
            To serialize to the canonical form, set the flag USE_CANONICAL_FORMAT.
            If both flags &quot;compact&quot; and &quot;canonical&quot; are set, canonical is used.
            </remarks>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.UseCanonicalFormat">
            <summary>Use the canonical form of RDF if set.</summary>
            <remarks>By default the compact form is used.</remarks>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.UsePlainXmp">
            <summary>Serialize as &quot;Plain XMP&quot;, not RDF.</summary>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.IncludeThumbnailPad">
            <summary>Include a padding allowance for a thumbnail image.</summary>
            <remarks>
            Include a padding allowance for a thumbnail image. If no <tt>xmp:Thumbnails</tt> property
            is present, the typical space for a JPEG thumbnail is used.
            </remarks>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.ExactPacketLength">
            <summary>The padding parameter provides the overall packet length.</summary>
            <remarks>
            The padding parameter provides the overall packet length. The actual amount of padding is
            computed. An exception is thrown if the packet exceeds this length with no padding.
            </remarks>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.Sort">
            <summary>Sort the struct properties and qualifier before serializing</summary>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.EncodeUtf16Be">
            <summary>UTF16BE encoding</summary>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.EncodeUtf16Le">
            <summary>UTF16LE encoding</summary>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.BaseIndent">
            <summary>
            The number of levels of indentation to be used for the outermost XML element in the
            serialized RDF.
            </summary>
            <remarks>
            The number of levels of indentation to be used for the outermost XML element in the
            serialized RDF. This is convenient when embedding the RDF in other text, defaults to 0.
            </remarks>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.Indent">
            <summary>
            The string to be used for each level of indentation in the serialized
            RDF.
            </summary>
            <remarks>
            The string to be used for each level of indentation in the serialized
            RDF. If empty it defaults to two ASCII spaces, U+0020.
            </remarks>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.Newline">
            <summary>The string to be used as a line terminator.</summary>
            <remarks>
            The string to be used as a line terminator. If empty it defaults to; linefeed, U+000A, the
            standard XML newline.
            </remarks>
        </member>
        <member name="P:Spire.Xmp.Options.SerializeOptions.Padding">
            <summary>The amount of padding to be added if a writeable XML packet is created.</summary>
            <remarks>
            The amount of padding to be added if a writeable XML packet is created. If zero is passed
            (the default) an appropriate amount of padding is computed.
            </remarks>
        </member>
        <member name="M:Spire.Xmp.Options.SerializeOptions.GetEncoding">
            <returns>Returns the text encoding to use.</returns>
        </member>
        <member name="M:Spire.Xmp.Options.SerializeOptions.Clone">
            <returns>Returns clone of this SerializeOptions-object with the same options set.</returns>
        </member>
        <member name="T:Spire.Xmp.Options.TemplateOptions">
            <summary>
            Options for <see cref="M:Spire.Xmp.XmpMetaFactory.SerializeToBuffer(Spire.Xmp.IXmpMeta,Spire.Xmp.Options.SerializeOptions)"/>.
            </summary>
            <author>Stefan Makswit</author>
            <since>24.01.2006</since>
        </member>
        <member name="M:Spire.Xmp.Options.TemplateOptions.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Spire.Xmp.Options.TemplateOptions.#ctor(System.Int32)">
            <summary>Constructor using initial options</summary>
            <param name="options">the initial options</param>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if options are not consistent.</exception>
        </member>
        <member name="P:Spire.Xmp.Options.TemplateOptions.ClearUnnamedProperties">
            <summary></summary>
        </member>
        <member name="P:Spire.Xmp.Options.TemplateOptions.ReplaceExistingProperties">
            <summary></summary>
        </member>
        <member name="P:Spire.Xmp.Options.TemplateOptions.IncludeInternalProperties">
            <summary></summary>
        </member>
        <member name="P:Spire.Xmp.Options.TemplateOptions.AddNewProperties">
            <summary></summary>
        </member>
        <member name="P:Spire.Xmp.Options.TemplateOptions.ReplaceWithDeleteEmpty">
            <summary></summary>
        </member>
        <member name="M:Spire.Xmp.Options.TemplateOptions.Clone">
            <returns>Returns clone of this TemplateOptions-object with the same options set.</returns>
        </member>
        <member name="T:Spire.Xmp.Sharpen.PushbackReader">
            <summary>
            http://grepcode.com/file_/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/io/PushbackReader.java/?v=source
            </summary>
        </member>
        <member name="T:Spire.Xmp.XmpConstants">
            <author>Stefan Makswit</author>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsXml">
            <summary>The XML namespace for XML.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsRdf">
            <summary>The XML namespace for RDF.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsDC">
            <summary>The XML namespace for the Dublin Core schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsIptccore">
            <summary>The XML namespace for the IPTC Core schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsIptcext">
            <summary>The XML namespace for the IPTC Extension schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsDicom">
            <summary>The XML namespace for the DICOM medical schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsPlus">
            <summary>The XML namespace for the PLUS (Picture Licensing Universal System, http://www.useplus.org)</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsX">
            <summary>The XML namespace Adobe XMP Metadata.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsXmp">
            <summary>The XML namespace for the XMP "basic" schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsXmpRights">
            <summary>The XML namespace for the XMP copyright schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsXmpMm">
            <summary>The XML namespace for the XMP digital asset management schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsXmpBj">
            <summary>The XML namespace for the job management schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsXmpNote">
            <summary>The XML namespace for the job management schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsPdf">
            <summary>The XML namespace for the PDF schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsPdfx">
            <summary>The XML namespace for the PDF schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsPhotoshop">
            <summary>The XML namespace for the Photoshop custom schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsPsalbum">
            <summary>The XML namespace for the Photoshop Album schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsExif">
            <summary>The XML namespace for Adobe's EXIF schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsExifx">
            <summary>NS for the CIPA XMP for Exif document v1.1</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsTiff">
            <summary>The XML namespace for Adobe's TIFF schema.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsBwf">
            <summary>BExt Schema</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsRiffinfo">
            <summary>RIFF Info Schema</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsTxmp">
            <summary>Transform XMP</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsSwf">
            <summary>Adobe Flash SWF</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsCcv">
            <summary>Adobe Creative Cloud Video</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.NsDcDeprecated">
            <summary>legacy Dublin Core NS, will be converted to NS_DC</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TypeIdentifierqual">
            <summary>The XML namespace for qualifiers of the xmp:Identifier property.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TypeDimensions">
            <summary>The XML namespace for fields of the Dimensions type.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TypeImage">
            <summary>The XML namespace for fields of a graphical image.</summary>
            <remarks>The XML namespace for fields of a graphical image. Used for the Thumbnail type.</remarks>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TypeResourceevent">
            <summary>The XML namespace for fields of the ResourceEvent type.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TypeResourceref">
            <summary>The XML namespace for fields of the ResourceRef type.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TypeStVersion">
            <summary>The XML namespace for fields of the Version type.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TypeStJob">
            <summary>The XML namespace for fields of the JobRef type.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TrueString">
            <summary>The canonical true string value for Booleans in serialized XMP.</summary>
            <remarks>
            The canonical true string value for Booleans in serialized XMP. Code that converts from the
            string to a bool should be case insensitive, and even allow "1".
            </remarks>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.FalseString">
            <summary>The canonical false string value for Booleans in serialized XMP.</summary>
            <remarks>
            The canonical false string value for Booleans in serialized XMP. Code that converts from the
            string to a bool should be case insensitive, and even allow "0".
            </remarks>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.ArrayLastItem">
            <summary>Index that has the meaning to be always the last item in an array.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.ArrayItemName">
            <summary>Node name of an array item.</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.XDefault">
            <summary>The x-default string for localized properties</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.XmlLang">
            <summary>xml:lang qualifier</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.RdfLi">
            <summary>rdf:li syntaxTerm</summary>
            <remarks>
            Does not appear in the original Java version. Added because of its usage in 
            ParseRdf.cs and XmpNode.cs when string-comparing for array items.
            </remarks>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.RdfType">
            <summary>rdf:type qualifier</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.XmpPi">
            <summary>Processing Instruction (PI) for xmp packet</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TagXmpmeta">
            <summary>XMP meta tag version new</summary>
        </member>
        <member name="F:Spire.Xmp.XmpConstants.TagXapmeta">
            <summary>XMP meta tag version old</summary>
        </member>
        <member name="T:Spire.Xmp.XmpDateTimeFactory">
            <summary>
            A factory to create <see cref="T:Spire.Xmp.Impl.XmpDateTime"/> instances from a <see cref="T:Spire.Xmp.Sharpen.Calendar"/> or an
            ISO 8601 string or for the current time.
            </summary>
            <author>Stefan Makswit</author>
            <since>16.02.2006</since>
        </member>
        <member name="M:Spire.Xmp.XmpDateTimeFactory.CreateFromCalendar(Spire.Xmp.Sharpen.Calendar)">
            <summary>Creates an <see cref="T:Spire.Xmp.Impl.XmpDateTime"/> from a <see cref="T:Spire.Xmp.Sharpen.Calendar"/>-object.</summary>
            <param name="calendar">a <see cref="T:Spire.Xmp.Sharpen.Calendar"/>-object.</param>
            <returns>An <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpDateTimeFactory.Create">
            <summary>Creates an empty <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object.</summary>
            <returns>Returns an <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpDateTimeFactory.Create(System.Int32,System.Int32,System.Int32)">
            <summary>Creates an <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object from initial values.</summary>
            <param name="year">years</param>
            <param name="month">months from 1 to 12 (Remember that the month in <see cref="T:Spire.Xmp.Sharpen.Calendar"/> is defined from 0 to 11)</param>
            <param name="day">days</param>
            <returns>Returns an <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpDateTimeFactory.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Creates an <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object from initial values.</summary>
            <param name="year">years</param>
            <param name="month">months from 1 to 12 (Remember that the month in <see cref="T:Spire.Xmp.Sharpen.Calendar"/> is defined from 0 to 11)</param>
            <param name="day">days</param>
            <param name="hour">hours</param>
            <param name="minute">minutes</param>
            <param name="second">seconds</param>
            <param name="nanoSecond">nanoseconds</param>
            <returns>Returns an <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpDateTimeFactory.CreateFromIso8601(System.String)">
            <summary>Creates an <see cref="T:Spire.Xmp.Impl.XmpDateTime"/> from an ISO 8601 string.</summary>
            <param name="strValue">The ISO 8601 string representation of the date/time.</param>
            <returns>An <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object.</returns>
            <exception cref="T:Spire.Xmp.XmpException">When the ISO 8601 string is non-conform</exception>
        </member>
        <member name="M:Spire.Xmp.XmpDateTimeFactory.GetCurrentDateTime">
            <summary>Obtain the current date and time.</summary>
            <returns>
            Returns The returned time is UTC, properly adjusted for the local time zone. The
            resolution of the time is not guaranteed to be finer than seconds.
            </returns>
        </member>
        <member name="M:Spire.Xmp.XmpDateTimeFactory.ConvertToLocalTime(Spire.Xmp.IXmpDateTime)">
            <summary>Make sure a time is local.</summary>
            <remarks>
            Make sure a time is local. If the time zone is not the local zone, the time is adjusted and
            the time zone set to be local.
            </remarks>
            <param name="dateTime">the <see cref="T:Spire.Xmp.Impl.XmpDateTime"/> variable containing the time to be modified.</param>
            <returns>Returns an updated <see cref="T:Spire.Xmp.Impl.XmpDateTime"/>-object.</returns>
        </member>
        <member name="T:Spire.Xmp.XmpErrorCode">
            <author>Stefan Makswit</author>
        </member>
        <member name="F:Spire.Xmp.XmpErrorCode.BadStream">
            <summary>This code is introduced by Java.</summary>
        </member>
        <member name="T:Spire.Xmp.XmpException">
            <summary>This exception wraps all errors that occur in the XMP Toolkit.</summary>
            <author>Stefan Makswit</author>
            <since>16.02.2006</since>
        </member>
        <member name="P:Spire.Xmp.XmpException.ErrorCode">
            <value>Gets the error code of the XMP toolkit.</value>
        </member>
        <member name="M:Spire.Xmp.XmpException.#ctor(System.String,Spire.Xmp.XmpErrorCode)">
            <summary>Constructs an exception with a message and an error code.</summary>
            <param name="message">the message</param>
            <param name="errorCode">the error code</param>
        </member>
        <member name="M:Spire.Xmp.XmpException.#ctor(System.String,Spire.Xmp.XmpErrorCode,System.Exception)">
            <summary>Constructs an exception with a message, an error code and an inner exception.</summary>
            <param name="message">the error message.</param>
            <param name="errorCode">the error code</param>
            <param name="innerException">the exception source</param>
        </member>
        <member name="T:Spire.Xmp.XmpMetaFactory">
            <summary>Parses and serialises <see cref="T:Spire.Xmp.IXmpMeta"/> instances.</summary>
            <author>Stefan Makswit</author>
            <since>30.01.2006</since>
        </member>
        <member name="F:Spire.Xmp.XmpMetaFactory._schemaRegistry">
            <value>Returns the singleton instance of the <see cref="T:Spire.Xmp.Impl.XmpSchemaRegistry"/>.</value>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.Create">
            <returns>Returns an empty <see cref="T:Spire.Xmp.IXmpMeta"/> instance.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.Parse(System.IO.Stream,Spire.Xmp.Options.ParseOptions)">
            <summary>
            These functions support parsing serialized RDF into an XMP object, and serializing an XMP
            object into RDF.
            </summary>
            <remarks>
            These functions support parsing serialized RDF into an XMP object, and serializing an XMP
            object into RDF. The input for parsing may be any valid Unicode
            encoding. ISO Latin-1 is also recognized, but its use is strongly discouraged. Serialization
            is always as UTF-8.
            <para />
            <c>parseFromBuffer()</c> parses RDF from an <c>Stream</c>. The encoding
            is recognized automatically.
            </remarks>
            <param name="stream">an <c>Stream</c></param>
            <param name="options">Options controlling the parsing.
            The available options are:
            <list type="bullet">
              <item>XMP_REQUIRE_XMPMETA - The &lt;x:xmpmeta&gt; XML element is required around <tt>&lt;rdf:RDF&gt;</tt>.</item>
              <item>XMP_STRICT_ALIASING - Do not reconcile alias differences, throw an exception.</item>
            </list>
            Note: The XMP_STRICT_ALIASING option is not yet implemented.
            </param>
            <returns>Returns the <c>XMPMeta</c>-object created from the input.</returns>
            <exception cref="T:Spire.Xmp.XmpException">If the file is not well-formed XML or if the parsing fails.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.ParseFromString(System.String,Spire.Xmp.Options.ParseOptions)">
            <summary>Creates an <c>XMPMeta</c>-object from a string.</summary>
            <seealso cref="M:Spire.Xmp.XmpMetaFactory.ParseFromString(System.String,Spire.Xmp.Options.ParseOptions)"/>
            <param name="packet">a String contain an XMP-file.</param>
            <param name="options">Options controlling the parsing.</param>
            <returns>Returns the <c>XMPMeta</c>-object created from the input.</returns>
            <exception cref="T:Spire.Xmp.XmpException">If the file is not well-formed XML or if the parsing fails.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.ParseFromBuffer(System.Byte[],Spire.Xmp.Options.ParseOptions)">
            <summary>Creates an <c>XMPMeta</c>-object from a byte-buffer.</summary>
            <seealso cref="M:Spire.Xmp.XmpMetaFactory.Parse(System.IO.Stream,Spire.Xmp.Options.ParseOptions)"/>
            <param name="buffer">a String contain an XMP-file.</param>
            <param name="options">Options controlling the parsing.</param>
            <returns>Returns the <c>XMPMeta</c>-object created from the input.</returns>
            <exception cref="T:Spire.Xmp.XmpException">If the file is not well-formed XML or if the parsing fails.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.Serialize(Spire.Xmp.IXmpMeta,System.IO.Stream,Spire.Xmp.Options.SerializeOptions)">
            <summary>Serializes an <c>XMPMeta</c>-object as RDF into an <c>OutputStream</c>.</summary>
            <param name="xmp">a metadata object</param>
            <param name="options">Options to control the serialization (see <see cref="T:Spire.Xmp.Options.SerializeOptions"/>).</param>
            <param name="stream">an <c>OutputStream</c> to write the serialized RDF to.</param>
            <exception cref="T:Spire.Xmp.XmpException">on serialization errors.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.SerializeToBuffer(Spire.Xmp.IXmpMeta,Spire.Xmp.Options.SerializeOptions)">
            <summary>Serializes an <c>XMPMeta</c>-object as RDF into a byte buffer.</summary>
            <param name="xmp">a metadata object</param>
            <param name="options">Options to control the serialization (see <see cref="T:Spire.Xmp.Options.SerializeOptions"/>).</param>
            <returns>Returns a byte buffer containing the serialized RDF.</returns>
            <exception cref="T:Spire.Xmp.XmpException">on serialization errors.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.SerializeToString(Spire.Xmp.IXmpMeta,Spire.Xmp.Options.SerializeOptions)">
            <summary>Serializes an <c>XMPMeta</c>-object as RDF into a string.</summary>
            <remarks>
            Serializes an <c>XMPMeta</c>-object as RDF into a string. <em>Note:</em> Encoding
            is ignored when serializing to a string.
            </remarks>
            <param name="xmp">a metadata object</param>
            <param name="options">Options to control the serialization (see <see cref="T:Spire.Xmp.Options.SerializeOptions"/>).</param>
            <returns>Returns a string containing the serialized RDF.</returns>
            <exception cref="T:Spire.Xmp.XmpException">on serialization errors.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.AssertImplementation(Spire.Xmp.IXmpMeta)">
            <param name="xmp">Asserts that xmp is compatible to <c>XMPMetaImpl</c>.s</param>
        </member>
        <member name="M:Spire.Xmp.XmpMetaFactory.Reset">
            <summary>Resets the schema registry to its original state (creates a new one).</summary>
            <remarks>
            Resets the schema registry to its original state (creates a new one).
            Be careful this might break all existing XMPMeta-objects and should be used
            only for testing purposes.
            </remarks>
        </member>
        <member name="P:Spire.Xmp.XmpMetaFactory.VersionInfo">
            <summary>Obtain version information.</summary>
        </member>
        <member name="T:Spire.Xmp.XmpPathFactory">
            <summary>Utility services for the metadata object.</summary>
            <remarks>
            It has only public static functions, you cannot create
            an object. These are all functions that layer cleanly on top of the core XMP toolkit.
            <para />
            These functions provide support for composing path expressions to deeply nested properties. The
            functions <c>XMPMeta</c> such as <c>GetProperty()</c>,
            <c>getArrayItem()</c> and <c>getStructField()</c> provide easy access to top
            level simple properties, items in top level arrays, and fields of top level structs. They do not
            provide convenient access to more complex things like fields several levels deep in a complex
            struct, or fields within an array of structs, or items of an array that is a field of a struct.
            These functions can also be used to compose paths to top level array items or struct fields so
            that you can use the binary accessors like <c>getPropertyAsInteger()</c>.
            <para />
            You can use these functions is to compose a complete path expression, or all but the last
            component. Suppose you have a property that is an array of integers within a struct. You can
            access one of the array items like this:
            <para />
            <code>
            string path = XmpPathFactory.ComposeStructFieldPath(schemaNS, "Struct", fieldNS, "Array");
            string path += XmpPathFactory.ComposeArrayItemPath(schemaNS, "Array", index);
            PropertyInteger result = xmpObj.GetPropertyAsInteger(schemaNS, path);
            </code>
            You could also use this code if you want the string form of the integer:
            <code>
            String path = XmpPathFactory.ComposeStructFieldPath (schemaNS, &quot;Struct&quot;, fieldNS,
            &quot;Array&quot;);
            PropertyText xmpObj.GetArrayItem (schemaNS, path, index);
            </code>
            <para />
            <em>Note:</em> It might look confusing that the schemaNS is passed in all of the calls above.
            This is because the XMP toolkit keeps the top level &quot;schema&quot; namespace separate from
            the rest of the path expression.
            <em>Note:</em> These methods are much simpler than in the C++-API, they don't check the given
            path or array indices.
            </remarks>
            <author>Stefan Makswit</author>
            <since>25.01.2006</since>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.ComposeArrayItemPath(System.String,System.Int32)">
            <summary>Compose the path expression for an item in an array.</summary>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be
            <c>null</c> or the empty string.
            </param>
            <param name="itemIndex">
            The index of the desired item. Arrays in XMP are indexed from 1.
            0 and below means last array item and renders as <c>[last()]</c>.
            </param>
            <returns>
            Returns the composed path basing on fullPath. This will be of the form
            <tt>ns:arrayName[i]</tt>, where &quot;ns&quot; is the prefix for schemaNS and
            &quot;i&quot; is the decimal representation of itemIndex.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Throws exception if index zero is used.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.ComposeStructFieldPath(System.String,System.String)">
            <summary>Compose the path expression for a field in a struct.</summary>
            <param name="fieldNs">The namespace URI for the field. Must not be <c>null</c> or the empty string.</param>
            <param name="fieldName">The name of the field. Must be a simple XML name, must not be <c>null</c> or the empty string.</param>
            <returns>
            Returns the composed path. This will be of the form
            <tt>ns:structName/fNS:fieldName</tt>, where &quot;ns&quot; is the prefix for
            schemaNS and &quot;fNS&quot; is the prefix for fieldNS.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the path to create is not valid.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.ComposeQualifierPath(System.String,System.String)">
            <summary>Compose the path expression for a qualifier.</summary>
            <param name="qualNs">
            The namespace URI for the qualifier. May be <c>null</c> or the empty
            string if the qualifier is in the XML empty namespace.
            </param>
            <param name="qualName">
            The name of the qualifier. Must be a simple XML name, must not be
            <c>null</c> or the empty string.
            </param>
            <returns>
            Returns the composed path. This will be of the form
            <tt>ns:propName/?qNS:qualName</tt>, where &quot;ns&quot; is the prefix for
            schemaNS and &quot;qNS&quot; is the prefix for qualNS.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the path to create is not valid.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.ComposeLangSelector(System.String,System.String)">
            <summary>Compose the path expression to select an alternate item by language.</summary>
            <remarks>
            The path syntax allows two forms of &quot;content addressing&quot; that may
            be used to select an item in an array of alternatives. The form used in
            ComposeLangSelector lets you select an item in an alt-text array based on
            the value of its <tt>xml:lang</tt> qualifier. The other form of content
            addressing is shown in ComposeFieldSelector. \note ComposeLangSelector
            does not supplant SetLocalizedText or GetLocalizedText. They should
            generally be used, as they provide extra logic to choose the appropriate
            language and maintain consistency with the 'x-default' value.
            ComposeLangSelector gives you an path expression that is explicitly and
            only for the language given in the langName parameter.
            </remarks>
            <param name="arrayName">
            The name of the array. May be a general path expression, must
            not be <c>null</c> or the empty string.
            </param>
            <param name="langName">The RFC 3066 code for the desired language.</param>
            <returns>
            Returns the composed path. This will be of the form
            <tt>ns:arrayName[@xml:lang='langName']</tt>, where
            &quot;ns&quot; is the prefix for schemaNS.
            </returns>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.ComposeFieldSelector(System.String,System.String,System.String,System.String)">
            <summary>Compose the path expression to select an alternate item by a field's value.</summary>
            <remarks>
            The path syntax allows two forms of &quot;content addressing&quot; that may be used to select an item in an
            array of alternatives. The form used in ComposeFieldSelector lets you select an item in an
            array of structs based on the value of one of the fields in the structs. The other form of
            content addressing is shown in ComposeLangSelector. For example, consider a simple struct
            that has two fields, the name of a city and the URI of an FTP site in that city. Use this to
            create an array of download alternatives. You can show the user a popup built from the values
            of the city fields. You can then get the corresponding URI as follows:
            <para />
            <code>
            String path = composeFieldSelector ( schemaNS, &quot;Downloads&quot;, fieldNS, &quot;City&quot;, chosenCity );
            XMPProperty prop = xmpObj.getStructField ( schemaNS, path, fieldNS, &quot;URI&quot; );
            </code>
            </remarks>
            <param name="arrayName">
            The name of the array. May be a general path expression, must not be
            <c>null</c> or the empty string.
            </param>
            <param name="fieldNs">
            The namespace URI for the field used as the selector. Must not be
            <c>null</c> or the empty string.
            </param>
            <param name="fieldName">
            The name of the field used as the selector. Must be a simple XML name, must
            not be <c>null</c> or the empty string. It must be the name of a field that is
            itself simple.
            </param>
            <param name="fieldValue">The desired value of the field.</param>
            <returns>
            Returns the composed path. This will be of the form
            <tt>ns:arrayName[fNS:fieldName='fieldValue']</tt>, where &quot;ns&quot; is the
            prefix for schemaNS and &quot;fNS&quot; is the prefix for fieldNS.
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the path to create is not valid.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.AssertQualNs(System.String)">
            <summary>ParameterAsserts that a qualifier namespace is set.</summary>
            <param name="qualNs">a qualifier namespace</param>
            <exception cref="T:Spire.Xmp.XmpException">Qualifier schema is null or empty</exception>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.AssertQualName(System.String)">
            <summary>ParameterAsserts that a qualifier name is set.</summary>
            <param name="qualName">a qualifier name or path</param>
            <exception cref="T:Spire.Xmp.XmpException">Qualifier name is null or empty</exception>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.AssertFieldNs(System.String)">
            <summary>ParameterAsserts that a struct field namespace is set.</summary>
            <param name="fieldNs">a struct field namespace</param>
            <exception cref="T:Spire.Xmp.XmpException">Struct field schema is null or empty</exception>
        </member>
        <member name="M:Spire.Xmp.XmpPathFactory.AssertFieldName(System.String)">
            <summary>ParameterAsserts that a struct field name is set.</summary>
            <param name="fieldName">a struct field name or path</param>
            <exception cref="T:Spire.Xmp.XmpException">Struct field name is null or empty</exception>
        </member>
        <member name="T:Spire.Xmp.XmpUtils">
            <summary>Utility methods for XMP.</summary>
            <author>Stefan Makswit</author>
            <since>21.02.2006</since>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.CatenateArrayItems(Spire.Xmp.IXmpMeta,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Create a single edit string from an array of strings.</summary>
            <param name="xmp">The XMP object containing the array to be catenated.</param>
            <param name="schemaNs">
            The schema namespace URI for the array. Must not be null or
            the empty string.
            </param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must
            not be null or the empty string. Each item in the array must
            be a simple string value.
            </param>
            <param name="separator">
            The string to be used to separate the items in the catenated
            string. Defaults to &quot;; &quot;, ASCII semicolon and space
            (U+003B, U+0020).
            </param>
            <param name="quotes">
            The characters to be used as quotes around array items that
            contain a separator. Defaults to &apos;&quot;&apos;
            </param>
            <param name="allowCommas">Option flag to control the catenation.</param>
            <returns>Returns the string containing the catenated array items.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.SeparateArrayItems(Spire.Xmp.IXmpMeta,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions,System.Boolean)">
            <summary>Separate a single edit string into an array of strings.</summary>
            <param name="xmp">The XMP object containing the array to be updated.</param>
            <param name="schemaNs">
            The schema namespace URI for the array. Must not be null or
            the empty string.
            </param>
            <param name="arrayName">
            The name of the array. May be a general path expression, must
            not be null or the empty string. Each item in the array must
            be a simple string value.
            </param>
            <param name="catedStr">The string to be separated into the array items.</param>
            <param name="arrayOptions">Option flags to control the separation.</param>
            <param name="preserveCommas">Flag if commas shall be preserved</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.RemoveProperties(Spire.Xmp.IXmpMeta,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Remove multiple properties from an XMP object.</summary>
            <remarks>
            Remove multiple properties from an XMP object.
            RemoveProperties was created to support the File Info dialog's Delete
            button, and has been been generalized somewhat from those specific needs.
            It operates in one of three main modes depending on the schemaNS and
            propName parameters:
            <list type="bullet">
            <item> Non-empty <c>schemaNS</c> and <c>propName</c> - The named property is
            removed if it is an external property, or if the
            flag <c>doAllProperties</c> option is true. It does not matter whether the
            named property is an actual property or an alias.</item>
            <item> Non-empty <c>schemaNS</c> and empty <c>propName</c> - The all external
            properties in the named schema are removed. Internal properties are also
            removed if the flag <c>doAllProperties</c> option is set. In addition,
            aliases from the named schema will be removed if the flag <c>includeAliases</c>
            option is set.</item>
            <item> Empty <c>schemaNS</c> and empty <c>propName</c> - All external properties in
            all schema are removed. Internal properties are also removed if the
            flag <c>doAllProperties</c> option is passed. Aliases are implicitly handled
            because the associated actuals are internal if the alias is.</item>
            </list>
            It is an error to pass an empty <c>schemaNS</c> and non-empty <c>propName</c>.
            </remarks>
            <param name="xmp">The XMP object containing the properties to be removed.</param>
            <param name="schemaNs">
            Optional schema namespace URI for the properties to be
            removed.
            </param>
            <param name="propName">Optional path expression for the property to be removed.</param>
            <param name="doAllProperties">
            Option flag to control the deletion: do internal properties in
            addition to external properties.
            </param>
            <param name="includeAliases">
            Option flag to control the deletion:
            Include aliases in the "named schema" case above.
            <em>Note:</em> Currently not supported.
            </param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.AppendProperties(Spire.Xmp.IXmpMeta,Spire.Xmp.IXmpMeta,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Append properties from one XMP object to another.</summary>
            <remarks>
            Append properties from one XMP object to another.
            <para />XMPUtils#appendProperties was created to support the File Info dialog's Append button, and
            has been been generalized somewhat from those specific needs. It appends information from one
            XMP object (source) to another (dest). The default operation is to append only external
            properties that do not already exist in the destination. The flag
            <c>doAllProperties</c> can be used to operate on all properties, external and internal.
            The flag <c>replaceOldValues</c> option can be used to replace the values
            of existing properties. The notion of external
            versus internal applies only to top level properties. The keep-or-replace-old notion applies
            within structs and arrays as described below.
            <list type="bullet">
            <item>If <c>replaceOldValues</c> is true then the processing is restricted to the top
            level properties. The processed properties from the source (according to
            <c>doAllProperties</c>) are propagated to the destination,
            replacing any existing values.Properties in the destination that are not in the source
            are left alone.</item>
            <item>If <c>replaceOldValues</c> is not passed then the processing is more complicated.
            Top level properties are added to the destination if they do not already exist.
            If they do exist but differ in form (simple/struct/array) then the destination is left alone.
            If the forms match, simple properties are left unchanged while structs and arrays are merged.</item>
            <item>If <c>deleteEmptyValues</c> is passed then an empty value in the source XMP causes
            the corresponding destination XMP property to be deleted. The default is to treat empty
            values the same as non-empty values. An empty value is any of a simple empty string, an array
            with no items, or a struct with no fields. Qualifiers are ignored.</item>
            </list>
            <para />
            The detailed behavior is defined by the following pseudo-code:
            <code>
            appendProperties ( sourceXMP, destXMP, doAllProperties,
            replaceOldValues, deleteEmptyValues ):
            for all source schema (top level namespaces):
            for all top level properties in sourceSchema:
            if doAllProperties or prop is external:
            appendSubtree ( sourceNode, destSchema, replaceOldValues, deleteEmptyValues )
            appendSubtree ( sourceNode, destParent, replaceOldValues, deleteEmptyValues ):
            if deleteEmptyValues and source value is empty:
            delete the corresponding child from destParent
            else if sourceNode not in destParent (by name):
            copy sourceNode's subtree to destParent
            else if replaceOld:
            delete subtree from destParent
            copy sourceNode's subtree to destParent
            else:
            // Already exists in dest and not replacing, merge structs and arrays
            if sourceNode and destNode forms differ:
            return, leave the destNode alone
            else if form is a struct:
            for each field in sourceNode:
            AppendSubtree ( sourceNode.field, destNode, replaceOldValues )
            else if form is an alt-text array:
            copy new items by "xml:lang" value into the destination
            else if form is an array:
            copy new items by value into the destination, ignoring order and duplicates
            </code>
            <para /><em>Note:</em> appendProperties can be expensive if replaceOldValues is not passed and
            the XMP contains large arrays. The array item checking described above is n-squared.
            Each source item is checked to see if it already exists in the destination,
            without regard to order or duplicates.
            <para />Simple items are compared by value and "xml:lang" qualifier, other qualifiers are ignored.
            Structs are recursively compared by field names, without regard to field order. Arrays are
            compared by recursively comparing all items.
            </remarks>
            <param name="source">The source XMP object.</param>
            <param name="dest">The destination XMP object.</param>
            <param name="doAllProperties">Do internal properties in addition to external properties.</param>
            <param name="replaceOldValues">Replace the values of existing properties.</param>
            <param name="deleteEmptyValues">Delete destination values if source property is empty.</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertToBoolean(System.String)">
            <summary>Convert from string to Boolean.</summary>
            <param name="value">The string representation of the Boolean.</param>
            <returns>
            The appropriate boolean value for the string. The checked values
            for <c>true</c> and <c>false</c> are:
            <list type="bullet">
            <item><see cref="F:Spire.Xmp.XmpConstants.TrueString"/> and <see cref="F:Spire.Xmp.XmpConstants.FalseString"/></item>
            <item>&quot;t&quot; and &quot;f&quot;</item>
            <item>&quot;on&quot; and &quot;off&quot;</item>
            <item>&quot;yes&quot; and &quot;no&quot;</item>
            <item>&quot;value &lt;&gt; 0&quot; and &quot;value == 0&quot;</item>
            </list>
            </returns>
            <exception cref="T:Spire.Xmp.XmpException">If an empty string is passed.</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertFromBoolean(System.Boolean)">
            <summary>Convert from boolean to string.</summary>
            <param name="value">a boolean value</param>
            <returns>
            The XMP string representation of the boolean. The values used are
            given by the constants <see cref="F:Spire.Xmp.XmpConstants.TrueString"/> and
            <see cref="F:Spire.Xmp.XmpConstants.FalseString"/>.
            </returns>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertToInteger(System.String)">
            <summary>Converts a string value to an <c>int</c>.</summary>
            <param name="rawValue">the string value</param>
            <returns>Returns an int.</returns>
            <exception cref="T:Spire.Xmp.XmpException">
            If the <c>rawValue</c> is <c>null</c> or empty or the
            conversion fails.
            </exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertFromInteger(System.Int32)">
            <summary>Convert from int to string.</summary>
            <param name="value">an int value</param>
            <returns>The string representation of the int.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertToLong(System.String)">
            <summary>Converts a string value to a <c>long</c>.</summary>
            <param name="rawValue">the string value</param>
            <returns>Returns a long.</returns>
            <exception cref="T:Spire.Xmp.XmpException">
            If the <c>rawValue</c> is <c>null</c> or empty or the
            conversion fails.
            </exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertFromLong(System.Int64)">
            <summary>Convert from long to string.</summary>
            <param name="value">a long value</param>
            <returns>The string representation of the long.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertToDouble(System.String)">
            <summary>Converts a string value to a <c>double</c>.</summary>
            <param name="rawValue">the string value</param>
            <returns>Returns a double.</returns>
            <exception cref="T:Spire.Xmp.XmpException">
            If the <c>rawValue</c> is <c>null</c> or empty or the
            conversion fails.
            </exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertFromDouble(System.Double)">
            <summary>Convert from long to string.</summary>
            <param name="value">a long value</param>
            <returns>The string representation of the long.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertToDate(System.String)">
            <summary>Converts a string value to an <c>XMPDateTime</c>.</summary>
            <param name="rawValue">the string value</param>
            <returns>Returns an <c>XMPDateTime</c>-object.</returns>
            <exception cref="T:Spire.Xmp.XmpException">
            If the <c>rawValue</c> is <c>null</c> or empty or the
            conversion fails.
            </exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ConvertFromDate(Spire.Xmp.IXmpDateTime)">
            <summary>Convert from <c>XMPDateTime</c> to string.</summary>
            <param name="value">an <c>XMPDateTime</c></param>
            <returns>The string representation of the long.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.EncodeBase64(System.Byte[])">
            <summary>Convert from a byte array to a base64 encoded string.</summary>
            <param name="buffer">the byte array to be converted</param>
            <returns>Returns the base64 string.</returns>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.DecodeBase64(System.String)">
            <summary>Decode from Base64 encoded string to raw data.</summary>
            <param name="base64String">a base64 encoded string</param>
            <returns>Returns a byte array containing the decoded string.</returns>
            <exception cref="T:Spire.Xmp.XmpException">Thrown if the given string is not property base64 encoded</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.PackageForJPEG(Spire.Xmp.IXmpMeta,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder)">
            <summary>Creates XMP serializations appropriate for a JPEG file.</summary>
            <remarks>The standard XMP in a JPEG file is limited to 64K bytes. This function
            serializes the XMP metadata in an XMP object into a string of RDF . If
            the data does not fit into the 64K byte limit, it creates a second packet
            string with the extended data.</remarks>
            <param name="origXMP">The XMP object containing the metadata.</param>
            <param name="stdStr">A string builder object in which to return the full standard XMP packet.</param>
            <param name="extStr">A string builder object in which to return the serialized extended XMP, empty if not needed.</param>
            <param name="digestStr">A string builder object in which to return an MD5 digest of the serialized extended XMP, empty if not needed.</param>
            @throws NoSuchAlgorithmException if fail to find algorithm for MD5
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.MergeFromJPEG(Spire.Xmp.IXmpMeta,Spire.Xmp.IXmpMeta)">
            <summary>Merges standard and extended XMP retrieved from a JPEG file.</summary>
            <remarks>When an extended partition stores properties that do not fit into the
            JPEG file limitation of 64K bytes, this function integrates those
            properties back into the same XMP object with those from the standard XMP
            packet.</remarks>
            <param name="fullXMP">An XMP object which the caller has initialized from the standard XMP packet in a JPEG file. The extended XMP is added to this object.</param>
            <param name="extendedXMP">An XMP object which the caller has initialized from the extended XMP packet in a JPEG file.</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.ApplyTemplate(Spire.Xmp.IXmpMeta,Spire.Xmp.IXmpMeta,Spire.Xmp.Options.TemplateOptions)">
            <summary>Modifies a working XMP object according to a template object.</summary>
            <remarks>
            The XMP template can be used to add, replace or delete properties from
            the working XMP object. The actions that you specify determine how the
            template is applied.Each action can be applied individually or combined;
            if you do not specify any actions, the properties and values in the
            working XMP object do not change.
            <para />
            These actions are available:
            <list type="bullet">
            <item>Clear <c>CLEAR_UNNAMED_PROPERTIES</c> : Deletes top-level
            properties.Any top-level property that is present in the template(even
            with empty value) is retained.All other top-level properties in the
            working object are deleted</item>
            <item>Add <c>ADD_NEW_PROPERTIES</c>: Adds new properties to the
            working object if the template properties have values.See additional
            detail below.</item>
            <item>Replace <c>REPLACE_EXISTING_PROPERTIES</c>: Replaces the
            values of existing top-level properties in the working XMP if the value
            forms match those in the template. Properties with empty values in the
            template are ignored. If combined with Clear or Add actions, those take
            precedence; values are cleared or added, rather than replaced.</item>
            <item>Replace/Delete empty <c>REPLACE_WITH_DELETE_EMPTY</c>:
            Replaces values in the same way as the simple Replace action, and also
            deletes properties if the value in the template is empty.If combined
            with Clear or Add actions, those take precedence; values are cleared or
            added, rather than replaced.</item>
            <item>Include internal <c>INCLUDE_INTERNAL_PROPERTIES</c>: Performs
            specified action on internal properties as well as external properties.
            By default, internal properties are ignored for all actions.</item>
            </list>
            <para />
            The Add behavior depends on the type of property:
            <list type="bullet">
            <item>If a top-level property is not in the working XMP, and has a value in
            the template, the property and value are added.Empty properties are not
            added.</item>
            <item>If a property is in both the working XMP and template, the value
            forms must match, otherwise the template is ignored for that property.</item>
            <item>If a struct is present in both the working XMP and template, the
            individual fields of the template struct are added as appropriate; that
            is, the logic is recursively applied to the fields.Struct values are
            equivalent if they have the same fields with equivalent values.</item>
            <item>If an array is present in both the working XMP and template, items
            from the template are added if the value forms match. Array values match
            if they have sets of equivalent items, regardless of order.</item>
            <item>Alt-text arrays use the \c xml:lang qualifier as a key, adding languages that are missing.</item>
            </list>
            <para />
            Array item checking is n-squared; this can be time-intensive if the
            Replace option is not specified.Each source item is checked to see if it
            already exists in the destination, without regard to order or duplicates.
            Simple items are compared by value and<code> xml:lang</code> qualifier;
            other qualifiers are ignored.Structs are recursively compared by field
            names, without regard to field order.Arrays are compared by recursively
            comparing all items.
            </remarks>
            <param name="workingXMP">The destination XMP object.</param>
            <param name="templateXMP">The template to apply to the destination XMP object.</param>
            <param name="options">Option flags to control the copying. If none are specified,
            the properties and values in the working XMP do not change. A logical OR of these bit-flag constants:
            <list type="bullet">
            <item><c>CLEAR_UNNAMED_PROPERTIES</c> Delete anything that is not in the template</item>
            <item><c>ADD_NEW_PROPERTIES</c> Add properties; see detailed description.</item>
            <item><c>REPLACE_EXISTING_PROPERTIES</c> Replace the values of existing properties.</item>
            <item><c>REPLACE_WITH_DELETE_EMPTY</c> Replace the values of existing properties and delete properties if the new value is empty.</item>
            <item><c>INCLUDE_INTERNAL_PROPERTIES</c> Operate on internal properties as well as external properties.</item>
            </list>
            </param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="M:Spire.Xmp.XmpUtils.DuplicateSubtree(Spire.Xmp.IXmpMeta,Spire.Xmp.IXmpMeta,System.String,System.String,System.String,System.String,Spire.Xmp.Options.PropertyOptions)">
            <summary>Replicate a subtree from one XMP object into another, possibly at a
            different location.</summary>
            <param name="source">The source XMP object.</param>
            <param name="dest">The destination XMP object.</param>
            <param name="sourceNS">The schema namespace URI for the source subtree.</param>
            <param name="sourceRoot">The root location for the source subtree. May be a general path expression, must not be null or the empty string.</param>
            <param name="destNS">The schema namespace URI for the destination. Defaults to the source namespace.</param>
            <param name="destRoot">The root location for the destination. May be a general path expression. Defaults to the source location.</param>
            <param name="options">Option flags to control the separation. (For now, this argument is ignored. 0 should be passed.</param>
            <exception cref="T:Spire.Xmp.XmpException">Forwards the Exceptions from the metadata processing</exception>
        </member>
        <member name="T:Spire.Compression.CompressionLevel">
            <summary>
            Compression level.
            </summary>
        </member>
        <member name="T:Spire.Compression.CompressedStreamWriter">
            <summary>
            Represents the compressed stream writer
            </summary>
        </member>
        <member name="T:Spire.Compression.CompressedStreamWriter.BlockType">
            <summary>
            Type of the block.
            </summary>
        </member>
    </members>
</doc>
